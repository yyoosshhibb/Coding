-- VHDL Entity common_lib_new.Encoder.symbol
--
-- Created:
--          by - Yoshi.UNKNOWN (YOSHIS-LAPTOP)
--          at - 15:20:14 23.03.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

entity Encoder is
   generic( 
      nbits_g : integer := 4
   );
   port( 
      A_in  : in     std_logic;
      B_in  : in     std_logic;
      clk   : in     std_logic;
      reset : in     std_logic;
      count : out    std_logic_vector (nbits_g-1 downto 0)
   );

-- Declarations

end Encoder ;

--
-- VHDL Architecture common_lib_new.Encoder.struct
--
-- Created:
--          by - Yoshi.UNKNOWN (YOSHIS-LAPTOP)
--          at - 15:20:14 23.03.2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2017.1a (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library common_lib_new;

architecture struct of Encoder is

   -- Architecture declarations

   -- Internal signal declarations
   signal Pos_Edge  : std_logic;
   signal Pos_Edge1 : std_logic;
   signal Q         : std_logic;
   signal Q2        : std_logic;
   signal dec       : std_logic;
   signal inc       : std_logic;


   -- Component Declarations
   component Counter
   generic (
      nbits_g : integer := 4
   );
   port (
      inc   : in     std_logic ;
      dec   : in     std_logic ;
      clk   : in     std_logic ;
      reset : in     std_logic ;
      count : out    std_logic_vector (nbits_g-1 downto 0)
   );
   end component;
   component Debouncer_EdgeDetection
   port (
      D        : in     std_logic ;
      clk      : in     std_logic ;
      Neg_Edge : out    std_logic ;
      Pos_Edge : out    std_logic ;
      Q        : out    std_logic 
   );
   end component;
   component Encoding
   port (
      clk   : in     std_logic ;
      A     : in     std_logic ;
      B     : in     std_logic ;
      A_ris : in     std_logic ;
      B_ris : in     std_logic ;
      inc   : out    std_logic ;
      dec   : out    std_logic 
   );
   end component;

   -- Optional embedded configurations
   -- pragma synthesis_off
   for all : Counter use entity common_lib_new.Counter;
   for all : Debouncer_EdgeDetection use entity common_lib_new.Debouncer_EdgeDetection;
   for all : Encoding use entity common_lib_new.Encoding;
   -- pragma synthesis_on


begin

   -- Instance port mappings.
   U_6 : Counter
      generic map (
         nbits_g => 4
      )
      port map (
         inc   => inc,
         dec   => dec,
         clk   => clk,
         reset => reset,
         count => count
      );
   U_3 : Debouncer_EdgeDetection
      port map (
         D        => A_in,
         clk      => clk,
         Neg_Edge => open,
         Pos_Edge => Pos_Edge,
         Q        => Q
      );
   U_4 : Debouncer_EdgeDetection
      port map (
         D        => B_in,
         clk      => clk,
         Neg_Edge => open,
         Pos_Edge => Pos_Edge1,
         Q        => Q2
      );
   U_5 : Encoding
      port map (
         clk   => clk,
         A     => Q,
         B     => Q2,
         A_ris => Pos_Edge,
         B_ris => Pos_Edge1,
         inc   => inc,
         dec   => dec
      );

end struct;
