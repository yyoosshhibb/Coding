   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "timers.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.xActiveTimerList1,"aw",%nobits
  20              	 .align 2
  23              	xActiveTimerList1:
  24 0000 00000000 	 .space 20
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .section .bss.xActiveTimerList2,"aw",%nobits
  26              	 .align 2
  29              	xActiveTimerList2:
  30 0000 00000000 	 .space 20
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              	 .section .bss.pxCurrentTimerList,"aw",%nobits
  32              	 .align 2
  35              	pxCurrentTimerList:
  36 0000 00000000 	 .space 4
  37              	 .section .bss.pxOverflowTimerList,"aw",%nobits
  38              	 .align 2
  41              	pxOverflowTimerList:
  42 0000 00000000 	 .space 4
  43              	 .section .bss.xTimerQueue,"aw",%nobits
  44              	 .align 2
  47              	xTimerQueue:
  48 0000 00000000 	 .space 4
  49              	 .section .bss.xTimerTaskHandle,"aw",%nobits
  50              	 .align 2
  53              	xTimerTaskHandle:
  54 0000 00000000 	 .space 4
  55              	 .section .rodata
  56              	 .align 2
  57              	.LC0:
  58 0000 546D7220 	 .ascii "Tmr Svc\000"
  58      53766300 
  59              	 .section .text.xTimerCreateTimerTask,"ax",%progbits
  60              	 .align 2
  61              	 .global xTimerCreateTimerTask
  62              	 .thumb
  63              	 .thumb_func
  65              	xTimerCreateTimerTask:
  66              	.LFB138:
  67              	 .file 1 "../Dave/Generated/FREERTOS/timers.c"
   1:../Dave/Generated/FREERTOS/timers.c **** /*
   2:../Dave/Generated/FREERTOS/timers.c ****  * FreeRTOS Kernel V10.4.3
   3:../Dave/Generated/FREERTOS/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../Dave/Generated/FREERTOS/timers.c ****  *
   5:../Dave/Generated/FREERTOS/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../Dave/Generated/FREERTOS/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../Dave/Generated/FREERTOS/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:../Dave/Generated/FREERTOS/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../Dave/Generated/FREERTOS/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../Dave/Generated/FREERTOS/timers.c ****  * subject to the following conditions:
  11:../Dave/Generated/FREERTOS/timers.c ****  *
  12:../Dave/Generated/FREERTOS/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../Dave/Generated/FREERTOS/timers.c ****  * copies or substantial portions of the Software.
  14:../Dave/Generated/FREERTOS/timers.c ****  *
  15:../Dave/Generated/FREERTOS/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../Dave/Generated/FREERTOS/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../Dave/Generated/FREERTOS/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../Dave/Generated/FREERTOS/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../Dave/Generated/FREERTOS/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../Dave/Generated/FREERTOS/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../Dave/Generated/FREERTOS/timers.c ****  *
  22:../Dave/Generated/FREERTOS/timers.c ****  * https://www.FreeRTOS.org
  23:../Dave/Generated/FREERTOS/timers.c ****  * https://github.com/FreeRTOS
  24:../Dave/Generated/FREERTOS/timers.c ****  *
  25:../Dave/Generated/FREERTOS/timers.c ****  */
  26:../Dave/Generated/FREERTOS/timers.c **** 
  27:../Dave/Generated/FREERTOS/timers.c **** /* Standard includes. */
  28:../Dave/Generated/FREERTOS/timers.c **** #include <stdlib.h>
  29:../Dave/Generated/FREERTOS/timers.c **** 
  30:../Dave/Generated/FREERTOS/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:../Dave/Generated/FREERTOS/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  32:../Dave/Generated/FREERTOS/timers.c ****  * task.h is included from an application file. */
  33:../Dave/Generated/FREERTOS/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:../Dave/Generated/FREERTOS/timers.c **** 
  35:../Dave/Generated/FREERTOS/timers.c **** #include "FreeRTOS.h"
  36:../Dave/Generated/FREERTOS/timers.c **** #include "task.h"
  37:../Dave/Generated/FREERTOS/timers.c **** #include "queue.h"
  38:../Dave/Generated/FREERTOS/timers.c **** #include "timers.h"
  39:../Dave/Generated/FREERTOS/timers.c **** 
  40:../Dave/Generated/FREERTOS/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  41:../Dave/Generated/FREERTOS/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  42:../Dave/Generated/FREERTOS/timers.c **** #endif
  43:../Dave/Generated/FREERTOS/timers.c **** 
  44:../Dave/Generated/FREERTOS/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:../Dave/Generated/FREERTOS/timers.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:../Dave/Generated/FREERTOS/timers.c ****  * for the header files above, but not in this file, in order to generate the
  47:../Dave/Generated/FREERTOS/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:../Dave/Generated/FREERTOS/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  49:../Dave/Generated/FREERTOS/timers.c **** 
  50:../Dave/Generated/FREERTOS/timers.c **** 
  51:../Dave/Generated/FREERTOS/timers.c **** /* This entire source file will be skipped if the application is not configured
  52:../Dave/Generated/FREERTOS/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  53:../Dave/Generated/FREERTOS/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  54:../Dave/Generated/FREERTOS/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  55:../Dave/Generated/FREERTOS/timers.c **** #if ( configUSE_TIMERS == 1 )
  56:../Dave/Generated/FREERTOS/timers.c **** 
  57:../Dave/Generated/FREERTOS/timers.c **** /* Misc definitions. */
  58:../Dave/Generated/FREERTOS/timers.c ****     #define tmrNO_DELAY    ( TickType_t ) 0U
  59:../Dave/Generated/FREERTOS/timers.c **** 
  60:../Dave/Generated/FREERTOS/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  61:../Dave/Generated/FREERTOS/timers.c ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  62:../Dave/Generated/FREERTOS/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  63:../Dave/Generated/FREERTOS/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  64:../Dave/Generated/FREERTOS/timers.c ****     #endif
  65:../Dave/Generated/FREERTOS/timers.c **** 
  66:../Dave/Generated/FREERTOS/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  67:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  68:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  69:../Dave/Generated/FREERTOS/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  70:../Dave/Generated/FREERTOS/timers.c **** 
  71:../Dave/Generated/FREERTOS/timers.c **** /* The definition of the timers themselves. */
  72:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  73:../Dave/Generated/FREERTOS/timers.c ****     {
  74:../Dave/Generated/FREERTOS/timers.c ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  75:../Dave/Generated/FREERTOS/timers.c ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  76:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  77:../Dave/Generated/FREERTOS/timers.c ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  78:../Dave/Generated/FREERTOS/timers.c ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  79:../Dave/Generated/FREERTOS/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  80:../Dave/Generated/FREERTOS/timers.c ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  81:../Dave/Generated/FREERTOS/timers.c ****         #endif
  82:../Dave/Generated/FREERTOS/timers.c ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  83:../Dave/Generated/FREERTOS/timers.c ****     } xTIMER;
  84:../Dave/Generated/FREERTOS/timers.c **** 
  85:../Dave/Generated/FREERTOS/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:../Dave/Generated/FREERTOS/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
  87:../Dave/Generated/FREERTOS/timers.c ****     typedef xTIMER Timer_t;
  88:../Dave/Generated/FREERTOS/timers.c **** 
  89:../Dave/Generated/FREERTOS/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:../Dave/Generated/FREERTOS/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
  91:../Dave/Generated/FREERTOS/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
  92:../Dave/Generated/FREERTOS/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
  93:../Dave/Generated/FREERTOS/timers.c ****  * and xCallbackParametersType respectively. */
  94:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerParameters
  95:../Dave/Generated/FREERTOS/timers.c ****     {
  96:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
  97:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
  98:../Dave/Generated/FREERTOS/timers.c ****     } TimerParameter_t;
  99:../Dave/Generated/FREERTOS/timers.c **** 
 100:../Dave/Generated/FREERTOS/timers.c **** 
 101:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrCallbackParameters
 102:../Dave/Generated/FREERTOS/timers.c ****     {
 103:../Dave/Generated/FREERTOS/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 104:../Dave/Generated/FREERTOS/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 105:../Dave/Generated/FREERTOS/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 106:../Dave/Generated/FREERTOS/timers.c ****     } CallbackParameters_t;
 107:../Dave/Generated/FREERTOS/timers.c **** 
 108:../Dave/Generated/FREERTOS/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:../Dave/Generated/FREERTOS/timers.c ****  * that is used to determine which message type is valid. */
 110:../Dave/Generated/FREERTOS/timers.c ****     typedef struct tmrTimerQueueMessage
 111:../Dave/Generated/FREERTOS/timers.c ****     {
 112:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 113:../Dave/Generated/FREERTOS/timers.c ****         union
 114:../Dave/Generated/FREERTOS/timers.c ****         {
 115:../Dave/Generated/FREERTOS/timers.c ****             TimerParameter_t xTimerParameters;
 116:../Dave/Generated/FREERTOS/timers.c **** 
 117:../Dave/Generated/FREERTOS/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 118:../Dave/Generated/FREERTOS/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 119:../Dave/Generated/FREERTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:../Dave/Generated/FREERTOS/timers.c ****                 CallbackParameters_t xCallbackParameters;
 121:../Dave/Generated/FREERTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 122:../Dave/Generated/FREERTOS/timers.c ****         } u;
 123:../Dave/Generated/FREERTOS/timers.c ****     } DaemonTaskMessage_t;
 124:../Dave/Generated/FREERTOS/timers.c **** 
 125:../Dave/Generated/FREERTOS/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:../Dave/Generated/FREERTOS/timers.c ****  * which static variables must be declared volatile. */
 127:../Dave/Generated/FREERTOS/timers.c **** 
 128:../Dave/Generated/FREERTOS/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:../Dave/Generated/FREERTOS/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 130:../Dave/Generated/FREERTOS/timers.c ****  * timer service task is allowed to access these lists.
 131:../Dave/Generated/FREERTOS/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 132:../Dave/Generated/FREERTOS/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 133:../Dave/Generated/FREERTOS/timers.c ****  * static qualifier. */
 134:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 135:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 136:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 137:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 138:../Dave/Generated/FREERTOS/timers.c **** 
 139:../Dave/Generated/FREERTOS/timers.c **** /* A queue that is used to send commands to the timer service task. */
 140:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 141:../Dave/Generated/FREERTOS/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 142:../Dave/Generated/FREERTOS/timers.c **** 
 143:../Dave/Generated/FREERTOS/timers.c **** /*lint -restore */
 144:../Dave/Generated/FREERTOS/timers.c **** 
 145:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 146:../Dave/Generated/FREERTOS/timers.c **** 
 147:../Dave/Generated/FREERTOS/timers.c **** /*
 148:../Dave/Generated/FREERTOS/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 149:../Dave/Generated/FREERTOS/timers.c ****  * been initialised already.
 150:../Dave/Generated/FREERTOS/timers.c ****  */
 151:../Dave/Generated/FREERTOS/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 152:../Dave/Generated/FREERTOS/timers.c **** 
 153:../Dave/Generated/FREERTOS/timers.c **** /*
 154:../Dave/Generated/FREERTOS/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 155:../Dave/Generated/FREERTOS/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 156:../Dave/Generated/FREERTOS/timers.c ****  * xTimerQueue queue.
 157:../Dave/Generated/FREERTOS/timers.c ****  */
 158:../Dave/Generated/FREERTOS/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 159:../Dave/Generated/FREERTOS/timers.c **** 
 160:../Dave/Generated/FREERTOS/timers.c **** /*
 161:../Dave/Generated/FREERTOS/timers.c ****  * Called by the timer service task to interpret and process a command it
 162:../Dave/Generated/FREERTOS/timers.c ****  * received on the timer queue.
 163:../Dave/Generated/FREERTOS/timers.c ****  */
 164:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 165:../Dave/Generated/FREERTOS/timers.c **** 
 166:../Dave/Generated/FREERTOS/timers.c **** /*
 167:../Dave/Generated/FREERTOS/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 168:../Dave/Generated/FREERTOS/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 169:../Dave/Generated/FREERTOS/timers.c ****  */
 170:../Dave/Generated/FREERTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 171:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 172:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xTimeNow,
 173:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 174:../Dave/Generated/FREERTOS/timers.c **** 
 175:../Dave/Generated/FREERTOS/timers.c **** /*
 176:../Dave/Generated/FREERTOS/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 177:../Dave/Generated/FREERTOS/timers.c ****  * auto-reload timer, then call its callback.
 178:../Dave/Generated/FREERTOS/timers.c ****  */
 179:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 180:../Dave/Generated/FREERTOS/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 181:../Dave/Generated/FREERTOS/timers.c **** 
 182:../Dave/Generated/FREERTOS/timers.c **** /*
 183:../Dave/Generated/FREERTOS/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 184:../Dave/Generated/FREERTOS/timers.c ****  * current timer list does not still reference some timers.
 185:../Dave/Generated/FREERTOS/timers.c ****  */
 186:../Dave/Generated/FREERTOS/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 187:../Dave/Generated/FREERTOS/timers.c **** 
 188:../Dave/Generated/FREERTOS/timers.c **** /*
 189:../Dave/Generated/FREERTOS/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 190:../Dave/Generated/FREERTOS/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 191:../Dave/Generated/FREERTOS/timers.c ****  */
 192:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 193:../Dave/Generated/FREERTOS/timers.c **** 
 194:../Dave/Generated/FREERTOS/timers.c **** /*
 195:../Dave/Generated/FREERTOS/timers.c ****  * If the timer list contains any active timers then return the expire time of
 196:../Dave/Generated/FREERTOS/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 197:../Dave/Generated/FREERTOS/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 198:../Dave/Generated/FREERTOS/timers.c ****  * to pdTRUE.
 199:../Dave/Generated/FREERTOS/timers.c ****  */
 200:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 201:../Dave/Generated/FREERTOS/timers.c **** 
 202:../Dave/Generated/FREERTOS/timers.c **** /*
 203:../Dave/Generated/FREERTOS/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 204:../Dave/Generated/FREERTOS/timers.c ****  * until either a timer does expire or a command is received.
 205:../Dave/Generated/FREERTOS/timers.c ****  */
 206:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 207:../Dave/Generated/FREERTOS/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 208:../Dave/Generated/FREERTOS/timers.c **** 
 209:../Dave/Generated/FREERTOS/timers.c **** /*
 210:../Dave/Generated/FREERTOS/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 211:../Dave/Generated/FREERTOS/timers.c ****  * dynamically to fill in the structure's members.
 212:../Dave/Generated/FREERTOS/timers.c ****  */
 213:../Dave/Generated/FREERTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 214:../Dave/Generated/FREERTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 215:../Dave/Generated/FREERTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 216:../Dave/Generated/FREERTOS/timers.c ****                                        void * const pvTimerID,
 217:../Dave/Generated/FREERTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 218:../Dave/Generated/FREERTOS/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 219:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 220:../Dave/Generated/FREERTOS/timers.c **** 
 221:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 222:../Dave/Generated/FREERTOS/timers.c ****     {
  68              	 .loc 1 222 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 80B5     	 push {r7,lr}
  73              	.LCFI0:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 84B0     	 sub sp,sp,#16
  78              	.LCFI1:
  79              	 .cfi_def_cfa_offset 24
  80 0004 02AF     	 add r7,sp,#8
  81              	.LCFI2:
  82              	 .cfi_def_cfa 7,16
 223:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
  83              	 .loc 1 223 0
  84 0006 0023     	 movs r3,#0
  85 0008 7B60     	 str r3,[r7,#4]
 224:../Dave/Generated/FREERTOS/timers.c **** 
 225:../Dave/Generated/FREERTOS/timers.c ****         /* This function is called when the scheduler is started if
 226:../Dave/Generated/FREERTOS/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 227:../Dave/Generated/FREERTOS/timers.c ****          * timer service task has been created/initialised.  If timers have already
 228:../Dave/Generated/FREERTOS/timers.c ****          * been created then the initialisation will already have been performed. */
 229:../Dave/Generated/FREERTOS/timers.c ****         prvCheckForValidListAndQueue();
  86              	 .loc 1 229 0
  87 000a FFF7FEFF 	 bl prvCheckForValidListAndQueue
 230:../Dave/Generated/FREERTOS/timers.c **** 
 231:../Dave/Generated/FREERTOS/timers.c ****         if( xTimerQueue != NULL )
  88              	 .loc 1 231 0
  89 000e 114B     	 ldr r3,.L6
  90 0010 1B68     	 ldr r3,[r3]
  91 0012 002B     	 cmp r3,#0
  92 0014 0BD0     	 beq .L2
 232:../Dave/Generated/FREERTOS/timers.c ****         {
 233:../Dave/Generated/FREERTOS/timers.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 234:../Dave/Generated/FREERTOS/timers.c ****                 {
 235:../Dave/Generated/FREERTOS/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 236:../Dave/Generated/FREERTOS/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 237:../Dave/Generated/FREERTOS/timers.c ****                     uint32_t ulTimerTaskStackSize;
 238:../Dave/Generated/FREERTOS/timers.c **** 
 239:../Dave/Generated/FREERTOS/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 240:../Dave/Generated/FREERTOS/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 241:../Dave/Generated/FREERTOS/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 242:../Dave/Generated/FREERTOS/timers.c ****                                                           ulTimerTaskStackSize,
 243:../Dave/Generated/FREERTOS/timers.c ****                                                           NULL,
 244:../Dave/Generated/FREERTOS/timers.c ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 245:../Dave/Generated/FREERTOS/timers.c ****                                                           pxTimerTaskStackBuffer,
 246:../Dave/Generated/FREERTOS/timers.c ****                                                           pxTimerTaskTCBBuffer );
 247:../Dave/Generated/FREERTOS/timers.c **** 
 248:../Dave/Generated/FREERTOS/timers.c ****                     if( xTimerTaskHandle != NULL )
 249:../Dave/Generated/FREERTOS/timers.c ****                     {
 250:../Dave/Generated/FREERTOS/timers.c ****                         xReturn = pdPASS;
 251:../Dave/Generated/FREERTOS/timers.c ****                     }
 252:../Dave/Generated/FREERTOS/timers.c ****                 }
 253:../Dave/Generated/FREERTOS/timers.c ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 254:../Dave/Generated/FREERTOS/timers.c ****                 {
 255:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xTaskCreate( prvTimerTask,
  93              	 .loc 1 255 0
  94 0016 0223     	 movs r3,#2
  95 0018 0093     	 str r3,[sp]
  96 001a 0F4B     	 ldr r3,.L6+4
  97 001c 0193     	 str r3,[sp,#4]
  98 001e 0F48     	 ldr r0,.L6+8
  99 0020 0F49     	 ldr r1,.L6+12
 100 0022 4FF48272 	 mov r2,#260
 101 0026 0023     	 movs r3,#0
 102 0028 FFF7FEFF 	 bl xTaskCreate
 103 002c 7860     	 str r0,[r7,#4]
 104              	.L2:
 256:../Dave/Generated/FREERTOS/timers.c ****                                            configTIMER_SERVICE_TASK_NAME,
 257:../Dave/Generated/FREERTOS/timers.c ****                                            configTIMER_TASK_STACK_DEPTH,
 258:../Dave/Generated/FREERTOS/timers.c ****                                            NULL,
 259:../Dave/Generated/FREERTOS/timers.c ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
 260:../Dave/Generated/FREERTOS/timers.c ****                                            &xTimerTaskHandle );
 261:../Dave/Generated/FREERTOS/timers.c ****                 }
 262:../Dave/Generated/FREERTOS/timers.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 263:../Dave/Generated/FREERTOS/timers.c ****         }
 264:../Dave/Generated/FREERTOS/timers.c ****         else
 265:../Dave/Generated/FREERTOS/timers.c ****         {
 266:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 267:../Dave/Generated/FREERTOS/timers.c ****         }
 268:../Dave/Generated/FREERTOS/timers.c **** 
 269:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xReturn );
 105              	 .loc 1 269 0
 106 002e 7B68     	 ldr r3,[r7,#4]
 107 0030 002B     	 cmp r3,#0
 108 0032 09D1     	 bne .L3
 109              	.LBB39:
 110              	.LBB40:
 111              	 .file 2 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * subject to the following conditions:
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * copies or substantial portions of the Software.
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * https://www.FreeRTOS.org
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * https://github.com/FreeRTOS
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * 1 tab == 4 spaces!
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef PORTMACRO_H
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define PORTMACRO_H
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifdef __cplusplus
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         extern "C" {
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Port specific definitions.
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * given hardware and compiler.
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * These settings should not be altered.
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *-----------------------------------------------------------
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Type definitions. */
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portCHAR          char
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portFLOAT         float
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDOUBLE        double
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portLONG          long
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSHORT         short
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portBASE_TYPE     long
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef long             BaseType_t;
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         typedef uint16_t     TickType_t;
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #else
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         typedef uint32_t     TickType_t;
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * not need to be guarded with a critical section. */
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specifics. */
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Scheduler utilities. */
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portYIELD()                                 \
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {                                                   \
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****                                                         \
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     }
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Critical section management. */
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     extern void vPortEnterCritical( void );
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     extern void vPortExitCritical( void );
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * (which build with all the ports) will build. */
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Tickless idle/low power functionality. */
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specific optimisations. */
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Generic helper function. */
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             uint8_t ucReturn;
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             return ucReturn;
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Check the configuration. */
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #endif
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifdef configASSERT
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* portNOP() is not required by this port. */
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portNOP()
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #define portINLINE              __inline
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #ifndef portFORCE_INLINE
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     #endif
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         BaseType_t xReturn;
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             xReturn = pdFALSE;
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         else
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         {
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****             xReturn = pdTRUE;
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         }
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         return xReturn;
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     }
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****     {
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         uint32_t ulNewBASEPRI;
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****         __asm volatile
 112              	 .loc 2 197 0 discriminator 1
 113              	
 114 0034 4FF0FC03 	 mov r3,#252
 115 0038 83F31188 	 msr basepri,r3
 116 003c BFF36F8F 	 isb 
 117 0040 BFF34F8F 	 dsb 
 118              	
 119              	
 120              	 .thumb
 121 0044 3B60     	 str r3,[r7]
 122              	.L4:
 123              	.LBE40:
 124              	.LBE39:
 125              	 .loc 1 269 0 discriminator 1
 126 0046 FEE7     	 b .L4
 127              	.L3:
 270:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 128              	 .loc 1 270 0
 129 0048 7B68     	 ldr r3,[r7,#4]
 271:../Dave/Generated/FREERTOS/timers.c ****     }
 130              	 .loc 1 271 0
 131 004a 1846     	 mov r0,r3
 132 004c 0837     	 adds r7,r7,#8
 133              	.LCFI3:
 134              	 .cfi_def_cfa_offset 8
 135 004e BD46     	 mov sp,r7
 136              	.LCFI4:
 137              	 .cfi_def_cfa_register 13
 138              	 
 139 0050 80BD     	 pop {r7,pc}
 140              	.L7:
 141 0052 00BF     	 .align 2
 142              	.L6:
 143 0054 00000000 	 .word xTimerQueue
 144 0058 00000000 	 .word xTimerTaskHandle
 145 005c 00000000 	 .word prvTimerTask
 146 0060 00000000 	 .word .LC0
 147              	 .cfi_endproc
 148              	.LFE138:
 150              	 .section .text.xTimerCreate,"ax",%progbits
 151              	 .align 2
 152              	 .global xTimerCreate
 153              	 .thumb
 154              	 .thumb_func
 156              	xTimerCreate:
 157              	.LFB139:
 272:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 273:../Dave/Generated/FREERTOS/timers.c **** 
 274:../Dave/Generated/FREERTOS/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 275:../Dave/Generated/FREERTOS/timers.c **** 
 276:../Dave/Generated/FREERTOS/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 277:../Dave/Generated/FREERTOS/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 278:../Dave/Generated/FREERTOS/timers.c ****                                     const UBaseType_t uxAutoReload,
 279:../Dave/Generated/FREERTOS/timers.c ****                                     void * const pvTimerID,
 280:../Dave/Generated/FREERTOS/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 281:../Dave/Generated/FREERTOS/timers.c ****         {
 158              	 .loc 1 281 0
 159              	 .cfi_startproc
 160              	 
 161              	 
 162 0000 80B5     	 push {r7,lr}
 163              	.LCFI5:
 164              	 .cfi_def_cfa_offset 8
 165              	 .cfi_offset 7,-8
 166              	 .cfi_offset 14,-4
 167 0002 88B0     	 sub sp,sp,#32
 168              	.LCFI6:
 169              	 .cfi_def_cfa_offset 40
 170 0004 02AF     	 add r7,sp,#8
 171              	.LCFI7:
 172              	 .cfi_def_cfa 7,32
 173 0006 F860     	 str r0,[r7,#12]
 174 0008 B960     	 str r1,[r7,#8]
 175 000a 7A60     	 str r2,[r7,#4]
 176 000c 3B60     	 str r3,[r7]
 282:../Dave/Generated/FREERTOS/timers.c ****             Timer_t * pxNewTimer;
 283:../Dave/Generated/FREERTOS/timers.c **** 
 284:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 177              	 .loc 1 284 0
 178 000e 2C20     	 movs r0,#44
 179 0010 FFF7FEFF 	 bl pvPortMalloc
 180 0014 7861     	 str r0,[r7,#20]
 285:../Dave/Generated/FREERTOS/timers.c **** 
 286:../Dave/Generated/FREERTOS/timers.c ****             if( pxNewTimer != NULL )
 181              	 .loc 1 286 0
 182 0016 7B69     	 ldr r3,[r7,#20]
 183 0018 002B     	 cmp r3,#0
 184 001a 0DD0     	 beq .L9
 287:../Dave/Generated/FREERTOS/timers.c ****             {
 288:../Dave/Generated/FREERTOS/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 289:../Dave/Generated/FREERTOS/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 290:../Dave/Generated/FREERTOS/timers.c ****                  * prvInitialiseNewTimer. */
 291:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 185              	 .loc 1 291 0
 186 001c 7B69     	 ldr r3,[r7,#20]
 187 001e 0022     	 movs r2,#0
 188 0020 83F82820 	 strb r2,[r3,#40]
 292:../Dave/Generated/FREERTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 189              	 .loc 1 292 0
 190 0024 3B6A     	 ldr r3,[r7,#32]
 191 0026 0093     	 str r3,[sp]
 192 0028 7B69     	 ldr r3,[r7,#20]
 193 002a 0193     	 str r3,[sp,#4]
 194 002c F868     	 ldr r0,[r7,#12]
 195 002e B968     	 ldr r1,[r7,#8]
 196 0030 7A68     	 ldr r2,[r7,#4]
 197 0032 3B68     	 ldr r3,[r7]
 198 0034 FFF7FEFF 	 bl prvInitialiseNewTimer
 199              	.L9:
 293:../Dave/Generated/FREERTOS/timers.c ****             }
 294:../Dave/Generated/FREERTOS/timers.c **** 
 295:../Dave/Generated/FREERTOS/timers.c ****             return pxNewTimer;
 200              	 .loc 1 295 0
 201 0038 7B69     	 ldr r3,[r7,#20]
 296:../Dave/Generated/FREERTOS/timers.c ****         }
 202              	 .loc 1 296 0
 203 003a 1846     	 mov r0,r3
 204 003c 1837     	 adds r7,r7,#24
 205              	.LCFI8:
 206              	 .cfi_def_cfa_offset 8
 207 003e BD46     	 mov sp,r7
 208              	.LCFI9:
 209              	 .cfi_def_cfa_register 13
 210              	 
 211 0040 80BD     	 pop {r7,pc}
 212              	 .cfi_endproc
 213              	.LFE139:
 215 0042 00BF     	 .section .text.prvInitialiseNewTimer,"ax",%progbits
 216              	 .align 2
 217              	 .thumb
 218              	 .thumb_func
 220              	prvInitialiseNewTimer:
 221              	.LFB140:
 297:../Dave/Generated/FREERTOS/timers.c **** 
 298:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 299:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 300:../Dave/Generated/FREERTOS/timers.c **** 
 301:../Dave/Generated/FREERTOS/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:../Dave/Generated/FREERTOS/timers.c **** 
 303:../Dave/Generated/FREERTOS/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 304:../Dave/Generated/FREERTOS/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 305:../Dave/Generated/FREERTOS/timers.c ****                                           const UBaseType_t uxAutoReload,
 306:../Dave/Generated/FREERTOS/timers.c ****                                           void * const pvTimerID,
 307:../Dave/Generated/FREERTOS/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 308:../Dave/Generated/FREERTOS/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 309:../Dave/Generated/FREERTOS/timers.c ****         {
 310:../Dave/Generated/FREERTOS/timers.c ****             Timer_t * pxNewTimer;
 311:../Dave/Generated/FREERTOS/timers.c **** 
 312:../Dave/Generated/FREERTOS/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 313:../Dave/Generated/FREERTOS/timers.c ****                 {
 314:../Dave/Generated/FREERTOS/timers.c ****                     /* Sanity check that the size of the structure used to declare a
 315:../Dave/Generated/FREERTOS/timers.c ****                      * variable of type StaticTimer_t equals the size of the real timer
 316:../Dave/Generated/FREERTOS/timers.c ****                      * structure. */
 317:../Dave/Generated/FREERTOS/timers.c ****                     volatile size_t xSize = sizeof( StaticTimer_t );
 318:../Dave/Generated/FREERTOS/timers.c ****                     configASSERT( xSize == sizeof( Timer_t ) );
 319:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 320:../Dave/Generated/FREERTOS/timers.c ****                 }
 321:../Dave/Generated/FREERTOS/timers.c ****             #endif /* configASSERT_DEFINED */
 322:../Dave/Generated/FREERTOS/timers.c **** 
 323:../Dave/Generated/FREERTOS/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 324:../Dave/Generated/FREERTOS/timers.c ****             configASSERT( pxTimerBuffer );
 325:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 326:../Dave/Generated/FREERTOS/timers.c **** 
 327:../Dave/Generated/FREERTOS/timers.c ****             if( pxNewTimer != NULL )
 328:../Dave/Generated/FREERTOS/timers.c ****             {
 329:../Dave/Generated/FREERTOS/timers.c ****                 /* Timers can be created statically or dynamically so note this
 330:../Dave/Generated/FREERTOS/timers.c ****                  * timer was created statically in case it is later deleted.  The
 331:../Dave/Generated/FREERTOS/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 332:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 333:../Dave/Generated/FREERTOS/timers.c **** 
 334:../Dave/Generated/FREERTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 335:../Dave/Generated/FREERTOS/timers.c ****             }
 336:../Dave/Generated/FREERTOS/timers.c **** 
 337:../Dave/Generated/FREERTOS/timers.c ****             return pxNewTimer;
 338:../Dave/Generated/FREERTOS/timers.c ****         }
 339:../Dave/Generated/FREERTOS/timers.c **** 
 340:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 341:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 342:../Dave/Generated/FREERTOS/timers.c **** 
 343:../Dave/Generated/FREERTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 344:../Dave/Generated/FREERTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 345:../Dave/Generated/FREERTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 346:../Dave/Generated/FREERTOS/timers.c ****                                        void * const pvTimerID,
 347:../Dave/Generated/FREERTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 348:../Dave/Generated/FREERTOS/timers.c ****                                        Timer_t * pxNewTimer )
 349:../Dave/Generated/FREERTOS/timers.c ****     {
 222              	 .loc 1 349 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226 0000 80B5     	 push {r7,lr}
 227              	.LCFI10:
 228              	 .cfi_def_cfa_offset 8
 229              	 .cfi_offset 7,-8
 230              	 .cfi_offset 14,-4
 231 0002 86B0     	 sub sp,sp,#24
 232              	.LCFI11:
 233              	 .cfi_def_cfa_offset 32
 234 0004 00AF     	 add r7,sp,#0
 235              	.LCFI12:
 236              	 .cfi_def_cfa_register 7
 237 0006 F860     	 str r0,[r7,#12]
 238 0008 B960     	 str r1,[r7,#8]
 239 000a 7A60     	 str r2,[r7,#4]
 240 000c 3B60     	 str r3,[r7]
 350:../Dave/Generated/FREERTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 351:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 241              	 .loc 1 351 0
 242 000e BB68     	 ldr r3,[r7,#8]
 243 0010 002B     	 cmp r3,#0
 244 0012 09D1     	 bne .L12
 245              	.LBB41:
 246              	.LBB42:
 247              	 .loc 2 197 0 discriminator 1
 248              	
 249 0014 4FF0FC03 	 mov r3,#252
 250 0018 83F31188 	 msr basepri,r3
 251 001c BFF36F8F 	 isb 
 252 0020 BFF34F8F 	 dsb 
 253              	
 254              	
 255              	 .thumb
 256 0024 7B61     	 str r3,[r7,#20]
 257              	.L13:
 258              	.LBE42:
 259              	.LBE41:
 260              	 .loc 1 351 0 discriminator 1
 261 0026 FEE7     	 b .L13
 262              	.L12:
 352:../Dave/Generated/FREERTOS/timers.c **** 
 353:../Dave/Generated/FREERTOS/timers.c ****         if( pxNewTimer != NULL )
 263              	 .loc 1 353 0
 264 0028 7B6A     	 ldr r3,[r7,#36]
 265 002a 002B     	 cmp r3,#0
 266 002c 1ED0     	 beq .L11
 354:../Dave/Generated/FREERTOS/timers.c ****         {
 355:../Dave/Generated/FREERTOS/timers.c ****             /* Ensure the infrastructure used by the timer service task has been
 356:../Dave/Generated/FREERTOS/timers.c ****              * created/initialised. */
 357:../Dave/Generated/FREERTOS/timers.c ****             prvCheckForValidListAndQueue();
 267              	 .loc 1 357 0
 268 002e FFF7FEFF 	 bl prvCheckForValidListAndQueue
 358:../Dave/Generated/FREERTOS/timers.c **** 
 359:../Dave/Generated/FREERTOS/timers.c ****             /* Initialise the timer structure members using the function
 360:../Dave/Generated/FREERTOS/timers.c ****              * parameters. */
 361:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pcTimerName = pcTimerName;
 269              	 .loc 1 361 0
 270 0032 7B6A     	 ldr r3,[r7,#36]
 271 0034 FA68     	 ldr r2,[r7,#12]
 272 0036 1A60     	 str r2,[r3]
 362:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 273              	 .loc 1 362 0
 274 0038 7B6A     	 ldr r3,[r7,#36]
 275 003a BA68     	 ldr r2,[r7,#8]
 276 003c 9A61     	 str r2,[r3,#24]
 363:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pvTimerID = pvTimerID;
 277              	 .loc 1 363 0
 278 003e 7B6A     	 ldr r3,[r7,#36]
 279 0040 3A68     	 ldr r2,[r7]
 280 0042 DA61     	 str r2,[r3,#28]
 364:../Dave/Generated/FREERTOS/timers.c ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 281              	 .loc 1 364 0
 282 0044 7B6A     	 ldr r3,[r7,#36]
 283 0046 3A6A     	 ldr r2,[r7,#32]
 284 0048 1A62     	 str r2,[r3,#32]
 365:../Dave/Generated/FREERTOS/timers.c ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 285              	 .loc 1 365 0
 286 004a 7B6A     	 ldr r3,[r7,#36]
 287 004c 0433     	 adds r3,r3,#4
 288 004e 1846     	 mov r0,r3
 289 0050 FFF7FEFF 	 bl vListInitialiseItem
 366:../Dave/Generated/FREERTOS/timers.c **** 
 367:../Dave/Generated/FREERTOS/timers.c ****             if( uxAutoReload != pdFALSE )
 290              	 .loc 1 367 0
 291 0054 7B68     	 ldr r3,[r7,#4]
 292 0056 002B     	 cmp r3,#0
 293 0058 08D0     	 beq .L11
 368:../Dave/Generated/FREERTOS/timers.c ****             {
 369:../Dave/Generated/FREERTOS/timers.c ****                 pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 294              	 .loc 1 369 0
 295 005a 7B6A     	 ldr r3,[r7,#36]
 296 005c 93F82830 	 ldrb r3,[r3,#40]
 297 0060 43F00403 	 orr r3,r3,#4
 298 0064 DAB2     	 uxtb r2,r3
 299 0066 7B6A     	 ldr r3,[r7,#36]
 300 0068 83F82820 	 strb r2,[r3,#40]
 301              	.L11:
 370:../Dave/Generated/FREERTOS/timers.c ****             }
 371:../Dave/Generated/FREERTOS/timers.c **** 
 372:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_CREATE( pxNewTimer );
 373:../Dave/Generated/FREERTOS/timers.c ****         }
 374:../Dave/Generated/FREERTOS/timers.c ****     }
 302              	 .loc 1 374 0
 303 006c 1837     	 adds r7,r7,#24
 304              	.LCFI13:
 305              	 .cfi_def_cfa_offset 8
 306 006e BD46     	 mov sp,r7
 307              	.LCFI14:
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 0070 80BD     	 pop {r7,pc}
 311              	 .cfi_endproc
 312              	.LFE140:
 314 0072 00BF     	 .section .text.xTimerGenericCommand,"ax",%progbits
 315              	 .align 2
 316              	 .global xTimerGenericCommand
 317              	 .thumb
 318              	 .thumb_func
 320              	xTimerGenericCommand:
 321              	.LFB141:
 375:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 376:../Dave/Generated/FREERTOS/timers.c **** 
 377:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 378:../Dave/Generated/FREERTOS/timers.c ****                                      const BaseType_t xCommandID,
 379:../Dave/Generated/FREERTOS/timers.c ****                                      const TickType_t xOptionalValue,
 380:../Dave/Generated/FREERTOS/timers.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 381:../Dave/Generated/FREERTOS/timers.c ****                                      const TickType_t xTicksToWait )
 382:../Dave/Generated/FREERTOS/timers.c ****     {
 322              	 .loc 1 382 0
 323              	 .cfi_startproc
 324              	 
 325              	 
 326 0000 80B5     	 push {r7,lr}
 327              	.LCFI15:
 328              	 .cfi_def_cfa_offset 8
 329              	 .cfi_offset 7,-8
 330              	 .cfi_offset 14,-4
 331 0002 8AB0     	 sub sp,sp,#40
 332              	.LCFI16:
 333              	 .cfi_def_cfa_offset 48
 334 0004 00AF     	 add r7,sp,#0
 335              	.LCFI17:
 336              	 .cfi_def_cfa_register 7
 337 0006 F860     	 str r0,[r7,#12]
 338 0008 B960     	 str r1,[r7,#8]
 339 000a 7A60     	 str r2,[r7,#4]
 340 000c 3B60     	 str r3,[r7]
 383:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 341              	 .loc 1 383 0
 342 000e 0023     	 movs r3,#0
 343 0010 7B62     	 str r3,[r7,#36]
 384:../Dave/Generated/FREERTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 385:../Dave/Generated/FREERTOS/timers.c **** 
 386:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 344              	 .loc 1 386 0
 345 0012 FB68     	 ldr r3,[r7,#12]
 346 0014 002B     	 cmp r3,#0
 347 0016 09D1     	 bne .L16
 348              	.LBB43:
 349              	.LBB44:
 350              	 .loc 2 197 0 discriminator 1
 351              	
 352 0018 4FF0FC03 	 mov r3,#252
 353 001c 83F31188 	 msr basepri,r3
 354 0020 BFF36F8F 	 isb 
 355 0024 BFF34F8F 	 dsb 
 356              	
 357              	
 358              	 .thumb
 359 0028 3B62     	 str r3,[r7,#32]
 360              	.L17:
 361              	.LBE44:
 362              	.LBE43:
 363              	 .loc 1 386 0 discriminator 1
 364 002a FEE7     	 b .L17
 365              	.L16:
 387:../Dave/Generated/FREERTOS/timers.c **** 
 388:../Dave/Generated/FREERTOS/timers.c ****         /* Send a message to the timer service task to perform a particular action
 389:../Dave/Generated/FREERTOS/timers.c ****          * on a particular timer definition. */
 390:../Dave/Generated/FREERTOS/timers.c ****         if( xTimerQueue != NULL )
 366              	 .loc 1 390 0
 367 002c 1C4B     	 ldr r3,.L24
 368 002e 1B68     	 ldr r3,[r3]
 369 0030 002B     	 cmp r3,#0
 370 0032 30D0     	 beq .L18
 391:../Dave/Generated/FREERTOS/timers.c ****         {
 392:../Dave/Generated/FREERTOS/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 393:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = xCommandID;
 371              	 .loc 1 393 0
 372 0034 BB68     	 ldr r3,[r7,#8]
 373 0036 3B61     	 str r3,[r7,#16]
 394:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 374              	 .loc 1 394 0
 375 0038 7B68     	 ldr r3,[r7,#4]
 376 003a 7B61     	 str r3,[r7,#20]
 395:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 377              	 .loc 1 395 0
 378 003c FB68     	 ldr r3,[r7,#12]
 379 003e BB61     	 str r3,[r7,#24]
 396:../Dave/Generated/FREERTOS/timers.c **** 
 397:../Dave/Generated/FREERTOS/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 380              	 .loc 1 397 0
 381 0040 BB68     	 ldr r3,[r7,#8]
 382 0042 052B     	 cmp r3,#5
 383 0044 1CDC     	 bgt .L19
 398:../Dave/Generated/FREERTOS/timers.c ****             {
 399:../Dave/Generated/FREERTOS/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 384              	 .loc 1 399 0
 385 0046 FFF7FEFF 	 bl xTaskGetSchedulerState
 386 004a 0346     	 mov r3,r0
 387 004c 022B     	 cmp r3,#2
 388 004e 0BD1     	 bne .L20
 400:../Dave/Generated/FREERTOS/timers.c ****                 {
 401:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 389              	 .loc 1 401 0
 390 0050 134B     	 ldr r3,.L24
 391 0052 1A68     	 ldr r2,[r3]
 392 0054 07F11003 	 add r3,r7,#16
 393 0058 1046     	 mov r0,r2
 394 005a 1946     	 mov r1,r3
 395 005c 3A6B     	 ldr r2,[r7,#48]
 396 005e 0023     	 movs r3,#0
 397 0060 FFF7FEFF 	 bl xQueueGenericSend
 398 0064 7862     	 str r0,[r7,#36]
 399 0066 16E0     	 b .L18
 400              	.L20:
 402:../Dave/Generated/FREERTOS/timers.c ****                 }
 403:../Dave/Generated/FREERTOS/timers.c ****                 else
 404:../Dave/Generated/FREERTOS/timers.c ****                 {
 405:../Dave/Generated/FREERTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 401              	 .loc 1 405 0
 402 0068 0D4B     	 ldr r3,.L24
 403 006a 1A68     	 ldr r2,[r3]
 404 006c 07F11003 	 add r3,r7,#16
 405 0070 1046     	 mov r0,r2
 406 0072 1946     	 mov r1,r3
 407 0074 0022     	 movs r2,#0
 408 0076 0023     	 movs r3,#0
 409 0078 FFF7FEFF 	 bl xQueueGenericSend
 410 007c 7862     	 str r0,[r7,#36]
 411 007e 0AE0     	 b .L18
 412              	.L19:
 406:../Dave/Generated/FREERTOS/timers.c ****                 }
 407:../Dave/Generated/FREERTOS/timers.c ****             }
 408:../Dave/Generated/FREERTOS/timers.c ****             else
 409:../Dave/Generated/FREERTOS/timers.c ****             {
 410:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 413              	 .loc 1 410 0
 414 0080 074B     	 ldr r3,.L24
 415 0082 1A68     	 ldr r2,[r3]
 416 0084 07F11003 	 add r3,r7,#16
 417 0088 1046     	 mov r0,r2
 418 008a 1946     	 mov r1,r3
 419 008c 3A68     	 ldr r2,[r7]
 420 008e 0023     	 movs r3,#0
 421 0090 FFF7FEFF 	 bl xQueueGenericSendFromISR
 422 0094 7862     	 str r0,[r7,#36]
 423              	.L18:
 411:../Dave/Generated/FREERTOS/timers.c ****             }
 412:../Dave/Generated/FREERTOS/timers.c **** 
 413:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:../Dave/Generated/FREERTOS/timers.c ****         }
 415:../Dave/Generated/FREERTOS/timers.c ****         else
 416:../Dave/Generated/FREERTOS/timers.c ****         {
 417:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 418:../Dave/Generated/FREERTOS/timers.c ****         }
 419:../Dave/Generated/FREERTOS/timers.c **** 
 420:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 424              	 .loc 1 420 0
 425 0096 7B6A     	 ldr r3,[r7,#36]
 421:../Dave/Generated/FREERTOS/timers.c ****     }
 426              	 .loc 1 421 0
 427 0098 1846     	 mov r0,r3
 428 009a 2837     	 adds r7,r7,#40
 429              	.LCFI18:
 430              	 .cfi_def_cfa_offset 8
 431 009c BD46     	 mov sp,r7
 432              	.LCFI19:
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 009e 80BD     	 pop {r7,pc}
 436              	.L25:
 437              	 .align 2
 438              	.L24:
 439 00a0 00000000 	 .word xTimerQueue
 440              	 .cfi_endproc
 441              	.LFE141:
 443              	 .section .text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 444              	 .align 2
 445              	 .global xTimerGetTimerDaemonTaskHandle
 446              	 .thumb
 447              	 .thumb_func
 449              	xTimerGetTimerDaemonTaskHandle:
 450              	.LFB142:
 422:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 423:../Dave/Generated/FREERTOS/timers.c **** 
 424:../Dave/Generated/FREERTOS/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:../Dave/Generated/FREERTOS/timers.c ****     {
 451              	 .loc 1 425 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455              	 
 456 0000 80B4     	 push {r7}
 457              	.LCFI20:
 458              	 .cfi_def_cfa_offset 4
 459              	 .cfi_offset 7,-4
 460 0002 83B0     	 sub sp,sp,#12
 461              	.LCFI21:
 462              	 .cfi_def_cfa_offset 16
 463 0004 00AF     	 add r7,sp,#0
 464              	.LCFI22:
 465              	 .cfi_def_cfa_register 7
 426:../Dave/Generated/FREERTOS/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:../Dave/Generated/FREERTOS/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 428:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 466              	 .loc 1 428 0
 467 0006 0B4B     	 ldr r3,.L30
 468 0008 1B68     	 ldr r3,[r3]
 469 000a 002B     	 cmp r3,#0
 470 000c 09D1     	 bne .L27
 471              	.LBB45:
 472              	.LBB46:
 473              	 .loc 2 197 0 discriminator 1
 474              	
 475 000e 4FF0FC03 	 mov r3,#252
 476 0012 83F31188 	 msr basepri,r3
 477 0016 BFF36F8F 	 isb 
 478 001a BFF34F8F 	 dsb 
 479              	
 480              	
 481              	 .thumb
 482 001e 7B60     	 str r3,[r7,#4]
 483              	.L28:
 484              	.LBE46:
 485              	.LBE45:
 486              	 .loc 1 428 0 discriminator 1
 487 0020 FEE7     	 b .L28
 488              	.L27:
 429:../Dave/Generated/FREERTOS/timers.c ****         return xTimerTaskHandle;
 489              	 .loc 1 429 0
 490 0022 044B     	 ldr r3,.L30
 491 0024 1B68     	 ldr r3,[r3]
 430:../Dave/Generated/FREERTOS/timers.c ****     }
 492              	 .loc 1 430 0
 493 0026 1846     	 mov r0,r3
 494 0028 0C37     	 adds r7,r7,#12
 495              	.LCFI23:
 496              	 .cfi_def_cfa_offset 4
 497 002a BD46     	 mov sp,r7
 498              	.LCFI24:
 499              	 .cfi_def_cfa_register 13
 500              	 
 501 002c 5DF8047B 	 ldr r7,[sp],#4
 502              	.LCFI25:
 503              	 .cfi_restore 7
 504              	 .cfi_def_cfa_offset 0
 505 0030 7047     	 bx lr
 506              	.L31:
 507 0032 00BF     	 .align 2
 508              	.L30:
 509 0034 00000000 	 .word xTimerTaskHandle
 510              	 .cfi_endproc
 511              	.LFE142:
 513              	 .section .text.xTimerGetPeriod,"ax",%progbits
 514              	 .align 2
 515              	 .global xTimerGetPeriod
 516              	 .thumb
 517              	 .thumb_func
 519              	xTimerGetPeriod:
 520              	.LFB143:
 431:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 432:../Dave/Generated/FREERTOS/timers.c **** 
 433:../Dave/Generated/FREERTOS/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:../Dave/Generated/FREERTOS/timers.c ****     {
 521              	 .loc 1 434 0
 522              	 .cfi_startproc
 523              	 
 524              	 
 525              	 
 526 0000 80B4     	 push {r7}
 527              	.LCFI26:
 528              	 .cfi_def_cfa_offset 4
 529              	 .cfi_offset 7,-4
 530 0002 85B0     	 sub sp,sp,#20
 531              	.LCFI27:
 532              	 .cfi_def_cfa_offset 24
 533 0004 00AF     	 add r7,sp,#0
 534              	.LCFI28:
 535              	 .cfi_def_cfa_register 7
 536 0006 7860     	 str r0,[r7,#4]
 435:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 537              	 .loc 1 435 0
 538 0008 7B68     	 ldr r3,[r7,#4]
 539 000a FB60     	 str r3,[r7,#12]
 436:../Dave/Generated/FREERTOS/timers.c **** 
 437:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 540              	 .loc 1 437 0
 541 000c 7B68     	 ldr r3,[r7,#4]
 542 000e 002B     	 cmp r3,#0
 543 0010 09D1     	 bne .L33
 544              	.LBB47:
 545              	.LBB48:
 546              	 .loc 2 197 0 discriminator 1
 547              	
 548 0012 4FF0FC03 	 mov r3,#252
 549 0016 83F31188 	 msr basepri,r3
 550 001a BFF36F8F 	 isb 
 551 001e BFF34F8F 	 dsb 
 552              	
 553              	
 554              	 .thumb
 555 0022 BB60     	 str r3,[r7,#8]
 556              	.L34:
 557              	.LBE48:
 558              	.LBE47:
 559              	 .loc 1 437 0 discriminator 1
 560 0024 FEE7     	 b .L34
 561              	.L33:
 438:../Dave/Generated/FREERTOS/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 562              	 .loc 1 438 0
 563 0026 FB68     	 ldr r3,[r7,#12]
 564 0028 9B69     	 ldr r3,[r3,#24]
 439:../Dave/Generated/FREERTOS/timers.c ****     }
 565              	 .loc 1 439 0
 566 002a 1846     	 mov r0,r3
 567 002c 1437     	 adds r7,r7,#20
 568              	.LCFI29:
 569              	 .cfi_def_cfa_offset 4
 570 002e BD46     	 mov sp,r7
 571              	.LCFI30:
 572              	 .cfi_def_cfa_register 13
 573              	 
 574 0030 5DF8047B 	 ldr r7,[sp],#4
 575              	.LCFI31:
 576              	 .cfi_restore 7
 577              	 .cfi_def_cfa_offset 0
 578 0034 7047     	 bx lr
 579              	 .cfi_endproc
 580              	.LFE143:
 582 0036 00BF     	 .section .text.vTimerSetReloadMode,"ax",%progbits
 583              	 .align 2
 584              	 .global vTimerSetReloadMode
 585              	 .thumb
 586              	 .thumb_func
 588              	vTimerSetReloadMode:
 589              	.LFB144:
 440:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 441:../Dave/Generated/FREERTOS/timers.c **** 
 442:../Dave/Generated/FREERTOS/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 443:../Dave/Generated/FREERTOS/timers.c ****                               const UBaseType_t uxAutoReload )
 444:../Dave/Generated/FREERTOS/timers.c ****     {
 590              	 .loc 1 444 0
 591              	 .cfi_startproc
 592              	 
 593              	 
 594 0000 80B5     	 push {r7,lr}
 595              	.LCFI32:
 596              	 .cfi_def_cfa_offset 8
 597              	 .cfi_offset 7,-8
 598              	 .cfi_offset 14,-4
 599 0002 84B0     	 sub sp,sp,#16
 600              	.LCFI33:
 601              	 .cfi_def_cfa_offset 24
 602 0004 00AF     	 add r7,sp,#0
 603              	.LCFI34:
 604              	 .cfi_def_cfa_register 7
 605 0006 7860     	 str r0,[r7,#4]
 606 0008 3960     	 str r1,[r7]
 445:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 607              	 .loc 1 445 0
 608 000a 7B68     	 ldr r3,[r7,#4]
 609 000c FB60     	 str r3,[r7,#12]
 446:../Dave/Generated/FREERTOS/timers.c **** 
 447:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 610              	 .loc 1 447 0
 611 000e 7B68     	 ldr r3,[r7,#4]
 612 0010 002B     	 cmp r3,#0
 613 0012 09D1     	 bne .L37
 614              	.LBB49:
 615              	.LBB50:
 616              	 .loc 2 197 0 discriminator 1
 617              	
 618 0014 4FF0FC03 	 mov r3,#252
 619 0018 83F31188 	 msr basepri,r3
 620 001c BFF36F8F 	 isb 
 621 0020 BFF34F8F 	 dsb 
 622              	
 623              	
 624              	 .thumb
 625 0024 BB60     	 str r3,[r7,#8]
 626              	.L38:
 627              	.LBE50:
 628              	.LBE49:
 629              	 .loc 1 447 0 discriminator 1
 630 0026 FEE7     	 b .L38
 631              	.L37:
 448:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 632              	 .loc 1 448 0
 633 0028 FFF7FEFF 	 bl vPortEnterCritical
 449:../Dave/Generated/FREERTOS/timers.c ****         {
 450:../Dave/Generated/FREERTOS/timers.c ****             if( uxAutoReload != pdFALSE )
 634              	 .loc 1 450 0
 635 002c 3B68     	 ldr r3,[r7]
 636 002e 002B     	 cmp r3,#0
 637 0030 09D0     	 beq .L39
 451:../Dave/Generated/FREERTOS/timers.c ****             {
 452:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 638              	 .loc 1 452 0
 639 0032 FB68     	 ldr r3,[r7,#12]
 640 0034 93F82830 	 ldrb r3,[r3,#40]
 641 0038 43F00403 	 orr r3,r3,#4
 642 003c DAB2     	 uxtb r2,r3
 643 003e FB68     	 ldr r3,[r7,#12]
 644 0040 83F82820 	 strb r2,[r3,#40]
 645 0044 08E0     	 b .L40
 646              	.L39:
 453:../Dave/Generated/FREERTOS/timers.c ****             }
 454:../Dave/Generated/FREERTOS/timers.c ****             else
 455:../Dave/Generated/FREERTOS/timers.c ****             {
 456:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 647              	 .loc 1 456 0
 648 0046 FB68     	 ldr r3,[r7,#12]
 649 0048 93F82830 	 ldrb r3,[r3,#40]
 650 004c 23F00403 	 bic r3,r3,#4
 651 0050 DAB2     	 uxtb r2,r3
 652 0052 FB68     	 ldr r3,[r7,#12]
 653 0054 83F82820 	 strb r2,[r3,#40]
 654              	.L40:
 457:../Dave/Generated/FREERTOS/timers.c ****             }
 458:../Dave/Generated/FREERTOS/timers.c ****         }
 459:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 655              	 .loc 1 459 0
 656 0058 FFF7FEFF 	 bl vPortExitCritical
 460:../Dave/Generated/FREERTOS/timers.c ****     }
 657              	 .loc 1 460 0
 658 005c 1037     	 adds r7,r7,#16
 659              	.LCFI35:
 660              	 .cfi_def_cfa_offset 8
 661 005e BD46     	 mov sp,r7
 662              	.LCFI36:
 663              	 .cfi_def_cfa_register 13
 664              	 
 665 0060 80BD     	 pop {r7,pc}
 666              	 .cfi_endproc
 667              	.LFE144:
 669 0062 00BF     	 .section .text.uxTimerGetReloadMode,"ax",%progbits
 670              	 .align 2
 671              	 .global uxTimerGetReloadMode
 672              	 .thumb
 673              	 .thumb_func
 675              	uxTimerGetReloadMode:
 676              	.LFB145:
 461:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 462:../Dave/Generated/FREERTOS/timers.c **** 
 463:../Dave/Generated/FREERTOS/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 464:../Dave/Generated/FREERTOS/timers.c ****     {
 677              	 .loc 1 464 0
 678              	 .cfi_startproc
 679              	 
 680              	 
 681 0000 80B5     	 push {r7,lr}
 682              	.LCFI37:
 683              	 .cfi_def_cfa_offset 8
 684              	 .cfi_offset 7,-8
 685              	 .cfi_offset 14,-4
 686 0002 86B0     	 sub sp,sp,#24
 687              	.LCFI38:
 688              	 .cfi_def_cfa_offset 32
 689 0004 00AF     	 add r7,sp,#0
 690              	.LCFI39:
 691              	 .cfi_def_cfa_register 7
 692 0006 7860     	 str r0,[r7,#4]
 465:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 693              	 .loc 1 465 0
 694 0008 7B68     	 ldr r3,[r7,#4]
 695 000a 3B61     	 str r3,[r7,#16]
 466:../Dave/Generated/FREERTOS/timers.c ****         UBaseType_t uxReturn;
 467:../Dave/Generated/FREERTOS/timers.c **** 
 468:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 696              	 .loc 1 468 0
 697 000c 7B68     	 ldr r3,[r7,#4]
 698 000e 002B     	 cmp r3,#0
 699 0010 09D1     	 bne .L42
 700              	.LBB51:
 701              	.LBB52:
 702              	 .loc 2 197 0 discriminator 1
 703              	
 704 0012 4FF0FC03 	 mov r3,#252
 705 0016 83F31188 	 msr basepri,r3
 706 001a BFF36F8F 	 isb 
 707 001e BFF34F8F 	 dsb 
 708              	
 709              	
 710              	 .thumb
 711 0022 FB60     	 str r3,[r7,#12]
 712              	.L43:
 713              	.LBE52:
 714              	.LBE51:
 715              	 .loc 1 468 0 discriminator 1
 716 0024 FEE7     	 b .L43
 717              	.L42:
 469:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 718              	 .loc 1 469 0
 719 0026 FFF7FEFF 	 bl vPortEnterCritical
 470:../Dave/Generated/FREERTOS/timers.c ****         {
 471:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 720              	 .loc 1 471 0
 721 002a 3B69     	 ldr r3,[r7,#16]
 722 002c 93F82830 	 ldrb r3,[r3,#40]
 723 0030 03F00403 	 and r3,r3,#4
 724 0034 002B     	 cmp r3,#0
 725 0036 02D1     	 bne .L44
 472:../Dave/Generated/FREERTOS/timers.c ****             {
 473:../Dave/Generated/FREERTOS/timers.c ****                 /* Not an auto-reload timer. */
 474:../Dave/Generated/FREERTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdFALSE;
 726              	 .loc 1 474 0
 727 0038 0023     	 movs r3,#0
 728 003a 7B61     	 str r3,[r7,#20]
 729 003c 01E0     	 b .L45
 730              	.L44:
 475:../Dave/Generated/FREERTOS/timers.c ****             }
 476:../Dave/Generated/FREERTOS/timers.c ****             else
 477:../Dave/Generated/FREERTOS/timers.c ****             {
 478:../Dave/Generated/FREERTOS/timers.c ****                 /* Is an auto-reload timer. */
 479:../Dave/Generated/FREERTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdTRUE;
 731              	 .loc 1 479 0
 732 003e 0123     	 movs r3,#1
 733 0040 7B61     	 str r3,[r7,#20]
 734              	.L45:
 480:../Dave/Generated/FREERTOS/timers.c ****             }
 481:../Dave/Generated/FREERTOS/timers.c ****         }
 482:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 735              	 .loc 1 482 0
 736 0042 FFF7FEFF 	 bl vPortExitCritical
 483:../Dave/Generated/FREERTOS/timers.c **** 
 484:../Dave/Generated/FREERTOS/timers.c ****         return uxReturn;
 737              	 .loc 1 484 0
 738 0046 7B69     	 ldr r3,[r7,#20]
 485:../Dave/Generated/FREERTOS/timers.c ****     }
 739              	 .loc 1 485 0
 740 0048 1846     	 mov r0,r3
 741 004a 1837     	 adds r7,r7,#24
 742              	.LCFI40:
 743              	 .cfi_def_cfa_offset 8
 744 004c BD46     	 mov sp,r7
 745              	.LCFI41:
 746              	 .cfi_def_cfa_register 13
 747              	 
 748 004e 80BD     	 pop {r7,pc}
 749              	 .cfi_endproc
 750              	.LFE145:
 752              	 .section .text.xTimerGetExpiryTime,"ax",%progbits
 753              	 .align 2
 754              	 .global xTimerGetExpiryTime
 755              	 .thumb
 756              	 .thumb_func
 758              	xTimerGetExpiryTime:
 759              	.LFB146:
 486:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 487:../Dave/Generated/FREERTOS/timers.c **** 
 488:../Dave/Generated/FREERTOS/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 489:../Dave/Generated/FREERTOS/timers.c ****     {
 760              	 .loc 1 489 0
 761              	 .cfi_startproc
 762              	 
 763              	 
 764              	 
 765 0000 80B4     	 push {r7}
 766              	.LCFI42:
 767              	 .cfi_def_cfa_offset 4
 768              	 .cfi_offset 7,-4
 769 0002 87B0     	 sub sp,sp,#28
 770              	.LCFI43:
 771              	 .cfi_def_cfa_offset 32
 772 0004 00AF     	 add r7,sp,#0
 773              	.LCFI44:
 774              	 .cfi_def_cfa_register 7
 775 0006 7860     	 str r0,[r7,#4]
 490:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 776              	 .loc 1 490 0
 777 0008 7B68     	 ldr r3,[r7,#4]
 778 000a 7B61     	 str r3,[r7,#20]
 491:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xReturn;
 492:../Dave/Generated/FREERTOS/timers.c **** 
 493:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 779              	 .loc 1 493 0
 780 000c 7B68     	 ldr r3,[r7,#4]
 781 000e 002B     	 cmp r3,#0
 782 0010 09D1     	 bne .L48
 783              	.LBB53:
 784              	.LBB54:
 785              	 .loc 2 197 0 discriminator 1
 786              	
 787 0012 4FF0FC03 	 mov r3,#252
 788 0016 83F31188 	 msr basepri,r3
 789 001a BFF36F8F 	 isb 
 790 001e BFF34F8F 	 dsb 
 791              	
 792              	
 793              	 .thumb
 794 0022 FB60     	 str r3,[r7,#12]
 795              	.L49:
 796              	.LBE54:
 797              	.LBE53:
 798              	 .loc 1 493 0 discriminator 1
 799 0024 FEE7     	 b .L49
 800              	.L48:
 494:../Dave/Generated/FREERTOS/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 801              	 .loc 1 494 0
 802 0026 7B69     	 ldr r3,[r7,#20]
 803 0028 5B68     	 ldr r3,[r3,#4]
 804 002a 3B61     	 str r3,[r7,#16]
 495:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 805              	 .loc 1 495 0
 806 002c 3B69     	 ldr r3,[r7,#16]
 496:../Dave/Generated/FREERTOS/timers.c ****     }
 807              	 .loc 1 496 0
 808 002e 1846     	 mov r0,r3
 809 0030 1C37     	 adds r7,r7,#28
 810              	.LCFI45:
 811              	 .cfi_def_cfa_offset 4
 812 0032 BD46     	 mov sp,r7
 813              	.LCFI46:
 814              	 .cfi_def_cfa_register 13
 815              	 
 816 0034 5DF8047B 	 ldr r7,[sp],#4
 817              	.LCFI47:
 818              	 .cfi_restore 7
 819              	 .cfi_def_cfa_offset 0
 820 0038 7047     	 bx lr
 821              	 .cfi_endproc
 822              	.LFE146:
 824 003a 00BF     	 .section .text.pcTimerGetName,"ax",%progbits
 825              	 .align 2
 826              	 .global pcTimerGetName
 827              	 .thumb
 828              	 .thumb_func
 830              	pcTimerGetName:
 831              	.LFB147:
 497:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 498:../Dave/Generated/FREERTOS/timers.c **** 
 499:../Dave/Generated/FREERTOS/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 500:../Dave/Generated/FREERTOS/timers.c ****     {
 832              	 .loc 1 500 0
 833              	 .cfi_startproc
 834              	 
 835              	 
 836              	 
 837 0000 80B4     	 push {r7}
 838              	.LCFI48:
 839              	 .cfi_def_cfa_offset 4
 840              	 .cfi_offset 7,-4
 841 0002 85B0     	 sub sp,sp,#20
 842              	.LCFI49:
 843              	 .cfi_def_cfa_offset 24
 844 0004 00AF     	 add r7,sp,#0
 845              	.LCFI50:
 846              	 .cfi_def_cfa_register 7
 847 0006 7860     	 str r0,[r7,#4]
 501:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 848              	 .loc 1 501 0
 849 0008 7B68     	 ldr r3,[r7,#4]
 850 000a FB60     	 str r3,[r7,#12]
 502:../Dave/Generated/FREERTOS/timers.c **** 
 503:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 851              	 .loc 1 503 0
 852 000c 7B68     	 ldr r3,[r7,#4]
 853 000e 002B     	 cmp r3,#0
 854 0010 09D1     	 bne .L52
 855              	.LBB55:
 856              	.LBB56:
 857              	 .loc 2 197 0 discriminator 1
 858              	
 859 0012 4FF0FC03 	 mov r3,#252
 860 0016 83F31188 	 msr basepri,r3
 861 001a BFF36F8F 	 isb 
 862 001e BFF34F8F 	 dsb 
 863              	
 864              	
 865              	 .thumb
 866 0022 BB60     	 str r3,[r7,#8]
 867              	.L53:
 868              	.LBE56:
 869              	.LBE55:
 870              	 .loc 1 503 0 discriminator 1
 871 0024 FEE7     	 b .L53
 872              	.L52:
 504:../Dave/Generated/FREERTOS/timers.c ****         return pxTimer->pcTimerName;
 873              	 .loc 1 504 0
 874 0026 FB68     	 ldr r3,[r7,#12]
 875 0028 1B68     	 ldr r3,[r3]
 505:../Dave/Generated/FREERTOS/timers.c ****     }
 876              	 .loc 1 505 0
 877 002a 1846     	 mov r0,r3
 878 002c 1437     	 adds r7,r7,#20
 879              	.LCFI51:
 880              	 .cfi_def_cfa_offset 4
 881 002e BD46     	 mov sp,r7
 882              	.LCFI52:
 883              	 .cfi_def_cfa_register 13
 884              	 
 885 0030 5DF8047B 	 ldr r7,[sp],#4
 886              	.LCFI53:
 887              	 .cfi_restore 7
 888              	 .cfi_def_cfa_offset 0
 889 0034 7047     	 bx lr
 890              	 .cfi_endproc
 891              	.LFE147:
 893 0036 00BF     	 .section .text.prvProcessExpiredTimer,"ax",%progbits
 894              	 .align 2
 895              	 .thumb
 896              	 .thumb_func
 898              	prvProcessExpiredTimer:
 899              	.LFB148:
 506:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 507:../Dave/Generated/FREERTOS/timers.c **** 
 508:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 509:../Dave/Generated/FREERTOS/timers.c ****                                         const TickType_t xTimeNow )
 510:../Dave/Generated/FREERTOS/timers.c ****     {
 900              	 .loc 1 510 0
 901              	 .cfi_startproc
 902              	 
 903              	 
 904 0000 80B5     	 push {r7,lr}
 905              	.LCFI54:
 906              	 .cfi_def_cfa_offset 8
 907              	 .cfi_offset 7,-8
 908              	 .cfi_offset 14,-4
 909 0002 88B0     	 sub sp,sp,#32
 910              	.LCFI55:
 911              	 .cfi_def_cfa_offset 40
 912 0004 02AF     	 add r7,sp,#8
 913              	.LCFI56:
 914              	 .cfi_def_cfa 7,32
 915 0006 7860     	 str r0,[r7,#4]
 916 0008 3960     	 str r1,[r7]
 511:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xResult;
 512:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 917              	 .loc 1 512 0
 918 000a 224B     	 ldr r3,.L59
 919 000c 1B68     	 ldr r3,[r3]
 920 000e DB68     	 ldr r3,[r3,#12]
 921 0010 DB68     	 ldr r3,[r3,#12]
 922 0012 7B61     	 str r3,[r7,#20]
 513:../Dave/Generated/FREERTOS/timers.c **** 
 514:../Dave/Generated/FREERTOS/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 515:../Dave/Generated/FREERTOS/timers.c ****          * been performed to ensure the list is not empty. */
 516:../Dave/Generated/FREERTOS/timers.c **** 
 517:../Dave/Generated/FREERTOS/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 923              	 .loc 1 517 0
 924 0014 7B69     	 ldr r3,[r7,#20]
 925 0016 0433     	 adds r3,r3,#4
 926 0018 1846     	 mov r0,r3
 927 001a FFF7FEFF 	 bl uxListRemove
 518:../Dave/Generated/FREERTOS/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 519:../Dave/Generated/FREERTOS/timers.c **** 
 520:../Dave/Generated/FREERTOS/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 521:../Dave/Generated/FREERTOS/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 522:../Dave/Generated/FREERTOS/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 928              	 .loc 1 522 0
 929 001e 7B69     	 ldr r3,[r7,#20]
 930 0020 93F82830 	 ldrb r3,[r3,#40]
 931 0024 03F00403 	 and r3,r3,#4
 932 0028 002B     	 cmp r3,#0
 933 002a 22D0     	 beq .L56
 523:../Dave/Generated/FREERTOS/timers.c ****         {
 524:../Dave/Generated/FREERTOS/timers.c ****             /* The timer is inserted into a list using a time relative to anything
 525:../Dave/Generated/FREERTOS/timers.c ****              * other than the current time.  It will therefore be inserted into the
 526:../Dave/Generated/FREERTOS/timers.c ****              * correct list relative to the time this task thinks it is now. */
 527:../Dave/Generated/FREERTOS/timers.c ****             if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTic
 934              	 .loc 1 527 0
 935 002c 7B69     	 ldr r3,[r7,#20]
 936 002e 9A69     	 ldr r2,[r3,#24]
 937 0030 7B68     	 ldr r3,[r7,#4]
 938 0032 1344     	 add r3,r3,r2
 939 0034 7869     	 ldr r0,[r7,#20]
 940 0036 1946     	 mov r1,r3
 941 0038 3A68     	 ldr r2,[r7]
 942 003a 7B68     	 ldr r3,[r7,#4]
 943 003c FFF7FEFF 	 bl prvInsertTimerInActiveList
 944 0040 0346     	 mov r3,r0
 945 0042 002B     	 cmp r3,#0
 946 0044 1ED0     	 beq .L57
 528:../Dave/Generated/FREERTOS/timers.c ****             {
 529:../Dave/Generated/FREERTOS/timers.c ****                 /* The timer expired before it was added to the active timer
 530:../Dave/Generated/FREERTOS/timers.c ****                  * list.  Reload it now.  */
 531:../Dave/Generated/FREERTOS/timers.c ****                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTi
 947              	 .loc 1 531 0
 948 0046 0023     	 movs r3,#0
 949 0048 0093     	 str r3,[sp]
 950 004a 7869     	 ldr r0,[r7,#20]
 951 004c 0021     	 movs r1,#0
 952 004e 7A68     	 ldr r2,[r7,#4]
 953 0050 0023     	 movs r3,#0
 954 0052 FFF7FEFF 	 bl xTimerGenericCommand
 955 0056 3861     	 str r0,[r7,#16]
 532:../Dave/Generated/FREERTOS/timers.c ****                 configASSERT( xResult );
 956              	 .loc 1 532 0
 957 0058 3B69     	 ldr r3,[r7,#16]
 958 005a 002B     	 cmp r3,#0
 959 005c 12D1     	 bne .L57
 960              	.LBB57:
 961              	.LBB58:
 962              	 .loc 2 197 0 discriminator 1
 963              	
 964 005e 4FF0FC03 	 mov r3,#252
 965 0062 83F31188 	 msr basepri,r3
 966 0066 BFF36F8F 	 isb 
 967 006a BFF34F8F 	 dsb 
 968              	
 969              	
 970              	 .thumb
 971 006e FB60     	 str r3,[r7,#12]
 972              	.L58:
 973              	.LBE58:
 974              	.LBE57:
 975              	 .loc 1 532 0 discriminator 1
 976 0070 FEE7     	 b .L58
 977              	.L56:
 533:../Dave/Generated/FREERTOS/timers.c ****                 ( void ) xResult;
 534:../Dave/Generated/FREERTOS/timers.c ****             }
 535:../Dave/Generated/FREERTOS/timers.c ****             else
 536:../Dave/Generated/FREERTOS/timers.c ****             {
 537:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 538:../Dave/Generated/FREERTOS/timers.c ****             }
 539:../Dave/Generated/FREERTOS/timers.c ****         }
 540:../Dave/Generated/FREERTOS/timers.c ****         else
 541:../Dave/Generated/FREERTOS/timers.c ****         {
 542:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 978              	 .loc 1 542 0
 979 0072 7B69     	 ldr r3,[r7,#20]
 980 0074 93F82830 	 ldrb r3,[r3,#40]
 981 0078 23F00103 	 bic r3,r3,#1
 982 007c DAB2     	 uxtb r2,r3
 983 007e 7B69     	 ldr r3,[r7,#20]
 984 0080 83F82820 	 strb r2,[r3,#40]
 985              	.L57:
 543:../Dave/Generated/FREERTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 544:../Dave/Generated/FREERTOS/timers.c ****         }
 545:../Dave/Generated/FREERTOS/timers.c **** 
 546:../Dave/Generated/FREERTOS/timers.c ****         /* Call the timer callback. */
 547:../Dave/Generated/FREERTOS/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 986              	 .loc 1 547 0
 987 0084 7B69     	 ldr r3,[r7,#20]
 988 0086 1B6A     	 ldr r3,[r3,#32]
 989 0088 7869     	 ldr r0,[r7,#20]
 990 008a 9847     	 blx r3
 548:../Dave/Generated/FREERTOS/timers.c ****     }
 991              	 .loc 1 548 0
 992 008c 1837     	 adds r7,r7,#24
 993              	.LCFI57:
 994              	 .cfi_def_cfa_offset 8
 995 008e BD46     	 mov sp,r7
 996              	.LCFI58:
 997              	 .cfi_def_cfa_register 13
 998              	 
 999 0090 80BD     	 pop {r7,pc}
 1000              	.L60:
 1001 0092 00BF     	 .align 2
 1002              	.L59:
 1003 0094 00000000 	 .word pxCurrentTimerList
 1004              	 .cfi_endproc
 1005              	.LFE148:
 1007              	 .section .text.prvTimerTask,"ax",%progbits
 1008              	 .align 2
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	prvTimerTask:
 1013              	.LFB149:
 549:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 550:../Dave/Generated/FREERTOS/timers.c **** 
 551:../Dave/Generated/FREERTOS/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 552:../Dave/Generated/FREERTOS/timers.c ****     {
 1014              	 .loc 1 552 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018 0000 80B5     	 push {r7,lr}
 1019              	.LCFI59:
 1020              	 .cfi_def_cfa_offset 8
 1021              	 .cfi_offset 7,-8
 1022              	 .cfi_offset 14,-4
 1023 0002 84B0     	 sub sp,sp,#16
 1024              	.LCFI60:
 1025              	 .cfi_def_cfa_offset 24
 1026 0004 00AF     	 add r7,sp,#0
 1027              	.LCFI61:
 1028              	 .cfi_def_cfa_register 7
 1029 0006 7860     	 str r0,[r7,#4]
 1030              	.L62:
 553:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime;
 554:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xListWasEmpty;
 555:../Dave/Generated/FREERTOS/timers.c **** 
 556:../Dave/Generated/FREERTOS/timers.c ****         /* Just to avoid compiler warnings. */
 557:../Dave/Generated/FREERTOS/timers.c ****         ( void ) pvParameters;
 558:../Dave/Generated/FREERTOS/timers.c **** 
 559:../Dave/Generated/FREERTOS/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 560:../Dave/Generated/FREERTOS/timers.c ****             {
 561:../Dave/Generated/FREERTOS/timers.c ****                 extern void vApplicationDaemonTaskStartupHook( void );
 562:../Dave/Generated/FREERTOS/timers.c **** 
 563:../Dave/Generated/FREERTOS/timers.c ****                 /* Allow the application writer to execute some code in the context of
 564:../Dave/Generated/FREERTOS/timers.c ****                  * this task at the point the task starts executing.  This is useful if the
 565:../Dave/Generated/FREERTOS/timers.c ****                  * application includes initialisation code that would benefit from
 566:../Dave/Generated/FREERTOS/timers.c ****                  * executing after the scheduler has been started. */
 567:../Dave/Generated/FREERTOS/timers.c ****                 vApplicationDaemonTaskStartupHook();
 568:../Dave/Generated/FREERTOS/timers.c ****             }
 569:../Dave/Generated/FREERTOS/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 570:../Dave/Generated/FREERTOS/timers.c **** 
 571:../Dave/Generated/FREERTOS/timers.c ****         for( ; ; )
 572:../Dave/Generated/FREERTOS/timers.c ****         {
 573:../Dave/Generated/FREERTOS/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 574:../Dave/Generated/FREERTOS/timers.c ****              * obtain the time at which the next timer will expire. */
 575:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 1031              	 .loc 1 575 0 discriminator 1
 1032 0008 07F10803 	 add r3,r7,#8
 1033 000c 1846     	 mov r0,r3
 1034 000e FFF7FEFF 	 bl prvGetNextExpireTime
 1035 0012 F860     	 str r0,[r7,#12]
 576:../Dave/Generated/FREERTOS/timers.c **** 
 577:../Dave/Generated/FREERTOS/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 578:../Dave/Generated/FREERTOS/timers.c ****              * until either a timer does expire, or a command is received. */
 579:../Dave/Generated/FREERTOS/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 1036              	 .loc 1 579 0 discriminator 1
 1037 0014 BB68     	 ldr r3,[r7,#8]
 1038 0016 F868     	 ldr r0,[r7,#12]
 1039 0018 1946     	 mov r1,r3
 1040 001a FFF7FEFF 	 bl prvProcessTimerOrBlockTask
 580:../Dave/Generated/FREERTOS/timers.c **** 
 581:../Dave/Generated/FREERTOS/timers.c ****             /* Empty the command queue. */
 582:../Dave/Generated/FREERTOS/timers.c ****             prvProcessReceivedCommands();
 1041              	 .loc 1 582 0 discriminator 1
 1042 001e FFF7FEFF 	 bl prvProcessReceivedCommands
 583:../Dave/Generated/FREERTOS/timers.c ****         }
 1043              	 .loc 1 583 0 discriminator 1
 1044 0022 F1E7     	 b .L62
 1045              	 .cfi_endproc
 1046              	.LFE149:
 1048              	 .section .text.prvProcessTimerOrBlockTask,"ax",%progbits
 1049              	 .align 2
 1050              	 .thumb
 1051              	 .thumb_func
 1053              	prvProcessTimerOrBlockTask:
 1054              	.LFB150:
 584:../Dave/Generated/FREERTOS/timers.c ****     }
 585:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 586:../Dave/Generated/FREERTOS/timers.c **** 
 587:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 588:../Dave/Generated/FREERTOS/timers.c ****                                             BaseType_t xListWasEmpty )
 589:../Dave/Generated/FREERTOS/timers.c ****     {
 1055              	 .loc 1 589 0
 1056              	 .cfi_startproc
 1057              	 
 1058              	 
 1059 0000 80B5     	 push {r7,lr}
 1060              	.LCFI62:
 1061              	 .cfi_def_cfa_offset 8
 1062              	 .cfi_offset 7,-8
 1063              	 .cfi_offset 14,-4
 1064 0002 84B0     	 sub sp,sp,#16
 1065              	.LCFI63:
 1066              	 .cfi_def_cfa_offset 24
 1067 0004 00AF     	 add r7,sp,#0
 1068              	.LCFI64:
 1069              	 .cfi_def_cfa_register 7
 1070 0006 7860     	 str r0,[r7,#4]
 1071 0008 3960     	 str r1,[r7]
 590:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 591:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 592:../Dave/Generated/FREERTOS/timers.c **** 
 593:../Dave/Generated/FREERTOS/timers.c ****         vTaskSuspendAll();
 1072              	 .loc 1 593 0
 1073 000a FFF7FEFF 	 bl vTaskSuspendAll
 594:../Dave/Generated/FREERTOS/timers.c ****         {
 595:../Dave/Generated/FREERTOS/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 596:../Dave/Generated/FREERTOS/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 597:../Dave/Generated/FREERTOS/timers.c ****              * then don't process this timer as any timers that remained in the list
 598:../Dave/Generated/FREERTOS/timers.c ****              * when the lists were switched will have been processed within the
 599:../Dave/Generated/FREERTOS/timers.c ****              * prvSampleTimeNow() function. */
 600:../Dave/Generated/FREERTOS/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1074              	 .loc 1 600 0
 1075 000e 07F10803 	 add r3,r7,#8
 1076 0012 1846     	 mov r0,r3
 1077 0014 FFF7FEFF 	 bl prvSampleTimeNow
 1078 0018 F860     	 str r0,[r7,#12]
 601:../Dave/Generated/FREERTOS/timers.c **** 
 602:../Dave/Generated/FREERTOS/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 1079              	 .loc 1 602 0
 1080 001a BB68     	 ldr r3,[r7,#8]
 1081 001c 002B     	 cmp r3,#0
 1082 001e 31D1     	 bne .L64
 603:../Dave/Generated/FREERTOS/timers.c ****             {
 604:../Dave/Generated/FREERTOS/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 605:../Dave/Generated/FREERTOS/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 1083              	 .loc 1 605 0
 1084 0020 3B68     	 ldr r3,[r7]
 1085 0022 002B     	 cmp r3,#0
 1086 0024 0AD1     	 bne .L65
 1087              	 .loc 1 605 0 is_stmt 0 discriminator 1
 1088 0026 7A68     	 ldr r2,[r7,#4]
 1089 0028 FB68     	 ldr r3,[r7,#12]
 1090 002a 9A42     	 cmp r2,r3
 1091 002c 06D8     	 bhi .L65
 606:../Dave/Generated/FREERTOS/timers.c ****                 {
 607:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xTaskResumeAll();
 1092              	 .loc 1 607 0 is_stmt 1
 1093 002e FFF7FEFF 	 bl xTaskResumeAll
 608:../Dave/Generated/FREERTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1094              	 .loc 1 608 0
 1095 0032 7868     	 ldr r0,[r7,#4]
 1096 0034 F968     	 ldr r1,[r7,#12]
 1097 0036 FFF7FEFF 	 bl prvProcessExpiredTimer
 1098 003a 25E0     	 b .L63
 1099              	.L65:
 609:../Dave/Generated/FREERTOS/timers.c ****                 }
 610:../Dave/Generated/FREERTOS/timers.c ****                 else
 611:../Dave/Generated/FREERTOS/timers.c ****                 {
 612:../Dave/Generated/FREERTOS/timers.c ****                     /* The tick count has not overflowed, and the next expire
 613:../Dave/Generated/FREERTOS/timers.c ****                      * time has not been reached yet.  This task should therefore
 614:../Dave/Generated/FREERTOS/timers.c ****                      * block to wait for the next expire time or a command to be
 615:../Dave/Generated/FREERTOS/timers.c ****                      * received - whichever comes first.  The following line cannot
 616:../Dave/Generated/FREERTOS/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 617:../Dave/Generated/FREERTOS/timers.c ****                      * case when the current timer list is empty. */
 618:../Dave/Generated/FREERTOS/timers.c ****                     if( xListWasEmpty != pdFALSE )
 1100              	 .loc 1 618 0
 1101 003c 3B68     	 ldr r3,[r7]
 1102 003e 002B     	 cmp r3,#0
 1103 0040 08D0     	 beq .L67
 619:../Dave/Generated/FREERTOS/timers.c ****                     {
 620:../Dave/Generated/FREERTOS/timers.c ****                         /* The current timer list is empty - is the overflow list
 621:../Dave/Generated/FREERTOS/timers.c ****                          * also empty? */
 622:../Dave/Generated/FREERTOS/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 1104              	 .loc 1 622 0
 1105 0042 134B     	 ldr r3,.L71
 1106 0044 1B68     	 ldr r3,[r3]
 1107 0046 1B68     	 ldr r3,[r3]
 1108 0048 002B     	 cmp r3,#0
 1109 004a 01D1     	 bne .L68
 1110              	 .loc 1 622 0 is_stmt 0 discriminator 1
 1111 004c 0123     	 movs r3,#1
 1112 004e 00E0     	 b .L69
 1113              	.L68:
 1114              	 .loc 1 622 0 discriminator 2
 1115 0050 0023     	 movs r3,#0
 1116              	.L69:
 1117              	 .loc 1 622 0 discriminator 4
 1118 0052 3B60     	 str r3,[r7]
 1119              	.L67:
 623:../Dave/Generated/FREERTOS/timers.c ****                     }
 624:../Dave/Generated/FREERTOS/timers.c **** 
 625:../Dave/Generated/FREERTOS/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 1120              	 .loc 1 625 0 is_stmt 1
 1121 0054 0F4B     	 ldr r3,.L71+4
 1122 0056 1968     	 ldr r1,[r3]
 1123 0058 7A68     	 ldr r2,[r7,#4]
 1124 005a FB68     	 ldr r3,[r7,#12]
 1125 005c D31A     	 subs r3,r2,r3
 1126 005e 0846     	 mov r0,r1
 1127 0060 1946     	 mov r1,r3
 1128 0062 3A68     	 ldr r2,[r7]
 1129 0064 FFF7FEFF 	 bl vQueueWaitForMessageRestricted
 626:../Dave/Generated/FREERTOS/timers.c **** 
 627:../Dave/Generated/FREERTOS/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 1130              	 .loc 1 627 0
 1131 0068 FFF7FEFF 	 bl xTaskResumeAll
 1132 006c 0346     	 mov r3,r0
 1133 006e 002B     	 cmp r3,#0
 1134 0070 0AD1     	 bne .L63
 628:../Dave/Generated/FREERTOS/timers.c ****                     {
 629:../Dave/Generated/FREERTOS/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 630:../Dave/Generated/FREERTOS/timers.c ****                          * block time to expire.  If a command arrived between the
 631:../Dave/Generated/FREERTOS/timers.c ****                          * critical section being exited and this yield then the yield
 632:../Dave/Generated/FREERTOS/timers.c ****                          * will not cause the task to block. */
 633:../Dave/Generated/FREERTOS/timers.c ****                         portYIELD_WITHIN_API();
 1135              	 .loc 1 633 0
 1136 0072 094B     	 ldr r3,.L71+8
 1137 0074 4FF08052 	 mov r2,#268435456
 1138 0078 1A60     	 str r2,[r3]
 1139              	
 1140 007a BFF34F8F 	 dsb
 1141              	
 1142              	
 1143 007e BFF36F8F 	 isb
 1144              	
 1145              	 .thumb
 1146 0082 01E0     	 b .L63
 1147              	.L64:
 634:../Dave/Generated/FREERTOS/timers.c ****                     }
 635:../Dave/Generated/FREERTOS/timers.c ****                     else
 636:../Dave/Generated/FREERTOS/timers.c ****                     {
 637:../Dave/Generated/FREERTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 638:../Dave/Generated/FREERTOS/timers.c ****                     }
 639:../Dave/Generated/FREERTOS/timers.c ****                 }
 640:../Dave/Generated/FREERTOS/timers.c ****             }
 641:../Dave/Generated/FREERTOS/timers.c ****             else
 642:../Dave/Generated/FREERTOS/timers.c ****             {
 643:../Dave/Generated/FREERTOS/timers.c ****                 ( void ) xTaskResumeAll();
 1148              	 .loc 1 643 0
 1149 0084 FFF7FEFF 	 bl xTaskResumeAll
 1150              	.L63:
 644:../Dave/Generated/FREERTOS/timers.c ****             }
 645:../Dave/Generated/FREERTOS/timers.c ****         }
 646:../Dave/Generated/FREERTOS/timers.c ****     }
 1151              	 .loc 1 646 0
 1152 0088 1037     	 adds r7,r7,#16
 1153              	.LCFI65:
 1154              	 .cfi_def_cfa_offset 8
 1155 008a BD46     	 mov sp,r7
 1156              	.LCFI66:
 1157              	 .cfi_def_cfa_register 13
 1158              	 
 1159 008c 80BD     	 pop {r7,pc}
 1160              	.L72:
 1161 008e 00BF     	 .align 2
 1162              	.L71:
 1163 0090 00000000 	 .word pxOverflowTimerList
 1164 0094 00000000 	 .word xTimerQueue
 1165 0098 04ED00E0 	 .word -536810236
 1166              	 .cfi_endproc
 1167              	.LFE150:
 1169              	 .section .text.prvGetNextExpireTime,"ax",%progbits
 1170              	 .align 2
 1171              	 .thumb
 1172              	 .thumb_func
 1174              	prvGetNextExpireTime:
 1175              	.LFB151:
 647:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 648:../Dave/Generated/FREERTOS/timers.c **** 
 649:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 650:../Dave/Generated/FREERTOS/timers.c ****     {
 1176              	 .loc 1 650 0
 1177              	 .cfi_startproc
 1178              	 
 1179              	 
 1180              	 
 1181 0000 80B4     	 push {r7}
 1182              	.LCFI67:
 1183              	 .cfi_def_cfa_offset 4
 1184              	 .cfi_offset 7,-4
 1185 0002 85B0     	 sub sp,sp,#20
 1186              	.LCFI68:
 1187              	 .cfi_def_cfa_offset 24
 1188 0004 00AF     	 add r7,sp,#0
 1189              	.LCFI69:
 1190              	 .cfi_def_cfa_register 7
 1191 0006 7860     	 str r0,[r7,#4]
 651:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime;
 652:../Dave/Generated/FREERTOS/timers.c **** 
 653:../Dave/Generated/FREERTOS/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 654:../Dave/Generated/FREERTOS/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 655:../Dave/Generated/FREERTOS/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 656:../Dave/Generated/FREERTOS/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 657:../Dave/Generated/FREERTOS/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 658:../Dave/Generated/FREERTOS/timers.c ****          * timer lists will be switched and the next expiry time can be
 659:../Dave/Generated/FREERTOS/timers.c ****          * re-assessed.  */
 660:../Dave/Generated/FREERTOS/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 1192              	 .loc 1 660 0
 1193 0008 0E4B     	 ldr r3,.L79
 1194 000a 1B68     	 ldr r3,[r3]
 1195 000c 1B68     	 ldr r3,[r3]
 1196 000e 002B     	 cmp r3,#0
 1197 0010 01D1     	 bne .L74
 1198              	 .loc 1 660 0 is_stmt 0 discriminator 1
 1199 0012 0122     	 movs r2,#1
 1200 0014 00E0     	 b .L75
 1201              	.L74:
 1202              	 .loc 1 660 0 discriminator 2
 1203 0016 0022     	 movs r2,#0
 1204              	.L75:
 1205              	 .loc 1 660 0 discriminator 4
 1206 0018 7B68     	 ldr r3,[r7,#4]
 1207 001a 1A60     	 str r2,[r3]
 661:../Dave/Generated/FREERTOS/timers.c **** 
 662:../Dave/Generated/FREERTOS/timers.c ****         if( *pxListWasEmpty == pdFALSE )
 1208              	 .loc 1 662 0 is_stmt 1 discriminator 4
 1209 001c 7B68     	 ldr r3,[r7,#4]
 1210 001e 1B68     	 ldr r3,[r3]
 1211 0020 002B     	 cmp r3,#0
 1212 0022 05D1     	 bne .L76
 663:../Dave/Generated/FREERTOS/timers.c ****         {
 664:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1213              	 .loc 1 664 0
 1214 0024 074B     	 ldr r3,.L79
 1215 0026 1B68     	 ldr r3,[r3]
 1216 0028 DB68     	 ldr r3,[r3,#12]
 1217 002a 1B68     	 ldr r3,[r3]
 1218 002c FB60     	 str r3,[r7,#12]
 1219 002e 01E0     	 b .L77
 1220              	.L76:
 665:../Dave/Generated/FREERTOS/timers.c ****         }
 666:../Dave/Generated/FREERTOS/timers.c ****         else
 667:../Dave/Generated/FREERTOS/timers.c ****         {
 668:../Dave/Generated/FREERTOS/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 669:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
 1221              	 .loc 1 669 0
 1222 0030 0023     	 movs r3,#0
 1223 0032 FB60     	 str r3,[r7,#12]
 1224              	.L77:
 670:../Dave/Generated/FREERTOS/timers.c ****         }
 671:../Dave/Generated/FREERTOS/timers.c **** 
 672:../Dave/Generated/FREERTOS/timers.c ****         return xNextExpireTime;
 1225              	 .loc 1 672 0
 1226 0034 FB68     	 ldr r3,[r7,#12]
 673:../Dave/Generated/FREERTOS/timers.c ****     }
 1227              	 .loc 1 673 0
 1228 0036 1846     	 mov r0,r3
 1229 0038 1437     	 adds r7,r7,#20
 1230              	.LCFI70:
 1231              	 .cfi_def_cfa_offset 4
 1232 003a BD46     	 mov sp,r7
 1233              	.LCFI71:
 1234              	 .cfi_def_cfa_register 13
 1235              	 
 1236 003c 5DF8047B 	 ldr r7,[sp],#4
 1237              	.LCFI72:
 1238              	 .cfi_restore 7
 1239              	 .cfi_def_cfa_offset 0
 1240 0040 7047     	 bx lr
 1241              	.L80:
 1242 0042 00BF     	 .align 2
 1243              	.L79:
 1244 0044 00000000 	 .word pxCurrentTimerList
 1245              	 .cfi_endproc
 1246              	.LFE151:
 1248              	 .section .text.prvSampleTimeNow,"ax",%progbits
 1249              	 .align 2
 1250              	 .thumb
 1251              	 .thumb_func
 1253              	prvSampleTimeNow:
 1254              	.LFB152:
 674:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 675:../Dave/Generated/FREERTOS/timers.c **** 
 676:../Dave/Generated/FREERTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 677:../Dave/Generated/FREERTOS/timers.c ****     {
 1255              	 .loc 1 677 0
 1256              	 .cfi_startproc
 1257              	 
 1258              	 
 1259 0000 80B5     	 push {r7,lr}
 1260              	.LCFI73:
 1261              	 .cfi_def_cfa_offset 8
 1262              	 .cfi_offset 7,-8
 1263              	 .cfi_offset 14,-4
 1264 0002 84B0     	 sub sp,sp,#16
 1265              	.LCFI74:
 1266              	 .cfi_def_cfa_offset 24
 1267 0004 00AF     	 add r7,sp,#0
 1268              	.LCFI75:
 1269              	 .cfi_def_cfa_register 7
 1270 0006 7860     	 str r0,[r7,#4]
 678:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 679:../Dave/Generated/FREERTOS/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 680:../Dave/Generated/FREERTOS/timers.c **** 
 681:../Dave/Generated/FREERTOS/timers.c ****         xTimeNow = xTaskGetTickCount();
 1271              	 .loc 1 681 0
 1272 0008 FFF7FEFF 	 bl xTaskGetTickCount
 1273 000c F860     	 str r0,[r7,#12]
 682:../Dave/Generated/FREERTOS/timers.c **** 
 683:../Dave/Generated/FREERTOS/timers.c ****         if( xTimeNow < xLastTime )
 1274              	 .loc 1 683 0
 1275 000e 0B4B     	 ldr r3,.L85
 1276 0010 1B68     	 ldr r3,[r3]
 1277 0012 FA68     	 ldr r2,[r7,#12]
 1278 0014 9A42     	 cmp r2,r3
 1279 0016 05D2     	 bcs .L82
 684:../Dave/Generated/FREERTOS/timers.c ****         {
 685:../Dave/Generated/FREERTOS/timers.c ****             prvSwitchTimerLists();
 1280              	 .loc 1 685 0
 1281 0018 FFF7FEFF 	 bl prvSwitchTimerLists
 686:../Dave/Generated/FREERTOS/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 1282              	 .loc 1 686 0
 1283 001c 7B68     	 ldr r3,[r7,#4]
 1284 001e 0122     	 movs r2,#1
 1285 0020 1A60     	 str r2,[r3]
 1286 0022 02E0     	 b .L83
 1287              	.L82:
 687:../Dave/Generated/FREERTOS/timers.c ****         }
 688:../Dave/Generated/FREERTOS/timers.c ****         else
 689:../Dave/Generated/FREERTOS/timers.c ****         {
 690:../Dave/Generated/FREERTOS/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 1288              	 .loc 1 690 0
 1289 0024 7B68     	 ldr r3,[r7,#4]
 1290 0026 0022     	 movs r2,#0
 1291 0028 1A60     	 str r2,[r3]
 1292              	.L83:
 691:../Dave/Generated/FREERTOS/timers.c ****         }
 692:../Dave/Generated/FREERTOS/timers.c **** 
 693:../Dave/Generated/FREERTOS/timers.c ****         xLastTime = xTimeNow;
 1293              	 .loc 1 693 0
 1294 002a 044A     	 ldr r2,.L85
 1295 002c FB68     	 ldr r3,[r7,#12]
 1296 002e 1360     	 str r3,[r2]
 694:../Dave/Generated/FREERTOS/timers.c **** 
 695:../Dave/Generated/FREERTOS/timers.c ****         return xTimeNow;
 1297              	 .loc 1 695 0
 1298 0030 FB68     	 ldr r3,[r7,#12]
 696:../Dave/Generated/FREERTOS/timers.c ****     }
 1299              	 .loc 1 696 0
 1300 0032 1846     	 mov r0,r3
 1301 0034 1037     	 adds r7,r7,#16
 1302              	.LCFI76:
 1303              	 .cfi_def_cfa_offset 8
 1304 0036 BD46     	 mov sp,r7
 1305              	.LCFI77:
 1306              	 .cfi_def_cfa_register 13
 1307              	 
 1308 0038 80BD     	 pop {r7,pc}
 1309              	.L86:
 1310 003a 00BF     	 .align 2
 1311              	.L85:
 1312 003c 00000000 	 .word xLastTime.7733
 1313              	 .cfi_endproc
 1314              	.LFE152:
 1316              	 .section .text.prvInsertTimerInActiveList,"ax",%progbits
 1317              	 .align 2
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	prvInsertTimerInActiveList:
 1322              	.LFB153:
 697:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 698:../Dave/Generated/FREERTOS/timers.c **** 
 699:../Dave/Generated/FREERTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 700:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 701:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xTimeNow,
 702:../Dave/Generated/FREERTOS/timers.c ****                                                   const TickType_t xCommandTime )
 703:../Dave/Generated/FREERTOS/timers.c ****     {
 1323              	 .loc 1 703 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327 0000 80B5     	 push {r7,lr}
 1328              	.LCFI78:
 1329              	 .cfi_def_cfa_offset 8
 1330              	 .cfi_offset 7,-8
 1331              	 .cfi_offset 14,-4
 1332 0002 86B0     	 sub sp,sp,#24
 1333              	.LCFI79:
 1334              	 .cfi_def_cfa_offset 32
 1335 0004 00AF     	 add r7,sp,#0
 1336              	.LCFI80:
 1337              	 .cfi_def_cfa_register 7
 1338 0006 F860     	 str r0,[r7,#12]
 1339 0008 B960     	 str r1,[r7,#8]
 1340 000a 7A60     	 str r2,[r7,#4]
 1341 000c 3B60     	 str r3,[r7]
 704:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
 1342              	 .loc 1 704 0
 1343 000e 0023     	 movs r3,#0
 1344 0010 7B61     	 str r3,[r7,#20]
 705:../Dave/Generated/FREERTOS/timers.c **** 
 706:../Dave/Generated/FREERTOS/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1345              	 .loc 1 706 0
 1346 0012 FB68     	 ldr r3,[r7,#12]
 1347 0014 BA68     	 ldr r2,[r7,#8]
 1348 0016 5A60     	 str r2,[r3,#4]
 707:../Dave/Generated/FREERTOS/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1349              	 .loc 1 707 0
 1350 0018 FB68     	 ldr r3,[r7,#12]
 1351 001a FA68     	 ldr r2,[r7,#12]
 1352 001c 1A61     	 str r2,[r3,#16]
 708:../Dave/Generated/FREERTOS/timers.c **** 
 709:../Dave/Generated/FREERTOS/timers.c ****         if( xNextExpiryTime <= xTimeNow )
 1353              	 .loc 1 709 0
 1354 001e BA68     	 ldr r2,[r7,#8]
 1355 0020 7B68     	 ldr r3,[r7,#4]
 1356 0022 9A42     	 cmp r2,r3
 1357 0024 12D8     	 bhi .L88
 710:../Dave/Generated/FREERTOS/timers.c ****         {
 711:../Dave/Generated/FREERTOS/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 712:../Dave/Generated/FREERTOS/timers.c ****              * timer was issued, and the time the command was processed? */
 713:../Dave/Generated/FREERTOS/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 1358              	 .loc 1 713 0
 1359 0026 7A68     	 ldr r2,[r7,#4]
 1360 0028 3B68     	 ldr r3,[r7]
 1361 002a D21A     	 subs r2,r2,r3
 1362 002c FB68     	 ldr r3,[r7,#12]
 1363 002e 9B69     	 ldr r3,[r3,#24]
 1364 0030 9A42     	 cmp r2,r3
 1365 0032 02D3     	 bcc .L89
 714:../Dave/Generated/FREERTOS/timers.c ****             {
 715:../Dave/Generated/FREERTOS/timers.c ****                 /* The time between a command being issued and the command being
 716:../Dave/Generated/FREERTOS/timers.c ****                  * processed actually exceeds the timers period.  */
 717:../Dave/Generated/FREERTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1366              	 .loc 1 717 0
 1367 0034 0123     	 movs r3,#1
 1368 0036 7B61     	 str r3,[r7,#20]
 1369 0038 1BE0     	 b .L91
 1370              	.L89:
 718:../Dave/Generated/FREERTOS/timers.c ****             }
 719:../Dave/Generated/FREERTOS/timers.c ****             else
 720:../Dave/Generated/FREERTOS/timers.c ****             {
 721:../Dave/Generated/FREERTOS/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1371              	 .loc 1 721 0
 1372 003a 104B     	 ldr r3,.L94
 1373 003c 1A68     	 ldr r2,[r3]
 1374 003e FB68     	 ldr r3,[r7,#12]
 1375 0040 0433     	 adds r3,r3,#4
 1376 0042 1046     	 mov r0,r2
 1377 0044 1946     	 mov r1,r3
 1378 0046 FFF7FEFF 	 bl vListInsert
 1379 004a 12E0     	 b .L91
 1380              	.L88:
 722:../Dave/Generated/FREERTOS/timers.c ****             }
 723:../Dave/Generated/FREERTOS/timers.c ****         }
 724:../Dave/Generated/FREERTOS/timers.c ****         else
 725:../Dave/Generated/FREERTOS/timers.c ****         {
 726:../Dave/Generated/FREERTOS/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1381              	 .loc 1 726 0
 1382 004c 7A68     	 ldr r2,[r7,#4]
 1383 004e 3B68     	 ldr r3,[r7]
 1384 0050 9A42     	 cmp r2,r3
 1385 0052 06D2     	 bcs .L92
 1386              	 .loc 1 726 0 is_stmt 0 discriminator 1
 1387 0054 BA68     	 ldr r2,[r7,#8]
 1388 0056 3B68     	 ldr r3,[r7]
 1389 0058 9A42     	 cmp r2,r3
 1390 005a 02D3     	 bcc .L92
 727:../Dave/Generated/FREERTOS/timers.c ****             {
 728:../Dave/Generated/FREERTOS/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 729:../Dave/Generated/FREERTOS/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 730:../Dave/Generated/FREERTOS/timers.c ****                  * its expiry time and should be processed immediately. */
 731:../Dave/Generated/FREERTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1391              	 .loc 1 731 0 is_stmt 1
 1392 005c 0123     	 movs r3,#1
 1393 005e 7B61     	 str r3,[r7,#20]
 1394 0060 07E0     	 b .L91
 1395              	.L92:
 732:../Dave/Generated/FREERTOS/timers.c ****             }
 733:../Dave/Generated/FREERTOS/timers.c ****             else
 734:../Dave/Generated/FREERTOS/timers.c ****             {
 735:../Dave/Generated/FREERTOS/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1396              	 .loc 1 735 0
 1397 0062 074B     	 ldr r3,.L94+4
 1398 0064 1A68     	 ldr r2,[r3]
 1399 0066 FB68     	 ldr r3,[r7,#12]
 1400 0068 0433     	 adds r3,r3,#4
 1401 006a 1046     	 mov r0,r2
 1402 006c 1946     	 mov r1,r3
 1403 006e FFF7FEFF 	 bl vListInsert
 1404              	.L91:
 736:../Dave/Generated/FREERTOS/timers.c ****             }
 737:../Dave/Generated/FREERTOS/timers.c ****         }
 738:../Dave/Generated/FREERTOS/timers.c **** 
 739:../Dave/Generated/FREERTOS/timers.c ****         return xProcessTimerNow;
 1405              	 .loc 1 739 0
 1406 0072 7B69     	 ldr r3,[r7,#20]
 740:../Dave/Generated/FREERTOS/timers.c ****     }
 1407              	 .loc 1 740 0
 1408 0074 1846     	 mov r0,r3
 1409 0076 1837     	 adds r7,r7,#24
 1410              	.LCFI81:
 1411              	 .cfi_def_cfa_offset 8
 1412 0078 BD46     	 mov sp,r7
 1413              	.LCFI82:
 1414              	 .cfi_def_cfa_register 13
 1415              	 
 1416 007a 80BD     	 pop {r7,pc}
 1417              	.L95:
 1418              	 .align 2
 1419              	.L94:
 1420 007c 00000000 	 .word pxOverflowTimerList
 1421 0080 00000000 	 .word pxCurrentTimerList
 1422              	 .cfi_endproc
 1423              	.LFE153:
 1425              	 .section .text.prvProcessReceivedCommands,"ax",%progbits
 1426              	 .align 2
 1427              	 .thumb
 1428              	 .thumb_func
 1430              	prvProcessReceivedCommands:
 1431              	.LFB154:
 741:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 742:../Dave/Generated/FREERTOS/timers.c **** 
 743:../Dave/Generated/FREERTOS/timers.c ****     static void prvProcessReceivedCommands( void )
 744:../Dave/Generated/FREERTOS/timers.c ****     {
 1432              	 .loc 1 744 0
 1433              	 .cfi_startproc
 1434              	 
 1435              	 
 1436 0000 80B5     	 push {r7,lr}
 1437              	.LCFI83:
 1438              	 .cfi_def_cfa_offset 8
 1439              	 .cfi_offset 7,-8
 1440              	 .cfi_offset 14,-4
 1441 0002 8EB0     	 sub sp,sp,#56
 1442              	.LCFI84:
 1443              	 .cfi_def_cfa_offset 64
 1444 0004 02AF     	 add r7,sp,#8
 1445              	.LCFI85:
 1446              	 .cfi_def_cfa 7,56
 745:../Dave/Generated/FREERTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 746:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;
 747:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerListsWereSwitched, xResult;
 748:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xTimeNow;
 749:../Dave/Generated/FREERTOS/timers.c **** 
 750:../Dave/Generated/FREERTOS/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 1447              	 .loc 1 750 0
 1448 0006 CBE0     	 b .L97
 1449              	.L114:
 751:../Dave/Generated/FREERTOS/timers.c ****         {
 752:../Dave/Generated/FREERTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 753:../Dave/Generated/FREERTOS/timers.c ****                 {
 754:../Dave/Generated/FREERTOS/timers.c ****                     /* Negative commands are pended function calls rather than timer
 755:../Dave/Generated/FREERTOS/timers.c ****                      * commands. */
 756:../Dave/Generated/FREERTOS/timers.c ****                     if( xMessage.xMessageID < ( BaseType_t ) 0 )
 1450              	 .loc 1 756 0
 1451 0008 7B68     	 ldr r3,[r7,#4]
 1452 000a 002B     	 cmp r3,#0
 1453 000c 18DA     	 bge .L98
 1454              	.LBB59:
 757:../Dave/Generated/FREERTOS/timers.c ****                     {
 758:../Dave/Generated/FREERTOS/timers.c ****                         const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackPara
 1455              	 .loc 1 758 0
 1456 000e 3B1D     	 adds r3,r7,#4
 1457 0010 0433     	 adds r3,r3,#4
 1458 0012 FB62     	 str r3,[r7,#44]
 759:../Dave/Generated/FREERTOS/timers.c **** 
 760:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer uses the xCallbackParameters member to request a
 761:../Dave/Generated/FREERTOS/timers.c ****                          * callback be executed.  Check the callback is not NULL. */
 762:../Dave/Generated/FREERTOS/timers.c ****                         configASSERT( pxCallback );
 1459              	 .loc 1 762 0
 1460 0014 FB6A     	 ldr r3,[r7,#44]
 1461 0016 002B     	 cmp r3,#0
 1462 0018 09D1     	 bne .L99
 1463              	.LBB60:
 1464              	.LBB61:
 1465              	 .loc 2 197 0 discriminator 1
 1466              	
 1467 001a 4FF0FC03 	 mov r3,#252
 1468 001e 83F31188 	 msr basepri,r3
 1469 0022 BFF36F8F 	 isb 
 1470 0026 BFF34F8F 	 dsb 
 1471              	
 1472              	
 1473              	 .thumb
 1474 002a FB61     	 str r3,[r7,#28]
 1475              	.L100:
 1476              	.LBE61:
 1477              	.LBE60:
 1478              	 .loc 1 762 0 discriminator 1
 1479 002c FEE7     	 b .L100
 1480              	.L99:
 763:../Dave/Generated/FREERTOS/timers.c **** 
 764:../Dave/Generated/FREERTOS/timers.c ****                         /* Call the function. */
 765:../Dave/Generated/FREERTOS/timers.c ****                         pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulPar
 1481              	 .loc 1 765 0
 1482 002e FB6A     	 ldr r3,[r7,#44]
 1483 0030 1B68     	 ldr r3,[r3]
 1484 0032 FA6A     	 ldr r2,[r7,#44]
 1485 0034 5168     	 ldr r1,[r2,#4]
 1486 0036 FA6A     	 ldr r2,[r7,#44]
 1487 0038 9268     	 ldr r2,[r2,#8]
 1488 003a 0846     	 mov r0,r1
 1489 003c 1146     	 mov r1,r2
 1490 003e 9847     	 blx r3
 1491              	.L98:
 1492              	.LBE59:
 766:../Dave/Generated/FREERTOS/timers.c ****                     }
 767:../Dave/Generated/FREERTOS/timers.c ****                     else
 768:../Dave/Generated/FREERTOS/timers.c ****                     {
 769:../Dave/Generated/FREERTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 770:../Dave/Generated/FREERTOS/timers.c ****                     }
 771:../Dave/Generated/FREERTOS/timers.c ****                 }
 772:../Dave/Generated/FREERTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 773:../Dave/Generated/FREERTOS/timers.c **** 
 774:../Dave/Generated/FREERTOS/timers.c ****             /* Commands that are positive are timer commands rather than pended
 775:../Dave/Generated/FREERTOS/timers.c ****              * function calls. */
 776:../Dave/Generated/FREERTOS/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1493              	 .loc 1 776 0
 1494 0040 7B68     	 ldr r3,[r7,#4]
 1495 0042 002B     	 cmp r3,#0
 1496 0044 C0F2AC80 	 blt .L97
 777:../Dave/Generated/FREERTOS/timers.c ****             {
 778:../Dave/Generated/FREERTOS/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 779:../Dave/Generated/FREERTOS/timers.c ****                  * software timer. */
 780:../Dave/Generated/FREERTOS/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1497              	 .loc 1 780 0
 1498 0048 FB68     	 ldr r3,[r7,#12]
 1499 004a BB62     	 str r3,[r7,#40]
 781:../Dave/Generated/FREERTOS/timers.c **** 
 782:../Dave/Generated/FREERTOS/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 1500              	 .loc 1 782 0
 1501 004c BB6A     	 ldr r3,[r7,#40]
 1502 004e 5B69     	 ldr r3,[r3,#20]
 1503 0050 002B     	 cmp r3,#0
 1504 0052 04D0     	 beq .L101
 783:../Dave/Generated/FREERTOS/timers.c ****                 {
 784:../Dave/Generated/FREERTOS/timers.c ****                     /* The timer is in a list, remove it. */
 785:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1505              	 .loc 1 785 0
 1506 0054 BB6A     	 ldr r3,[r7,#40]
 1507 0056 0433     	 adds r3,r3,#4
 1508 0058 1846     	 mov r0,r3
 1509 005a FFF7FEFF 	 bl uxListRemove
 1510              	.L101:
 786:../Dave/Generated/FREERTOS/timers.c ****                 }
 787:../Dave/Generated/FREERTOS/timers.c ****                 else
 788:../Dave/Generated/FREERTOS/timers.c ****                 {
 789:../Dave/Generated/FREERTOS/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 790:../Dave/Generated/FREERTOS/timers.c ****                 }
 791:../Dave/Generated/FREERTOS/timers.c **** 
 792:../Dave/Generated/FREERTOS/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 793:../Dave/Generated/FREERTOS/timers.c **** 
 794:../Dave/Generated/FREERTOS/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 795:../Dave/Generated/FREERTOS/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 796:../Dave/Generated/FREERTOS/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 797:../Dave/Generated/FREERTOS/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 798:../Dave/Generated/FREERTOS/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 799:../Dave/Generated/FREERTOS/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 800:../Dave/Generated/FREERTOS/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1511              	 .loc 1 800 0
 1512 005e 3B46     	 mov r3,r7
 1513 0060 1846     	 mov r0,r3
 1514 0062 FFF7FEFF 	 bl prvSampleTimeNow
 1515 0066 7862     	 str r0,[r7,#36]
 801:../Dave/Generated/FREERTOS/timers.c **** 
 802:../Dave/Generated/FREERTOS/timers.c ****                 switch( xMessage.xMessageID )
 1516              	 .loc 1 802 0
 1517 0068 7B68     	 ldr r3,[r7,#4]
 1518 006a 092B     	 cmp r3,#9
 1519 006c 00F29780 	 bhi .L115
 1520 0070 01A2     	 adr r2,.L104
 1521 0072 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1522 0076 00BF     	 .p2align 2
 1523              	.L104:
 1524 0078 A1000000 	 .word .L103+1
 1525 007c A1000000 	 .word .L103+1
 1526 0080 A1000000 	 .word .L103+1
 1527 0084 17010000 	 .word .L105+1
 1528 0088 2B010000 	 .word .L106+1
 1529 008c 75010000 	 .word .L107+1
 1530 0090 A1000000 	 .word .L103+1
 1531 0094 A1000000 	 .word .L103+1
 1532 0098 17010000 	 .word .L105+1
 1533 009c 2B010000 	 .word .L106+1
 1534              	 .p2align 1
 1535              	.L103:
 803:../Dave/Generated/FREERTOS/timers.c ****                 {
 804:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START:
 805:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
 806:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_RESET:
 807:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
 808:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_START_DONT_TRACE:
 809:../Dave/Generated/FREERTOS/timers.c ****                         /* Start or restart a timer. */
 810:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1536              	 .loc 1 810 0
 1537 00a0 BB6A     	 ldr r3,[r7,#40]
 1538 00a2 93F82830 	 ldrb r3,[r3,#40]
 1539 00a6 43F00103 	 orr r3,r3,#1
 1540 00aa DAB2     	 uxtb r2,r3
 1541 00ac BB6A     	 ldr r3,[r7,#40]
 1542 00ae 83F82820 	 strb r2,[r3,#40]
 811:../Dave/Generated/FREERTOS/timers.c **** 
 812:../Dave/Generated/FREERTOS/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 1543              	 .loc 1 812 0
 1544 00b2 BA68     	 ldr r2,[r7,#8]
 1545 00b4 BB6A     	 ldr r3,[r7,#40]
 1546 00b6 9B69     	 ldr r3,[r3,#24]
 1547 00b8 1A44     	 add r2,r2,r3
 1548 00ba BB68     	 ldr r3,[r7,#8]
 1549 00bc B86A     	 ldr r0,[r7,#40]
 1550 00be 1146     	 mov r1,r2
 1551 00c0 7A6A     	 ldr r2,[r7,#36]
 1552 00c2 FFF7FEFF 	 bl prvInsertTimerInActiveList
 1553 00c6 0346     	 mov r3,r0
 1554 00c8 002B     	 cmp r3,#0
 1555 00ca 23D0     	 beq .L108
 813:../Dave/Generated/FREERTOS/timers.c ****                         {
 814:../Dave/Generated/FREERTOS/timers.c ****                             /* The timer expired before it was added to the active
 815:../Dave/Generated/FREERTOS/timers.c ****                              * timer list.  Process it now. */
 816:../Dave/Generated/FREERTOS/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1556              	 .loc 1 816 0
 1557 00cc BB6A     	 ldr r3,[r7,#40]
 1558 00ce 1B6A     	 ldr r3,[r3,#32]
 1559 00d0 B86A     	 ldr r0,[r7,#40]
 1560 00d2 9847     	 blx r3
 817:../Dave/Generated/FREERTOS/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
 818:../Dave/Generated/FREERTOS/timers.c **** 
 819:../Dave/Generated/FREERTOS/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1561              	 .loc 1 819 0
 1562 00d4 BB6A     	 ldr r3,[r7,#40]
 1563 00d6 93F82830 	 ldrb r3,[r3,#40]
 1564 00da 03F00403 	 and r3,r3,#4
 1565 00de 002B     	 cmp r3,#0
 1566 00e0 18D0     	 beq .L108
 820:../Dave/Generated/FREERTOS/timers.c ****                             {
 821:../Dave/Generated/FREERTOS/timers.c ****                                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 1567              	 .loc 1 821 0
 1568 00e2 BA68     	 ldr r2,[r7,#8]
 1569 00e4 BB6A     	 ldr r3,[r7,#40]
 1570 00e6 9B69     	 ldr r3,[r3,#24]
 1571 00e8 1A44     	 add r2,r2,r3
 1572 00ea 0023     	 movs r3,#0
 1573 00ec 0093     	 str r3,[sp]
 1574 00ee B86A     	 ldr r0,[r7,#40]
 1575 00f0 0021     	 movs r1,#0
 1576 00f2 0023     	 movs r3,#0
 1577 00f4 FFF7FEFF 	 bl xTimerGenericCommand
 1578 00f8 3862     	 str r0,[r7,#32]
 822:../Dave/Generated/FREERTOS/timers.c ****                                 configASSERT( xResult );
 1579              	 .loc 1 822 0
 1580 00fa 3B6A     	 ldr r3,[r7,#32]
 1581 00fc 002B     	 cmp r3,#0
 1582 00fe 09D1     	 bne .L108
 1583              	.LBB62:
 1584              	.LBB63:
 1585              	 .loc 2 197 0 discriminator 1
 1586              	
 1587 0100 4FF0FC03 	 mov r3,#252
 1588 0104 83F31188 	 msr basepri,r3
 1589 0108 BFF36F8F 	 isb 
 1590 010c BFF34F8F 	 dsb 
 1591              	
 1592              	
 1593              	 .thumb
 1594 0110 BB61     	 str r3,[r7,#24]
 1595              	.L109:
 1596              	.LBE63:
 1597              	.LBE62:
 1598              	 .loc 1 822 0 discriminator 2
 1599 0112 FEE7     	 b .L109
 1600              	.L108:
 823:../Dave/Generated/FREERTOS/timers.c ****                                 ( void ) xResult;
 824:../Dave/Generated/FREERTOS/timers.c ****                             }
 825:../Dave/Generated/FREERTOS/timers.c ****                             else
 826:../Dave/Generated/FREERTOS/timers.c ****                             {
 827:../Dave/Generated/FREERTOS/timers.c ****                                 mtCOVERAGE_TEST_MARKER();
 828:../Dave/Generated/FREERTOS/timers.c ****                             }
 829:../Dave/Generated/FREERTOS/timers.c ****                         }
 830:../Dave/Generated/FREERTOS/timers.c ****                         else
 831:../Dave/Generated/FREERTOS/timers.c ****                         {
 832:../Dave/Generated/FREERTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 833:../Dave/Generated/FREERTOS/timers.c ****                         }
 834:../Dave/Generated/FREERTOS/timers.c **** 
 835:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1601              	 .loc 1 835 0 discriminator 4
 1602 0114 44E0     	 b .L97
 1603              	.L105:
 836:../Dave/Generated/FREERTOS/timers.c **** 
 837:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_STOP:
 838:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
 839:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer has already been removed from the active list. */
 840:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1604              	 .loc 1 840 0
 1605 0116 BB6A     	 ldr r3,[r7,#40]
 1606 0118 93F82830 	 ldrb r3,[r3,#40]
 1607 011c 23F00103 	 bic r3,r3,#1
 1608 0120 DAB2     	 uxtb r2,r3
 1609 0122 BB6A     	 ldr r3,[r7,#40]
 1610 0124 83F82820 	 strb r2,[r3,#40]
 841:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1611              	 .loc 1 841 0
 1612 0128 3AE0     	 b .L97
 1613              	.L106:
 842:../Dave/Generated/FREERTOS/timers.c **** 
 843:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
 844:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 845:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1614              	 .loc 1 845 0
 1615 012a BB6A     	 ldr r3,[r7,#40]
 1616 012c 93F82830 	 ldrb r3,[r3,#40]
 1617 0130 43F00103 	 orr r3,r3,#1
 1618 0134 DAB2     	 uxtb r2,r3
 1619 0136 BB6A     	 ldr r3,[r7,#40]
 1620 0138 83F82820 	 strb r2,[r3,#40]
 846:../Dave/Generated/FREERTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1621              	 .loc 1 846 0
 1622 013c BA68     	 ldr r2,[r7,#8]
 1623 013e BB6A     	 ldr r3,[r7,#40]
 1624 0140 9A61     	 str r2,[r3,#24]
 847:../Dave/Generated/FREERTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1625              	 .loc 1 847 0
 1626 0142 BB6A     	 ldr r3,[r7,#40]
 1627 0144 9B69     	 ldr r3,[r3,#24]
 1628 0146 002B     	 cmp r3,#0
 1629 0148 09D1     	 bne .L110
 1630              	.LBB64:
 1631              	.LBB65:
 1632              	 .loc 2 197 0 discriminator 1
 1633              	
 1634 014a 4FF0FC03 	 mov r3,#252
 1635 014e 83F31188 	 msr basepri,r3
 1636 0152 BFF36F8F 	 isb 
 1637 0156 BFF34F8F 	 dsb 
 1638              	
 1639              	
 1640              	 .thumb
 1641 015a 7B61     	 str r3,[r7,#20]
 1642              	.L111:
 1643              	.LBE65:
 1644              	.LBE64:
 1645              	 .loc 1 847 0 discriminator 5
 1646 015c FEE7     	 b .L111
 1647              	.L110:
 848:../Dave/Generated/FREERTOS/timers.c **** 
 849:../Dave/Generated/FREERTOS/timers.c ****                         /* The new period does not really have a reference, and can
 850:../Dave/Generated/FREERTOS/timers.c ****                          * be longer or shorter than the old one.  The command time is
 851:../Dave/Generated/FREERTOS/timers.c ****                          * therefore set to the current time, and as the period cannot
 852:../Dave/Generated/FREERTOS/timers.c ****                          * be zero the next expiry time can only be in the future,
 853:../Dave/Generated/FREERTOS/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
 854:../Dave/Generated/FREERTOS/timers.c ****                          * no fail case that needs to be handled here. */
 855:../Dave/Generated/FREERTOS/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 1648              	 .loc 1 855 0
 1649 015e BB6A     	 ldr r3,[r7,#40]
 1650 0160 9A69     	 ldr r2,[r3,#24]
 1651 0162 7B6A     	 ldr r3,[r7,#36]
 1652 0164 1344     	 add r3,r3,r2
 1653 0166 B86A     	 ldr r0,[r7,#40]
 1654 0168 1946     	 mov r1,r3
 1655 016a 7A6A     	 ldr r2,[r7,#36]
 1656 016c 7B6A     	 ldr r3,[r7,#36]
 1657 016e FFF7FEFF 	 bl prvInsertTimerInActiveList
 856:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1658              	 .loc 1 856 0
 1659 0172 15E0     	 b .L97
 1660              	.L107:
 857:../Dave/Generated/FREERTOS/timers.c **** 
 858:../Dave/Generated/FREERTOS/timers.c ****                     case tmrCOMMAND_DELETE:
 859:../Dave/Generated/FREERTOS/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 860:../Dave/Generated/FREERTOS/timers.c ****                             {
 861:../Dave/Generated/FREERTOS/timers.c ****                                 /* The timer has already been removed from the active list,
 862:../Dave/Generated/FREERTOS/timers.c ****                                  * just free up the memory if the memory was dynamically
 863:../Dave/Generated/FREERTOS/timers.c ****                                  * allocated. */
 864:../Dave/Generated/FREERTOS/timers.c ****                                 if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( 
 1661              	 .loc 1 864 0
 1662 0174 BB6A     	 ldr r3,[r7,#40]
 1663 0176 93F82830 	 ldrb r3,[r3,#40]
 1664 017a 03F00203 	 and r3,r3,#2
 1665 017e 002B     	 cmp r3,#0
 1666 0180 03D1     	 bne .L112
 865:../Dave/Generated/FREERTOS/timers.c ****                                 {
 866:../Dave/Generated/FREERTOS/timers.c ****                                     vPortFree( pxTimer );
 1667              	 .loc 1 866 0
 1668 0182 B86A     	 ldr r0,[r7,#40]
 1669 0184 FFF7FEFF 	 bl vPortFree
 1670 0188 08E0     	 b .L113
 1671              	.L112:
 867:../Dave/Generated/FREERTOS/timers.c ****                                 }
 868:../Dave/Generated/FREERTOS/timers.c ****                                 else
 869:../Dave/Generated/FREERTOS/timers.c ****                                 {
 870:../Dave/Generated/FREERTOS/timers.c ****                                     pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1672              	 .loc 1 870 0
 1673 018a BB6A     	 ldr r3,[r7,#40]
 1674 018c 93F82830 	 ldrb r3,[r3,#40]
 1675 0190 23F00103 	 bic r3,r3,#1
 1676 0194 DAB2     	 uxtb r2,r3
 1677 0196 BB6A     	 ldr r3,[r7,#40]
 1678 0198 83F82820 	 strb r2,[r3,#40]
 1679              	.L113:
 871:../Dave/Generated/FREERTOS/timers.c ****                                 }
 872:../Dave/Generated/FREERTOS/timers.c ****                             }
 873:../Dave/Generated/FREERTOS/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 874:../Dave/Generated/FREERTOS/timers.c ****                             {
 875:../Dave/Generated/FREERTOS/timers.c ****                                 /* If dynamic allocation is not enabled, the memory
 876:../Dave/Generated/FREERTOS/timers.c ****                                  * could not have been dynamically allocated. So there is
 877:../Dave/Generated/FREERTOS/timers.c ****                                  * no need to free the memory - just mark the timer as
 878:../Dave/Generated/FREERTOS/timers.c ****                                  * "not active". */
 879:../Dave/Generated/FREERTOS/timers.c ****                                 pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 880:../Dave/Generated/FREERTOS/timers.c ****                             }
 881:../Dave/Generated/FREERTOS/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 882:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1680              	 .loc 1 882 0
 1681 019c 00E0     	 b .L97
 1682              	.L115:
 883:../Dave/Generated/FREERTOS/timers.c **** 
 884:../Dave/Generated/FREERTOS/timers.c ****                     default:
 885:../Dave/Generated/FREERTOS/timers.c ****                         /* Don't expect to get here. */
 886:../Dave/Generated/FREERTOS/timers.c ****                         break;
 1683              	 .loc 1 886 0
 1684 019e 00BF     	 nop
 1685              	.L97:
 750:../Dave/Generated/FREERTOS/timers.c ****         {
 1686              	 .loc 1 750 0
 1687 01a0 074B     	 ldr r3,.L116
 1688 01a2 1A68     	 ldr r2,[r3]
 1689 01a4 3B1D     	 adds r3,r7,#4
 1690 01a6 1046     	 mov r0,r2
 1691 01a8 1946     	 mov r1,r3
 1692 01aa 0022     	 movs r2,#0
 1693 01ac FFF7FEFF 	 bl xQueueReceive
 1694 01b0 0346     	 mov r3,r0
 1695 01b2 002B     	 cmp r3,#0
 1696 01b4 7FF428AF 	 bne .L114
 887:../Dave/Generated/FREERTOS/timers.c ****                 }
 888:../Dave/Generated/FREERTOS/timers.c ****             }
 889:../Dave/Generated/FREERTOS/timers.c ****         }
 890:../Dave/Generated/FREERTOS/timers.c ****     }
 1697              	 .loc 1 890 0
 1698 01b8 3037     	 adds r7,r7,#48
 1699              	.LCFI86:
 1700              	 .cfi_def_cfa_offset 8
 1701 01ba BD46     	 mov sp,r7
 1702              	.LCFI87:
 1703              	 .cfi_def_cfa_register 13
 1704              	 
 1705 01bc 80BD     	 pop {r7,pc}
 1706              	.L117:
 1707 01be 00BF     	 .align 2
 1708              	.L116:
 1709 01c0 00000000 	 .word xTimerQueue
 1710              	 .cfi_endproc
 1711              	.LFE154:
 1713              	 .section .text.prvSwitchTimerLists,"ax",%progbits
 1714              	 .align 2
 1715              	 .thumb
 1716              	 .thumb_func
 1718              	prvSwitchTimerLists:
 1719              	.LFB155:
 891:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 892:../Dave/Generated/FREERTOS/timers.c **** 
 893:../Dave/Generated/FREERTOS/timers.c ****     static void prvSwitchTimerLists( void )
 894:../Dave/Generated/FREERTOS/timers.c ****     {
 1720              	 .loc 1 894 0
 1721              	 .cfi_startproc
 1722              	 
 1723              	 
 1724 0000 80B5     	 push {r7,lr}
 1725              	.LCFI88:
 1726              	 .cfi_def_cfa_offset 8
 1727              	 .cfi_offset 7,-8
 1728              	 .cfi_offset 14,-4
 1729 0002 88B0     	 sub sp,sp,#32
 1730              	.LCFI89:
 1731              	 .cfi_def_cfa_offset 40
 1732 0004 02AF     	 add r7,sp,#8
 1733              	.LCFI90:
 1734              	 .cfi_def_cfa 7,32
 895:../Dave/Generated/FREERTOS/timers.c ****         TickType_t xNextExpireTime, xReloadTime;
 896:../Dave/Generated/FREERTOS/timers.c ****         List_t * pxTemp;
 897:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer;
 898:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xResult;
 899:../Dave/Generated/FREERTOS/timers.c **** 
 900:../Dave/Generated/FREERTOS/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
 901:../Dave/Generated/FREERTOS/timers.c ****          * If there are any timers still referenced from the current timer list
 902:../Dave/Generated/FREERTOS/timers.c ****          * then they must have expired and should be processed before the lists
 903:../Dave/Generated/FREERTOS/timers.c ****          * are switched. */
 904:../Dave/Generated/FREERTOS/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1735              	 .loc 1 904 0
 1736 0006 47E0     	 b .L119
 1737              	.L122:
 905:../Dave/Generated/FREERTOS/timers.c ****         {
 906:../Dave/Generated/FREERTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1738              	 .loc 1 906 0
 1739 0008 2C4B     	 ldr r3,.L123
 1740 000a 1B68     	 ldr r3,[r3]
 1741 000c DB68     	 ldr r3,[r3,#12]
 1742 000e 1B68     	 ldr r3,[r3]
 1743 0010 7B61     	 str r3,[r7,#20]
 907:../Dave/Generated/FREERTOS/timers.c **** 
 908:../Dave/Generated/FREERTOS/timers.c ****             /* Remove the timer from the list. */
 909:../Dave/Generated/FREERTOS/timers.c ****             pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e908
 1744              	 .loc 1 909 0
 1745 0012 2A4B     	 ldr r3,.L123
 1746 0014 1B68     	 ldr r3,[r3]
 1747 0016 DB68     	 ldr r3,[r3,#12]
 1748 0018 DB68     	 ldr r3,[r3,#12]
 1749 001a 3B61     	 str r3,[r7,#16]
 910:../Dave/Generated/FREERTOS/timers.c ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1750              	 .loc 1 910 0
 1751 001c 3B69     	 ldr r3,[r7,#16]
 1752 001e 0433     	 adds r3,r3,#4
 1753 0020 1846     	 mov r0,r3
 1754 0022 FFF7FEFF 	 bl uxListRemove
 911:../Dave/Generated/FREERTOS/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 912:../Dave/Generated/FREERTOS/timers.c **** 
 913:../Dave/Generated/FREERTOS/timers.c ****             /* Execute its callback, then send a command to restart the timer if
 914:../Dave/Generated/FREERTOS/timers.c ****              * it is an auto-reload timer.  It cannot be restarted here as the lists
 915:../Dave/Generated/FREERTOS/timers.c ****              * have not yet been switched. */
 916:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1755              	 .loc 1 916 0
 1756 0026 3B69     	 ldr r3,[r7,#16]
 1757 0028 1B6A     	 ldr r3,[r3,#32]
 1758 002a 3869     	 ldr r0,[r7,#16]
 1759 002c 9847     	 blx r3
 917:../Dave/Generated/FREERTOS/timers.c **** 
 918:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1760              	 .loc 1 918 0
 1761 002e 3B69     	 ldr r3,[r7,#16]
 1762 0030 93F82830 	 ldrb r3,[r3,#40]
 1763 0034 03F00403 	 and r3,r3,#4
 1764 0038 002B     	 cmp r3,#0
 1765 003a 2DD0     	 beq .L119
 919:../Dave/Generated/FREERTOS/timers.c ****             {
 920:../Dave/Generated/FREERTOS/timers.c ****                 /* Calculate the reload value, and if the reload value results in
 921:../Dave/Generated/FREERTOS/timers.c ****                  * the timer going into the same timer list then it has already expired
 922:../Dave/Generated/FREERTOS/timers.c ****                  * and the timer should be re-inserted into the current list so it is
 923:../Dave/Generated/FREERTOS/timers.c ****                  * processed again within this loop.  Otherwise a command should be sent
 924:../Dave/Generated/FREERTOS/timers.c ****                  * to restart the timer to ensure it is only inserted into a list after
 925:../Dave/Generated/FREERTOS/timers.c ****                  * the lists have been swapped. */
 926:../Dave/Generated/FREERTOS/timers.c ****                 xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 1766              	 .loc 1 926 0
 1767 003c 3B69     	 ldr r3,[r7,#16]
 1768 003e 9A69     	 ldr r2,[r3,#24]
 1769 0040 7B69     	 ldr r3,[r7,#20]
 1770 0042 1344     	 add r3,r3,r2
 1771 0044 FB60     	 str r3,[r7,#12]
 927:../Dave/Generated/FREERTOS/timers.c **** 
 928:../Dave/Generated/FREERTOS/timers.c ****                 if( xReloadTime > xNextExpireTime )
 1772              	 .loc 1 928 0
 1773 0046 FA68     	 ldr r2,[r7,#12]
 1774 0048 7B69     	 ldr r3,[r7,#20]
 1775 004a 9A42     	 cmp r2,r3
 1776 004c 0ED9     	 bls .L120
 929:../Dave/Generated/FREERTOS/timers.c ****                 {
 930:../Dave/Generated/FREERTOS/timers.c ****                     listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 1777              	 .loc 1 930 0
 1778 004e 3B69     	 ldr r3,[r7,#16]
 1779 0050 FA68     	 ldr r2,[r7,#12]
 1780 0052 5A60     	 str r2,[r3,#4]
 931:../Dave/Generated/FREERTOS/timers.c ****                     listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1781              	 .loc 1 931 0
 1782 0054 3B69     	 ldr r3,[r7,#16]
 1783 0056 3A69     	 ldr r2,[r7,#16]
 1784 0058 1A61     	 str r2,[r3,#16]
 932:../Dave/Generated/FREERTOS/timers.c ****                     vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1785              	 .loc 1 932 0
 1786 005a 184B     	 ldr r3,.L123
 1787 005c 1A68     	 ldr r2,[r3]
 1788 005e 3B69     	 ldr r3,[r7,#16]
 1789 0060 0433     	 adds r3,r3,#4
 1790 0062 1046     	 mov r0,r2
 1791 0064 1946     	 mov r1,r3
 1792 0066 FFF7FEFF 	 bl vListInsert
 1793 006a 15E0     	 b .L119
 1794              	.L120:
 933:../Dave/Generated/FREERTOS/timers.c ****                 }
 934:../Dave/Generated/FREERTOS/timers.c ****                 else
 935:../Dave/Generated/FREERTOS/timers.c ****                 {
 936:../Dave/Generated/FREERTOS/timers.c ****                     xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpi
 1795              	 .loc 1 936 0
 1796 006c 0023     	 movs r3,#0
 1797 006e 0093     	 str r3,[sp]
 1798 0070 3869     	 ldr r0,[r7,#16]
 1799 0072 0021     	 movs r1,#0
 1800 0074 7A69     	 ldr r2,[r7,#20]
 1801 0076 0023     	 movs r3,#0
 1802 0078 FFF7FEFF 	 bl xTimerGenericCommand
 1803 007c B860     	 str r0,[r7,#8]
 937:../Dave/Generated/FREERTOS/timers.c ****                     configASSERT( xResult );
 1804              	 .loc 1 937 0
 1805 007e BB68     	 ldr r3,[r7,#8]
 1806 0080 002B     	 cmp r3,#0
 1807 0082 09D1     	 bne .L119
 1808              	.LBB66:
 1809              	.LBB67:
 1810              	 .loc 2 197 0 discriminator 1
 1811              	
 1812 0084 4FF0FC03 	 mov r3,#252
 1813 0088 83F31188 	 msr basepri,r3
 1814 008c BFF36F8F 	 isb 
 1815 0090 BFF34F8F 	 dsb 
 1816              	
 1817              	
 1818              	 .thumb
 1819 0094 3B60     	 str r3,[r7]
 1820              	.L121:
 1821              	.LBE67:
 1822              	.LBE66:
 1823              	 .loc 1 937 0 discriminator 1
 1824 0096 FEE7     	 b .L121
 1825              	.L119:
 904:../Dave/Generated/FREERTOS/timers.c ****         {
 1826              	 .loc 1 904 0
 1827 0098 084B     	 ldr r3,.L123
 1828 009a 1B68     	 ldr r3,[r3]
 1829 009c 1B68     	 ldr r3,[r3]
 1830 009e 002B     	 cmp r3,#0
 1831 00a0 B2D1     	 bne .L122
 938:../Dave/Generated/FREERTOS/timers.c ****                     ( void ) xResult;
 939:../Dave/Generated/FREERTOS/timers.c ****                 }
 940:../Dave/Generated/FREERTOS/timers.c ****             }
 941:../Dave/Generated/FREERTOS/timers.c ****             else
 942:../Dave/Generated/FREERTOS/timers.c ****             {
 943:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 944:../Dave/Generated/FREERTOS/timers.c ****             }
 945:../Dave/Generated/FREERTOS/timers.c ****         }
 946:../Dave/Generated/FREERTOS/timers.c **** 
 947:../Dave/Generated/FREERTOS/timers.c ****         pxTemp = pxCurrentTimerList;
 1832              	 .loc 1 947 0
 1833 00a2 064B     	 ldr r3,.L123
 1834 00a4 1B68     	 ldr r3,[r3]
 1835 00a6 7B60     	 str r3,[r7,#4]
 948:../Dave/Generated/FREERTOS/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 1836              	 .loc 1 948 0
 1837 00a8 054B     	 ldr r3,.L123+4
 1838 00aa 1B68     	 ldr r3,[r3]
 1839 00ac 034A     	 ldr r2,.L123
 1840 00ae 1360     	 str r3,[r2]
 949:../Dave/Generated/FREERTOS/timers.c ****         pxOverflowTimerList = pxTemp;
 1841              	 .loc 1 949 0
 1842 00b0 034A     	 ldr r2,.L123+4
 1843 00b2 7B68     	 ldr r3,[r7,#4]
 1844 00b4 1360     	 str r3,[r2]
 950:../Dave/Generated/FREERTOS/timers.c ****     }
 1845              	 .loc 1 950 0
 1846 00b6 1837     	 adds r7,r7,#24
 1847              	.LCFI91:
 1848              	 .cfi_def_cfa_offset 8
 1849 00b8 BD46     	 mov sp,r7
 1850              	.LCFI92:
 1851              	 .cfi_def_cfa_register 13
 1852              	 
 1853 00ba 80BD     	 pop {r7,pc}
 1854              	.L124:
 1855              	 .align 2
 1856              	.L123:
 1857 00bc 00000000 	 .word pxCurrentTimerList
 1858 00c0 00000000 	 .word pxOverflowTimerList
 1859              	 .cfi_endproc
 1860              	.LFE155:
 1862              	 .section .rodata
 1863              	 .align 2
 1864              	.LC1:
 1865 0008 546D7251 	 .ascii "TmrQ\000"
 1865      00
 1866 000d 000000   	 .section .text.prvCheckForValidListAndQueue,"ax",%progbits
 1867              	 .align 2
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	prvCheckForValidListAndQueue:
 1872              	.LFB156:
 951:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
 952:../Dave/Generated/FREERTOS/timers.c **** 
 953:../Dave/Generated/FREERTOS/timers.c ****     static void prvCheckForValidListAndQueue( void )
 954:../Dave/Generated/FREERTOS/timers.c ****     {
 1873              	 .loc 1 954 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877 0000 80B5     	 push {r7,lr}
 1878              	.LCFI93:
 1879              	 .cfi_def_cfa_offset 8
 1880              	 .cfi_offset 7,-8
 1881              	 .cfi_offset 14,-4
 1882 0002 00AF     	 add r7,sp,#0
 1883              	.LCFI94:
 1884              	 .cfi_def_cfa_register 7
 955:../Dave/Generated/FREERTOS/timers.c ****         /* Check that the list from which active timers are referenced, and the
 956:../Dave/Generated/FREERTOS/timers.c ****          * queue used to communicate with the timer service, have been
 957:../Dave/Generated/FREERTOS/timers.c ****          * initialised. */
 958:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 1885              	 .loc 1 958 0
 1886 0004 FFF7FEFF 	 bl vPortEnterCritical
 959:../Dave/Generated/FREERTOS/timers.c ****         {
 960:../Dave/Generated/FREERTOS/timers.c ****             if( xTimerQueue == NULL )
 1887              	 .loc 1 960 0
 1888 0008 124B     	 ldr r3,.L127
 1889 000a 1B68     	 ldr r3,[r3]
 1890 000c 002B     	 cmp r3,#0
 1891 000e 1DD1     	 bne .L126
 961:../Dave/Generated/FREERTOS/timers.c ****             {
 962:../Dave/Generated/FREERTOS/timers.c ****                 vListInitialise( &xActiveTimerList1 );
 1892              	 .loc 1 962 0
 1893 0010 1148     	 ldr r0,.L127+4
 1894 0012 FFF7FEFF 	 bl vListInitialise
 963:../Dave/Generated/FREERTOS/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 1895              	 .loc 1 963 0
 1896 0016 1148     	 ldr r0,.L127+8
 1897 0018 FFF7FEFF 	 bl vListInitialise
 964:../Dave/Generated/FREERTOS/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 1898              	 .loc 1 964 0
 1899 001c 104B     	 ldr r3,.L127+12
 1900 001e 0E4A     	 ldr r2,.L127+4
 1901 0020 1A60     	 str r2,[r3]
 965:../Dave/Generated/FREERTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 1902              	 .loc 1 965 0
 1903 0022 104B     	 ldr r3,.L127+16
 1904 0024 0D4A     	 ldr r2,.L127+8
 1905 0026 1A60     	 str r2,[r3]
 966:../Dave/Generated/FREERTOS/timers.c **** 
 967:../Dave/Generated/FREERTOS/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 968:../Dave/Generated/FREERTOS/timers.c ****                     {
 969:../Dave/Generated/FREERTOS/timers.c ****                         /* The timer queue is allocated statically in case
 970:../Dave/Generated/FREERTOS/timers.c ****                          * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 971:../Dave/Generated/FREERTOS/timers.c ****                         PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                    
 972:../Dave/Generated/FREERTOS/timers.c ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 973:../Dave/Generated/FREERTOS/timers.c **** 
 974:../Dave/Generated/FREERTOS/timers.c ****                         xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH,
 975:../Dave/Generated/FREERTOS/timers.c ****                     }
 976:../Dave/Generated/FREERTOS/timers.c ****                 #else
 977:../Dave/Generated/FREERTOS/timers.c ****                     {
 978:../Dave/Generated/FREERTOS/timers.c ****                         xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeo
 1906              	 .loc 1 978 0
 1907 0028 0520     	 movs r0,#5
 1908 002a 1021     	 movs r1,#16
 1909 002c 0022     	 movs r2,#0
 1910 002e FFF7FEFF 	 bl xQueueGenericCreate
 1911 0032 0246     	 mov r2,r0
 1912 0034 074B     	 ldr r3,.L127
 1913 0036 1A60     	 str r2,[r3]
 979:../Dave/Generated/FREERTOS/timers.c ****                     }
 980:../Dave/Generated/FREERTOS/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 981:../Dave/Generated/FREERTOS/timers.c **** 
 982:../Dave/Generated/FREERTOS/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 983:../Dave/Generated/FREERTOS/timers.c ****                     {
 984:../Dave/Generated/FREERTOS/timers.c ****                         if( xTimerQueue != NULL )
 1914              	 .loc 1 984 0
 1915 0038 064B     	 ldr r3,.L127
 1916 003a 1B68     	 ldr r3,[r3]
 1917 003c 002B     	 cmp r3,#0
 1918 003e 05D0     	 beq .L126
 985:../Dave/Generated/FREERTOS/timers.c ****                         {
 986:../Dave/Generated/FREERTOS/timers.c ****                             vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 1919              	 .loc 1 986 0
 1920 0040 044B     	 ldr r3,.L127
 1921 0042 1B68     	 ldr r3,[r3]
 1922 0044 1846     	 mov r0,r3
 1923 0046 0849     	 ldr r1,.L127+20
 1924 0048 FFF7FEFF 	 bl vQueueAddToRegistry
 1925              	.L126:
 987:../Dave/Generated/FREERTOS/timers.c ****                         }
 988:../Dave/Generated/FREERTOS/timers.c ****                         else
 989:../Dave/Generated/FREERTOS/timers.c ****                         {
 990:../Dave/Generated/FREERTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 991:../Dave/Generated/FREERTOS/timers.c ****                         }
 992:../Dave/Generated/FREERTOS/timers.c ****                     }
 993:../Dave/Generated/FREERTOS/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 994:../Dave/Generated/FREERTOS/timers.c ****             }
 995:../Dave/Generated/FREERTOS/timers.c ****             else
 996:../Dave/Generated/FREERTOS/timers.c ****             {
 997:../Dave/Generated/FREERTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 998:../Dave/Generated/FREERTOS/timers.c ****             }
 999:../Dave/Generated/FREERTOS/timers.c ****         }
1000:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 1926              	 .loc 1 1000 0
 1927 004c FFF7FEFF 	 bl vPortExitCritical
1001:../Dave/Generated/FREERTOS/timers.c ****     }
 1928              	 .loc 1 1001 0
 1929 0050 80BD     	 pop {r7,pc}
 1930              	.L128:
 1931 0052 00BF     	 .align 2
 1932              	.L127:
 1933 0054 00000000 	 .word xTimerQueue
 1934 0058 00000000 	 .word xActiveTimerList1
 1935 005c 00000000 	 .word xActiveTimerList2
 1936 0060 00000000 	 .word pxCurrentTimerList
 1937 0064 00000000 	 .word pxOverflowTimerList
 1938 0068 08000000 	 .word .LC1
 1939              	 .cfi_endproc
 1940              	.LFE156:
 1942              	 .section .text.xTimerIsTimerActive,"ax",%progbits
 1943              	 .align 2
 1944              	 .global xTimerIsTimerActive
 1945              	 .thumb
 1946              	 .thumb_func
 1948              	xTimerIsTimerActive:
 1949              	.LFB157:
1002:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1003:../Dave/Generated/FREERTOS/timers.c **** 
1004:../Dave/Generated/FREERTOS/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
1005:../Dave/Generated/FREERTOS/timers.c ****     {
 1950              	 .loc 1 1005 0
 1951              	 .cfi_startproc
 1952              	 
 1953              	 
 1954 0000 80B5     	 push {r7,lr}
 1955              	.LCFI95:
 1956              	 .cfi_def_cfa_offset 8
 1957              	 .cfi_offset 7,-8
 1958              	 .cfi_offset 14,-4
 1959 0002 86B0     	 sub sp,sp,#24
 1960              	.LCFI96:
 1961              	 .cfi_def_cfa_offset 32
 1962 0004 00AF     	 add r7,sp,#0
 1963              	.LCFI97:
 1964              	 .cfi_def_cfa_register 7
 1965 0006 7860     	 str r0,[r7,#4]
1006:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xReturn;
1007:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1966              	 .loc 1 1007 0
 1967 0008 7B68     	 ldr r3,[r7,#4]
 1968 000a 3B61     	 str r3,[r7,#16]
1008:../Dave/Generated/FREERTOS/timers.c **** 
1009:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 1969              	 .loc 1 1009 0
 1970 000c 7B68     	 ldr r3,[r7,#4]
 1971 000e 002B     	 cmp r3,#0
 1972 0010 09D1     	 bne .L130
 1973              	.LBB68:
 1974              	.LBB69:
 1975              	 .loc 2 197 0 discriminator 1
 1976              	
 1977 0012 4FF0FC03 	 mov r3,#252
 1978 0016 83F31188 	 msr basepri,r3
 1979 001a BFF36F8F 	 isb 
 1980 001e BFF34F8F 	 dsb 
 1981              	
 1982              	
 1983              	 .thumb
 1984 0022 FB60     	 str r3,[r7,#12]
 1985              	.L131:
 1986              	.LBE69:
 1987              	.LBE68:
 1988              	 .loc 1 1009 0 discriminator 1
 1989 0024 FEE7     	 b .L131
 1990              	.L130:
1010:../Dave/Generated/FREERTOS/timers.c **** 
1011:../Dave/Generated/FREERTOS/timers.c ****         /* Is the timer in the list of active timers? */
1012:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 1991              	 .loc 1 1012 0
 1992 0026 FFF7FEFF 	 bl vPortEnterCritical
1013:../Dave/Generated/FREERTOS/timers.c ****         {
1014:../Dave/Generated/FREERTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1993              	 .loc 1 1014 0
 1994 002a 3B69     	 ldr r3,[r7,#16]
 1995 002c 93F82830 	 ldrb r3,[r3,#40]
 1996 0030 03F00103 	 and r3,r3,#1
 1997 0034 002B     	 cmp r3,#0
 1998 0036 02D1     	 bne .L132
1015:../Dave/Generated/FREERTOS/timers.c ****             {
1016:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = pdFALSE;
 1999              	 .loc 1 1016 0
 2000 0038 0023     	 movs r3,#0
 2001 003a 7B61     	 str r3,[r7,#20]
 2002 003c 01E0     	 b .L133
 2003              	.L132:
1017:../Dave/Generated/FREERTOS/timers.c ****             }
1018:../Dave/Generated/FREERTOS/timers.c ****             else
1019:../Dave/Generated/FREERTOS/timers.c ****             {
1020:../Dave/Generated/FREERTOS/timers.c ****                 xReturn = pdTRUE;
 2004              	 .loc 1 1020 0
 2005 003e 0123     	 movs r3,#1
 2006 0040 7B61     	 str r3,[r7,#20]
 2007              	.L133:
1021:../Dave/Generated/FREERTOS/timers.c ****             }
1022:../Dave/Generated/FREERTOS/timers.c ****         }
1023:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2008              	 .loc 1 1023 0
 2009 0042 FFF7FEFF 	 bl vPortExitCritical
1024:../Dave/Generated/FREERTOS/timers.c **** 
1025:../Dave/Generated/FREERTOS/timers.c ****         return xReturn;
 2010              	 .loc 1 1025 0
 2011 0046 7B69     	 ldr r3,[r7,#20]
1026:../Dave/Generated/FREERTOS/timers.c ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 2012              	 .loc 1 1026 0
 2013 0048 1846     	 mov r0,r3
 2014 004a 1837     	 adds r7,r7,#24
 2015              	.LCFI98:
 2016              	 .cfi_def_cfa_offset 8
 2017 004c BD46     	 mov sp,r7
 2018              	.LCFI99:
 2019              	 .cfi_def_cfa_register 13
 2020              	 
 2021 004e 80BD     	 pop {r7,pc}
 2022              	 .cfi_endproc
 2023              	.LFE157:
 2025              	 .section .text.pvTimerGetTimerID,"ax",%progbits
 2026              	 .align 2
 2027              	 .global pvTimerGetTimerID
 2028              	 .thumb
 2029              	 .thumb_func
 2031              	pvTimerGetTimerID:
 2032              	.LFB158:
1027:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1028:../Dave/Generated/FREERTOS/timers.c **** 
1029:../Dave/Generated/FREERTOS/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1030:../Dave/Generated/FREERTOS/timers.c ****     {
 2033              	 .loc 1 1030 0
 2034              	 .cfi_startproc
 2035              	 
 2036              	 
 2037 0000 80B5     	 push {r7,lr}
 2038              	.LCFI100:
 2039              	 .cfi_def_cfa_offset 8
 2040              	 .cfi_offset 7,-8
 2041              	 .cfi_offset 14,-4
 2042 0002 86B0     	 sub sp,sp,#24
 2043              	.LCFI101:
 2044              	 .cfi_def_cfa_offset 32
 2045 0004 00AF     	 add r7,sp,#0
 2046              	.LCFI102:
 2047              	 .cfi_def_cfa_register 7
 2048 0006 7860     	 str r0,[r7,#4]
1031:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 2049              	 .loc 1 1031 0
 2050 0008 7B68     	 ldr r3,[r7,#4]
 2051 000a 7B61     	 str r3,[r7,#20]
1032:../Dave/Generated/FREERTOS/timers.c ****         void * pvReturn;
1033:../Dave/Generated/FREERTOS/timers.c **** 
1034:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 2052              	 .loc 1 1034 0
 2053 000c 7B68     	 ldr r3,[r7,#4]
 2054 000e 002B     	 cmp r3,#0
 2055 0010 09D1     	 bne .L136
 2056              	.LBB70:
 2057              	.LBB71:
 2058              	 .loc 2 197 0 discriminator 1
 2059              	
 2060 0012 4FF0FC03 	 mov r3,#252
 2061 0016 83F31188 	 msr basepri,r3
 2062 001a BFF36F8F 	 isb 
 2063 001e BFF34F8F 	 dsb 
 2064              	
 2065              	
 2066              	 .thumb
 2067 0022 FB60     	 str r3,[r7,#12]
 2068              	.L137:
 2069              	.LBE71:
 2070              	.LBE70:
 2071              	 .loc 1 1034 0 discriminator 1
 2072 0024 FEE7     	 b .L137
 2073              	.L136:
1035:../Dave/Generated/FREERTOS/timers.c **** 
1036:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2074              	 .loc 1 1036 0
 2075 0026 FFF7FEFF 	 bl vPortEnterCritical
1037:../Dave/Generated/FREERTOS/timers.c ****         {
1038:../Dave/Generated/FREERTOS/timers.c ****             pvReturn = pxTimer->pvTimerID;
 2076              	 .loc 1 1038 0
 2077 002a 7B69     	 ldr r3,[r7,#20]
 2078 002c DB69     	 ldr r3,[r3,#28]
 2079 002e 3B61     	 str r3,[r7,#16]
1039:../Dave/Generated/FREERTOS/timers.c ****         }
1040:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2080              	 .loc 1 1040 0
 2081 0030 FFF7FEFF 	 bl vPortExitCritical
1041:../Dave/Generated/FREERTOS/timers.c **** 
1042:../Dave/Generated/FREERTOS/timers.c ****         return pvReturn;
 2082              	 .loc 1 1042 0
 2083 0034 3B69     	 ldr r3,[r7,#16]
1043:../Dave/Generated/FREERTOS/timers.c ****     }
 2084              	 .loc 1 1043 0
 2085 0036 1846     	 mov r0,r3
 2086 0038 1837     	 adds r7,r7,#24
 2087              	.LCFI103:
 2088              	 .cfi_def_cfa_offset 8
 2089 003a BD46     	 mov sp,r7
 2090              	.LCFI104:
 2091              	 .cfi_def_cfa_register 13
 2092              	 
 2093 003c 80BD     	 pop {r7,pc}
 2094              	 .cfi_endproc
 2095              	.LFE158:
 2097 003e 00BF     	 .section .text.vTimerSetTimerID,"ax",%progbits
 2098              	 .align 2
 2099              	 .global vTimerSetTimerID
 2100              	 .thumb
 2101              	 .thumb_func
 2103              	vTimerSetTimerID:
 2104              	.LFB159:
1044:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1045:../Dave/Generated/FREERTOS/timers.c **** 
1046:../Dave/Generated/FREERTOS/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1047:../Dave/Generated/FREERTOS/timers.c ****                            void * pvNewID )
1048:../Dave/Generated/FREERTOS/timers.c ****     {
 2105              	 .loc 1 1048 0
 2106              	 .cfi_startproc
 2107              	 
 2108              	 
 2109 0000 80B5     	 push {r7,lr}
 2110              	.LCFI105:
 2111              	 .cfi_def_cfa_offset 8
 2112              	 .cfi_offset 7,-8
 2113              	 .cfi_offset 14,-4
 2114 0002 84B0     	 sub sp,sp,#16
 2115              	.LCFI106:
 2116              	 .cfi_def_cfa_offset 24
 2117 0004 00AF     	 add r7,sp,#0
 2118              	.LCFI107:
 2119              	 .cfi_def_cfa_register 7
 2120 0006 7860     	 str r0,[r7,#4]
 2121 0008 3960     	 str r1,[r7]
1049:../Dave/Generated/FREERTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 2122              	 .loc 1 1049 0
 2123 000a 7B68     	 ldr r3,[r7,#4]
 2124 000c FB60     	 str r3,[r7,#12]
1050:../Dave/Generated/FREERTOS/timers.c **** 
1051:../Dave/Generated/FREERTOS/timers.c ****         configASSERT( xTimer );
 2125              	 .loc 1 1051 0
 2126 000e 7B68     	 ldr r3,[r7,#4]
 2127 0010 002B     	 cmp r3,#0
 2128 0012 09D1     	 bne .L140
 2129              	.LBB72:
 2130              	.LBB73:
 2131              	 .loc 2 197 0 discriminator 1
 2132              	
 2133 0014 4FF0FC03 	 mov r3,#252
 2134 0018 83F31188 	 msr basepri,r3
 2135 001c BFF36F8F 	 isb 
 2136 0020 BFF34F8F 	 dsb 
 2137              	
 2138              	
 2139              	 .thumb
 2140 0024 BB60     	 str r3,[r7,#8]
 2141              	.L141:
 2142              	.LBE73:
 2143              	.LBE72:
 2144              	 .loc 1 1051 0 discriminator 1
 2145 0026 FEE7     	 b .L141
 2146              	.L140:
1052:../Dave/Generated/FREERTOS/timers.c **** 
1053:../Dave/Generated/FREERTOS/timers.c ****         taskENTER_CRITICAL();
 2147              	 .loc 1 1053 0
 2148 0028 FFF7FEFF 	 bl vPortEnterCritical
1054:../Dave/Generated/FREERTOS/timers.c ****         {
1055:../Dave/Generated/FREERTOS/timers.c ****             pxTimer->pvTimerID = pvNewID;
 2149              	 .loc 1 1055 0
 2150 002c FB68     	 ldr r3,[r7,#12]
 2151 002e 3A68     	 ldr r2,[r7]
 2152 0030 DA61     	 str r2,[r3,#28]
1056:../Dave/Generated/FREERTOS/timers.c ****         }
1057:../Dave/Generated/FREERTOS/timers.c ****         taskEXIT_CRITICAL();
 2153              	 .loc 1 1057 0
 2154 0032 FFF7FEFF 	 bl vPortExitCritical
1058:../Dave/Generated/FREERTOS/timers.c ****     }
 2155              	 .loc 1 1058 0
 2156 0036 1037     	 adds r7,r7,#16
 2157              	.LCFI108:
 2158              	 .cfi_def_cfa_offset 8
 2159 0038 BD46     	 mov sp,r7
 2160              	.LCFI109:
 2161              	 .cfi_def_cfa_register 13
 2162              	 
 2163 003a 80BD     	 pop {r7,pc}
 2164              	 .cfi_endproc
 2165              	.LFE159:
 2167              	 .section .text.xTimerPendFunctionCallFromISR,"ax",%progbits
 2168              	 .align 2
 2169              	 .global xTimerPendFunctionCallFromISR
 2170              	 .thumb
 2171              	 .thumb_func
 2173              	xTimerPendFunctionCallFromISR:
 2174              	.LFB160:
1059:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1060:../Dave/Generated/FREERTOS/timers.c **** 
1061:../Dave/Generated/FREERTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1062:../Dave/Generated/FREERTOS/timers.c **** 
1063:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
1064:../Dave/Generated/FREERTOS/timers.c ****                                                   void * pvParameter1,
1065:../Dave/Generated/FREERTOS/timers.c ****                                                   uint32_t ulParameter2,
1066:../Dave/Generated/FREERTOS/timers.c ****                                                   BaseType_t * pxHigherPriorityTaskWoken )
1067:../Dave/Generated/FREERTOS/timers.c ****         {
 2175              	 .loc 1 1067 0
 2176              	 .cfi_startproc
 2177              	 
 2178              	 
 2179 0000 80B5     	 push {r7,lr}
 2180              	.LCFI110:
 2181              	 .cfi_def_cfa_offset 8
 2182              	 .cfi_offset 7,-8
 2183              	 .cfi_offset 14,-4
 2184 0002 8AB0     	 sub sp,sp,#40
 2185              	.LCFI111:
 2186              	 .cfi_def_cfa_offset 48
 2187 0004 00AF     	 add r7,sp,#0
 2188              	.LCFI112:
 2189              	 .cfi_def_cfa_register 7
 2190 0006 F860     	 str r0,[r7,#12]
 2191 0008 B960     	 str r1,[r7,#8]
 2192 000a 7A60     	 str r2,[r7,#4]
 2193 000c 3B60     	 str r3,[r7]
1068:../Dave/Generated/FREERTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1069:../Dave/Generated/FREERTOS/timers.c ****             BaseType_t xReturn;
1070:../Dave/Generated/FREERTOS/timers.c **** 
1071:../Dave/Generated/FREERTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1072:../Dave/Generated/FREERTOS/timers.c ****              * daemon task. */
1073:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 2194              	 .loc 1 1073 0
 2195 000e 6FF00103 	 mvn r3,#1
 2196 0012 7B61     	 str r3,[r7,#20]
1074:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2197              	 .loc 1 1074 0
 2198 0014 FB68     	 ldr r3,[r7,#12]
 2199 0016 BB61     	 str r3,[r7,#24]
1075:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2200              	 .loc 1 1075 0
 2201 0018 BB68     	 ldr r3,[r7,#8]
 2202 001a FB61     	 str r3,[r7,#28]
1076:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2203              	 .loc 1 1076 0
 2204 001c 7B68     	 ldr r3,[r7,#4]
 2205 001e 3B62     	 str r3,[r7,#32]
1077:../Dave/Generated/FREERTOS/timers.c **** 
1078:../Dave/Generated/FREERTOS/timers.c ****             xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 2206              	 .loc 1 1078 0
 2207 0020 074B     	 ldr r3,.L144
 2208 0022 1A68     	 ldr r2,[r3]
 2209 0024 07F11403 	 add r3,r7,#20
 2210 0028 1046     	 mov r0,r2
 2211 002a 1946     	 mov r1,r3
 2212 002c 3A68     	 ldr r2,[r7]
 2213 002e 0023     	 movs r3,#0
 2214 0030 FFF7FEFF 	 bl xQueueGenericSendFromISR
 2215 0034 7862     	 str r0,[r7,#36]
1079:../Dave/Generated/FREERTOS/timers.c **** 
1080:../Dave/Generated/FREERTOS/timers.c ****             tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1081:../Dave/Generated/FREERTOS/timers.c **** 
1082:../Dave/Generated/FREERTOS/timers.c ****             return xReturn;
 2216              	 .loc 1 1082 0
 2217 0036 7B6A     	 ldr r3,[r7,#36]
1083:../Dave/Generated/FREERTOS/timers.c ****         }
 2218              	 .loc 1 1083 0
 2219 0038 1846     	 mov r0,r3
 2220 003a 2837     	 adds r7,r7,#40
 2221              	.LCFI113:
 2222              	 .cfi_def_cfa_offset 8
 2223 003c BD46     	 mov sp,r7
 2224              	.LCFI114:
 2225              	 .cfi_def_cfa_register 13
 2226              	 
 2227 003e 80BD     	 pop {r7,pc}
 2228              	.L145:
 2229              	 .align 2
 2230              	.L144:
 2231 0040 00000000 	 .word xTimerQueue
 2232              	 .cfi_endproc
 2233              	.LFE160:
 2235              	 .section .text.xTimerPendFunctionCall,"ax",%progbits
 2236              	 .align 2
 2237              	 .global xTimerPendFunctionCall
 2238              	 .thumb
 2239              	 .thumb_func
 2241              	xTimerPendFunctionCall:
 2242              	.LFB161:
1084:../Dave/Generated/FREERTOS/timers.c **** 
1085:../Dave/Generated/FREERTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1086:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1087:../Dave/Generated/FREERTOS/timers.c **** 
1088:../Dave/Generated/FREERTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1089:../Dave/Generated/FREERTOS/timers.c **** 
1090:../Dave/Generated/FREERTOS/timers.c ****         BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1091:../Dave/Generated/FREERTOS/timers.c ****                                            void * pvParameter1,
1092:../Dave/Generated/FREERTOS/timers.c ****                                            uint32_t ulParameter2,
1093:../Dave/Generated/FREERTOS/timers.c ****                                            TickType_t xTicksToWait )
1094:../Dave/Generated/FREERTOS/timers.c ****         {
 2243              	 .loc 1 1094 0
 2244              	 .cfi_startproc
 2245              	 
 2246              	 
 2247 0000 80B5     	 push {r7,lr}
 2248              	.LCFI115:
 2249              	 .cfi_def_cfa_offset 8
 2250              	 .cfi_offset 7,-8
 2251              	 .cfi_offset 14,-4
 2252 0002 8AB0     	 sub sp,sp,#40
 2253              	.LCFI116:
 2254              	 .cfi_def_cfa_offset 48
 2255 0004 00AF     	 add r7,sp,#0
 2256              	.LCFI117:
 2257              	 .cfi_def_cfa_register 7
 2258 0006 F860     	 str r0,[r7,#12]
 2259 0008 B960     	 str r1,[r7,#8]
 2260 000a 7A60     	 str r2,[r7,#4]
 2261 000c 3B60     	 str r3,[r7]
1095:../Dave/Generated/FREERTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1096:../Dave/Generated/FREERTOS/timers.c ****             BaseType_t xReturn;
1097:../Dave/Generated/FREERTOS/timers.c **** 
1098:../Dave/Generated/FREERTOS/timers.c ****             /* This function can only be called after a timer has been created or
1099:../Dave/Generated/FREERTOS/timers.c ****              * after the scheduler has been started because, until then, the timer
1100:../Dave/Generated/FREERTOS/timers.c ****              * queue does not exist. */
1101:../Dave/Generated/FREERTOS/timers.c ****             configASSERT( xTimerQueue );
 2262              	 .loc 1 1101 0
 2263 000e 134B     	 ldr r3,.L150
 2264 0010 1B68     	 ldr r3,[r3]
 2265 0012 002B     	 cmp r3,#0
 2266 0014 09D1     	 bne .L147
 2267              	.LBB74:
 2268              	.LBB75:
 2269              	 .loc 2 197 0 discriminator 1
 2270              	
 2271 0016 4FF0FC03 	 mov r3,#252
 2272 001a 83F31188 	 msr basepri,r3
 2273 001e BFF36F8F 	 isb 
 2274 0022 BFF34F8F 	 dsb 
 2275              	
 2276              	
 2277              	 .thumb
 2278 0026 3B62     	 str r3,[r7,#32]
 2279              	.L148:
 2280              	.LBE75:
 2281              	.LBE74:
 2282              	 .loc 1 1101 0 discriminator 1
 2283 0028 FEE7     	 b .L148
 2284              	.L147:
1102:../Dave/Generated/FREERTOS/timers.c **** 
1103:../Dave/Generated/FREERTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1104:../Dave/Generated/FREERTOS/timers.c ****              * daemon task. */
1105:../Dave/Generated/FREERTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 2285              	 .loc 1 1105 0
 2286 002a 4FF0FF33 	 mov r3,#-1
 2287 002e 3B61     	 str r3,[r7,#16]
1106:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 2288              	 .loc 1 1106 0
 2289 0030 FB68     	 ldr r3,[r7,#12]
 2290 0032 7B61     	 str r3,[r7,#20]
1107:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 2291              	 .loc 1 1107 0
 2292 0034 BB68     	 ldr r3,[r7,#8]
 2293 0036 BB61     	 str r3,[r7,#24]
1108:../Dave/Generated/FREERTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 2294              	 .loc 1 1108 0
 2295 0038 7B68     	 ldr r3,[r7,#4]
 2296 003a FB61     	 str r3,[r7,#28]
1109:../Dave/Generated/FREERTOS/timers.c **** 
1110:../Dave/Generated/FREERTOS/timers.c ****             xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 2297              	 .loc 1 1110 0
 2298 003c 074B     	 ldr r3,.L150
 2299 003e 1A68     	 ldr r2,[r3]
 2300 0040 07F11003 	 add r3,r7,#16
 2301 0044 1046     	 mov r0,r2
 2302 0046 1946     	 mov r1,r3
 2303 0048 3A68     	 ldr r2,[r7]
 2304 004a 0023     	 movs r3,#0
 2305 004c FFF7FEFF 	 bl xQueueGenericSend
 2306 0050 7862     	 str r0,[r7,#36]
1111:../Dave/Generated/FREERTOS/timers.c **** 
1112:../Dave/Generated/FREERTOS/timers.c ****             tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1113:../Dave/Generated/FREERTOS/timers.c **** 
1114:../Dave/Generated/FREERTOS/timers.c ****             return xReturn;
 2307              	 .loc 1 1114 0
 2308 0052 7B6A     	 ldr r3,[r7,#36]
1115:../Dave/Generated/FREERTOS/timers.c ****         }
 2309              	 .loc 1 1115 0
 2310 0054 1846     	 mov r0,r3
 2311 0056 2837     	 adds r7,r7,#40
 2312              	.LCFI118:
 2313              	 .cfi_def_cfa_offset 8
 2314 0058 BD46     	 mov sp,r7
 2315              	.LCFI119:
 2316              	 .cfi_def_cfa_register 13
 2317              	 
 2318 005a 80BD     	 pop {r7,pc}
 2319              	.L151:
 2320              	 .align 2
 2321              	.L150:
 2322 005c 00000000 	 .word xTimerQueue
 2323              	 .cfi_endproc
 2324              	.LFE161:
 2326              	 .section .text.uxTimerGetTimerNumber,"ax",%progbits
 2327              	 .align 2
 2328              	 .global uxTimerGetTimerNumber
 2329              	 .thumb
 2330              	 .thumb_func
 2332              	uxTimerGetTimerNumber:
 2333              	.LFB162:
1116:../Dave/Generated/FREERTOS/timers.c **** 
1117:../Dave/Generated/FREERTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1118:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1119:../Dave/Generated/FREERTOS/timers.c **** 
1120:../Dave/Generated/FREERTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1121:../Dave/Generated/FREERTOS/timers.c **** 
1122:../Dave/Generated/FREERTOS/timers.c ****         UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1123:../Dave/Generated/FREERTOS/timers.c ****         {
 2334              	 .loc 1 1123 0
 2335              	 .cfi_startproc
 2336              	 
 2337              	 
 2338              	 
 2339 0000 80B4     	 push {r7}
 2340              	.LCFI120:
 2341              	 .cfi_def_cfa_offset 4
 2342              	 .cfi_offset 7,-4
 2343 0002 83B0     	 sub sp,sp,#12
 2344              	.LCFI121:
 2345              	 .cfi_def_cfa_offset 16
 2346 0004 00AF     	 add r7,sp,#0
 2347              	.LCFI122:
 2348              	 .cfi_def_cfa_register 7
 2349 0006 7860     	 str r0,[r7,#4]
1124:../Dave/Generated/FREERTOS/timers.c ****             return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 2350              	 .loc 1 1124 0
 2351 0008 7B68     	 ldr r3,[r7,#4]
 2352 000a 5B6A     	 ldr r3,[r3,#36]
1125:../Dave/Generated/FREERTOS/timers.c ****         }
 2353              	 .loc 1 1125 0
 2354 000c 1846     	 mov r0,r3
 2355 000e 0C37     	 adds r7,r7,#12
 2356              	.LCFI123:
 2357              	 .cfi_def_cfa_offset 4
 2358 0010 BD46     	 mov sp,r7
 2359              	.LCFI124:
 2360              	 .cfi_def_cfa_register 13
 2361              	 
 2362 0012 5DF8047B 	 ldr r7,[sp],#4
 2363              	.LCFI125:
 2364              	 .cfi_restore 7
 2365              	 .cfi_def_cfa_offset 0
 2366 0016 7047     	 bx lr
 2367              	 .cfi_endproc
 2368              	.LFE162:
 2370              	 .section .text.vTimerSetTimerNumber,"ax",%progbits
 2371              	 .align 2
 2372              	 .global vTimerSetTimerNumber
 2373              	 .thumb
 2374              	 .thumb_func
 2376              	vTimerSetTimerNumber:
 2377              	.LFB163:
1126:../Dave/Generated/FREERTOS/timers.c **** 
1127:../Dave/Generated/FREERTOS/timers.c ****     #endif /* configUSE_TRACE_FACILITY */
1128:../Dave/Generated/FREERTOS/timers.c **** /*-----------------------------------------------------------*/
1129:../Dave/Generated/FREERTOS/timers.c **** 
1130:../Dave/Generated/FREERTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1131:../Dave/Generated/FREERTOS/timers.c **** 
1132:../Dave/Generated/FREERTOS/timers.c ****         void vTimerSetTimerNumber( TimerHandle_t xTimer,
1133:../Dave/Generated/FREERTOS/timers.c ****                                    UBaseType_t uxTimerNumber )
1134:../Dave/Generated/FREERTOS/timers.c ****         {
 2378              	 .loc 1 1134 0
 2379              	 .cfi_startproc
 2380              	 
 2381              	 
 2382              	 
 2383 0000 80B4     	 push {r7}
 2384              	.LCFI126:
 2385              	 .cfi_def_cfa_offset 4
 2386              	 .cfi_offset 7,-4
 2387 0002 83B0     	 sub sp,sp,#12
 2388              	.LCFI127:
 2389              	 .cfi_def_cfa_offset 16
 2390 0004 00AF     	 add r7,sp,#0
 2391              	.LCFI128:
 2392              	 .cfi_def_cfa_register 7
 2393 0006 7860     	 str r0,[r7,#4]
 2394 0008 3960     	 str r1,[r7]
1135:../Dave/Generated/FREERTOS/timers.c ****             ( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2395              	 .loc 1 1135 0
 2396 000a 7B68     	 ldr r3,[r7,#4]
 2397 000c 3A68     	 ldr r2,[r7]
 2398 000e 5A62     	 str r2,[r3,#36]
1136:../Dave/Generated/FREERTOS/timers.c ****         }
 2399              	 .loc 1 1136 0
 2400 0010 0C37     	 adds r7,r7,#12
 2401              	.LCFI129:
 2402              	 .cfi_def_cfa_offset 4
 2403 0012 BD46     	 mov sp,r7
 2404              	.LCFI130:
 2405              	 .cfi_def_cfa_register 13
 2406              	 
 2407 0014 5DF8047B 	 ldr r7,[sp],#4
 2408              	.LCFI131:
 2409              	 .cfi_restore 7
 2410              	 .cfi_def_cfa_offset 0
 2411 0018 7047     	 bx lr
 2412              	 .cfi_endproc
 2413              	.LFE163:
 2415 001a 00BF     	 .section .bss.xLastTime.7733,"aw",%nobits
 2416              	 .align 2
 2419              	xLastTime.7733:
 2420 0000 00000000 	 .space 4
 2421              	 .text
 2422              	.Letext0:
 2423              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2424              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2425              	 .file 5 "../Dave/Generated/FREERTOS/list.h"
 2426              	 .file 6 "../Dave/Generated/FREERTOS/task.h"
 2427              	 .file 7 "../Dave/Generated/FREERTOS/queue.h"
 2428              	 .file 8 "../Dave/Generated/FREERTOS/timers.h"
 2429              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Libraries/CMSIS/Include/cmsis_gcc.h"
 2430              	 .file 10 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/06_XMC/ADC_RTOS/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
    {standard input}:20     .bss.xActiveTimerList1:00000000 $d
    {standard input}:23     .bss.xActiveTimerList1:00000000 xActiveTimerList1
    {standard input}:26     .bss.xActiveTimerList2:00000000 $d
    {standard input}:29     .bss.xActiveTimerList2:00000000 xActiveTimerList2
    {standard input}:32     .bss.pxCurrentTimerList:00000000 $d
    {standard input}:35     .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
    {standard input}:38     .bss.pxOverflowTimerList:00000000 $d
    {standard input}:41     .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
    {standard input}:44     .bss.xTimerQueue:00000000 $d
    {standard input}:47     .bss.xTimerQueue:00000000 xTimerQueue
    {standard input}:50     .bss.xTimerTaskHandle:00000000 $d
    {standard input}:53     .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
    {standard input}:56     .rodata:00000000 $d
    {standard input}:60     .text.xTimerCreateTimerTask:00000000 $t
    {standard input}:65     .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
    {standard input}:1871   .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
    {standard input}:143    .text.xTimerCreateTimerTask:00000054 $d
    {standard input}:1012   .text.prvTimerTask:00000000 prvTimerTask
    {standard input}:151    .text.xTimerCreate:00000000 $t
    {standard input}:156    .text.xTimerCreate:00000000 xTimerCreate
    {standard input}:220    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
    {standard input}:216    .text.prvInitialiseNewTimer:00000000 $t
    {standard input}:315    .text.xTimerGenericCommand:00000000 $t
    {standard input}:320    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
    {standard input}:439    .text.xTimerGenericCommand:000000a0 $d
    {standard input}:444    .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
    {standard input}:449    .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
    {standard input}:509    .text.xTimerGetTimerDaemonTaskHandle:00000034 $d
    {standard input}:514    .text.xTimerGetPeriod:00000000 $t
    {standard input}:519    .text.xTimerGetPeriod:00000000 xTimerGetPeriod
    {standard input}:583    .text.vTimerSetReloadMode:00000000 $t
    {standard input}:588    .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
    {standard input}:670    .text.uxTimerGetReloadMode:00000000 $t
    {standard input}:675    .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
    {standard input}:753    .text.xTimerGetExpiryTime:00000000 $t
    {standard input}:758    .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
    {standard input}:825    .text.pcTimerGetName:00000000 $t
    {standard input}:830    .text.pcTimerGetName:00000000 pcTimerGetName
    {standard input}:894    .text.prvProcessExpiredTimer:00000000 $t
    {standard input}:898    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
    {standard input}:1321   .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
    {standard input}:1003   .text.prvProcessExpiredTimer:00000094 $d
    {standard input}:1008   .text.prvTimerTask:00000000 $t
    {standard input}:1174   .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
    {standard input}:1053   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
    {standard input}:1430   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
    {standard input}:1049   .text.prvProcessTimerOrBlockTask:00000000 $t
    {standard input}:1253   .text.prvSampleTimeNow:00000000 prvSampleTimeNow
    {standard input}:1163   .text.prvProcessTimerOrBlockTask:00000090 $d
    {standard input}:1170   .text.prvGetNextExpireTime:00000000 $t
    {standard input}:1244   .text.prvGetNextExpireTime:00000044 $d
    {standard input}:1249   .text.prvSampleTimeNow:00000000 $t
    {standard input}:1718   .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
    {standard input}:1312   .text.prvSampleTimeNow:0000003c $d
    {standard input}:2419   .bss.xLastTime.7733:00000000 xLastTime.7733
    {standard input}:1317   .text.prvInsertTimerInActiveList:00000000 $t
    {standard input}:1420   .text.prvInsertTimerInActiveList:0000007c $d
    {standard input}:1426   .text.prvProcessReceivedCommands:00000000 $t
    {standard input}:1524   .text.prvProcessReceivedCommands:00000078 $d
    {standard input}:1534   .text.prvProcessReceivedCommands:000000a0 $t
    {standard input}:1709   .text.prvProcessReceivedCommands:000001c0 $d
    {standard input}:1714   .text.prvSwitchTimerLists:00000000 $t
    {standard input}:1857   .text.prvSwitchTimerLists:000000bc $d
    {standard input}:1867   .text.prvCheckForValidListAndQueue:00000000 $t
    {standard input}:1933   .text.prvCheckForValidListAndQueue:00000054 $d
    {standard input}:1943   .text.xTimerIsTimerActive:00000000 $t
    {standard input}:1948   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
    {standard input}:2026   .text.pvTimerGetTimerID:00000000 $t
    {standard input}:2031   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
    {standard input}:2098   .text.vTimerSetTimerID:00000000 $t
    {standard input}:2103   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
    {standard input}:2168   .text.xTimerPendFunctionCallFromISR:00000000 $t
    {standard input}:2173   .text.xTimerPendFunctionCallFromISR:00000000 xTimerPendFunctionCallFromISR
    {standard input}:2231   .text.xTimerPendFunctionCallFromISR:00000040 $d
    {standard input}:2236   .text.xTimerPendFunctionCall:00000000 $t
    {standard input}:2241   .text.xTimerPendFunctionCall:00000000 xTimerPendFunctionCall
    {standard input}:2322   .text.xTimerPendFunctionCall:0000005c $d
    {standard input}:2327   .text.uxTimerGetTimerNumber:00000000 $t
    {standard input}:2332   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
    {standard input}:2371   .text.vTimerSetTimerNumber:00000000 $t
    {standard input}:2376   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
    {standard input}:2416   .bss.xLastTime.7733:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xTaskCreate
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
vPortEnterCritical
vPortExitCritical
uxListRemove
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
xTaskGetTickCount
vListInsert
vPortFree
xQueueReceive
vListInitialise
xQueueGenericCreate
vQueueAddToRegistry
