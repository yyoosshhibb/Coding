/**
 * @file cmsis_rtos_rtx5.h
 * @date 2019-07-03
 *
 * NOTE:
 * This file is generated by DAVE. Any manual modification done to this file will be lost when the code is regenerated.
 *
 * @cond
 ***********************************************************************************************************************
 *  v4.0.4 - Keil RTX5 implementation of the CMSIS-RTOS API.
 *
 * Copyright (c) 2015-2020, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2019-07-03:
 *     - Initial version.<br>
 * @endcond
 *
 */
/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/

#ifndef CMSIS_RTOS_RTX5_H
#define CMSIS_RTOS_RTX5_H

#include "xmc_common.h"
#include "DAVE_Common.h"
#include "Include/cmsis_os2.h"
#include "RTX/Include1/cmsis_os.h"
#include "cmsis_rtos_rtx5_conf.h"

#if (UC_FAMILY == XMC1)
#include "CPU_CTRL_XMC1/cpu_ctrl_xmc1.h"
#else
#include "CPU_CTRL_XMC4/cpu_ctrl_xmc4.h"
#endif

/**********************************************************************************************************************
 * MACROS
 **********************************************************************************************************************/

/**********************************************************************************************************************
 * ENUMS
 **********************************************************************************************************************/

/**
 * @ingroup CMSIS_RTOS_RTX5_enumerations
 * @{
 */

/**
 * @brief This enumeration indicates status of CMSIS_RTOS_RTX5
 */
typedef enum CMSIS_RTOS_RTX5_STATUS
{
  CMSIS_RTOS_RTX5_STATUS_SUCCESS = 0U, /**< Status Success if initialization is successful */
  CMSIS_RTOS_RTX5_STATUS_FAILURE = 1U  /**< Status Failure if initialization is failed */
} CMSIS_RTOS_RTX5_STATUS_t;

/**
 * @}
 */

/**********************************************************************************************************************
* DATA STRUCTURES
**********************************************************************************************************************/

/**
 * @ingroup CMSIS_RTOS_RTX5_datastructures
 * @{
 */

/**
 * @brief The structure holds initialization status of CMSIS_RTOS_RTX5 APP instance.
 */
typedef struct CMSIS_RTOS_RTX5
{
  bool initialized;  /**< CMSIS_RTOS_RTX5 initialization status*/
} CMSIS_RTOS_RTX5_t;

/**
 * @}
 */

/***********************************************************************************************************************
 * API Prototypes
 **********************************************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @ingroup CMSIS_RTOS_RTX5_apidoc
 * @{
 */

/**
 * @brief Get CMSIS_RTOS_RTX5 APP version
 * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 *
 * \par<b>Description: </b><br>
 * The function can be used to check application software compatibility with a
 * specific version of the APP.
 *
 * \par<b>Example Usage:</b><br>
 *
 * @code
 * #include <DAVE.h>
 *
 * int main(void) {
 *   DAVE_STATUS_t init_status;
 *   DAVE_APP_VERSION_t version;
 *
 *   // Initialize CMSIS_RTOS_RTX5 APP:
 *   // CMSIS_RTOS_RTX5_Init() is called from within DAVE_Init().
 *   init_status = DAVE_Init();
 *
 *   if (DAVE_STATUS_SUCCESS == init_status)
 *   {
 *     version = CMSIS_RTOS_RTX5_GetAppVersion();
 *     if (version.major != 4U) {
 *       // Probably, not the right version.
 *     }
 *   }
 *
 *     // More code here
 *     while(1)
 *     {
 *     }
 *   return (1);
 * }
 * @endcode<BR>
 */

DAVE_APP_VERSION_t CMSIS_RTOS_RTX5_GetAppVersion(void);

/**
 * @brief Initializes a CMSIS_RTOS_RTX5 APP instance
 * @param handle address of CMSIS_RTOS_RTX5 APP handler
 * @return
 *            CMSIS_RTOS_RTX5_STATUS_SUCCESS             : if initialization is successful\n
 *            CMSIS_RTOS_RTX5_STATUS_FAILURE             : if initialization is failed
 *
 * \par<b>Description:</b><br>
 * CMSIS_RTOS_RTX5_Init API is called during initialization of DAVE APPS. This API Initializes CMSIS_RTOS_RTX5 APP.
 *
 * \par<b>Example Usage:</b><br>
 *
 * @code
 * #include <DAVE.h>
 *
 * // define tasks function here
 *
 * int main(void)
 * {
 *   DAVE_STATUS_t status;
 *
 *   status = DAVE_Init();  // CMSIS_RTOS_RTX5_Init API is called during initialization of DAVE APPS which
 *                          // initialize RTOS kernel
 *   if (DAVE_STATUS_SUCCESS == status)
 *   {
 *     // Enter user code which creates tasks
 *     //
 *
 *     osKernelStart();               // start kernel with user defined task execution
 *   }
 *   while(1)
 *   {
 *   }
 *
 *   return (1);
 * }
 *
 * @endcode<BR>
 */

CMSIS_RTOS_RTX5_STATUS_t  CMSIS_RTOS_RTX5_Init(CMSIS_RTOS_RTX5_t *handle);

/**
 * @}
 */

/* Support for C++ codebase */
#ifdef __cplusplus
}
#endif

/* Inclusion of APP extern file */
#include "cmsis_rtos_rtx5_extern.h"

#endif /* CMSIS_RTOS_RTX5_H */
