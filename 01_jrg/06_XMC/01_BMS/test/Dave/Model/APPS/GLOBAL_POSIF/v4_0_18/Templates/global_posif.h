/**
 * @file global_posif.h
 * @date 2021-01-08
 *
 * NOTE:
 * This file is generated by DAVE. Any manual modification done to this file will be lost when the code is regenerated.
 *
 * @cond
 ***********************************************************************************************************************
 * GLOBAL_POSIF v4.0.18 - Configures the POSIF module global settings.
 *
 * Copyright (c) 2015-2020, Infineon Technologies AG
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,are permitted provided that the
 * following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright notice, this list of conditions and the  following
 *   disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote
 *   products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT  OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes
 * with Infineon Technologies AG (dave@infineon.com).
 ***********************************************************************************************************************
 *
 * Change History
 * --------------
 *
 * 2015-02-20:
 *     - Initial version
 *
 * 2015-06-20:
 *     - help comments updated
 *
 * 2016-01-11:
 *     - CCU clock macro check added
 *
 * 2016-02-12:
 *     - CCU clock macro check removed. CCU clock check is handled in the GUI
 *
 * 2021-01-08:
 *     - Modified check for minimum XMCLib version
 *
 * @endcond
 *
 */

#ifndef GLOBAL_POSIF_H_
#define GLOBAL_POSIF_H_
/***********************************************************************************************************************
 * HEADER FILES
 **********************************************************************************************************************/


#include "global_posif_conf.h"
#include "xmc_posif.h"
#include "DAVE_Common.h"

/**********************************************************************************************************************
* MACROS
**********************************************************************************************************************/
#define GLOBAL_POSIF_XMC_LIB_MAJOR_VERSION 2
#define GLOBAL_POSIF_XMC_LIB_MINOR_VERSION 0
#define GLOBAL_POSIF_XMC_LIB_PATCH_VERSION 0

#if !((XMC_LIB_MAJOR_VERSION > GLOBAL_POSIF_XMC_LIB_MAJOR_VERSION) ||\
      ((XMC_LIB_MAJOR_VERSION == GLOBAL_POSIF_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > GLOBAL_POSIF_XMC_LIB_MINOR_VERSION)) ||\
      ((XMC_LIB_MAJOR_VERSION == GLOBAL_POSIF_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == GLOBAL_POSIF_XMC_LIB_MINOR_VERSION) && (XMC_LIB_PATCH_VERSION >= GLOBAL_POSIF_XMC_LIB_PATCH_VERSION)))
#error "GLOBAL_POSIF requires XMC Peripheral Library v2.0.0 or higher"
#endif

/**********************************************************************************************************************
* ENUMS
**********************************************************************************************************************/
 /**
  * @ingroup GLOBAL_POSIF_enumerations
  * @{
  */
/**
 * This enumerates status of the APP. Used during initialization.
 */
typedef enum GLOBAL_POSIF_STATUS
{
  GLOBAL_POSIF_STATUS_SUCCESS,              /*!< APP status success*/
  GLOBAL_POSIF_STATUS_FAILURE               /*!< APP status failure*/

} GLOBAL_POSIF_STATUS_t;

/**
 * State of the APP
 */
typedef enum GLOBAL_POSIF_STATE
{

  GLOBAL_POSIF_STATE_UNINITIALISED,        /*!< Default state after power on reset.*/
  GLOBAL_POSIF_STATE_INITIALISED,          /*!< APP is in initialized state after execution of the Init function*/
  
}GLOBAL_POSIF_STATE_t;

/**
 * @}
 */
/**********************************************************************************************************************
* DATA STRUCTURES
**********************************************************************************************************************/
/**
  * @ingroup GLOBAL_POSIF_datastructures
  * @{
  */
/**
 * This structure holds the GUI configurable parameters and pointer to all consumed low level apps.
 */
typedef struct GLOBAL_POSIF_Handle
{  	

  XMC_POSIF_t* const   moduleptr;            /*!< This is the register structure pointer to the POSIF kernel.*/
  GLOBAL_POSIF_STATE_t state;                /*!< State of the APP .*/

}GLOBAL_POSIF_t;

/**
 * @}
 */

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @ingroup GLOBAL_POSIF_apidoc
 * @{
 */
/***********************************************************************************************************************
 * API Prototypes
 **********************************************************************************************************************/
/**
 * @brief Get GLOBAL_POSIF APP version
 * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 *
 * \par<b>Description: </b><br>
 * The function can be used to check application software compatibility with a
 * specific version of the APP.
 *
 * Example Usage:
 *
 * @code
 * #include "DAVE.h"
 *
 * int main(void) 
 * {
 *   DAVE_STATUS_t init_status;
 *   DAVE_APP_VERSION_t version;
 *
 *   // GLOBAL_POSIF_Init() is called from DAVE_Init().
 *   init_status = DAVE_Init();
 *
 *   version = GLOBAL_POSIF_GetAppVersion();
 *
 *   // More code here
 *
 *   while(1) {
 *
 *   }
 *   return (0);
 * }
 * @endcode<BR>
 */
DAVE_APP_VERSION_t GLOBAL_POSIF_GetAppVersion(void);

/**
 * @brief Enables the posif module and set the POSIF operating mode.
 * @param HandlePtr to an object of GLOBAL_POSIF module.
 * @return GLOBAL_POSIF_STATUS_t: status of the operation
 *
 * \par<b>Description: </b><br>
 *  This API is called in definition of DAVE_init or top level APP, by code generation
 *  and therefore should not be explicitly called for the normal operation.
 *  Use other APIs only after DAVE_init is called successfully (returns DAVE_STATUS_SUCCESS).\n
 *
 * Example Usage:
 *
 * <BR>
 * @code
 * #include "DAVE.h"
 * 
 * int main(void)
 * {
 *   DAVE_STATUS_t init_status;
 *
 *   // GLOBAL_POSIF_Init(&GLOBAL_POSIF_0) is called from DAVE_Init().
 *   init_status = DAVE_Init();
 *
 *   // More code here
 *
 *   while(1) {
 *
 *   }
 *   return (0);
 * }
 * @endcode<BR>
 */
GLOBAL_POSIF_STATUS_t GLOBAL_POSIF_Init(GLOBAL_POSIF_t*const HandlePtr);


#include "global_posif_extern.h"

/**
 * @}
 */
#ifdef __cplusplus
}
#endif

#endif /* GLOBAL_POSIF_H_ */

