   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_fce.c"
  16              	 .section .text.XMC_FCE_Init,"ax",%progbits
  17              	 .align 1
  18              	 .global XMC_FCE_Init
  19              	 .thumb
  20              	 .thumb_func
  22              	XMC_FCE_Init:
  23              	 
  24              	 
  25              	 
  26 0000 0368     	 ldr r3,[r0]
  27 0002 4268     	 ldr r2,[r0,#4]
  28 0004 9A60     	 str r2,[r3,#8]
  29 0006 8268     	 ldr r2,[r0,#8]
  30 0008 9A61     	 str r2,[r3,#24]
  31 000a 0020     	 movs r0,#0
  32 000c 7047     	 bx lr
  34              	 .section .text.XMC_FCE_Disable,"ax",%progbits
  35              	 .align 1
  36              	 .global XMC_FCE_Disable
  37              	 .thumb
  38              	 .thumb_func
  40              	XMC_FCE_Disable:
  41              	 
  42              	 
  43              	 
  44 0000 034A     	 ldr r2,.L3
  45 0002 0448     	 ldr r0,.L3+4
  46 0004 1368     	 ldr r3,[r2]
  47 0006 43F00103 	 orr r3,r3,#1
  48 000a 1360     	 str r3,[r2]
  49 000c FFF7FEBF 	 b XMC_SCU_RESET_AssertPeripheralReset
  50              	.L4:
  51              	 .align 2
  52              	.L3:
  53 0010 00000250 	 .word 1342308352
  54 0014 40000020 	 .word 536870976
  56              	 .section .text.XMC_FCE_Enable,"ax",%progbits
  57              	 .align 1
  58              	 .global XMC_FCE_Enable
  59              	 .thumb
  60              	 .thumb_func
  62              	XMC_FCE_Enable:
  63              	 
  64              	 
  65 0000 08B5     	 push {r3,lr}
  66 0002 0448     	 ldr r0,.L6
  67 0004 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  68 0008 034A     	 ldr r2,.L6+4
  69 000a 1368     	 ldr r3,[r2]
  70 000c 23F00103 	 bic r3,r3,#1
  71 0010 1360     	 str r3,[r2]
  72 0012 08BD     	 pop {r3,pc}
  73              	.L7:
  74              	 .align 2
  75              	.L6:
  76 0014 40000020 	 .word 536870976
  77 0018 00000250 	 .word 1342308352
  79              	 .section .text.XMC_FCE_CalculateCRC8,"ax",%progbits
  80              	 .align 1
  81              	 .global XMC_FCE_CalculateCRC8
  82              	 .thumb
  83              	 .thumb_func
  85              	XMC_FCE_CalculateCRC8:
  86              	 
  87              	 
  88 0000 10B5     	 push {r4,lr}
  89 0002 52B1     	 cbz r2,.L11
  90 0004 0068     	 ldr r0,[r0]
  91 0006 0A44     	 add r2,r2,r1
  92              	.L10:
  93 0008 11F8014B 	 ldrb r4,[r1],#1
  94 000c 0460     	 str r4,[r0]
  95 000e 9142     	 cmp r1,r2
  96 0010 FAD1     	 bne .L10
  97 0012 8269     	 ldr r2,[r0,#24]
  98 0014 1A70     	 strb r2,[r3]
  99 0016 0020     	 movs r0,#0
 100 0018 10BD     	 pop {r4,pc}
 101              	.L11:
 102 001a 0220     	 movs r0,#2
 103 001c 10BD     	 pop {r4,pc}
 105              	 .section .text.XMC_FCE_CalculateCRC16,"ax",%progbits
 106              	 .align 1
 107              	 .global XMC_FCE_CalculateCRC16
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_FCE_CalculateCRC16:
 112              	 
 113              	 
 114 0000 30B5     	 push {r4,r5,lr}
 115 0002 62B1     	 cbz r2,.L18
 116 0004 D407     	 lsls r4,r2,#31
 117 0006 0AD4     	 bmi .L18
 118 0008 0568     	 ldr r5,[r0]
 119 000a 0C46     	 mov r4,r1
 120              	.L16:
 121 000c 34F8020B 	 ldrh r0,[r4],#2
 122 0010 2860     	 str r0,[r5]
 123 0012 101B     	 subs r0,r2,r4
 124 0014 0818     	 adds r0,r1,r0
 125 0016 F9D1     	 bne .L16
 126 0018 AA69     	 ldr r2,[r5,#24]
 127 001a 1A80     	 strh r2,[r3]
 128 001c 30BD     	 pop {r4,r5,pc}
 129              	.L18:
 130 001e 0220     	 movs r0,#2
 131 0020 30BD     	 pop {r4,r5,pc}
 133              	 .section .text.XMC_FCE_CalculateCRC32,"ax",%progbits
 134              	 .align 1
 135              	 .global XMC_FCE_CalculateCRC32
 136              	 .thumb
 137              	 .thumb_func
 139              	XMC_FCE_CalculateCRC32:
 140              	 
 141              	 
 142 0000 30B5     	 push {r4,r5,lr}
 143 0002 62B1     	 cbz r2,.L24
 144 0004 9407     	 lsls r4,r2,#30
 145 0006 0AD1     	 bne .L24
 146 0008 0568     	 ldr r5,[r0]
 147 000a 0C46     	 mov r4,r1
 148              	.L22:
 149 000c 54F8040B 	 ldr r0,[r4],#4
 150 0010 2860     	 str r0,[r5]
 151 0012 101B     	 subs r0,r2,r4
 152 0014 0818     	 adds r0,r1,r0
 153 0016 F9D1     	 bne .L22
 154 0018 AA69     	 ldr r2,[r5,#24]
 155 001a 1A60     	 str r2,[r3]
 156 001c 30BD     	 pop {r4,r5,pc}
 157              	.L24:
 158 001e 0220     	 movs r0,#2
 159 0020 30BD     	 pop {r4,r5,pc}
 161              	 .section .text.XMC_FCE_TriggerMismatch,"ax",%progbits
 162              	 .align 1
 163              	 .global XMC_FCE_TriggerMismatch
 164              	 .thumb
 165              	 .thumb_func
 167              	XMC_FCE_TriggerMismatch:
 168              	 
 169              	 
 170 0000 0368     	 ldr r3,[r0]
 171 0002 D869     	 ldr r0,[r3,#28]
 172 0004 10B5     	 push {r4,lr}
 173 0006 CC43     	 mvns r4,r1
 174 0008 2040     	 ands r0,r0,r4
 175 000a D861     	 str r0,[r3,#28]
 176 000c D869     	 ldr r0,[r3,#28]
 177 000e 0143     	 orrs r1,r1,r0
 178 0010 D961     	 str r1,[r3,#28]
 179 0012 DA69     	 ldr r2,[r3,#28]
 180 0014 2240     	 ands r2,r2,r4
 181 0016 DA61     	 str r2,[r3,#28]
 182 0018 10BD     	 pop {r4,pc}
 184              	 .section .text.XMC_FCE_LittleEndian16bit,"ax",%progbits
 185              	 .align 1
 186              	 .global XMC_FCE_LittleEndian16bit
 187              	 .thumb
 188              	 .thumb_func
 190              	XMC_FCE_LittleEndian16bit:
 191              	 
 192              	 
 193 0000 D307     	 lsls r3,r2,#31
 194 0002 70B5     	 push {r4,r5,r6,lr}
 195 0004 1AD4     	 bmi .L27
 196 0006 5508     	 lsrs r5,r2,#1
 197 0008 0C46     	 mov r4,r1
 198 000a 01EB4506 	 add r6,r1,r5,lsl#1
 199              	.L29:
 200 000e B442     	 cmp r4,r6
 201 0010 4FF00003 	 mov r3,#0
 202 0014 02D0     	 beq .L34
 203 0016 24F8023B 	 strh r3,[r4],#2
 204 001a F8E7     	 b .L29
 205              	.L34:
 206 001c 21F81530 	 strh r3,[r1,r5,lsl#1]
 207              	.L31:
 208 0020 5C00     	 lsls r4,r3,#1
 209 0022 A4B2     	 uxth r4,r4
 210 0024 A242     	 cmp r2,r4
 211 0026 09D0     	 beq .L27
 212 0028 0519     	 adds r5,r0,r4
 213 002a 045D     	 ldrb r4,[r0,r4]
 214 002c 6D78     	 ldrb r5,[r5,#1]
 215 002e 9EB2     	 uxth r6,r3
 216 0030 45EA0424 	 orr r4,r5,r4,lsl#8
 217 0034 21F81640 	 strh r4,[r1,r6,lsl#1]
 218 0038 0133     	 adds r3,r3,#1
 219 003a F1E7     	 b .L31
 220              	.L27:
 221 003c 70BD     	 pop {r4,r5,r6,pc}
 223              	 .section .text.XMC_FCE_LittleEndian32bit,"ax",%progbits
 224              	 .align 1
 225              	 .global XMC_FCE_LittleEndian32bit
 226              	 .thumb
 227              	 .thumb_func
 229              	XMC_FCE_LittleEndian32bit:
 230              	 
 231              	 
 232 0000 9307     	 lsls r3,r2,#30
 233 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 234 0004 20D1     	 bne .L35
 235 0006 9508     	 lsrs r5,r2,#2
 236 0008 0C46     	 mov r4,r1
 237 000a 01EB8506 	 add r6,r1,r5,lsl#2
 238              	.L37:
 239 000e B442     	 cmp r4,r6
 240 0010 4FF00003 	 mov r3,#0
 241 0014 02D0     	 beq .L42
 242 0016 44F8043B 	 str r3,[r4],#4
 243 001a F8E7     	 b .L37
 244              	.L42:
 245 001c 41F82530 	 str r3,[r1,r5,lsl#2]
 246              	.L39:
 247 0020 9D00     	 lsls r5,r3,#2
 248 0022 ADB2     	 uxth r5,r5
 249 0024 AA42     	 cmp r2,r5
 250 0026 0FD0     	 beq .L35
 251 0028 4619     	 adds r6,r0,r5
 252 002a 455D     	 ldrb r5,[r0,r5]
 253 002c F478     	 ldrb r4,[r6,#3]
 254 002e 44EA0564 	 orr r4,r4,r5,lsl#24
 255 0032 7578     	 ldrb r5,[r6,#1]
 256 0034 44EA0544 	 orr r4,r4,r5,lsl#16
 257 0038 B578     	 ldrb r5,[r6,#2]
 258 003a 9FB2     	 uxth r7,r3
 259 003c 44EA0524 	 orr r4,r4,r5,lsl#8
 260 0040 41F82740 	 str r4,[r1,r7,lsl#2]
 261 0044 0133     	 adds r3,r3,#1
 262 0046 EBE7     	 b .L39
 263              	.L35:
 264 0048 F0BD     	 pop {r4,r5,r6,r7,pc}
 266              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_fce.c
    {standard input}:17     .text.XMC_FCE_Init:00000000 $t
    {standard input}:22     .text.XMC_FCE_Init:00000000 XMC_FCE_Init
    {standard input}:35     .text.XMC_FCE_Disable:00000000 $t
    {standard input}:40     .text.XMC_FCE_Disable:00000000 XMC_FCE_Disable
    {standard input}:53     .text.XMC_FCE_Disable:00000010 $d
    {standard input}:57     .text.XMC_FCE_Enable:00000000 $t
    {standard input}:62     .text.XMC_FCE_Enable:00000000 XMC_FCE_Enable
    {standard input}:76     .text.XMC_FCE_Enable:00000014 $d
    {standard input}:80     .text.XMC_FCE_CalculateCRC8:00000000 $t
    {standard input}:85     .text.XMC_FCE_CalculateCRC8:00000000 XMC_FCE_CalculateCRC8
    {standard input}:106    .text.XMC_FCE_CalculateCRC16:00000000 $t
    {standard input}:111    .text.XMC_FCE_CalculateCRC16:00000000 XMC_FCE_CalculateCRC16
    {standard input}:134    .text.XMC_FCE_CalculateCRC32:00000000 $t
    {standard input}:139    .text.XMC_FCE_CalculateCRC32:00000000 XMC_FCE_CalculateCRC32
    {standard input}:162    .text.XMC_FCE_TriggerMismatch:00000000 $t
    {standard input}:167    .text.XMC_FCE_TriggerMismatch:00000000 XMC_FCE_TriggerMismatch
    {standard input}:185    .text.XMC_FCE_LittleEndian16bit:00000000 $t
    {standard input}:190    .text.XMC_FCE_LittleEndian16bit:00000000 XMC_FCE_LittleEndian16bit
    {standard input}:224    .text.XMC_FCE_LittleEndian32bit:00000000 $t
    {standard input}:229    .text.XMC_FCE_LittleEndian32bit:00000000 XMC_FCE_LittleEndian32bit

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
