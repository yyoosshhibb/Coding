   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "queue.c"
  16              	 .section .text.prvIsQueueEmpty,"ax",%progbits
  17              	 .align 1
  18              	 .thumb
  19              	 .thumb_func
  21              	prvIsQueueEmpty:
  22              	 
  23              	 
  24 0000 10B5     	 push {r4,lr}
  25 0002 0446     	 mov r4,r0
  26 0004 FFF7FEFF 	 bl vPortEnterCritical
  27 0008 A46B     	 ldr r4,[r4,#56]
  28 000a FFF7FEFF 	 bl vPortExitCritical
  29 000e B4FA84F0 	 clz r0,r4
  30 0012 4009     	 lsrs r0,r0,#5
  31 0014 10BD     	 pop {r4,pc}
  33              	 .section .text.unlikely.prvCopyDataToQueue,"ax",%progbits
  34              	 .align 1
  35              	 .thumb
  36              	 .thumb_func
  38              	prvCopyDataToQueue:
  39              	 
  40              	 
  41 0000 70B5     	 push {r4,r5,r6,lr}
  42 0002 1546     	 mov r5,r2
  43 0004 026C     	 ldr r2,[r0,#64]
  44 0006 866B     	 ldr r6,[r0,#56]
  45 0008 0446     	 mov r4,r0
  46 000a 32B9     	 cbnz r2,.L3
  47 000c 0568     	 ldr r5,[r0]
  48 000e 2DBB     	 cbnz r5,.L7
  49 0010 4068     	 ldr r0,[r0,#4]
  50 0012 FFF7FEFF 	 bl xTaskPriorityDisinherit
  51 0016 6560     	 str r5,[r4,#4]
  52 0018 27E0     	 b .L4
  53              	.L3:
  54 001a 65B9     	 cbnz r5,.L5
  55 001c 8068     	 ldr r0,[r0,#8]
  56 001e FFF7FEFF 	 bl memcpy
  57 0022 A268     	 ldr r2,[r4,#8]
  58 0024 236C     	 ldr r3,[r4,#64]
  59 0026 1344     	 add r3,r3,r2
  60 0028 6268     	 ldr r2,[r4,#4]
  61 002a A360     	 str r3,[r4,#8]
  62 002c 9342     	 cmp r3,r2
  63 002e 17D3     	 bcc .L8
  64 0030 2368     	 ldr r3,[r4]
  65 0032 A360     	 str r3,[r4,#8]
  66 0034 14E0     	 b .L8
  67              	.L5:
  68 0036 C068     	 ldr r0,[r0,#12]
  69 0038 FFF7FEFF 	 bl memcpy
  70 003c 236C     	 ldr r3,[r4,#64]
  71 003e E268     	 ldr r2,[r4,#12]
  72 0040 2168     	 ldr r1,[r4]
  73 0042 5B42     	 negs r3,r3
  74 0044 1A44     	 add r2,r2,r3
  75 0046 8A42     	 cmp r2,r1
  76 0048 E260     	 str r2,[r4,#12]
  77 004a 3EBF     	 ittt cc
  78 004c 6268     	 ldrcc r2,[r4,#4]
  79 004e 9B18     	 addcc r3,r3,r2
  80 0050 E360     	 strcc r3,[r4,#12]
  81 0052 022D     	 cmp r5,#2
  82 0054 06D1     	 bne .L9
  83 0056 3EB1     	 cbz r6,.L10
  84 0058 013E     	 subs r6,r6,#1
  85 005a 03E0     	 b .L9
  86              	.L7:
  87 005c 1046     	 mov r0,r2
  88 005e 04E0     	 b .L4
  89              	.L8:
  90 0060 2846     	 mov r0,r5
  91 0062 02E0     	 b .L4
  92              	.L9:
  93 0064 0020     	 movs r0,#0
  94 0066 00E0     	 b .L4
  95              	.L10:
  96 0068 3046     	 mov r0,r6
  97              	.L4:
  98 006a 0136     	 adds r6,r6,#1
  99 006c A663     	 str r6,[r4,#56]
 100 006e 70BD     	 pop {r4,r5,r6,pc}
 102              	 .section .text.unlikely.prvCopyDataFromQueue,"ax",%progbits
 103              	 .align 1
 104              	 .thumb
 105              	 .thumb_func
 107              	prvCopyDataFromQueue:
 108              	 
 109              	 
 110 0000 026C     	 ldr r2,[r0,#64]
 111 0002 10B5     	 push {r4,lr}
 112 0004 0346     	 mov r3,r0
 113 0006 6AB1     	 cbz r2,.L12
 114 0008 C468     	 ldr r4,[r0,#12]
 115 000a 1444     	 add r4,r4,r2
 116 000c C460     	 str r4,[r0,#12]
 117 000e 4068     	 ldr r0,[r0,#4]
 118 0010 8442     	 cmp r4,r0
 119 0012 24BF     	 itt cs
 120 0014 1868     	 ldrcs r0,[r3]
 121 0016 D860     	 strcs r0,[r3,#12]
 122 0018 BDE81040 	 pop {r4,lr}
 123 001c 0846     	 mov r0,r1
 124 001e D968     	 ldr r1,[r3,#12]
 125 0020 FFF7FEBF 	 b memcpy
 126              	.L12:
 127 0024 10BD     	 pop {r4,pc}
 129              	 .section .text.prvNotifyQueueSetContainer,"ax",%progbits
 130              	 .align 1
 131              	 .thumb
 132              	 .thumb_func
 134              	prvNotifyQueueSetContainer:
 135              	 
 136              	 
 137 0000 73B5     	 push {r0,r1,r4,r5,r6,lr}
 138 0002 846C     	 ldr r4,[r0,#72]
 139 0004 0190     	 str r0,[sp,#4]
 140 0006 0A46     	 mov r2,r1
 141 0008 44B9     	 cbnz r4,.L16
 142              	
 143 000a 4FF0FC03 	 mov r3,#252
 144 000e 83F31188 	 msr basepri,r3
 145 0012 BFF36F8F 	 isb 
 146 0016 BFF34F8F 	 dsb 
 147              	
 148              	
 149              	 .thumb
 150              	.L17:
 151 001a FEE7     	 b .L17
 152              	.L16:
 153 001c A16B     	 ldr r1,[r4,#56]
 154 001e E36B     	 ldr r3,[r4,#60]
 155 0020 9942     	 cmp r1,r3
 156 0022 08D3     	 bcc .L18
 157              	
 158 0024 4FF0FC03 	 mov r3,#252
 159 0028 83F31188 	 msr basepri,r3
 160 002c BFF36F8F 	 isb 
 161 0030 BFF34F8F 	 dsb 
 162              	
 163              	
 164              	 .thumb
 165              	.L19:
 166 0034 FEE7     	 b .L19
 167              	.L18:
 168 0036 A16B     	 ldr r1,[r4,#56]
 169 0038 9942     	 cmp r1,r3
 170 003a 18D2     	 bcs .L22
 171 003c 94F84550 	 ldrb r5,[r4,#69]
 172 0040 2046     	 mov r0,r4
 173 0042 01A9     	 add r1,sp,#4
 174 0044 FFF7FEFF 	 bl prvCopyDataToQueue
 175 0048 EDB2     	 uxtb r5,r5
 176 004a FF2D     	 cmp r5,#255
 177 004c 0646     	 mov r6,r0
 178 004e 09D1     	 bne .L21
 179 0050 636A     	 ldr r3,[r4,#36]
 180 0052 6BB1     	 cbz r3,.L20
 181 0054 04F12400 	 add r0,r4,#36
 182 0058 FFF7FEFF 	 bl xTaskRemoveFromEventList
 183 005c 0028     	 cmp r0,#0
 184 005e 18BF     	 it ne
 185 0060 0126     	 movne r6,#1
 186 0062 05E0     	 b .L20
 187              	.L21:
 188 0064 0135     	 adds r5,r5,#1
 189 0066 EDB2     	 uxtb r5,r5
 190 0068 84F84550 	 strb r5,[r4,#69]
 191 006c 00E0     	 b .L20
 192              	.L22:
 193 006e 0026     	 movs r6,#0
 194              	.L20:
 195 0070 3046     	 mov r0,r6
 196 0072 02B0     	 add sp,sp,#8
 197              	 
 198 0074 70BD     	 pop {r4,r5,r6,pc}
 200              	 .section .text.prvUnlockQueue,"ax",%progbits
 201              	 .align 1
 202              	 .thumb
 203              	 .thumb_func
 205              	prvUnlockQueue:
 206              	 
 207              	 
 208 0000 38B5     	 push {r3,r4,r5,lr}
 209 0002 0446     	 mov r4,r0
 210 0004 FFF7FEFF 	 bl vPortEnterCritical
 211 0008 94F84550 	 ldrb r5,[r4,#69]
 212              	.L50:
 213 000c EDB2     	 uxtb r5,r5
 214 000e 6BB2     	 sxtb r3,r5
 215 0010 002B     	 cmp r3,#0
 216 0012 12DD     	 ble .L33
 217 0014 A36C     	 ldr r3,[r4,#72]
 218 0016 3BB1     	 cbz r3,.L30
 219 0018 2046     	 mov r0,r4
 220 001a 0021     	 movs r1,#0
 221 001c FFF7FEFF 	 bl prvNotifyQueueSetContainer
 222              	.L49:
 223 0020 48B1     	 cbz r0,.L32
 224 0022 FFF7FEFF 	 bl vTaskMissedYield
 225 0026 06E0     	 b .L32
 226              	.L30:
 227 0028 636A     	 ldr r3,[r4,#36]
 228 002a 33B1     	 cbz r3,.L33
 229 002c 04F12400 	 add r0,r4,#36
 230 0030 FFF7FEFF 	 bl xTaskRemoveFromEventList
 231 0034 F4E7     	 b .L49
 232              	.L32:
 233 0036 013D     	 subs r5,r5,#1
 234 0038 E8E7     	 b .L50
 235              	.L33:
 236 003a FF23     	 movs r3,#255
 237 003c 84F84530 	 strb r3,[r4,#69]
 238 0040 FFF7FEFF 	 bl vPortExitCritical
 239 0044 FFF7FEFF 	 bl vPortEnterCritical
 240 0048 94F84450 	 ldrb r5,[r4,#68]
 241              	.L51:
 242 004c EDB2     	 uxtb r5,r5
 243 004e 6BB2     	 sxtb r3,r5
 244 0050 002B     	 cmp r3,#0
 245 0052 0ADD     	 ble .L37
 246 0054 2369     	 ldr r3,[r4,#16]
 247 0056 43B1     	 cbz r3,.L37
 248 0058 04F11000 	 add r0,r4,#16
 249 005c FFF7FEFF 	 bl xTaskRemoveFromEventList
 250 0060 08B1     	 cbz r0,.L38
 251 0062 FFF7FEFF 	 bl vTaskMissedYield
 252              	.L38:
 253 0066 013D     	 subs r5,r5,#1
 254 0068 F0E7     	 b .L51
 255              	.L37:
 256 006a FF23     	 movs r3,#255
 257 006c 84F84430 	 strb r3,[r4,#68]
 258 0070 BDE83840 	 pop {r3,r4,r5,lr}
 259 0074 FFF7FEBF 	 b vPortExitCritical
 261              	 .section .text.xQueueGenericReset,"ax",%progbits
 262              	 .align 1
 263              	 .global xQueueGenericReset
 264              	 .thumb
 265              	 .thumb_func
 267              	xQueueGenericReset:
 268              	 
 269              	 
 270 0000 38B5     	 push {r3,r4,r5,lr}
 271 0002 0D46     	 mov r5,r1
 272 0004 0446     	 mov r4,r0
 273 0006 40B9     	 cbnz r0,.L53
 274              	
 275 0008 4FF0FC03 	 mov r3,#252
 276 000c 83F31188 	 msr basepri,r3
 277 0010 BFF36F8F 	 isb 
 278 0014 BFF34F8F 	 dsb 
 279              	
 280              	
 281              	 .thumb
 282              	.L54:
 283 0018 FEE7     	 b .L54
 284              	.L53:
 285 001a FFF7FEFF 	 bl vPortEnterCritical
 286 001e 206C     	 ldr r0,[r4,#64]
 287 0020 E36B     	 ldr r3,[r4,#60]
 288 0022 2268     	 ldr r2,[r4]
 289 0024 A260     	 str r2,[r4,#8]
 290 0026 4343     	 muls r3,r0,r3
 291 0028 D118     	 adds r1,r2,r3
 292 002a 1B1A     	 subs r3,r3,r0
 293 002c 1344     	 add r3,r3,r2
 294 002e 6160     	 str r1,[r4,#4]
 295 0030 E360     	 str r3,[r4,#12]
 296 0032 0021     	 movs r1,#0
 297 0034 FF23     	 movs r3,#255
 298 0036 A163     	 str r1,[r4,#56]
 299 0038 84F84430 	 strb r3,[r4,#68]
 300 003c 84F84530 	 strb r3,[r4,#69]
 301 0040 7DB9     	 cbnz r5,.L55
 302 0042 2369     	 ldr r3,[r4,#16]
 303 0044 ABB1     	 cbz r3,.L57
 304 0046 04F11000 	 add r0,r4,#16
 305 004a FFF7FEFF 	 bl xTaskRemoveFromEventList
 306 004e 80B1     	 cbz r0,.L57
 307 0050 0A4B     	 ldr r3,.L62
 308 0052 4FF08052 	 mov r2,#268435456
 309 0056 1A60     	 str r2,[r3]
 310              	
 311 0058 BFF34F8F 	 dsb
 312              	
 313              	
 314 005c BFF36F8F 	 isb
 315              	
 316              	 .thumb
 317 0060 07E0     	 b .L57
 318              	.L55:
 319 0062 04F11000 	 add r0,r4,#16
 320 0066 FFF7FEFF 	 bl vListInitialise
 321 006a 04F12400 	 add r0,r4,#36
 322 006e FFF7FEFF 	 bl vListInitialise
 323              	.L57:
 324 0072 FFF7FEFF 	 bl vPortExitCritical
 325 0076 0120     	 movs r0,#1
 326 0078 38BD     	 pop {r3,r4,r5,pc}
 327              	.L63:
 328 007a 00BF     	 .align 2
 329              	.L62:
 330 007c 04ED00E0 	 .word -536810236
 332              	 .section .text.xQueueGenericCreate,"ax",%progbits
 333              	 .align 1
 334              	 .global xQueueGenericCreate
 335              	 .thumb
 336              	 .thumb_func
 338              	xQueueGenericCreate:
 339              	 
 340              	 
 341 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 342 0002 0D46     	 mov r5,r1
 343 0004 1746     	 mov r7,r2
 344 0006 0646     	 mov r6,r0
 345 0008 40B9     	 cbnz r0,.L65
 346              	
 347 000a 4FF0FC03 	 mov r3,#252
 348 000e 83F31188 	 msr basepri,r3
 349 0012 BFF36F8F 	 isb 
 350 0016 BFF34F8F 	 dsb 
 351              	
 352              	
 353              	 .thumb
 354              	.L66:
 355 001a FEE7     	 b .L66
 356              	.L65:
 357 001c 09B1     	 cbz r1,.L71
 358 001e 4843     	 muls r0,r1,r0
 359 0020 00E0     	 b .L67
 360              	.L71:
 361 0022 0846     	 mov r0,r1
 362              	.L67:
 363 0024 5430     	 adds r0,r0,#84
 364 0026 FFF7FEFF 	 bl pvPortMalloc
 365 002a 0446     	 mov r4,r0
 366 002c 78B1     	 cbz r0,.L68
 367 002e 0DB9     	 cbnz r5,.L69
 368 0030 2060     	 str r0,[r4]
 369 0032 02E0     	 b .L70
 370              	.L69:
 371 0034 00F15403 	 add r3,r0,#84
 372 0038 0360     	 str r3,[r0]
 373              	.L70:
 374 003a E663     	 str r6,[r4,#60]
 375 003c 2564     	 str r5,[r4,#64]
 376 003e 2046     	 mov r0,r4
 377 0040 0121     	 movs r1,#1
 378 0042 FFF7FEFF 	 bl xQueueGenericReset
 379 0046 0023     	 movs r3,#0
 380 0048 84F85070 	 strb r7,[r4,#80]
 381 004c A364     	 str r3,[r4,#72]
 382              	.L68:
 383 004e 2046     	 mov r0,r4
 384 0050 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 386              	 .section .text.xQueueGetMutexHolder,"ax",%progbits
 387              	 .align 1
 388              	 .global xQueueGetMutexHolder
 389              	 .thumb
 390              	 .thumb_func
 392              	xQueueGetMutexHolder:
 393              	 
 394              	 
 395 0000 10B5     	 push {r4,lr}
 396 0002 0446     	 mov r4,r0
 397 0004 FFF7FEFF 	 bl vPortEnterCritical
 398 0008 2368     	 ldr r3,[r4]
 399 000a 0BB9     	 cbnz r3,.L77
 400 000c 6468     	 ldr r4,[r4,#4]
 401 000e 00E0     	 b .L76
 402              	.L77:
 403 0010 0024     	 movs r4,#0
 404              	.L76:
 405 0012 FFF7FEFF 	 bl vPortExitCritical
 406 0016 2046     	 mov r0,r4
 407 0018 10BD     	 pop {r4,pc}
 409              	 .section .text.xQueueGetMutexHolderFromISR,"ax",%progbits
 410              	 .align 1
 411              	 .global xQueueGetMutexHolderFromISR
 412              	 .thumb
 413              	 .thumb_func
 415              	xQueueGetMutexHolderFromISR:
 416              	 
 417              	 
 418              	 
 419 0000 40B9     	 cbnz r0,.L79
 420              	
 421 0002 4FF0FC03 	 mov r3,#252
 422 0006 83F31188 	 msr basepri,r3
 423 000a BFF36F8F 	 isb 
 424 000e BFF34F8F 	 dsb 
 425              	
 426              	
 427              	 .thumb
 428              	.L80:
 429 0012 FEE7     	 b .L80
 430              	.L79:
 431 0014 0368     	 ldr r3,[r0]
 432 0016 0BB9     	 cbnz r3,.L82
 433 0018 4068     	 ldr r0,[r0,#4]
 434 001a 7047     	 bx lr
 435              	.L82:
 436 001c 0020     	 movs r0,#0
 437 001e 7047     	 bx lr
 439              	 .section .text.xQueueCreateCountingSemaphore,"ax",%progbits
 440              	 .align 1
 441              	 .global xQueueCreateCountingSemaphore
 442              	 .thumb
 443              	 .thumb_func
 445              	xQueueCreateCountingSemaphore:
 446              	 
 447              	 
 448 0000 10B5     	 push {r4,lr}
 449 0002 0C46     	 mov r4,r1
 450 0004 40B9     	 cbnz r0,.L84
 451              	
 452 0006 4FF0FC03 	 mov r3,#252
 453 000a 83F31188 	 msr basepri,r3
 454 000e BFF36F8F 	 isb 
 455 0012 BFF34F8F 	 dsb 
 456              	
 457              	
 458              	 .thumb
 459              	.L85:
 460 0016 FEE7     	 b .L85
 461              	.L84:
 462 0018 8142     	 cmp r1,r0
 463 001a 08D9     	 bls .L86
 464              	
 465 001c 4FF0FC03 	 mov r3,#252
 466 0020 83F31188 	 msr basepri,r3
 467 0024 BFF36F8F 	 isb 
 468 0028 BFF34F8F 	 dsb 
 469              	
 470              	
 471              	 .thumb
 472              	.L87:
 473 002c FEE7     	 b .L87
 474              	.L86:
 475 002e 0021     	 movs r1,#0
 476 0030 0222     	 movs r2,#2
 477 0032 FFF7FEFF 	 bl xQueueGenericCreate
 478 0036 00B1     	 cbz r0,.L88
 479 0038 8463     	 str r4,[r0,#56]
 480              	.L88:
 481 003a 10BD     	 pop {r4,pc}
 483              	 .section .text.xQueueGenericSend,"ax",%progbits
 484              	 .align 1
 485              	 .global xQueueGenericSend
 486              	 .thumb
 487              	 .thumb_func
 489              	xQueueGenericSend:
 490              	 
 491              	 
 492 0000 2DE9FF41 	 push {r0,r1,r2,r3,r4,r5,r6,r7,r8,lr}
 493 0004 8846     	 mov r8,r1
 494 0006 0192     	 str r2,[sp,#4]
 495 0008 1F46     	 mov r7,r3
 496 000a 0446     	 mov r4,r0
 497 000c 40B9     	 cbnz r0,.L93
 498              	
 499 000e 4FF0FC03 	 mov r3,#252
 500 0012 83F31188 	 msr basepri,r3
 501 0016 BFF36F8F 	 isb 
 502 001a BFF34F8F 	 dsb 
 503              	
 504              	
 505              	 .thumb
 506              	.L94:
 507 001e FEE7     	 b .L94
 508              	.L93:
 509 0020 51B9     	 cbnz r1,.L95
 510 0022 036C     	 ldr r3,[r0,#64]
 511 0024 43B1     	 cbz r3,.L95
 512              	
 513 0026 4FF0FC03 	 mov r3,#252
 514 002a 83F31188 	 msr basepri,r3
 515 002e BFF36F8F 	 isb 
 516 0032 BFF34F8F 	 dsb 
 517              	
 518              	
 519              	 .thumb
 520              	.L97:
 521 0036 FEE7     	 b .L97
 522              	.L95:
 523 0038 022F     	 cmp r7,#2
 524 003a 0BD1     	 bne .L98
 525 003c E36B     	 ldr r3,[r4,#60]
 526 003e 012B     	 cmp r3,#1
 527 0040 08D0     	 beq .L98
 528              	
 529 0042 4FF0FC03 	 mov r3,#252
 530 0046 83F31188 	 msr basepri,r3
 531 004a BFF36F8F 	 isb 
 532 004e BFF34F8F 	 dsb 
 533              	
 534              	
 535              	 .thumb
 536              	.L100:
 537 0052 FEE7     	 b .L100
 538              	.L98:
 539 0054 FFF7FEFF 	 bl xTaskGetSchedulerState
 540 0058 10B9     	 cbnz r0,.L122
 541 005a 019E     	 ldr r6,[sp,#4]
 542 005c 0EB1     	 cbz r6,.L138
 543 005e 76E0     	 b .L146
 544              	.L122:
 545 0060 0026     	 movs r6,#0
 546              	.L138:
 547 0062 FFF7FEFF 	 bl vPortEnterCritical
 548 0066 A26B     	 ldr r2,[r4,#56]
 549 0068 E36B     	 ldr r3,[r4,#60]
 550 006a 9A42     	 cmp r2,r3
 551 006c 01D3     	 bcc .L104
 552 006e 022F     	 cmp r7,#2
 553 0070 1ED1     	 bne .L105
 554              	.L104:
 555 0072 2046     	 mov r0,r4
 556 0074 4146     	 mov r1,r8
 557 0076 3A46     	 mov r2,r7
 558 0078 FFF7FEFF 	 bl prvCopyDataToQueue
 559 007c A36C     	 ldr r3,[r4,#72]
 560 007e 23B1     	 cbz r3,.L106
 561 0080 2046     	 mov r0,r4
 562 0082 3946     	 mov r1,r7
 563 0084 FFF7FEFF 	 bl prvNotifyQueueSetContainer
 564 0088 05E0     	 b .L109
 565              	.L106:
 566 008a 636A     	 ldr r3,[r4,#36]
 567 008c 1BB1     	 cbz r3,.L109
 568 008e 04F12400 	 add r0,r4,#36
 569 0092 FFF7FEFF 	 bl xTaskRemoveFromEventList
 570              	.L109:
 571 0096 38B1     	 cbz r0,.L108
 572 0098 334B     	 ldr r3,.L148
 573 009a 4FF08052 	 mov r2,#268435456
 574 009e 1A60     	 str r2,[r3]
 575              	
 576 00a0 BFF34F8F 	 dsb
 577              	
 578              	
 579 00a4 BFF36F8F 	 isb
 580              	
 581              	 .thumb
 582              	.L108:
 583 00a8 FFF7FEFF 	 bl vPortExitCritical
 584 00ac 0120     	 movs r0,#1
 585 00ae 57E0     	 b .L139
 586              	.L105:
 587 00b0 019D     	 ldr r5,[sp,#4]
 588 00b2 15B9     	 cbnz r5,.L112
 589 00b4 FFF7FEFF 	 bl vPortExitCritical
 590 00b8 47E0     	 b .L143
 591              	.L112:
 592 00ba 16B9     	 cbnz r6,.L113
 593 00bc 02A8     	 add r0,sp,#8
 594 00be FFF7FEFF 	 bl vTaskInternalSetTimeOutState
 595              	.L113:
 596 00c2 FFF7FEFF 	 bl vPortExitCritical
 597 00c6 FFF7FEFF 	 bl vTaskSuspendAll
 598 00ca FFF7FEFF 	 bl vPortEnterCritical
 599 00ce 94F84430 	 ldrb r3,[r4,#68]
 600 00d2 FF2B     	 cmp r3,#255
 601 00d4 04BF     	 itt eq
 602 00d6 0023     	 moveq r3,#0
 603 00d8 84F84430 	 strbeq r3,[r4,#68]
 604 00dc 94F84530 	 ldrb r3,[r4,#69]
 605 00e0 FF2B     	 cmp r3,#255
 606 00e2 04BF     	 itt eq
 607 00e4 0023     	 moveq r3,#0
 608 00e6 84F84530 	 strbeq r3,[r4,#69]
 609 00ea FFF7FEFF 	 bl vPortExitCritical
 610 00ee 02A8     	 add r0,sp,#8
 611 00f0 01A9     	 add r1,sp,#4
 612 00f2 FFF7FEFF 	 bl xTaskCheckForTimeOut
 613 00f6 18BB     	 cbnz r0,.L116
 614 00f8 FFF7FEFF 	 bl vPortEnterCritical
 615 00fc A66B     	 ldr r6,[r4,#56]
 616 00fe E56B     	 ldr r5,[r4,#60]
 617 0100 FFF7FEFF 	 bl vPortExitCritical
 618 0104 AE42     	 cmp r6,r5
 619 0106 15D1     	 bne .L117
 620 0108 04F11000 	 add r0,r4,#16
 621 010c 0199     	 ldr r1,[sp,#4]
 622 010e FFF7FEFF 	 bl vTaskPlaceOnEventList
 623 0112 2046     	 mov r0,r4
 624 0114 FFF7FEFF 	 bl prvUnlockQueue
 625 0118 FFF7FEFF 	 bl xTaskResumeAll
 626 011c 08B1     	 cbz r0,.L147
 627              	.L118:
 628 011e 0126     	 movs r6,#1
 629 0120 9FE7     	 b .L138
 630              	.L147:
 631 0122 114B     	 ldr r3,.L148
 632 0124 4FF08052 	 mov r2,#268435456
 633 0128 1A60     	 str r2,[r3]
 634              	
 635 012a BFF34F8F 	 dsb
 636              	
 637              	
 638 012e BFF36F8F 	 isb
 639              	
 640              	 .thumb
 641 0132 F4E7     	 b .L118
 642              	.L117:
 643 0134 2046     	 mov r0,r4
 644 0136 FFF7FEFF 	 bl prvUnlockQueue
 645 013a FFF7FEFF 	 bl xTaskResumeAll
 646 013e EEE7     	 b .L118
 647              	.L116:
 648 0140 2046     	 mov r0,r4
 649 0142 FFF7FEFF 	 bl prvUnlockQueue
 650 0146 FFF7FEFF 	 bl xTaskResumeAll
 651              	.L143:
 652 014a 0020     	 movs r0,#0
 653 014c 08E0     	 b .L139
 654              	.L146:
 655              	
 656 014e 4FF0FC03 	 mov r3,#252
 657 0152 83F31188 	 msr basepri,r3
 658 0156 BFF36F8F 	 isb 
 659 015a BFF34F8F 	 dsb 
 660              	
 661              	
 662              	 .thumb
 663              	.L103:
 664 015e FEE7     	 b .L103
 665              	.L139:
 666 0160 04B0     	 add sp,sp,#16
 667              	 
 668 0162 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 669              	.L149:
 670 0166 00BF     	 .align 2
 671              	.L148:
 672 0168 04ED00E0 	 .word -536810236
 674              	 .section .text.xQueueCreateMutex,"ax",%progbits
 675              	 .align 1
 676              	 .global xQueueCreateMutex
 677              	 .thumb
 678              	 .thumb_func
 680              	xQueueCreateMutex:
 681              	 
 682              	 
 683 0000 10B5     	 push {r4,lr}
 684 0002 0246     	 mov r2,r0
 685 0004 0021     	 movs r1,#0
 686 0006 0120     	 movs r0,#1
 687 0008 FFF7FEFF 	 bl xQueueGenericCreate
 688 000c 0446     	 mov r4,r0
 689 000e 38B1     	 cbz r0,.L151
 690 0010 0021     	 movs r1,#0
 691 0012 4160     	 str r1,[r0,#4]
 692 0014 0160     	 str r1,[r0]
 693 0016 C160     	 str r1,[r0,#12]
 694 0018 0A46     	 mov r2,r1
 695 001a 0B46     	 mov r3,r1
 696 001c FFF7FEFF 	 bl xQueueGenericSend
 697              	.L151:
 698 0020 2046     	 mov r0,r4
 699 0022 10BD     	 pop {r4,pc}
 701              	 .section .text.xQueueGiveMutexRecursive,"ax",%progbits
 702              	 .align 1
 703              	 .global xQueueGiveMutexRecursive
 704              	 .thumb
 705              	 .thumb_func
 707              	xQueueGiveMutexRecursive:
 708              	 
 709              	 
 710 0000 38B5     	 push {r3,r4,r5,lr}
 711 0002 0446     	 mov r4,r0
 712 0004 40B9     	 cbnz r0,.L156
 713              	
 714 0006 4FF0FC03 	 mov r3,#252
 715 000a 83F31188 	 msr basepri,r3
 716 000e BFF36F8F 	 isb 
 717 0012 BFF34F8F 	 dsb 
 718              	
 719              	
 720              	 .thumb
 721              	.L157:
 722 0016 FEE7     	 b .L157
 723              	.L156:
 724 0018 4568     	 ldr r5,[r0,#4]
 725 001a FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 726 001e 8542     	 cmp r5,r0
 727 0020 09D1     	 bne .L159
 728 0022 E168     	 ldr r1,[r4,#12]
 729 0024 0139     	 subs r1,r1,#1
 730 0026 E160     	 str r1,[r4,#12]
 731 0028 39B9     	 cbnz r1,.L160
 732 002a 2046     	 mov r0,r4
 733 002c 0A46     	 mov r2,r1
 734 002e 0B46     	 mov r3,r1
 735 0030 FFF7FEFF 	 bl xQueueGenericSend
 736 0034 01E0     	 b .L160
 737              	.L159:
 738 0036 0020     	 movs r0,#0
 739 0038 38BD     	 pop {r3,r4,r5,pc}
 740              	.L160:
 741 003a 0120     	 movs r0,#1
 742 003c 38BD     	 pop {r3,r4,r5,pc}
 744              	 .section .text.xQueueGenericSendFromISR,"ax",%progbits
 745              	 .align 1
 746              	 .global xQueueGenericSendFromISR
 747              	 .thumb
 748              	 .thumb_func
 750              	xQueueGenericSendFromISR:
 751              	 
 752              	 
 753 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 754 0004 8846     	 mov r8,r1
 755 0006 9146     	 mov r9,r2
 756 0008 1F46     	 mov r7,r3
 757 000a 0446     	 mov r4,r0
 758 000c 40B9     	 cbnz r0,.L162
 759              	
 760 000e 4FF0FC03 	 mov r3,#252
 761 0012 83F31188 	 msr basepri,r3
 762 0016 BFF36F8F 	 isb 
 763 001a BFF34F8F 	 dsb 
 764              	
 765              	
 766              	 .thumb
 767              	.L163:
 768 001e FEE7     	 b .L163
 769              	.L162:
 770 0020 51B9     	 cbnz r1,.L164
 771 0022 036C     	 ldr r3,[r0,#64]
 772 0024 43B1     	 cbz r3,.L164
 773              	
 774 0026 4FF0FC03 	 mov r3,#252
 775 002a 83F31188 	 msr basepri,r3
 776 002e BFF36F8F 	 isb 
 777 0032 BFF34F8F 	 dsb 
 778              	
 779              	
 780              	 .thumb
 781              	.L166:
 782 0036 FEE7     	 b .L166
 783              	.L164:
 784 0038 022F     	 cmp r7,#2
 785 003a 0BD1     	 bne .L167
 786 003c E36B     	 ldr r3,[r4,#60]
 787 003e 012B     	 cmp r3,#1
 788 0040 08D0     	 beq .L167
 789              	
 790 0042 4FF0FC03 	 mov r3,#252
 791 0046 83F31188 	 msr basepri,r3
 792 004a BFF36F8F 	 isb 
 793 004e BFF34F8F 	 dsb 
 794              	
 795              	
 796              	 .thumb
 797              	.L169:
 798 0052 FEE7     	 b .L169
 799              	.L167:
 800 0054 FFF7FEFF 	 bl vPortValidateInterruptPriority
 801              	
 802 0058 EFF31186 	 mrs r6,basepri
 803 005c 4FF0FC03 	 mov r3,#252
 804 0060 83F31188 	 msr basepri,r3
 805 0064 BFF36F8F 	 isb 
 806 0068 BFF34F8F 	 dsb 
 807              	
 808              	
 809              	 .thumb
 810 006c A26B     	 ldr r2,[r4,#56]
 811 006e E36B     	 ldr r3,[r4,#60]
 812 0070 9A42     	 cmp r2,r3
 813 0072 01D3     	 bcc .L176
 814 0074 022F     	 cmp r7,#2
 815 0076 24D1     	 bne .L178
 816              	.L176:
 817 0078 94F84550 	 ldrb r5,[r4,#69]
 818 007c 2046     	 mov r0,r4
 819 007e EDB2     	 uxtb r5,r5
 820 0080 4146     	 mov r1,r8
 821 0082 3A46     	 mov r2,r7
 822 0084 FFF7FEFF 	 bl prvCopyDataToQueue
 823 0088 FF2D     	 cmp r5,#255
 824 008a 14D1     	 bne .L171
 825 008c A36C     	 ldr r3,[r4,#72]
 826 008e 5BB1     	 cbz r3,.L172
 827 0090 2046     	 mov r0,r4
 828 0092 3946     	 mov r1,r7
 829 0094 FFF7FEFF 	 bl prvNotifyQueueSetContainer
 830              	.L197:
 831 0098 88B1     	 cbz r0,.L198
 832 009a B9F1000F 	 cmp r9,#0
 833 009e 0ED0     	 beq .L198
 834 00a0 0120     	 movs r0,#1
 835 00a2 C9F80000 	 str r0,[r9]
 836 00a6 0DE0     	 b .L170
 837              	.L172:
 838 00a8 636A     	 ldr r3,[r4,#36]
 839 00aa 43B1     	 cbz r3,.L198
 840 00ac 04F12400 	 add r0,r4,#36
 841 00b0 FFF7FEFF 	 bl xTaskRemoveFromEventList
 842 00b4 F0E7     	 b .L197
 843              	.L171:
 844 00b6 0135     	 adds r5,r5,#1
 845 00b8 EDB2     	 uxtb r5,r5
 846 00ba 84F84550 	 strb r5,[r4,#69]
 847              	.L198:
 848 00be 0120     	 movs r0,#1
 849 00c0 00E0     	 b .L170
 850              	.L178:
 851 00c2 0020     	 movs r0,#0
 852              	.L170:
 853              	
 854 00c4 86F31188 	 msr basepri,r6
 855              	
 856              	 .thumb
 857 00c8 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 859              	 .section .text.xQueueGiveFromISR,"ax",%progbits
 860              	 .align 1
 861              	 .global xQueueGiveFromISR
 862              	 .thumb
 863              	 .thumb_func
 865              	xQueueGiveFromISR:
 866              	 
 867              	 
 868 0000 70B5     	 push {r4,r5,r6,lr}
 869 0002 0E46     	 mov r6,r1
 870 0004 0446     	 mov r4,r0
 871 0006 40B9     	 cbnz r0,.L200
 872              	
 873 0008 4FF0FC03 	 mov r3,#252
 874 000c 83F31188 	 msr basepri,r3
 875 0010 BFF36F8F 	 isb 
 876 0014 BFF34F8F 	 dsb 
 877              	
 878              	
 879              	 .thumb
 880              	.L201:
 881 0018 FEE7     	 b .L201
 882              	.L200:
 883 001a 036C     	 ldr r3,[r0,#64]
 884 001c 43B1     	 cbz r3,.L202
 885              	
 886 001e 4FF0FC03 	 mov r3,#252
 887 0022 83F31188 	 msr basepri,r3
 888 0026 BFF36F8F 	 isb 
 889 002a BFF34F8F 	 dsb 
 890              	
 891              	
 892              	 .thumb
 893              	.L203:
 894 002e FEE7     	 b .L203
 895              	.L202:
 896 0030 0368     	 ldr r3,[r0]
 897 0032 0BB9     	 cbnz r3,.L204
 898 0034 4368     	 ldr r3,[r0,#4]
 899 0036 83BB     	 cbnz r3,.L222
 900              	.L204:
 901 0038 FFF7FEFF 	 bl vPortValidateInterruptPriority
 902              	
 903 003c EFF31185 	 mrs r5,basepri
 904 0040 4FF0FC03 	 mov r3,#252
 905 0044 83F31188 	 msr basepri,r3
 906 0048 BFF36F8F 	 isb 
 907 004c BFF34F8F 	 dsb 
 908              	
 909              	
 910              	 .thumb
 911 0050 A26B     	 ldr r2,[r4,#56]
 912 0052 E36B     	 ldr r3,[r4,#60]
 913 0054 9A42     	 cmp r2,r3
 914 0056 1ED2     	 bcs .L227
 915 0058 94F84530 	 ldrb r3,[r4,#69]
 916 005c DBB2     	 uxtb r3,r3
 917 005e 0132     	 adds r2,r2,#1
 918 0060 FF2B     	 cmp r3,#255
 919 0062 A263     	 str r2,[r4,#56]
 920 0064 11D1     	 bne .L207
 921 0066 A36C     	 ldr r3,[r4,#72]
 922 0068 43B1     	 cbz r3,.L208
 923 006a 2046     	 mov r0,r4
 924 006c 0021     	 movs r1,#0
 925 006e FFF7FEFF 	 bl prvNotifyQueueSetContainer
 926              	.L225:
 927 0072 70B1     	 cbz r0,.L226
 928 0074 6EB1     	 cbz r6,.L226
 929 0076 0120     	 movs r0,#1
 930 0078 3060     	 str r0,[r6]
 931 007a 17E0     	 b .L210
 932              	.L208:
 933 007c 636A     	 ldr r3,[r4,#36]
 934 007e 43B1     	 cbz r3,.L226
 935 0080 04F12400 	 add r0,r4,#36
 936 0084 FFF7FEFF 	 bl xTaskRemoveFromEventList
 937 0088 F3E7     	 b .L225
 938              	.L207:
 939 008a 0133     	 adds r3,r3,#1
 940 008c DBB2     	 uxtb r3,r3
 941 008e 84F84530 	 strb r3,[r4,#69]
 942              	.L226:
 943 0092 0120     	 movs r0,#1
 944 0094 0AE0     	 b .L210
 945              	.L227:
 946 0096 0020     	 movs r0,#0
 947 0098 08E0     	 b .L210
 948              	.L222:
 949              	
 950 009a 4FF0FC03 	 mov r3,#252
 951 009e 83F31188 	 msr basepri,r3
 952 00a2 BFF36F8F 	 isb 
 953 00a6 BFF34F8F 	 dsb 
 954              	
 955              	
 956              	 .thumb
 957              	.L206:
 958 00aa FEE7     	 b .L206
 959              	.L210:
 960              	
 961 00ac 85F31188 	 msr basepri,r5
 962              	
 963              	 .thumb
 964 00b0 70BD     	 pop {r4,r5,r6,pc}
 966              	 .section .text.xQueueReceive,"ax",%progbits
 967              	 .align 1
 968              	 .global xQueueReceive
 969              	 .thumb
 970              	 .thumb_func
 972              	xQueueReceive:
 973              	 
 974              	 
 975 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 976 0002 85B0     	 sub sp,sp,#20
 977 0004 0F46     	 mov r7,r1
 978 0006 0192     	 str r2,[sp,#4]
 979 0008 0446     	 mov r4,r0
 980 000a 40B9     	 cbnz r0,.L229
 981              	
 982 000c 4FF0FC03 	 mov r3,#252
 983 0010 83F31188 	 msr basepri,r3
 984 0014 BFF36F8F 	 isb 
 985 0018 BFF34F8F 	 dsb 
 986              	
 987              	
 988              	 .thumb
 989              	.L230:
 990 001c FEE7     	 b .L230
 991              	.L229:
 992 001e 51B9     	 cbnz r1,.L231
 993 0020 036C     	 ldr r3,[r0,#64]
 994 0022 43B1     	 cbz r3,.L231
 995              	
 996 0024 4FF0FC03 	 mov r3,#252
 997 0028 83F31188 	 msr basepri,r3
 998 002c BFF36F8F 	 isb 
 999 0030 BFF34F8F 	 dsb 
 1000              	
 1001              	
 1002              	 .thumb
 1003              	.L233:
 1004 0034 FEE7     	 b .L233
 1005              	.L231:
 1006 0036 FFF7FEFF 	 bl xTaskGetSchedulerState
 1007 003a 10B9     	 cbnz r0,.L252
 1008 003c 019E     	 ldr r6,[sp,#4]
 1009 003e 0EB1     	 cbz r6,.L264
 1010 0040 6DE0     	 b .L268
 1011              	.L252:
 1012 0042 0026     	 movs r6,#0
 1013              	.L264:
 1014 0044 FFF7FEFF 	 bl vPortEnterCritical
 1015 0048 A56B     	 ldr r5,[r4,#56]
 1016 004a C5B1     	 cbz r5,.L237
 1017 004c 2046     	 mov r0,r4
 1018 004e 3946     	 mov r1,r7
 1019 0050 013D     	 subs r5,r5,#1
 1020 0052 FFF7FEFF 	 bl prvCopyDataFromQueue
 1021 0056 A563     	 str r5,[r4,#56]
 1022 0058 2369     	 ldr r3,[r4,#16]
 1023 005a 63B1     	 cbz r3,.L239
 1024 005c 04F11000 	 add r0,r4,#16
 1025 0060 FFF7FEFF 	 bl xTaskRemoveFromEventList
 1026 0064 38B1     	 cbz r0,.L239
 1027 0066 334B     	 ldr r3,.L270
 1028 0068 4FF08052 	 mov r2,#268435456
 1029 006c 1A60     	 str r2,[r3]
 1030              	
 1031 006e BFF34F8F 	 dsb
 1032              	
 1033              	
 1034 0072 BFF36F8F 	 isb
 1035              	
 1036              	 .thumb
 1037              	.L239:
 1038 0076 FFF7FEFF 	 bl vPortExitCritical
 1039 007a 0120     	 movs r0,#1
 1040 007c 58E0     	 b .L265
 1041              	.L237:
 1042 007e 019D     	 ldr r5,[sp,#4]
 1043 0080 15B9     	 cbnz r5,.L242
 1044 0082 FFF7FEFF 	 bl vPortExitCritical
 1045 0086 48E0     	 b .L267
 1046              	.L242:
 1047 0088 16B9     	 cbnz r6,.L243
 1048 008a 02A8     	 add r0,sp,#8
 1049 008c FFF7FEFF 	 bl vTaskInternalSetTimeOutState
 1050              	.L243:
 1051 0090 FFF7FEFF 	 bl vPortExitCritical
 1052 0094 FFF7FEFF 	 bl vTaskSuspendAll
 1053 0098 FFF7FEFF 	 bl vPortEnterCritical
 1054 009c 94F84430 	 ldrb r3,[r4,#68]
 1055 00a0 FF2B     	 cmp r3,#255
 1056 00a2 04BF     	 itt eq
 1057 00a4 0023     	 moveq r3,#0
 1058 00a6 84F84430 	 strbeq r3,[r4,#68]
 1059 00aa 94F84530 	 ldrb r3,[r4,#69]
 1060 00ae FF2B     	 cmp r3,#255
 1061 00b0 04BF     	 itt eq
 1062 00b2 0023     	 moveq r3,#0
 1063 00b4 84F84530 	 strbeq r3,[r4,#69]
 1064 00b8 FFF7FEFF 	 bl vPortExitCritical
 1065 00bc 02A8     	 add r0,sp,#8
 1066 00be 01A9     	 add r1,sp,#4
 1067 00c0 FFF7FEFF 	 bl xTaskCheckForTimeOut
 1068 00c4 F8B9     	 cbnz r0,.L246
 1069 00c6 2046     	 mov r0,r4
 1070 00c8 FFF7FEFF 	 bl prvIsQueueEmpty
 1071 00cc A8B1     	 cbz r0,.L247
 1072 00ce 04F12400 	 add r0,r4,#36
 1073 00d2 0199     	 ldr r1,[sp,#4]
 1074 00d4 FFF7FEFF 	 bl vTaskPlaceOnEventList
 1075 00d8 2046     	 mov r0,r4
 1076 00da FFF7FEFF 	 bl prvUnlockQueue
 1077 00de FFF7FEFF 	 bl xTaskResumeAll
 1078 00e2 08B1     	 cbz r0,.L269
 1079              	.L249:
 1080 00e4 0126     	 movs r6,#1
 1081 00e6 ADE7     	 b .L264
 1082              	.L269:
 1083 00e8 124B     	 ldr r3,.L270
 1084 00ea 4FF08052 	 mov r2,#268435456
 1085 00ee 1A60     	 str r2,[r3]
 1086              	
 1087 00f0 BFF34F8F 	 dsb
 1088              	
 1089              	
 1090 00f4 BFF36F8F 	 isb
 1091              	
 1092              	 .thumb
 1093 00f8 F4E7     	 b .L249
 1094              	.L247:
 1095 00fa 2046     	 mov r0,r4
 1096 00fc FFF7FEFF 	 bl prvUnlockQueue
 1097 0100 FFF7FEFF 	 bl xTaskResumeAll
 1098 0104 EEE7     	 b .L249
 1099              	.L246:
 1100 0106 2046     	 mov r0,r4
 1101 0108 FFF7FEFF 	 bl prvUnlockQueue
 1102 010c FFF7FEFF 	 bl xTaskResumeAll
 1103 0110 2046     	 mov r0,r4
 1104 0112 FFF7FEFF 	 bl prvIsQueueEmpty
 1105 0116 0028     	 cmp r0,#0
 1106 0118 E4D0     	 beq .L249
 1107              	.L267:
 1108 011a 0020     	 movs r0,#0
 1109 011c 08E0     	 b .L265
 1110              	.L268:
 1111              	
 1112 011e 4FF0FC03 	 mov r3,#252
 1113 0122 83F31188 	 msr basepri,r3
 1114 0126 BFF36F8F 	 isb 
 1115 012a BFF34F8F 	 dsb 
 1116              	
 1117              	
 1118              	 .thumb
 1119              	.L236:
 1120 012e FEE7     	 b .L236
 1121              	.L265:
 1122 0130 05B0     	 add sp,sp,#20
 1123              	 
 1124 0132 F0BD     	 pop {r4,r5,r6,r7,pc}
 1125              	.L271:
 1126              	 .align 2
 1127              	.L270:
 1128 0134 04ED00E0 	 .word -536810236
 1130              	 .section .text.xQueueSemaphoreTake,"ax",%progbits
 1131              	 .align 1
 1132              	 .global xQueueSemaphoreTake
 1133              	 .thumb
 1134              	 .thumb_func
 1136              	xQueueSemaphoreTake:
 1137              	 
 1138              	 
 1139 0000 7FB5     	 push {r0,r1,r2,r3,r4,r5,r6,lr}
 1140 0002 0446     	 mov r4,r0
 1141 0004 0191     	 str r1,[sp,#4]
 1142 0006 40B9     	 cbnz r0,.L273
 1143              	
 1144 0008 4FF0FC03 	 mov r3,#252
 1145 000c 83F31188 	 msr basepri,r3
 1146 0010 BFF36F8F 	 isb 
 1147 0014 BFF34F8F 	 dsb 
 1148              	
 1149              	
 1150              	 .thumb
 1151              	.L274:
 1152 0018 FEE7     	 b .L274
 1153              	.L273:
 1154 001a 056C     	 ldr r5,[r0,#64]
 1155 001c 45B1     	 cbz r5,.L275
 1156              	
 1157 001e 4FF0FC03 	 mov r3,#252
 1158 0022 83F31188 	 msr basepri,r3
 1159 0026 BFF36F8F 	 isb 
 1160 002a BFF34F8F 	 dsb 
 1161              	
 1162              	
 1163              	 .thumb
 1164              	.L276:
 1165 002e FEE7     	 b .L276
 1166              	.L275:
 1167 0030 FFF7FEFF 	 bl xTaskGetSchedulerState
 1168 0034 18B9     	 cbnz r0,.L298
 1169 0036 019D     	 ldr r5,[sp,#4]
 1170 0038 002D     	 cmp r5,#0
 1171 003a 40F08F80 	 bne .L312
 1172              	.L298:
 1173 003e 2E46     	 mov r6,r5
 1174              	.L308:
 1175 0040 FFF7FEFF 	 bl vPortEnterCritical
 1176 0044 A36B     	 ldr r3,[r4,#56]
 1177 0046 CBB1     	 cbz r3,.L280
 1178 0048 013B     	 subs r3,r3,#1
 1179 004a A363     	 str r3,[r4,#56]
 1180 004c 2368     	 ldr r3,[r4]
 1181 004e 13B9     	 cbnz r3,.L281
 1182 0050 FFF7FEFF 	 bl pvTaskIncrementMutexHeldCount
 1183 0054 6060     	 str r0,[r4,#4]
 1184              	.L281:
 1185 0056 2369     	 ldr r3,[r4,#16]
 1186 0058 63B1     	 cbz r3,.L283
 1187 005a 04F11000 	 add r0,r4,#16
 1188 005e FFF7FEFF 	 bl xTaskRemoveFromEventList
 1189 0062 38B1     	 cbz r0,.L283
 1190 0064 434B     	 ldr r3,.L314
 1191 0066 4FF08052 	 mov r2,#268435456
 1192 006a 1A60     	 str r2,[r3]
 1193              	
 1194 006c BFF34F8F 	 dsb
 1195              	
 1196              	
 1197 0070 BFF36F8F 	 isb
 1198              	
 1199              	 .thumb
 1200              	.L283:
 1201 0074 FFF7FEFF 	 bl vPortExitCritical
 1202 0078 0120     	 movs r0,#1
 1203 007a 78E0     	 b .L309
 1204              	.L280:
 1205 007c 019B     	 ldr r3,[sp,#4]
 1206 007e 53B9     	 cbnz r3,.L286
 1207 0080 002D     	 cmp r5,#0
 1208 0082 67D0     	 beq .L311
 1209              	
 1210 0084 4FF0FC03 	 mov r3,#252
 1211 0088 83F31188 	 msr basepri,r3
 1212 008c BFF36F8F 	 isb 
 1213 0090 BFF34F8F 	 dsb 
 1214              	
 1215              	
 1216              	 .thumb
 1217              	.L288:
 1218 0094 FEE7     	 b .L288
 1219              	.L286:
 1220 0096 16B9     	 cbnz r6,.L289
 1221 0098 02A8     	 add r0,sp,#8
 1222 009a FFF7FEFF 	 bl vTaskInternalSetTimeOutState
 1223              	.L289:
 1224 009e FFF7FEFF 	 bl vPortExitCritical
 1225 00a2 FFF7FEFF 	 bl vTaskSuspendAll
 1226 00a6 FFF7FEFF 	 bl vPortEnterCritical
 1227 00aa 94F84430 	 ldrb r3,[r4,#68]
 1228 00ae FF2B     	 cmp r3,#255
 1229 00b0 04BF     	 itt eq
 1230 00b2 0023     	 moveq r3,#0
 1231 00b4 84F84430 	 strbeq r3,[r4,#68]
 1232 00b8 94F84530 	 ldrb r3,[r4,#69]
 1233 00bc FF2B     	 cmp r3,#255
 1234 00be 04BF     	 itt eq
 1235 00c0 0023     	 moveq r3,#0
 1236 00c2 84F84530 	 strbeq r3,[r4,#69]
 1237 00c6 FFF7FEFF 	 bl vPortExitCritical
 1238 00ca 02A8     	 add r0,sp,#8
 1239 00cc 01A9     	 add r1,sp,#4
 1240 00ce FFF7FEFF 	 bl xTaskCheckForTimeOut
 1241 00d2 48BB     	 cbnz r0,.L292
 1242 00d4 2046     	 mov r0,r4
 1243 00d6 FFF7FEFF 	 bl prvIsQueueEmpty
 1244 00da F8B1     	 cbz r0,.L293
 1245 00dc 2368     	 ldr r3,[r4]
 1246 00de 3BB9     	 cbnz r3,.L294
 1247 00e0 FFF7FEFF 	 bl vPortEnterCritical
 1248 00e4 6068     	 ldr r0,[r4,#4]
 1249 00e6 FFF7FEFF 	 bl xTaskPriorityInherit
 1250 00ea 0546     	 mov r5,r0
 1251 00ec FFF7FEFF 	 bl vPortExitCritical
 1252              	.L294:
 1253 00f0 04F12400 	 add r0,r4,#36
 1254 00f4 0199     	 ldr r1,[sp,#4]
 1255 00f6 FFF7FEFF 	 bl vTaskPlaceOnEventList
 1256 00fa 2046     	 mov r0,r4
 1257 00fc FFF7FEFF 	 bl prvUnlockQueue
 1258 0100 FFF7FEFF 	 bl xTaskResumeAll
 1259 0104 08B1     	 cbz r0,.L313
 1260              	.L295:
 1261 0106 0126     	 movs r6,#1
 1262 0108 9AE7     	 b .L308
 1263              	.L313:
 1264 010a 1A4B     	 ldr r3,.L314
 1265 010c 4FF08052 	 mov r2,#268435456
 1266 0110 1A60     	 str r2,[r3]
 1267              	
 1268 0112 BFF34F8F 	 dsb
 1269              	
 1270              	
 1271 0116 BFF36F8F 	 isb
 1272              	
 1273              	 .thumb
 1274 011a F4E7     	 b .L295
 1275              	.L293:
 1276 011c 2046     	 mov r0,r4
 1277 011e FFF7FEFF 	 bl prvUnlockQueue
 1278 0122 FFF7FEFF 	 bl xTaskResumeAll
 1279 0126 EEE7     	 b .L295
 1280              	.L292:
 1281 0128 2046     	 mov r0,r4
 1282 012a FFF7FEFF 	 bl prvUnlockQueue
 1283 012e FFF7FEFF 	 bl xTaskResumeAll
 1284 0132 2046     	 mov r0,r4
 1285 0134 FFF7FEFF 	 bl prvIsQueueEmpty
 1286 0138 0028     	 cmp r0,#0
 1287 013a E4D0     	 beq .L295
 1288 013c 65B1     	 cbz r5,.L310
 1289 013e FFF7FEFF 	 bl vPortEnterCritical
 1290 0142 616A     	 ldr r1,[r4,#36]
 1291 0144 19B1     	 cbz r1,.L296
 1292 0146 236B     	 ldr r3,[r4,#48]
 1293 0148 1968     	 ldr r1,[r3]
 1294 014a C1F10501 	 rsb r1,r1,#5
 1295              	.L296:
 1296 014e 6068     	 ldr r0,[r4,#4]
 1297 0150 FFF7FEFF 	 bl vTaskPriorityDisinheritAfterTimeout
 1298              	.L311:
 1299 0154 FFF7FEFF 	 bl vPortExitCritical
 1300              	.L310:
 1301 0158 0020     	 movs r0,#0
 1302 015a 08E0     	 b .L309
 1303              	.L312:
 1304              	
 1305 015c 4FF0FC03 	 mov r3,#252
 1306 0160 83F31188 	 msr basepri,r3
 1307 0164 BFF36F8F 	 isb 
 1308 0168 BFF34F8F 	 dsb 
 1309              	
 1310              	
 1311              	 .thumb
 1312              	.L279:
 1313 016c FEE7     	 b .L279
 1314              	.L309:
 1315 016e 04B0     	 add sp,sp,#16
 1316              	 
 1317 0170 70BD     	 pop {r4,r5,r6,pc}
 1318              	.L315:
 1319 0172 00BF     	 .align 2
 1320              	.L314:
 1321 0174 04ED00E0 	 .word -536810236
 1323              	 .section .text.xQueueTakeMutexRecursive,"ax",%progbits
 1324              	 .align 1
 1325              	 .global xQueueTakeMutexRecursive
 1326              	 .thumb
 1327              	 .thumb_func
 1329              	xQueueTakeMutexRecursive:
 1330              	 
 1331              	 
 1332 0000 70B5     	 push {r4,r5,r6,lr}
 1333 0002 0D46     	 mov r5,r1
 1334 0004 0446     	 mov r4,r0
 1335 0006 40B9     	 cbnz r0,.L317
 1336              	
 1337 0008 4FF0FC03 	 mov r3,#252
 1338 000c 83F31188 	 msr basepri,r3
 1339 0010 BFF36F8F 	 isb 
 1340 0014 BFF34F8F 	 dsb 
 1341              	
 1342              	
 1343              	 .thumb
 1344              	.L318:
 1345 0018 FEE7     	 b .L318
 1346              	.L317:
 1347 001a 4668     	 ldr r6,[r0,#4]
 1348 001c FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 1349 0020 8642     	 cmp r6,r0
 1350 0022 04D1     	 bne .L319
 1351 0024 E368     	 ldr r3,[r4,#12]
 1352 0026 0133     	 adds r3,r3,#1
 1353 0028 E360     	 str r3,[r4,#12]
 1354 002a 0120     	 movs r0,#1
 1355 002c 70BD     	 pop {r4,r5,r6,pc}
 1356              	.L319:
 1357 002e 2046     	 mov r0,r4
 1358 0030 2946     	 mov r1,r5
 1359 0032 FFF7FEFF 	 bl xQueueSemaphoreTake
 1360 0036 10B1     	 cbz r0,.L320
 1361 0038 E368     	 ldr r3,[r4,#12]
 1362 003a 0133     	 adds r3,r3,#1
 1363 003c E360     	 str r3,[r4,#12]
 1364              	.L320:
 1365 003e 70BD     	 pop {r4,r5,r6,pc}
 1367              	 .section .text.xQueuePeek,"ax",%progbits
 1368              	 .align 1
 1369              	 .global xQueuePeek
 1370              	 .thumb
 1371              	 .thumb_func
 1373              	xQueuePeek:
 1374              	 
 1375              	 
 1376 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1377 0002 85B0     	 sub sp,sp,#20
 1378 0004 0F46     	 mov r7,r1
 1379 0006 0192     	 str r2,[sp,#4]
 1380 0008 0446     	 mov r4,r0
 1381 000a 40B9     	 cbnz r0,.L325
 1382              	
 1383 000c 4FF0FC03 	 mov r3,#252
 1384 0010 83F31188 	 msr basepri,r3
 1385 0014 BFF36F8F 	 isb 
 1386 0018 BFF34F8F 	 dsb 
 1387              	
 1388              	
 1389              	 .thumb
 1390              	.L326:
 1391 001c FEE7     	 b .L326
 1392              	.L325:
 1393 001e 51B9     	 cbnz r1,.L327
 1394 0020 036C     	 ldr r3,[r0,#64]
 1395 0022 43B1     	 cbz r3,.L327
 1396              	
 1397 0024 4FF0FC03 	 mov r3,#252
 1398 0028 83F31188 	 msr basepri,r3
 1399 002c BFF36F8F 	 isb 
 1400 0030 BFF34F8F 	 dsb 
 1401              	
 1402              	
 1403              	 .thumb
 1404              	.L329:
 1405 0034 FEE7     	 b .L329
 1406              	.L327:
 1407 0036 FFF7FEFF 	 bl xTaskGetSchedulerState
 1408 003a 10B9     	 cbnz r0,.L348
 1409 003c 019E     	 ldr r6,[sp,#4]
 1410 003e 0EB1     	 cbz r6,.L360
 1411 0040 6DE0     	 b .L364
 1412              	.L348:
 1413 0042 0026     	 movs r6,#0
 1414              	.L360:
 1415 0044 FFF7FEFF 	 bl vPortEnterCritical
 1416 0048 A36B     	 ldr r3,[r4,#56]
 1417 004a C3B1     	 cbz r3,.L333
 1418 004c 2046     	 mov r0,r4
 1419 004e 3946     	 mov r1,r7
 1420 0050 E568     	 ldr r5,[r4,#12]
 1421 0052 FFF7FEFF 	 bl prvCopyDataFromQueue
 1422 0056 636A     	 ldr r3,[r4,#36]
 1423 0058 E560     	 str r5,[r4,#12]
 1424 005a 63B1     	 cbz r3,.L335
 1425 005c 04F12400 	 add r0,r4,#36
 1426 0060 FFF7FEFF 	 bl xTaskRemoveFromEventList
 1427 0064 38B1     	 cbz r0,.L335
 1428 0066 334B     	 ldr r3,.L366
 1429 0068 4FF08052 	 mov r2,#268435456
 1430 006c 1A60     	 str r2,[r3]
 1431              	
 1432 006e BFF34F8F 	 dsb
 1433              	
 1434              	
 1435 0072 BFF36F8F 	 isb
 1436              	
 1437              	 .thumb
 1438              	.L335:
 1439 0076 FFF7FEFF 	 bl vPortExitCritical
 1440 007a 0120     	 movs r0,#1
 1441 007c 58E0     	 b .L361
 1442              	.L333:
 1443 007e 019D     	 ldr r5,[sp,#4]
 1444 0080 15B9     	 cbnz r5,.L338
 1445 0082 FFF7FEFF 	 bl vPortExitCritical
 1446 0086 48E0     	 b .L363
 1447              	.L338:
 1448 0088 16B9     	 cbnz r6,.L339
 1449 008a 02A8     	 add r0,sp,#8
 1450 008c FFF7FEFF 	 bl vTaskInternalSetTimeOutState
 1451              	.L339:
 1452 0090 FFF7FEFF 	 bl vPortExitCritical
 1453 0094 FFF7FEFF 	 bl vTaskSuspendAll
 1454 0098 FFF7FEFF 	 bl vPortEnterCritical
 1455 009c 94F84430 	 ldrb r3,[r4,#68]
 1456 00a0 FF2B     	 cmp r3,#255
 1457 00a2 04BF     	 itt eq
 1458 00a4 0023     	 moveq r3,#0
 1459 00a6 84F84430 	 strbeq r3,[r4,#68]
 1460 00aa 94F84530 	 ldrb r3,[r4,#69]
 1461 00ae FF2B     	 cmp r3,#255
 1462 00b0 04BF     	 itt eq
 1463 00b2 0023     	 moveq r3,#0
 1464 00b4 84F84530 	 strbeq r3,[r4,#69]
 1465 00b8 FFF7FEFF 	 bl vPortExitCritical
 1466 00bc 02A8     	 add r0,sp,#8
 1467 00be 01A9     	 add r1,sp,#4
 1468 00c0 FFF7FEFF 	 bl xTaskCheckForTimeOut
 1469 00c4 F8B9     	 cbnz r0,.L342
 1470 00c6 2046     	 mov r0,r4
 1471 00c8 FFF7FEFF 	 bl prvIsQueueEmpty
 1472 00cc A8B1     	 cbz r0,.L343
 1473 00ce 04F12400 	 add r0,r4,#36
 1474 00d2 0199     	 ldr r1,[sp,#4]
 1475 00d4 FFF7FEFF 	 bl vTaskPlaceOnEventList
 1476 00d8 2046     	 mov r0,r4
 1477 00da FFF7FEFF 	 bl prvUnlockQueue
 1478 00de FFF7FEFF 	 bl xTaskResumeAll
 1479 00e2 08B1     	 cbz r0,.L365
 1480              	.L345:
 1481 00e4 0126     	 movs r6,#1
 1482 00e6 ADE7     	 b .L360
 1483              	.L365:
 1484 00e8 124B     	 ldr r3,.L366
 1485 00ea 4FF08052 	 mov r2,#268435456
 1486 00ee 1A60     	 str r2,[r3]
 1487              	
 1488 00f0 BFF34F8F 	 dsb
 1489              	
 1490              	
 1491 00f4 BFF36F8F 	 isb
 1492              	
 1493              	 .thumb
 1494 00f8 F4E7     	 b .L345
 1495              	.L343:
 1496 00fa 2046     	 mov r0,r4
 1497 00fc FFF7FEFF 	 bl prvUnlockQueue
 1498 0100 FFF7FEFF 	 bl xTaskResumeAll
 1499 0104 EEE7     	 b .L345
 1500              	.L342:
 1501 0106 2046     	 mov r0,r4
 1502 0108 FFF7FEFF 	 bl prvUnlockQueue
 1503 010c FFF7FEFF 	 bl xTaskResumeAll
 1504 0110 2046     	 mov r0,r4
 1505 0112 FFF7FEFF 	 bl prvIsQueueEmpty
 1506 0116 0028     	 cmp r0,#0
 1507 0118 E4D0     	 beq .L345
 1508              	.L363:
 1509 011a 0020     	 movs r0,#0
 1510 011c 08E0     	 b .L361
 1511              	.L364:
 1512              	
 1513 011e 4FF0FC03 	 mov r3,#252
 1514 0122 83F31188 	 msr basepri,r3
 1515 0126 BFF36F8F 	 isb 
 1516 012a BFF34F8F 	 dsb 
 1517              	
 1518              	
 1519              	 .thumb
 1520              	.L332:
 1521 012e FEE7     	 b .L332
 1522              	.L361:
 1523 0130 05B0     	 add sp,sp,#20
 1524              	 
 1525 0132 F0BD     	 pop {r4,r5,r6,r7,pc}
 1526              	.L367:
 1527              	 .align 2
 1528              	.L366:
 1529 0134 04ED00E0 	 .word -536810236
 1531              	 .section .text.xQueueReceiveFromISR,"ax",%progbits
 1532              	 .align 1
 1533              	 .global xQueueReceiveFromISR
 1534              	 .thumb
 1535              	 .thumb_func
 1537              	xQueueReceiveFromISR:
 1538              	 
 1539              	 
 1540 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 1541 0004 8946     	 mov r9,r1
 1542 0006 9046     	 mov r8,r2
 1543 0008 0546     	 mov r5,r0
 1544 000a 40B9     	 cbnz r0,.L369
 1545              	
 1546 000c 4FF0FC03 	 mov r3,#252
 1547 0010 83F31188 	 msr basepri,r3
 1548 0014 BFF36F8F 	 isb 
 1549 0018 BFF34F8F 	 dsb 
 1550              	
 1551              	
 1552              	 .thumb
 1553              	.L370:
 1554 001c FEE7     	 b .L370
 1555              	.L369:
 1556 001e 51B9     	 cbnz r1,.L371
 1557 0020 036C     	 ldr r3,[r0,#64]
 1558 0022 43B1     	 cbz r3,.L371
 1559              	
 1560 0024 4FF0FC03 	 mov r3,#252
 1561 0028 83F31188 	 msr basepri,r3
 1562 002c BFF36F8F 	 isb 
 1563 0030 BFF34F8F 	 dsb 
 1564              	
 1565              	
 1566              	 .thumb
 1567              	.L373:
 1568 0034 FEE7     	 b .L373
 1569              	.L371:
 1570 0036 FFF7FEFF 	 bl vPortValidateInterruptPriority
 1571              	
 1572 003a EFF31187 	 mrs r7,basepri
 1573 003e 4FF0FC03 	 mov r3,#252
 1574 0042 83F31188 	 msr basepri,r3
 1575 0046 BFF36F8F 	 isb 
 1576 004a BFF34F8F 	 dsb 
 1577              	
 1578              	
 1579              	 .thumb
 1580 004e AC6B     	 ldr r4,[r5,#56]
 1581 0050 F4B1     	 cbz r4,.L391
 1582 0052 95F84460 	 ldrb r6,[r5,#68]
 1583 0056 2846     	 mov r0,r5
 1584 0058 F6B2     	 uxtb r6,r6
 1585 005a 4946     	 mov r1,r9
 1586 005c FFF7FEFF 	 bl prvCopyDataFromQueue
 1587 0060 601E     	 subs r0,r4,#1
 1588 0062 FF2E     	 cmp r6,#255
 1589 0064 A863     	 str r0,[r5,#56]
 1590 0066 0DD1     	 bne .L374
 1591 0068 2B69     	 ldr r3,[r5,#16]
 1592 006a 7BB1     	 cbz r3,.L390
 1593 006c 05F11000 	 add r0,r5,#16
 1594 0070 FFF7FEFF 	 bl xTaskRemoveFromEventList
 1595 0074 50B1     	 cbz r0,.L390
 1596 0076 B8F1000F 	 cmp r8,#0
 1597 007a 07D0     	 beq .L390
 1598 007c 0120     	 movs r0,#1
 1599 007e C8F80000 	 str r0,[r8]
 1600 0082 06E0     	 b .L376
 1601              	.L374:
 1602 0084 0136     	 adds r6,r6,#1
 1603 0086 F6B2     	 uxtb r6,r6
 1604 0088 85F84460 	 strb r6,[r5,#68]
 1605              	.L390:
 1606 008c 0120     	 movs r0,#1
 1607 008e 00E0     	 b .L376
 1608              	.L391:
 1609 0090 2046     	 mov r0,r4
 1610              	.L376:
 1611              	
 1612 0092 87F31188 	 msr basepri,r7
 1613              	
 1614              	 .thumb
 1615 0096 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 1617              	 .section .text.xQueuePeekFromISR,"ax",%progbits
 1618              	 .align 1
 1619              	 .global xQueuePeekFromISR
 1620              	 .thumb
 1621              	 .thumb_func
 1623              	xQueuePeekFromISR:
 1624              	 
 1625              	 
 1626 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 1627 0002 0D46     	 mov r5,r1
 1628 0004 0446     	 mov r4,r0
 1629 0006 40B9     	 cbnz r0,.L393
 1630              	
 1631 0008 4FF0FC03 	 mov r3,#252
 1632 000c 83F31188 	 msr basepri,r3
 1633 0010 BFF36F8F 	 isb 
 1634 0014 BFF34F8F 	 dsb 
 1635              	
 1636              	
 1637              	 .thumb
 1638              	.L394:
 1639 0018 FEE7     	 b .L394
 1640              	.L393:
 1641 001a 036C     	 ldr r3,[r0,#64]
 1642 001c 09B9     	 cbnz r1,.L395
 1643 001e 0BB1     	 cbz r3,.L400
 1644 0020 09E0     	 b .L410
 1645              	.L395:
 1646 0022 8BB9     	 cbnz r3,.L411
 1647              	.L400:
 1648              	
 1649 0024 4FF0FC03 	 mov r3,#252
 1650 0028 83F31188 	 msr basepri,r3
 1651 002c BFF36F8F 	 isb 
 1652 0030 BFF34F8F 	 dsb 
 1653              	
 1654              	
 1655              	 .thumb
 1656              	.L398:
 1657 0034 FEE7     	 b .L398
 1658              	.L410:
 1659              	
 1660 0036 4FF0FC03 	 mov r3,#252
 1661 003a 83F31188 	 msr basepri,r3
 1662 003e BFF36F8F 	 isb 
 1663 0042 BFF34F8F 	 dsb 
 1664              	
 1665              	
 1666              	 .thumb
 1667              	.L397:
 1668 0046 FEE7     	 b .L397
 1669              	.L411:
 1670 0048 FFF7FEFF 	 bl vPortValidateInterruptPriority
 1671              	
 1672 004c EFF31186 	 mrs r6,basepri
 1673 0050 4FF0FC03 	 mov r3,#252
 1674 0054 83F31188 	 msr basepri,r3
 1675 0058 BFF36F8F 	 isb 
 1676 005c BFF34F8F 	 dsb 
 1677              	
 1678              	
 1679              	 .thumb
 1680 0060 A06B     	 ldr r0,[r4,#56]
 1681 0062 30B1     	 cbz r0,.L399
 1682 0064 E768     	 ldr r7,[r4,#12]
 1683 0066 2046     	 mov r0,r4
 1684 0068 2946     	 mov r1,r5
 1685 006a FFF7FEFF 	 bl prvCopyDataFromQueue
 1686 006e E760     	 str r7,[r4,#12]
 1687 0070 0120     	 movs r0,#1
 1688              	.L399:
 1689              	
 1690 0072 86F31188 	 msr basepri,r6
 1691              	
 1692              	 .thumb
 1693 0076 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 1695              	 .section .text.uxQueueMessagesWaiting,"ax",%progbits
 1696              	 .align 1
 1697              	 .global uxQueueMessagesWaiting
 1698              	 .thumb
 1699              	 .thumb_func
 1701              	uxQueueMessagesWaiting:
 1702              	 
 1703              	 
 1704 0000 10B5     	 push {r4,lr}
 1705 0002 0446     	 mov r4,r0
 1706 0004 40B9     	 cbnz r0,.L413
 1707              	
 1708 0006 4FF0FC03 	 mov r3,#252
 1709 000a 83F31188 	 msr basepri,r3
 1710 000e BFF36F8F 	 isb 
 1711 0012 BFF34F8F 	 dsb 
 1712              	
 1713              	
 1714              	 .thumb
 1715              	.L414:
 1716 0016 FEE7     	 b .L414
 1717              	.L413:
 1718 0018 FFF7FEFF 	 bl vPortEnterCritical
 1719 001c A46B     	 ldr r4,[r4,#56]
 1720 001e FFF7FEFF 	 bl vPortExitCritical
 1721 0022 2046     	 mov r0,r4
 1722 0024 10BD     	 pop {r4,pc}
 1724              	 .section .text.uxQueueSpacesAvailable,"ax",%progbits
 1725              	 .align 1
 1726              	 .global uxQueueSpacesAvailable
 1727              	 .thumb
 1728              	 .thumb_func
 1730              	uxQueueSpacesAvailable:
 1731              	 
 1732              	 
 1733 0000 38B5     	 push {r3,r4,r5,lr}
 1734 0002 0546     	 mov r5,r0
 1735 0004 40B9     	 cbnz r0,.L416
 1736              	
 1737 0006 4FF0FC03 	 mov r3,#252
 1738 000a 83F31188 	 msr basepri,r3
 1739 000e BFF36F8F 	 isb 
 1740 0012 BFF34F8F 	 dsb 
 1741              	
 1742              	
 1743              	 .thumb
 1744              	.L417:
 1745 0016 FEE7     	 b .L417
 1746              	.L416:
 1747 0018 FFF7FEFF 	 bl vPortEnterCritical
 1748 001c AC6B     	 ldr r4,[r5,#56]
 1749 001e EB6B     	 ldr r3,[r5,#60]
 1750 0020 1C1B     	 subs r4,r3,r4
 1751 0022 FFF7FEFF 	 bl vPortExitCritical
 1752 0026 2046     	 mov r0,r4
 1753 0028 38BD     	 pop {r3,r4,r5,pc}
 1755              	 .section .text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1756              	 .align 1
 1757              	 .global uxQueueMessagesWaitingFromISR
 1758              	 .thumb
 1759              	 .thumb_func
 1761              	uxQueueMessagesWaitingFromISR:
 1762              	 
 1763              	 
 1764              	 
 1765 0000 40B9     	 cbnz r0,.L419
 1766              	
 1767 0002 4FF0FC03 	 mov r3,#252
 1768 0006 83F31188 	 msr basepri,r3
 1769 000a BFF36F8F 	 isb 
 1770 000e BFF34F8F 	 dsb 
 1771              	
 1772              	
 1773              	 .thumb
 1774              	.L420:
 1775 0012 FEE7     	 b .L420
 1776              	.L419:
 1777 0014 806B     	 ldr r0,[r0,#56]
 1778 0016 7047     	 bx lr
 1780              	 .section .text.uxQueueGetQueueNumber,"ax",%progbits
 1781              	 .align 1
 1782              	 .global uxQueueGetQueueNumber
 1783              	 .thumb
 1784              	 .thumb_func
 1786              	uxQueueGetQueueNumber:
 1787              	 
 1788              	 
 1789              	 
 1790 0000 C06C     	 ldr r0,[r0,#76]
 1791 0002 7047     	 bx lr
 1793              	 .section .text.vQueueSetQueueNumber,"ax",%progbits
 1794              	 .align 1
 1795              	 .global vQueueSetQueueNumber
 1796              	 .thumb
 1797              	 .thumb_func
 1799              	vQueueSetQueueNumber:
 1800              	 
 1801              	 
 1802              	 
 1803 0000 C164     	 str r1,[r0,#76]
 1804 0002 7047     	 bx lr
 1806              	 .section .text.ucQueueGetQueueType,"ax",%progbits
 1807              	 .align 1
 1808              	 .global ucQueueGetQueueType
 1809              	 .thumb
 1810              	 .thumb_func
 1812              	ucQueueGetQueueType:
 1813              	 
 1814              	 
 1815              	 
 1816 0000 90F85000 	 ldrb r0,[r0,#80]
 1817 0004 7047     	 bx lr
 1819              	 .section .text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 1820              	 .align 1
 1821              	 .global xQueueIsQueueEmptyFromISR
 1822              	 .thumb
 1823              	 .thumb_func
 1825              	xQueueIsQueueEmptyFromISR:
 1826              	 
 1827              	 
 1828              	 
 1829 0000 40B9     	 cbnz r0,.L425
 1830              	
 1831 0002 4FF0FC03 	 mov r3,#252
 1832 0006 83F31188 	 msr basepri,r3
 1833 000a BFF36F8F 	 isb 
 1834 000e BFF34F8F 	 dsb 
 1835              	
 1836              	
 1837              	 .thumb
 1838              	.L426:
 1839 0012 FEE7     	 b .L426
 1840              	.L425:
 1841 0014 806B     	 ldr r0,[r0,#56]
 1842 0016 B0FA80F0 	 clz r0,r0
 1843 001a 4009     	 lsrs r0,r0,#5
 1844 001c 7047     	 bx lr
 1846              	 .section .text.xQueueIsQueueFullFromISR,"ax",%progbits
 1847              	 .align 1
 1848              	 .global xQueueIsQueueFullFromISR
 1849              	 .thumb
 1850              	 .thumb_func
 1852              	xQueueIsQueueFullFromISR:
 1853              	 
 1854              	 
 1855              	 
 1856 0000 40B9     	 cbnz r0,.L428
 1857              	
 1858 0002 4FF0FC03 	 mov r3,#252
 1859 0006 83F31188 	 msr basepri,r3
 1860 000a BFF36F8F 	 isb 
 1861 000e BFF34F8F 	 dsb 
 1862              	
 1863              	
 1864              	 .thumb
 1865              	.L429:
 1866 0012 FEE7     	 b .L429
 1867              	.L428:
 1868 0014 826B     	 ldr r2,[r0,#56]
 1869 0016 C06B     	 ldr r0,[r0,#60]
 1870 0018 131A     	 subs r3,r2,r0
 1871 001a 5842     	 rsbs r0,r3,#0
 1872 001c 5841     	 adcs r0,r0,r3
 1873 001e 7047     	 bx lr
 1875              	 .section .text.vQueueAddToRegistry,"ax",%progbits
 1876              	 .align 1
 1877              	 .global vQueueAddToRegistry
 1878              	 .thumb
 1879              	 .thumb_func
 1881              	vQueueAddToRegistry:
 1882              	 
 1883              	 
 1884 0000 30B5     	 push {r4,r5,lr}
 1885 0002 0023     	 movs r3,#0
 1886              	.L433:
 1887 0004 064A     	 ldr r2,.L435
 1888 0006 52F83350 	 ldr r5,[r2,r3,lsl#3]
 1889 000a 02EBC304 	 add r4,r2,r3,lsl#3
 1890 000e 1DB9     	 cbnz r5,.L431
 1891 0010 42F83310 	 str r1,[r2,r3,lsl#3]
 1892 0014 6060     	 str r0,[r4,#4]
 1893 0016 30BD     	 pop {r4,r5,pc}
 1894              	.L431:
 1895 0018 0133     	 adds r3,r3,#1
 1896 001a 082B     	 cmp r3,#8
 1897 001c F2D1     	 bne .L433
 1898 001e 30BD     	 pop {r4,r5,pc}
 1899              	.L436:
 1900              	 .align 2
 1901              	.L435:
 1902 0020 00000000 	 .word xQueueRegistry
 1904              	 .section .text.pcQueueGetName,"ax",%progbits
 1905              	 .align 1
 1906              	 .global pcQueueGetName
 1907              	 .thumb
 1908              	 .thumb_func
 1910              	pcQueueGetName:
 1911              	 
 1912              	 
 1913              	 
 1914 0000 0023     	 movs r3,#0
 1915              	.L440:
 1916 0002 074A     	 ldr r2,.L442
 1917 0004 02EBC301 	 add r1,r2,r3,lsl#3
 1918 0008 4968     	 ldr r1,[r1,#4]
 1919 000a 8142     	 cmp r1,r0
 1920 000c 02D1     	 bne .L438
 1921 000e 52F83300 	 ldr r0,[r2,r3,lsl#3]
 1922 0012 7047     	 bx lr
 1923              	.L438:
 1924 0014 0133     	 adds r3,r3,#1
 1925 0016 082B     	 cmp r3,#8
 1926 0018 F3D1     	 bne .L440
 1927 001a 0020     	 movs r0,#0
 1928 001c 7047     	 bx lr
 1929              	.L443:
 1930 001e 00BF     	 .align 2
 1931              	.L442:
 1932 0020 00000000 	 .word xQueueRegistry
 1934              	 .section .text.vQueueUnregisterQueue,"ax",%progbits
 1935              	 .align 1
 1936              	 .global vQueueUnregisterQueue
 1937              	 .thumb
 1938              	 .thumb_func
 1940              	vQueueUnregisterQueue:
 1941              	 
 1942              	 
 1943 0000 10B5     	 push {r4,lr}
 1944 0002 0023     	 movs r3,#0
 1945              	.L447:
 1946 0004 074C     	 ldr r4,.L449
 1947 0006 04EBC302 	 add r2,r4,r3,lsl#3
 1948 000a 5168     	 ldr r1,[r2,#4]
 1949 000c 8142     	 cmp r1,r0
 1950 000e 04D1     	 bne .L445
 1951 0010 0021     	 movs r1,#0
 1952 0012 44F83310 	 str r1,[r4,r3,lsl#3]
 1953 0016 5160     	 str r1,[r2,#4]
 1954 0018 10BD     	 pop {r4,pc}
 1955              	.L445:
 1956 001a 0133     	 adds r3,r3,#1
 1957 001c 082B     	 cmp r3,#8
 1958 001e F1D1     	 bne .L447
 1959 0020 10BD     	 pop {r4,pc}
 1960              	.L450:
 1961 0022 00BF     	 .align 2
 1962              	.L449:
 1963 0024 00000000 	 .word xQueueRegistry
 1965              	 .section .text.vQueueDelete,"ax",%progbits
 1966              	 .align 1
 1967              	 .global vQueueDelete
 1968              	 .thumb
 1969              	 .thumb_func
 1971              	vQueueDelete:
 1972              	 
 1973              	 
 1974 0000 10B5     	 push {r4,lr}
 1975 0002 0446     	 mov r4,r0
 1976 0004 40B9     	 cbnz r0,.L452
 1977              	
 1978 0006 4FF0FC03 	 mov r3,#252
 1979 000a 83F31188 	 msr basepri,r3
 1980 000e BFF36F8F 	 isb 
 1981 0012 BFF34F8F 	 dsb 
 1982              	
 1983              	
 1984              	 .thumb
 1985              	.L453:
 1986 0016 FEE7     	 b .L453
 1987              	.L452:
 1988 0018 FFF7FEFF 	 bl vQueueUnregisterQueue
 1989 001c 2046     	 mov r0,r4
 1990 001e BDE81040 	 pop {r4,lr}
 1991 0022 FFF7FEBF 	 b vPortFree
 1993              	 .section .text.vQueueWaitForMessageRestricted,"ax",%progbits
 1994              	 .align 1
 1995              	 .global vQueueWaitForMessageRestricted
 1996              	 .thumb
 1997              	 .thumb_func
 1999              	vQueueWaitForMessageRestricted:
 2000              	 
 2001              	 
 2002 0000 70B5     	 push {r4,r5,r6,lr}
 2003 0002 0446     	 mov r4,r0
 2004 0004 0E46     	 mov r6,r1
 2005 0006 1546     	 mov r5,r2
 2006 0008 FFF7FEFF 	 bl vPortEnterCritical
 2007 000c 94F84430 	 ldrb r3,[r4,#68]
 2008 0010 FF2B     	 cmp r3,#255
 2009 0012 04BF     	 itt eq
 2010 0014 0023     	 moveq r3,#0
 2011 0016 84F84430 	 strbeq r3,[r4,#68]
 2012 001a 94F84530 	 ldrb r3,[r4,#69]
 2013 001e FF2B     	 cmp r3,#255
 2014 0020 04BF     	 itt eq
 2015 0022 0023     	 moveq r3,#0
 2016 0024 84F84530 	 strbeq r3,[r4,#69]
 2017 0028 FFF7FEFF 	 bl vPortExitCritical
 2018 002c A36B     	 ldr r3,[r4,#56]
 2019 002e 2BB9     	 cbnz r3,.L457
 2020 0030 04F12400 	 add r0,r4,#36
 2021 0034 3146     	 mov r1,r6
 2022 0036 2A46     	 mov r2,r5
 2023 0038 FFF7FEFF 	 bl vTaskPlaceOnEventListRestricted
 2024              	.L457:
 2025 003c 2046     	 mov r0,r4
 2026 003e BDE87040 	 pop {r4,r5,r6,lr}
 2027 0042 FFF7FEBF 	 b prvUnlockQueue
 2029              	 .section .text.xQueueCreateSet,"ax",%progbits
 2030              	 .align 1
 2031              	 .global xQueueCreateSet
 2032              	 .thumb
 2033              	 .thumb_func
 2035              	xQueueCreateSet:
 2036              	 
 2037              	 
 2038              	 
 2039 0000 0421     	 movs r1,#4
 2040 0002 0022     	 movs r2,#0
 2041 0004 FFF7FEBF 	 b xQueueGenericCreate
 2043              	 .section .text.xQueueAddToSet,"ax",%progbits
 2044              	 .align 1
 2045              	 .global xQueueAddToSet
 2046              	 .thumb
 2047              	 .thumb_func
 2049              	xQueueAddToSet:
 2050              	 
 2051              	 
 2052 0000 70B5     	 push {r4,r5,r6,lr}
 2053 0002 0546     	 mov r5,r0
 2054 0004 0E46     	 mov r6,r1
 2055 0006 FFF7FEFF 	 bl vPortEnterCritical
 2056 000a AC6C     	 ldr r4,[r5,#72]
 2057 000c 24B9     	 cbnz r4,.L461
 2058 000e AB6B     	 ldr r3,[r5,#56]
 2059 0010 1BB9     	 cbnz r3,.L460
 2060 0012 AE64     	 str r6,[r5,#72]
 2061 0014 0124     	 movs r4,#1
 2062 0016 00E0     	 b .L460
 2063              	.L461:
 2064 0018 0024     	 movs r4,#0
 2065              	.L460:
 2066 001a FFF7FEFF 	 bl vPortExitCritical
 2067 001e 2046     	 mov r0,r4
 2068 0020 70BD     	 pop {r4,r5,r6,pc}
 2070              	 .section .text.xQueueRemoveFromSet,"ax",%progbits
 2071              	 .align 1
 2072              	 .global xQueueRemoveFromSet
 2073              	 .thumb
 2074              	 .thumb_func
 2076              	xQueueRemoveFromSet:
 2077              	 
 2078              	 
 2079 0000 38B5     	 push {r3,r4,r5,lr}
 2080 0002 836C     	 ldr r3,[r0,#72]
 2081 0004 8B42     	 cmp r3,r1
 2082 0006 0446     	 mov r4,r0
 2083 0008 08D1     	 bne .L466
 2084 000a 856B     	 ldr r5,[r0,#56]
 2085 000c 35B9     	 cbnz r5,.L466
 2086 000e FFF7FEFF 	 bl vPortEnterCritical
 2087 0012 A564     	 str r5,[r4,#72]
 2088 0014 FFF7FEFF 	 bl vPortExitCritical
 2089 0018 0120     	 movs r0,#1
 2090 001a 38BD     	 pop {r3,r4,r5,pc}
 2091              	.L466:
 2092 001c 0020     	 movs r0,#0
 2093 001e 38BD     	 pop {r3,r4,r5,pc}
 2095              	 .section .text.xQueueSelectFromSet,"ax",%progbits
 2096              	 .align 1
 2097              	 .global xQueueSelectFromSet
 2098              	 .thumb
 2099              	 .thumb_func
 2101              	xQueueSelectFromSet:
 2102              	 
 2103              	 
 2104 0000 07B5     	 push {r0,r1,r2,lr}
 2105 0002 0A46     	 mov r2,r1
 2106 0004 02A9     	 add r1,sp,#8
 2107 0006 0023     	 movs r3,#0
 2108 0008 41F8043D 	 str r3,[r1,#-4]!
 2109 000c FFF7FEFF 	 bl xQueueReceive
 2110 0010 0198     	 ldr r0,[sp,#4]
 2111 0012 03B0     	 add sp,sp,#12
 2112              	 
 2113 0014 5DF804FB 	 ldr pc,[sp],#4
 2115              	 .section .text.xQueueSelectFromSetFromISR,"ax",%progbits
 2116              	 .align 1
 2117              	 .global xQueueSelectFromSetFromISR
 2118              	 .thumb
 2119              	 .thumb_func
 2121              	xQueueSelectFromSetFromISR:
 2122              	 
 2123              	 
 2124 0000 07B5     	 push {r0,r1,r2,lr}
 2125 0002 02A9     	 add r1,sp,#8
 2126 0004 0022     	 movs r2,#0
 2127 0006 41F8042D 	 str r2,[r1,#-4]!
 2128 000a FFF7FEFF 	 bl xQueueReceiveFromISR
 2129 000e 0198     	 ldr r0,[sp,#4]
 2130 0010 03B0     	 add sp,sp,#12
 2131              	 
 2132 0012 5DF804FB 	 ldr pc,[sp],#4
 2134              	 .comm xQueueRegistry,64,4
 2135              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
    {standard input}:17     .text.prvIsQueueEmpty:00000000 $t
    {standard input}:21     .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
    {standard input}:34     .text.unlikely.prvCopyDataToQueue:00000000 $t
    {standard input}:38     .text.unlikely.prvCopyDataToQueue:00000000 prvCopyDataToQueue
    {standard input}:103    .text.unlikely.prvCopyDataFromQueue:00000000 $t
    {standard input}:107    .text.unlikely.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
    {standard input}:130    .text.prvNotifyQueueSetContainer:00000000 $t
    {standard input}:134    .text.prvNotifyQueueSetContainer:00000000 prvNotifyQueueSetContainer
    {standard input}:201    .text.prvUnlockQueue:00000000 $t
    {standard input}:205    .text.prvUnlockQueue:00000000 prvUnlockQueue
    {standard input}:262    .text.xQueueGenericReset:00000000 $t
    {standard input}:267    .text.xQueueGenericReset:00000000 xQueueGenericReset
    {standard input}:330    .text.xQueueGenericReset:0000007c $d
    {standard input}:333    .text.xQueueGenericCreate:00000000 $t
    {standard input}:338    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
    {standard input}:387    .text.xQueueGetMutexHolder:00000000 $t
    {standard input}:392    .text.xQueueGetMutexHolder:00000000 xQueueGetMutexHolder
    {standard input}:410    .text.xQueueGetMutexHolderFromISR:00000000 $t
    {standard input}:415    .text.xQueueGetMutexHolderFromISR:00000000 xQueueGetMutexHolderFromISR
    {standard input}:440    .text.xQueueCreateCountingSemaphore:00000000 $t
    {standard input}:445    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
    {standard input}:484    .text.xQueueGenericSend:00000000 $t
    {standard input}:489    .text.xQueueGenericSend:00000000 xQueueGenericSend
    {standard input}:672    .text.xQueueGenericSend:00000168 $d
    {standard input}:675    .text.xQueueCreateMutex:00000000 $t
    {standard input}:680    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
    {standard input}:702    .text.xQueueGiveMutexRecursive:00000000 $t
    {standard input}:707    .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
    {standard input}:745    .text.xQueueGenericSendFromISR:00000000 $t
    {standard input}:750    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
    {standard input}:860    .text.xQueueGiveFromISR:00000000 $t
    {standard input}:865    .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
    {standard input}:967    .text.xQueueReceive:00000000 $t
    {standard input}:972    .text.xQueueReceive:00000000 xQueueReceive
    {standard input}:1128   .text.xQueueReceive:00000134 $d
    {standard input}:1131   .text.xQueueSemaphoreTake:00000000 $t
    {standard input}:1136   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
    {standard input}:1321   .text.xQueueSemaphoreTake:00000174 $d
    {standard input}:1324   .text.xQueueTakeMutexRecursive:00000000 $t
    {standard input}:1329   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
    {standard input}:1368   .text.xQueuePeek:00000000 $t
    {standard input}:1373   .text.xQueuePeek:00000000 xQueuePeek
    {standard input}:1529   .text.xQueuePeek:00000134 $d
    {standard input}:1532   .text.xQueueReceiveFromISR:00000000 $t
    {standard input}:1537   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
    {standard input}:1618   .text.xQueuePeekFromISR:00000000 $t
    {standard input}:1623   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
    {standard input}:1696   .text.uxQueueMessagesWaiting:00000000 $t
    {standard input}:1701   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
    {standard input}:1725   .text.uxQueueSpacesAvailable:00000000 $t
    {standard input}:1730   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
    {standard input}:1756   .text.uxQueueMessagesWaitingFromISR:00000000 $t
    {standard input}:1761   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
    {standard input}:1781   .text.uxQueueGetQueueNumber:00000000 $t
    {standard input}:1786   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
    {standard input}:1794   .text.vQueueSetQueueNumber:00000000 $t
    {standard input}:1799   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
    {standard input}:1807   .text.ucQueueGetQueueType:00000000 $t
    {standard input}:1812   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
    {standard input}:1820   .text.xQueueIsQueueEmptyFromISR:00000000 $t
    {standard input}:1825   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
    {standard input}:1847   .text.xQueueIsQueueFullFromISR:00000000 $t
    {standard input}:1852   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
    {standard input}:1876   .text.vQueueAddToRegistry:00000000 $t
    {standard input}:1881   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
    {standard input}:1902   .text.vQueueAddToRegistry:00000020 $d
                            *COM*:00000040 xQueueRegistry
    {standard input}:1905   .text.pcQueueGetName:00000000 $t
    {standard input}:1910   .text.pcQueueGetName:00000000 pcQueueGetName
    {standard input}:1932   .text.pcQueueGetName:00000020 $d
    {standard input}:1935   .text.vQueueUnregisterQueue:00000000 $t
    {standard input}:1940   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
    {standard input}:1963   .text.vQueueUnregisterQueue:00000024 $d
    {standard input}:1966   .text.vQueueDelete:00000000 $t
    {standard input}:1971   .text.vQueueDelete:00000000 vQueueDelete
    {standard input}:1994   .text.vQueueWaitForMessageRestricted:00000000 $t
    {standard input}:1999   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted
    {standard input}:2030   .text.xQueueCreateSet:00000000 $t
    {standard input}:2035   .text.xQueueCreateSet:00000000 xQueueCreateSet
    {standard input}:2044   .text.xQueueAddToSet:00000000 $t
    {standard input}:2049   .text.xQueueAddToSet:00000000 xQueueAddToSet
    {standard input}:2071   .text.xQueueRemoveFromSet:00000000 $t
    {standard input}:2076   .text.xQueueRemoveFromSet:00000000 xQueueRemoveFromSet
    {standard input}:2096   .text.xQueueSelectFromSet:00000000 $t
    {standard input}:2101   .text.xQueueSelectFromSet:00000000 xQueueSelectFromSet
    {standard input}:2116   .text.xQueueSelectFromSetFromISR:00000000 $t
    {standard input}:2121   .text.xQueueSelectFromSetFromISR:00000000 xQueueSelectFromSetFromISR

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
vTaskPlaceOnEventListRestricted
