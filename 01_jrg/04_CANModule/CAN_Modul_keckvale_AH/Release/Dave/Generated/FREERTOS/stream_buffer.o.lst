   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,4
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "stream_buffer.c"
  16              	 .section .text.prvBytesInBuffer,"ax",%progbits
  17              	 .align 1
  18              	 .thumb
  19              	 .thumb_func
  21              	prvBytesInBuffer:
  22              	 
  23              	 
  24              	 
  25 0000 8268     	 ldr r2,[r0,#8]
  26 0002 4368     	 ldr r3,[r0,#4]
  27 0004 0068     	 ldr r0,[r0]
  28 0006 1344     	 add r3,r3,r2
  29 0008 181A     	 subs r0,r3,r0
  30 000a 9042     	 cmp r0,r2
  31 000c 28BF     	 it cs
  32 000e 801A     	 subcs r0,r0,r2
  33 0010 7047     	 bx lr
  35              	 .section .text.unlikely.prvInitialiseNewStreamBuffer,"ax",%progbits
  36              	 .align 1
  37              	 .thumb
  38              	 .thumb_func
  40              	prvInitialiseNewStreamBuffer:
  41              	 
  42              	 
  43 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  44 0004 0E46     	 mov r6,r1
  45 0006 0446     	 mov r4,r0
  46 0008 0846     	 mov r0,r1
  47 000a 5521     	 movs r1,#85
  48 000c 9046     	 mov r8,r2
  49 000e 1F46     	 mov r7,r3
  50 0010 FFF7FEFF 	 bl memset
  51 0014 B042     	 cmp r0,r6
  52 0016 0546     	 mov r5,r0
  53 0018 08D0     	 beq .L4
  54              	
  55 001a 4FF0FC03 	 mov r3,#252
  56 001e 83F31188 	 msr basepri,r3
  57 0022 BFF36F8F 	 isb 
  58 0026 BFF34F8F 	 dsb 
  59              	
  60              	
  61              	 .thumb
  62              	.L5:
  63 002a FEE7     	 b .L5
  64              	.L4:
  65 002c 2046     	 mov r0,r4
  66 002e 0021     	 movs r1,#0
  67 0030 2422     	 movs r2,#36
  68 0032 FFF7FEFF 	 bl memset
  69 0036 069B     	 ldr r3,[sp,#24]
  70 0038 A561     	 str r5,[r4,#24]
  71 003a C4F80880 	 str r8,[r4,#8]
  72 003e E760     	 str r7,[r4,#12]
  73 0040 1BB1     	 cbz r3,.L3
  74 0042 237F     	 ldrb r3,[r4,#28]
  75 0044 43F00103 	 orr r3,r3,#1
  76 0048 2377     	 strb r3,[r4,#28]
  77              	.L3:
  78 004a BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
  80              	 .section .text.prvWriteBytesToBuffer,"ax",%progbits
  81              	 .align 1
  82              	 .thumb
  83              	 .thumb_func
  85              	prvWriteBytesToBuffer:
  86              	 
  87              	 
  88 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
  89 0004 0546     	 mov r5,r0
  90 0006 8846     	 mov r8,r1
  91 0008 1746     	 mov r7,r2
  92 000a 42B9     	 cbnz r2,.L12
  93              	
  94 000c 4FF0FC03 	 mov r3,#252
  95 0010 83F31188 	 msr basepri,r3
  96 0014 BFF36F8F 	 isb 
  97 0018 BFF34F8F 	 dsb 
  98              	
  99              	
 100              	 .thumb
 101              	.L13:
 102 001c FEE7     	 b .L13
 103              	.L12:
 104 001e 4468     	 ldr r4,[r0,#4]
 105 0020 8368     	 ldr r3,[r0,#8]
 106 0022 1E1B     	 subs r6,r3,r4
 107 0024 9642     	 cmp r6,r2
 108 0026 28BF     	 it cs
 109 0028 1646     	 movcs r6,r2
 110 002a 3219     	 adds r2,r6,r4
 111 002c 9A42     	 cmp r2,r3
 112 002e 08D9     	 bls .L14
 113              	
 114 0030 4FF0FC03 	 mov r3,#252
 115 0034 83F31188 	 msr basepri,r3
 116 0038 BFF36F8F 	 isb 
 117 003c BFF34F8F 	 dsb 
 118              	
 119              	
 120              	 .thumb
 121              	.L15:
 122 0040 FEE7     	 b .L15
 123              	.L14:
 124 0042 8069     	 ldr r0,[r0,#24]
 125 0044 3246     	 mov r2,r6
 126 0046 2044     	 add r0,r0,r4
 127 0048 FFF7FEFF 	 bl memcpy
 128 004c B742     	 cmp r7,r6
 129 004e 11D9     	 bls .L16
 130 0050 AB68     	 ldr r3,[r5,#8]
 131 0052 BA1B     	 subs r2,r7,r6
 132 0054 9A42     	 cmp r2,r3
 133 0056 08D9     	 bls .L17
 134              	
 135 0058 4FF0FC03 	 mov r3,#252
 136 005c 83F31188 	 msr basepri,r3
 137 0060 BFF36F8F 	 isb 
 138 0064 BFF34F8F 	 dsb 
 139              	
 140              	
 141              	 .thumb
 142              	.L18:
 143 0068 FEE7     	 b .L18
 144              	.L17:
 145 006a A869     	 ldr r0,[r5,#24]
 146 006c 08EB0601 	 add r1,r8,r6
 147 0070 FFF7FEFF 	 bl memcpy
 148              	.L16:
 149 0074 AB68     	 ldr r3,[r5,#8]
 150 0076 3C44     	 add r4,r4,r7
 151 0078 9C42     	 cmp r4,r3
 152 007a 28BF     	 it cs
 153 007c E41A     	 subcs r4,r4,r3
 154 007e 6C60     	 str r4,[r5,#4]
 155 0080 3846     	 mov r0,r7
 156 0082 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 158              	 .section .text.prvWriteMessageToBuffer,"ax",%progbits
 159              	 .align 1
 160              	 .thumb
 161              	 .thumb_func
 163              	prvWriteMessageToBuffer:
 164              	 
 165              	 
 166 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 167 0002 0446     	 mov r4,r0
 168 0004 0D46     	 mov r5,r1
 169 0006 0192     	 str r2,[sp,#4]
 170 0008 7BB1     	 cbz r3,.L25
 171 000a 017F     	 ldrb r1,[r0,#28]
 172 000c C907     	 lsls r1,r1,#31
 173 000e 04D4     	 bmi .L22
 174 0010 9A42     	 cmp r2,r3
 175 0012 94BF     	 ite ls
 176 0014 0192     	 strls r2,[sp,#4]
 177 0016 0193     	 strhi r3,[sp,#4]
 178 0018 09E0     	 b .L23
 179              	.L22:
 180 001a 069A     	 ldr r2,[sp,#24]
 181 001c 9342     	 cmp r3,r2
 182 001e 04D3     	 bcc .L25
 183 0020 01A9     	 add r1,sp,#4
 184 0022 0422     	 movs r2,#4
 185 0024 FFF7FEFF 	 bl prvWriteBytesToBuffer
 186 0028 01E0     	 b .L23
 187              	.L25:
 188 002a 0020     	 movs r0,#0
 189 002c 04E0     	 b .L26
 190              	.L23:
 191 002e 2046     	 mov r0,r4
 192 0030 2946     	 mov r1,r5
 193 0032 019A     	 ldr r2,[sp,#4]
 194 0034 FFF7FEFF 	 bl prvWriteBytesToBuffer
 195              	.L26:
 196 0038 03B0     	 add sp,sp,#12
 197              	 
 198 003a 30BD     	 pop {r4,r5,pc}
 200              	 .section .text.prvReadBytesFromBuffer,"ax",%progbits
 201              	 .align 1
 202              	 .thumb
 203              	 .thumb_func
 205              	prvReadBytesFromBuffer:
 206              	 
 207              	 
 208 0000 9A42     	 cmp r2,r3
 209 0002 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 210 0006 1646     	 mov r6,r2
 211 0008 28BF     	 it cs
 212 000a 1E46     	 movcs r6,r3
 213 000c 0746     	 mov r7,r0
 214 000e 8C46     	 mov ip,r1
 215 0010 9046     	 mov r8,r2
 216 0012 002E     	 cmp r6,#0
 217 0014 3AD0     	 beq .L28
 218 0016 0468     	 ldr r4,[r0]
 219 0018 8368     	 ldr r3,[r0,#8]
 220 001a 1D1B     	 subs r5,r3,r4
 221 001c B542     	 cmp r5,r6
 222 001e 28BF     	 it cs
 223 0020 3546     	 movcs r5,r6
 224 0022 9542     	 cmp r5,r2
 225 0024 08D9     	 bls .L29
 226              	
 227 0026 4FF0FC03 	 mov r3,#252
 228 002a 83F31188 	 msr basepri,r3
 229 002e BFF36F8F 	 isb 
 230 0032 BFF34F8F 	 dsb 
 231              	
 232              	
 233              	 .thumb
 234              	.L30:
 235 0036 FEE7     	 b .L30
 236              	.L29:
 237 0038 2A19     	 adds r2,r5,r4
 238 003a 9A42     	 cmp r2,r3
 239 003c 08D9     	 bls .L31
 240              	
 241 003e 4FF0FC03 	 mov r3,#252
 242 0042 83F31188 	 msr basepri,r3
 243 0046 BFF36F8F 	 isb 
 244 004a BFF34F8F 	 dsb 
 245              	
 246              	
 247              	 .thumb
 248              	.L32:
 249 004e FEE7     	 b .L32
 250              	.L31:
 251 0050 8169     	 ldr r1,[r0,#24]
 252 0052 2A46     	 mov r2,r5
 253 0054 6046     	 mov r0,ip
 254 0056 2144     	 add r1,r1,r4
 255 0058 FFF7FEFF 	 bl memcpy
 256 005c AE42     	 cmp r6,r5
 257 005e 0FD9     	 bls .L33
 258 0060 4645     	 cmp r6,r8
 259 0062 08D9     	 bls .L34
 260              	
 261 0064 4FF0FC03 	 mov r3,#252
 262 0068 83F31188 	 msr basepri,r3
 263 006c BFF36F8F 	 isb 
 264 0070 BFF34F8F 	 dsb 
 265              	
 266              	
 267              	 .thumb
 268              	.L35:
 269 0074 FEE7     	 b .L35
 270              	.L34:
 271 0076 2844     	 add r0,r0,r5
 272 0078 B969     	 ldr r1,[r7,#24]
 273 007a 721B     	 subs r2,r6,r5
 274 007c FFF7FEFF 	 bl memcpy
 275              	.L33:
 276 0080 BB68     	 ldr r3,[r7,#8]
 277 0082 3444     	 add r4,r4,r6
 278 0084 9C42     	 cmp r4,r3
 279 0086 28BF     	 it cs
 280 0088 E41A     	 subcs r4,r4,r3
 281 008a 3C60     	 str r4,[r7]
 282              	.L28:
 283 008c 3046     	 mov r0,r6
 284 008e BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 286              	 .section .text.prvReadMessageFromBuffer,"ax",%progbits
 287              	 .align 1
 288              	 .thumb
 289              	 .thumb_func
 291              	prvReadMessageFromBuffer:
 292              	 
 293              	 
 294 0000 2DE9F743 	 push {r0,r1,r2,r4,r5,r6,r7,r8,r9,lr}
 295 0004 0A9E     	 ldr r6,[sp,#40]
 296 0006 0546     	 mov r5,r0
 297 0008 8846     	 mov r8,r1
 298 000a 1746     	 mov r7,r2
 299 000c 1C46     	 mov r4,r3
 300 000e 7EB1     	 cbz r6,.L41
 301 0010 01A9     	 add r1,sp,#4
 302 0012 3246     	 mov r2,r6
 303 0014 D0F80090 	 ldr r9,[r0]
 304 0018 FFF7FEFF 	 bl prvReadBytesFromBuffer
 305 001c 019B     	 ldr r3,[sp,#4]
 306 001e BB42     	 cmp r3,r7
 307 0020 A4EB0604 	 sub r4,r4,r6
 308 0024 05D9     	 bls .L42
 309 0026 0023     	 movs r3,#0
 310 0028 C5F80090 	 str r9,[r5]
 311 002c 0193     	 str r3,[sp,#4]
 312 002e 00E0     	 b .L42
 313              	.L41:
 314 0030 0192     	 str r2,[sp,#4]
 315              	.L42:
 316 0032 2846     	 mov r0,r5
 317 0034 4146     	 mov r1,r8
 318 0036 019A     	 ldr r2,[sp,#4]
 319 0038 2346     	 mov r3,r4
 320 003a FFF7FEFF 	 bl prvReadBytesFromBuffer
 321 003e 03B0     	 add sp,sp,#12
 322              	 
 323 0040 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 325              	 .section .text.xStreamBufferGenericCreate,"ax",%progbits
 326              	 .align 1
 327              	 .global xStreamBufferGenericCreate
 328              	 .thumb
 329              	 .thumb_func
 331              	xStreamBufferGenericCreate:
 332              	 
 333              	 
 334 0000 0428     	 cmp r0,#4
 335 0002 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 336 0004 0C46     	 mov r4,r1
 337 0006 1746     	 mov r7,r2
 338 0008 08D8     	 bhi .L44
 339              	
 340 000a 4FF0FC03 	 mov r3,#252
 341 000e 83F31188 	 msr basepri,r3
 342 0012 BFF36F8F 	 isb 
 343 0016 BFF34F8F 	 dsb 
 344              	
 345              	
 346              	 .thumb
 347              	.L45:
 348 001a FEE7     	 b .L45
 349              	.L44:
 350 001c 8142     	 cmp r1,r0
 351 001e 08D9     	 bls .L46
 352              	
 353 0020 4FF0FC03 	 mov r3,#252
 354 0024 83F31188 	 msr basepri,r3
 355 0028 BFF36F8F 	 isb 
 356 002c BFF34F8F 	 dsb 
 357              	
 358              	
 359              	 .thumb
 360              	.L47:
 361 0030 FEE7     	 b .L47
 362              	.L46:
 363 0032 0029     	 cmp r1,#0
 364 0034 00F10106 	 add r6,r0,#1
 365 0038 00F12500 	 add r0,r0,#37
 366 003c 14BF     	 ite ne
 367 003e 0C46     	 movne r4,r1
 368 0040 0124     	 moveq r4,#1
 369 0042 FFF7FEFF 	 bl pvPortMalloc
 370 0046 0546     	 mov r5,r0
 371 0048 30B1     	 cbz r0,.L49
 372 004a 0097     	 str r7,[sp]
 373 004c 00F12401 	 add r1,r0,#36
 374 0050 3246     	 mov r2,r6
 375 0052 2346     	 mov r3,r4
 376 0054 FFF7FEFF 	 bl prvInitialiseNewStreamBuffer
 377              	.L49:
 378 0058 2846     	 mov r0,r5
 379 005a 03B0     	 add sp,sp,#12
 380              	 
 381 005c F0BD     	 pop {r4,r5,r6,r7,pc}
 383              	 .section .text.vStreamBufferDelete,"ax",%progbits
 384              	 .align 1
 385              	 .global vStreamBufferDelete
 386              	 .thumb
 387              	 .thumb_func
 389              	vStreamBufferDelete:
 390              	 
 391              	 
 392              	 
 393 0000 40B9     	 cbnz r0,.L54
 394              	
 395 0002 4FF0FC03 	 mov r3,#252
 396 0006 83F31188 	 msr basepri,r3
 397 000a BFF36F8F 	 isb 
 398 000e BFF34F8F 	 dsb 
 399              	
 400              	
 401              	 .thumb
 402              	.L55:
 403 0012 FEE7     	 b .L55
 404              	.L54:
 405 0014 037F     	 ldrb r3,[r0,#28]
 406 0016 9B07     	 lsls r3,r3,#30
 407 0018 01D4     	 bmi .L56
 408 001a FFF7FEBF 	 b vPortFree
 409              	.L56:
 410 001e 0021     	 movs r1,#0
 411 0020 2422     	 movs r2,#36
 412 0022 FFF7FEBF 	 b memset
 414              	 .section .text.xStreamBufferReset,"ax",%progbits
 415              	 .align 1
 416              	 .global xStreamBufferReset
 417              	 .thumb
 418              	 .thumb_func
 420              	xStreamBufferReset:
 421              	 
 422              	 
 423 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 424 0002 0446     	 mov r4,r0
 425 0004 40B9     	 cbnz r0,.L58
 426              	
 427 0006 4FF0FC03 	 mov r3,#252
 428 000a 83F31188 	 msr basepri,r3
 429 000e BFF36F8F 	 isb 
 430 0012 BFF34F8F 	 dsb 
 431              	
 432              	
 433              	 .thumb
 434              	.L59:
 435 0016 FEE7     	 b .L59
 436              	.L58:
 437 0018 0369     	 ldr r3,[r0,#16]
 438 001a 056A     	 ldr r5,[r0,#32]
 439 001c 6BB9     	 cbnz r3,.L61
 440 001e 4269     	 ldr r2,[r0,#20]
 441 0020 6AB9     	 cbnz r2,.L62
 442 0022 037F     	 ldrb r3,[r0,#28]
 443 0024 03F00103 	 and r3,r3,#1
 444 0028 0093     	 str r3,[sp]
 445 002a 8169     	 ldr r1,[r0,#24]
 446 002c 8268     	 ldr r2,[r0,#8]
 447 002e C368     	 ldr r3,[r0,#12]
 448 0030 FFF7FEFF 	 bl prvInitialiseNewStreamBuffer
 449 0034 2562     	 str r5,[r4,#32]
 450 0036 0120     	 movs r0,#1
 451 0038 02E0     	 b .L60
 452              	.L61:
 453 003a 0020     	 movs r0,#0
 454 003c 00E0     	 b .L60
 455              	.L62:
 456 003e 1846     	 mov r0,r3
 457              	.L60:
 458 0040 03B0     	 add sp,sp,#12
 459              	 
 460 0042 30BD     	 pop {r4,r5,pc}
 462              	 .section .text.xStreamBufferSetTriggerLevel,"ax",%progbits
 463              	 .align 1
 464              	 .global xStreamBufferSetTriggerLevel
 465              	 .thumb
 466              	 .thumb_func
 468              	xStreamBufferSetTriggerLevel:
 469              	 
 470              	 
 471              	 
 472 0000 40B9     	 cbnz r0,.L64
 473              	
 474 0002 4FF0FC03 	 mov r3,#252
 475 0006 83F31188 	 msr basepri,r3
 476 000a BFF36F8F 	 isb 
 477 000e BFF34F8F 	 dsb 
 478              	
 479              	
 480              	 .thumb
 481              	.L65:
 482 0012 FEE7     	 b .L65
 483              	.L64:
 484 0014 8368     	 ldr r3,[r0,#8]
 485 0016 0029     	 cmp r1,#0
 486 0018 08BF     	 it eq
 487 001a 0121     	 moveq r1,#1
 488 001c 9942     	 cmp r1,r3
 489 001e 9ABF     	 itte ls
 490 0020 C160     	 strls r1,[r0,#12]
 491 0022 0120     	 movls r0,#1
 492 0024 0020     	 movhi r0,#0
 493 0026 7047     	 bx lr
 495              	 .section .text.xStreamBufferSpacesAvailable,"ax",%progbits
 496              	 .align 1
 497              	 .global xStreamBufferSpacesAvailable
 498              	 .thumb
 499              	 .thumb_func
 501              	xStreamBufferSpacesAvailable:
 502              	 
 503              	 
 504              	 
 505 0000 40B9     	 cbnz r0,.L70
 506              	
 507 0002 4FF0FC03 	 mov r3,#252
 508 0006 83F31188 	 msr basepri,r3
 509 000a BFF36F8F 	 isb 
 510 000e BFF34F8F 	 dsb 
 511              	
 512              	
 513              	 .thumb
 514              	.L71:
 515 0012 FEE7     	 b .L71
 516              	.L70:
 517 0014 8268     	 ldr r2,[r0,#8]
 518 0016 0368     	 ldr r3,[r0]
 519 0018 4168     	 ldr r1,[r0,#4]
 520 001a D018     	 adds r0,r2,r3
 521 001c 0138     	 subs r0,r0,#1
 522 001e 401A     	 subs r0,r0,r1
 523 0020 9042     	 cmp r0,r2
 524 0022 28BF     	 it cs
 525 0024 801A     	 subcs r0,r0,r2
 526 0026 7047     	 bx lr
 528              	 .section .text.xStreamBufferBytesAvailable,"ax",%progbits
 529              	 .align 1
 530              	 .global xStreamBufferBytesAvailable
 531              	 .thumb
 532              	 .thumb_func
 534              	xStreamBufferBytesAvailable:
 535              	 
 536              	 
 537              	 
 538 0000 40B9     	 cbnz r0,.L74
 539              	
 540 0002 4FF0FC03 	 mov r3,#252
 541 0006 83F31188 	 msr basepri,r3
 542 000a BFF36F8F 	 isb 
 543 000e BFF34F8F 	 dsb 
 544              	
 545              	
 546              	 .thumb
 547              	.L75:
 548 0012 FEE7     	 b .L75
 549              	.L74:
 550 0014 FFF7FEBF 	 b prvBytesInBuffer
 552              	 .section .text.xStreamBufferSend,"ax",%progbits
 553              	 .align 1
 554              	 .global xStreamBufferSend
 555              	 .thumb
 556              	 .thumb_func
 558              	xStreamBufferSend:
 559              	 
 560              	 
 561 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,r10,lr}
 562 0004 86B0     	 sub sp,sp,#24
 563 0006 0446     	 mov r4,r0
 564 0008 1746     	 mov r7,r2
 565 000a 0393     	 str r3,[sp,#12]
 566 000c 8A46     	 mov r10,r1
 567 000e 41B9     	 cbnz r1,.L77
 568              	
 569 0010 4FF0FC03 	 mov r3,#252
 570 0014 83F31188 	 msr basepri,r3
 571 0018 BFF36F8F 	 isb 
 572 001c BFF34F8F 	 dsb 
 573              	
 574              	
 575              	 .thumb
 576              	.L78:
 577 0020 FEE7     	 b .L78
 578              	.L77:
 579 0022 40B9     	 cbnz r0,.L79
 580              	
 581 0024 4FF0FC03 	 mov r3,#252
 582 0028 83F31188 	 msr basepri,r3
 583 002c BFF36F8F 	 isb 
 584 0030 BFF34F8F 	 dsb 
 585              	
 586              	
 587              	 .thumb
 588              	.L80:
 589 0034 FEE7     	 b .L80
 590              	.L79:
 591 0036 037F     	 ldrb r3,[r0,#28]
 592 0038 DB07     	 lsls r3,r3,#31
 593 003a 039B     	 ldr r3,[sp,#12]
 594 003c 4CBF     	 ite mi
 595 003e 02F10408 	 addmi r8,r2,#4
 596 0042 9046     	 movpl r8,r2
 597 0044 23B9     	 cbnz r3,.L82
 598              	.L89:
 599 0046 2046     	 mov r0,r4
 600 0048 FFF7FEFF 	 bl xStreamBufferSpacesAvailable
 601 004c 0346     	 mov r3,r0
 602 004e 34E0     	 b .L83
 603              	.L82:
 604 0050 04A8     	 add r0,sp,#16
 605 0052 FFF7FEFF 	 bl vTaskSetTimeOutState
 606              	.L87:
 607 0056 FFF7FEFF 	 bl vPortEnterCritical
 608 005a 2046     	 mov r0,r4
 609 005c FFF7FEFF 	 bl xStreamBufferSpacesAvailable
 610 0060 4045     	 cmp r0,r8
 611 0062 0546     	 mov r5,r0
 612 0064 24D2     	 bcs .L84
 613 0066 0020     	 movs r0,#0
 614 0068 FFF7FEFF 	 bl xTaskNotifyStateClear
 615 006c 6669     	 ldr r6,[r4,#20]
 616 006e 46B1     	 cbz r6,.L85
 617              	
 618 0070 4FF0FC03 	 mov r3,#252
 619 0074 83F31188 	 msr basepri,r3
 620 0078 BFF36F8F 	 isb 
 621 007c BFF34F8F 	 dsb 
 622              	
 623              	
 624              	 .thumb
 625              	.L86:
 626 0080 FEE7     	 b .L86
 627              	.L85:
 628 0082 FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 629 0086 0DF11809 	 add r9,sp,#24
 630 008a 6061     	 str r0,[r4,#20]
 631 008c FFF7FEFF 	 bl vPortExitCritical
 632 0090 59F80C3D 	 ldr r3,[r9,#-12]!
 633 0094 4FF0FF31 	 mov r1,#-1
 634 0098 3046     	 mov r0,r6
 635 009a 3246     	 mov r2,r6
 636 009c FFF7FEFF 	 bl xTaskNotifyWait
 637 00a0 6661     	 str r6,[r4,#20]
 638 00a2 04A8     	 add r0,sp,#16
 639 00a4 4946     	 mov r1,r9
 640 00a6 FFF7FEFF 	 bl xTaskCheckForTimeOut
 641 00aa 0028     	 cmp r0,#0
 642 00ac D3D0     	 beq .L87
 643 00ae 01E0     	 b .L103
 644              	.L84:
 645 00b0 FFF7FEFF 	 bl vPortExitCritical
 646              	.L103:
 647 00b4 2B46     	 mov r3,r5
 648 00b6 002D     	 cmp r5,#0
 649 00b8 C5D0     	 beq .L89
 650              	.L83:
 651 00ba CDF80080 	 str r8,[sp]
 652 00be 2046     	 mov r0,r4
 653 00c0 5146     	 mov r1,r10
 654 00c2 3A46     	 mov r2,r7
 655 00c4 FFF7FEFF 	 bl prvWriteMessageToBuffer
 656 00c8 0546     	 mov r5,r0
 657 00ca 98B1     	 cbz r0,.L91
 658 00cc 2046     	 mov r0,r4
 659 00ce FFF7FEFF 	 bl prvBytesInBuffer
 660 00d2 E368     	 ldr r3,[r4,#12]
 661 00d4 9842     	 cmp r0,r3
 662 00d6 0DD3     	 bcc .L91
 663 00d8 FFF7FEFF 	 bl vTaskSuspendAll
 664 00dc 2369     	 ldr r3,[r4,#16]
 665 00de 3BB1     	 cbz r3,.L93
 666 00e0 0021     	 movs r1,#0
 667 00e2 0B46     	 mov r3,r1
 668 00e4 2069     	 ldr r0,[r4,#16]
 669 00e6 0A46     	 mov r2,r1
 670 00e8 FFF7FEFF 	 bl xTaskGenericNotify
 671 00ec 0023     	 movs r3,#0
 672 00ee 2361     	 str r3,[r4,#16]
 673              	.L93:
 674 00f0 FFF7FEFF 	 bl xTaskResumeAll
 675              	.L91:
 676 00f4 2846     	 mov r0,r5
 677 00f6 06B0     	 add sp,sp,#24
 678              	 
 679 00f8 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,r10,pc}
 681              	 .section .text.xStreamBufferSendFromISR,"ax",%progbits
 682              	 .align 1
 683              	 .global xStreamBufferSendFromISR
 684              	 .thumb
 685              	 .thumb_func
 687              	xStreamBufferSendFromISR:
 688              	 
 689              	 
 690 0000 2DE9F341 	 push {r0,r1,r4,r5,r6,r7,r8,lr}
 691 0004 0446     	 mov r4,r0
 692 0006 1546     	 mov r5,r2
 693 0008 9846     	 mov r8,r3
 694 000a 0E46     	 mov r6,r1
 695 000c 41B9     	 cbnz r1,.L105
 696              	
 697 000e 4FF0FC03 	 mov r3,#252
 698 0012 83F31188 	 msr basepri,r3
 699 0016 BFF36F8F 	 isb 
 700 001a BFF34F8F 	 dsb 
 701              	
 702              	
 703              	 .thumb
 704              	.L106:
 705 001e FEE7     	 b .L106
 706              	.L105:
 707 0020 40B9     	 cbnz r0,.L107
 708              	
 709 0022 4FF0FC03 	 mov r3,#252
 710 0026 83F31188 	 msr basepri,r3
 711 002a BFF36F8F 	 isb 
 712 002e BFF34F8F 	 dsb 
 713              	
 714              	
 715              	 .thumb
 716              	.L108:
 717 0032 FEE7     	 b .L108
 718              	.L107:
 719 0034 037F     	 ldrb r3,[r0,#28]
 720 0036 DB07     	 lsls r3,r3,#31
 721 0038 4CBF     	 ite mi
 722 003a 171D     	 addmi r7,r2,#4
 723 003c 1746     	 movpl r7,r2
 724 003e FFF7FEFF 	 bl xStreamBufferSpacesAvailable
 725 0042 2A46     	 mov r2,r5
 726 0044 0346     	 mov r3,r0
 727 0046 0097     	 str r7,[sp]
 728 0048 2046     	 mov r0,r4
 729 004a 3146     	 mov r1,r6
 730 004c FFF7FEFF 	 bl prvWriteMessageToBuffer
 731 0050 0546     	 mov r5,r0
 732 0052 E8B1     	 cbz r0,.L111
 733 0054 2046     	 mov r0,r4
 734 0056 FFF7FEFF 	 bl prvBytesInBuffer
 735 005a E368     	 ldr r3,[r4,#12]
 736 005c 9842     	 cmp r0,r3
 737 005e 17D3     	 bcc .L111
 738              	
 739 0060 EFF31186 	 mrs r6,basepri
 740 0064 4FF0FC03 	 mov r3,#252
 741 0068 83F31188 	 msr basepri,r3
 742 006c BFF36F8F 	 isb 
 743 0070 BFF34F8F 	 dsb 
 744              	
 745              	
 746              	 .thumb
 747 0074 2369     	 ldr r3,[r4,#16]
 748 0076 4BB1     	 cbz r3,.L113
 749 0078 0021     	 movs r1,#0
 750 007a 0B46     	 mov r3,r1
 751 007c 2069     	 ldr r0,[r4,#16]
 752 007e CDF80080 	 str r8,[sp]
 753 0082 0A46     	 mov r2,r1
 754 0084 FFF7FEFF 	 bl xTaskGenericNotifyFromISR
 755 0088 0023     	 movs r3,#0
 756 008a 2361     	 str r3,[r4,#16]
 757              	.L113:
 758              	
 759 008c 86F31188 	 msr basepri,r6
 760              	
 761              	 .thumb
 762              	.L111:
 763 0090 2846     	 mov r0,r5
 764 0092 02B0     	 add sp,sp,#8
 765              	 
 766 0094 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 768              	 .section .text.xStreamBufferReceive,"ax",%progbits
 769              	 .align 1
 770              	 .global xStreamBufferReceive
 771              	 .thumb
 772              	 .thumb_func
 774              	xStreamBufferReceive:
 775              	 
 776              	 
 777 0000 2DE9F743 	 push {r0,r1,r2,r4,r5,r6,r7,r8,r9,lr}
 778 0004 0446     	 mov r4,r0
 779 0006 9146     	 mov r9,r2
 780 0008 9846     	 mov r8,r3
 781 000a 0F46     	 mov r7,r1
 782 000c 41B9     	 cbnz r1,.L119
 783              	
 784 000e 4FF0FC03 	 mov r3,#252
 785 0012 83F31188 	 msr basepri,r3
 786 0016 BFF36F8F 	 isb 
 787 001a BFF34F8F 	 dsb 
 788              	
 789              	
 790              	 .thumb
 791              	.L120:
 792 001e FEE7     	 b .L120
 793              	.L119:
 794 0020 40B9     	 cbnz r0,.L121
 795              	
 796 0022 4FF0FC03 	 mov r3,#252
 797 0026 83F31188 	 msr basepri,r3
 798 002a BFF36F8F 	 isb 
 799 002e BFF34F8F 	 dsb 
 800              	
 801              	
 802              	 .thumb
 803              	.L122:
 804 0032 FEE7     	 b .L122
 805              	.L121:
 806 0034 037F     	 ldrb r3,[r0,#28]
 807 0036 13F0010F 	 tst r3,#1
 808 003a 14BF     	 ite ne
 809 003c 0426     	 movne r6,#4
 810 003e 0026     	 moveq r6,#0
 811 0040 B8F1000F 	 cmp r8,#0
 812 0044 26D0     	 beq .L124
 813 0046 FFF7FEFF 	 bl vPortEnterCritical
 814 004a 2046     	 mov r0,r4
 815 004c FFF7FEFF 	 bl prvBytesInBuffer
 816 0050 B042     	 cmp r0,r6
 817 0052 0546     	 mov r5,r0
 818 0054 10D8     	 bhi .L125
 819 0056 0020     	 movs r0,#0
 820 0058 FFF7FEFF 	 bl xTaskNotifyStateClear
 821 005c 2369     	 ldr r3,[r4,#16]
 822 005e 43B1     	 cbz r3,.L126
 823              	
 824 0060 4FF0FC03 	 mov r3,#252
 825 0064 83F31188 	 msr basepri,r3
 826 0068 BFF36F8F 	 isb 
 827 006c BFF34F8F 	 dsb 
 828              	
 829              	
 830              	 .thumb
 831              	.L127:
 832 0070 FEE7     	 b .L127
 833              	.L126:
 834 0072 FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 835 0076 2061     	 str r0,[r4,#16]
 836              	.L125:
 837 0078 FFF7FEFF 	 bl vPortExitCritical
 838 007c B542     	 cmp r5,r6
 839 007e 10D8     	 bhi .L128
 840 0080 0020     	 movs r0,#0
 841 0082 4346     	 mov r3,r8
 842 0084 4FF0FF31 	 mov r1,#-1
 843 0088 0246     	 mov r2,r0
 844 008a FFF7FEFF 	 bl xTaskNotifyWait
 845 008e 0023     	 movs r3,#0
 846 0090 2361     	 str r3,[r4,#16]
 847 0092 2046     	 mov r0,r4
 848              	.L124:
 849 0094 FFF7FEFF 	 bl prvBytesInBuffer
 850 0098 B042     	 cmp r0,r6
 851 009a 0546     	 mov r5,r0
 852 009c 01D8     	 bhi .L128
 853              	.L131:
 854 009e 0025     	 movs r5,#0
 855 00a0 17E0     	 b .L130
 856              	.L128:
 857 00a2 2B46     	 mov r3,r5
 858 00a4 0096     	 str r6,[sp]
 859 00a6 2046     	 mov r0,r4
 860 00a8 3946     	 mov r1,r7
 861 00aa 4A46     	 mov r2,r9
 862 00ac FFF7FEFF 	 bl prvReadMessageFromBuffer
 863 00b0 0546     	 mov r5,r0
 864 00b2 0028     	 cmp r0,#0
 865 00b4 F3D0     	 beq .L131
 866 00b6 FFF7FEFF 	 bl vTaskSuspendAll
 867 00ba 6369     	 ldr r3,[r4,#20]
 868 00bc 3BB1     	 cbz r3,.L132
 869 00be 0021     	 movs r1,#0
 870 00c0 0B46     	 mov r3,r1
 871 00c2 6069     	 ldr r0,[r4,#20]
 872 00c4 0A46     	 mov r2,r1
 873 00c6 FFF7FEFF 	 bl xTaskGenericNotify
 874 00ca 0023     	 movs r3,#0
 875 00cc 6361     	 str r3,[r4,#20]
 876              	.L132:
 877 00ce FFF7FEFF 	 bl xTaskResumeAll
 878              	.L130:
 879 00d2 2846     	 mov r0,r5
 880 00d4 03B0     	 add sp,sp,#12
 881              	 
 882 00d6 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 884              	 .section .text.xStreamBufferReceiveFromISR,"ax",%progbits
 885              	 .align 1
 886              	 .global xStreamBufferReceiveFromISR
 887              	 .thumb
 888              	 .thumb_func
 890              	xStreamBufferReceiveFromISR:
 891              	 
 892              	 
 893 0000 2DE9F341 	 push {r0,r1,r4,r5,r6,r7,r8,lr}
 894 0004 0446     	 mov r4,r0
 895 0006 9046     	 mov r8,r2
 896 0008 1F46     	 mov r7,r3
 897 000a 0D46     	 mov r5,r1
 898 000c 41B9     	 cbnz r1,.L141
 899              	
 900 000e 4FF0FC03 	 mov r3,#252
 901 0012 83F31188 	 msr basepri,r3
 902 0016 BFF36F8F 	 isb 
 903 001a BFF34F8F 	 dsb 
 904              	
 905              	
 906              	 .thumb
 907              	.L142:
 908 001e FEE7     	 b .L142
 909              	.L141:
 910 0020 40B9     	 cbnz r0,.L143
 911              	
 912 0022 4FF0FC03 	 mov r3,#252
 913 0026 83F31188 	 msr basepri,r3
 914 002a BFF36F8F 	 isb 
 915 002e BFF34F8F 	 dsb 
 916              	
 917              	
 918              	 .thumb
 919              	.L144:
 920 0032 FEE7     	 b .L144
 921              	.L143:
 922 0034 037F     	 ldrb r3,[r0,#28]
 923 0036 13F0010F 	 tst r3,#1
 924 003a 14BF     	 ite ne
 925 003c 0426     	 movne r6,#4
 926 003e 0026     	 moveq r6,#0
 927 0040 FFF7FEFF 	 bl prvBytesInBuffer
 928 0044 B042     	 cmp r0,r6
 929 0046 0346     	 mov r3,r0
 930 0048 01D8     	 bhi .L146
 931              	.L148:
 932 004a 0025     	 movs r5,#0
 933 004c 1FE0     	 b .L147
 934              	.L146:
 935 004e 2946     	 mov r1,r5
 936 0050 0096     	 str r6,[sp]
 937 0052 2046     	 mov r0,r4
 938 0054 4246     	 mov r2,r8
 939 0056 FFF7FEFF 	 bl prvReadMessageFromBuffer
 940 005a 0546     	 mov r5,r0
 941 005c 0028     	 cmp r0,#0
 942 005e F4D0     	 beq .L148
 943              	
 944 0060 EFF31186 	 mrs r6,basepri
 945 0064 4FF0FC03 	 mov r3,#252
 946 0068 83F31188 	 msr basepri,r3
 947 006c BFF36F8F 	 isb 
 948 0070 BFF34F8F 	 dsb 
 949              	
 950              	
 951              	 .thumb
 952 0074 6369     	 ldr r3,[r4,#20]
 953 0076 43B1     	 cbz r3,.L149
 954 0078 0021     	 movs r1,#0
 955 007a 0B46     	 mov r3,r1
 956 007c 6069     	 ldr r0,[r4,#20]
 957 007e 0097     	 str r7,[sp]
 958 0080 0A46     	 mov r2,r1
 959 0082 FFF7FEFF 	 bl xTaskGenericNotifyFromISR
 960 0086 0023     	 movs r3,#0
 961 0088 6361     	 str r3,[r4,#20]
 962              	.L149:
 963              	
 964 008a 86F31188 	 msr basepri,r6
 965              	
 966              	 .thumb
 967              	.L147:
 968 008e 2846     	 mov r0,r5
 969 0090 02B0     	 add sp,sp,#8
 970              	 
 971 0092 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 973              	 .section .text.xStreamBufferIsEmpty,"ax",%progbits
 974              	 .align 1
 975              	 .global xStreamBufferIsEmpty
 976              	 .thumb
 977              	 .thumb_func
 979              	xStreamBufferIsEmpty:
 980              	 
 981              	 
 982              	 
 983 0000 40B9     	 cbnz r0,.L158
 984              	
 985 0002 4FF0FC03 	 mov r3,#252
 986 0006 83F31188 	 msr basepri,r3
 987 000a BFF36F8F 	 isb 
 988 000e BFF34F8F 	 dsb 
 989              	
 990              	
 991              	 .thumb
 992              	.L159:
 993 0012 FEE7     	 b .L159
 994              	.L158:
 995 0014 0368     	 ldr r3,[r0]
 996 0016 4068     	 ldr r0,[r0,#4]
 997 0018 C31A     	 subs r3,r0,r3
 998 001a 5842     	 rsbs r0,r3,#0
 999 001c 5841     	 adcs r0,r0,r3
 1000 001e 7047     	 bx lr
 1002              	 .section .text.xStreamBufferIsFull,"ax",%progbits
 1003              	 .align 1
 1004              	 .global xStreamBufferIsFull
 1005              	 .thumb
 1006              	 .thumb_func
 1008              	xStreamBufferIsFull:
 1009              	 
 1010              	 
 1011 0000 10B5     	 push {r4,lr}
 1012 0002 40B9     	 cbnz r0,.L161
 1013              	
 1014 0004 4FF0FC03 	 mov r3,#252
 1015 0008 83F31188 	 msr basepri,r3
 1016 000c BFF36F8F 	 isb 
 1017 0010 BFF34F8F 	 dsb 
 1018              	
 1019              	
 1020              	 .thumb
 1021              	.L162:
 1022 0014 FEE7     	 b .L162
 1023              	.L161:
 1024 0016 037F     	 ldrb r3,[r0,#28]
 1025 0018 13F0010F 	 tst r3,#1
 1026 001c 14BF     	 ite ne
 1027 001e 0424     	 movne r4,#4
 1028 0020 0024     	 moveq r4,#0
 1029 0022 FFF7FEFF 	 bl xStreamBufferSpacesAvailable
 1030 0026 A042     	 cmp r0,r4
 1031 0028 8CBF     	 ite hi
 1032 002a 0020     	 movhi r0,#0
 1033 002c 0120     	 movls r0,#1
 1034 002e 10BD     	 pop {r4,pc}
 1036              	 .section .text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1037              	 .align 1
 1038              	 .global xStreamBufferSendCompletedFromISR
 1039              	 .thumb
 1040              	 .thumb_func
 1042              	xStreamBufferSendCompletedFromISR:
 1043              	 
 1044              	 
 1045 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 1046 0002 0446     	 mov r4,r0
 1047 0004 40B9     	 cbnz r0,.L166
 1048              	
 1049 0006 4FF0FC03 	 mov r3,#252
 1050 000a 83F31188 	 msr basepri,r3
 1051 000e BFF36F8F 	 isb 
 1052 0012 BFF34F8F 	 dsb 
 1053              	
 1054              	
 1055              	 .thumb
 1056              	.L167:
 1057 0016 FEE7     	 b .L167
 1058              	.L166:
 1059              	
 1060 0018 EFF31185 	 mrs r5,basepri
 1061 001c 4FF0FC03 	 mov r3,#252
 1062 0020 83F31188 	 msr basepri,r3
 1063 0024 BFF36F8F 	 isb 
 1064 0028 BFF34F8F 	 dsb 
 1065              	
 1066              	
 1067              	 .thumb
 1068 002c 0069     	 ldr r0,[r0,#16]
 1069 002e 48B1     	 cbz r0,.L168
 1070 0030 2069     	 ldr r0,[r4,#16]
 1071 0032 0091     	 str r1,[sp]
 1072 0034 0021     	 movs r1,#0
 1073 0036 0B46     	 mov r3,r1
 1074 0038 0A46     	 mov r2,r1
 1075 003a FFF7FEFF 	 bl xTaskGenericNotifyFromISR
 1076 003e 0023     	 movs r3,#0
 1077 0040 2361     	 str r3,[r4,#16]
 1078 0042 0120     	 movs r0,#1
 1079              	.L168:
 1080              	
 1081 0044 85F31188 	 msr basepri,r5
 1082              	
 1083              	 .thumb
 1084 0048 03B0     	 add sp,sp,#12
 1085              	 
 1086 004a 30BD     	 pop {r4,r5,pc}
 1088              	 .section .text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 1089              	 .align 1
 1090              	 .global xStreamBufferReceiveCompletedFromISR
 1091              	 .thumb
 1092              	 .thumb_func
 1094              	xStreamBufferReceiveCompletedFromISR:
 1095              	 
 1096              	 
 1097 0000 37B5     	 push {r0,r1,r2,r4,r5,lr}
 1098 0002 0446     	 mov r4,r0
 1099 0004 40B9     	 cbnz r0,.L171
 1100              	
 1101 0006 4FF0FC03 	 mov r3,#252
 1102 000a 83F31188 	 msr basepri,r3
 1103 000e BFF36F8F 	 isb 
 1104 0012 BFF34F8F 	 dsb 
 1105              	
 1106              	
 1107              	 .thumb
 1108              	.L172:
 1109 0016 FEE7     	 b .L172
 1110              	.L171:
 1111              	
 1112 0018 EFF31185 	 mrs r5,basepri
 1113 001c 4FF0FC03 	 mov r3,#252
 1114 0020 83F31188 	 msr basepri,r3
 1115 0024 BFF36F8F 	 isb 
 1116 0028 BFF34F8F 	 dsb 
 1117              	
 1118              	
 1119              	 .thumb
 1120 002c 4069     	 ldr r0,[r0,#20]
 1121 002e 48B1     	 cbz r0,.L173
 1122 0030 6069     	 ldr r0,[r4,#20]
 1123 0032 0091     	 str r1,[sp]
 1124 0034 0021     	 movs r1,#0
 1125 0036 0B46     	 mov r3,r1
 1126 0038 0A46     	 mov r2,r1
 1127 003a FFF7FEFF 	 bl xTaskGenericNotifyFromISR
 1128 003e 0023     	 movs r3,#0
 1129 0040 6361     	 str r3,[r4,#20]
 1130 0042 0120     	 movs r0,#1
 1131              	.L173:
 1132              	
 1133 0044 85F31188 	 msr basepri,r5
 1134              	
 1135              	 .thumb
 1136 0048 03B0     	 add sp,sp,#12
 1137              	 
 1138 004a 30BD     	 pop {r4,r5,pc}
 1140              	 .section .text.uxStreamBufferGetStreamBufferNumber,"ax",%progbits
 1141              	 .align 1
 1142              	 .global uxStreamBufferGetStreamBufferNumber
 1143              	 .thumb
 1144              	 .thumb_func
 1146              	uxStreamBufferGetStreamBufferNumber:
 1147              	 
 1148              	 
 1149              	 
 1150 0000 006A     	 ldr r0,[r0,#32]
 1151 0002 7047     	 bx lr
 1153              	 .section .text.vStreamBufferSetStreamBufferNumber,"ax",%progbits
 1154              	 .align 1
 1155              	 .global vStreamBufferSetStreamBufferNumber
 1156              	 .thumb
 1157              	 .thumb_func
 1159              	vStreamBufferSetStreamBufferNumber:
 1160              	 
 1161              	 
 1162              	 
 1163 0000 0162     	 str r1,[r0,#32]
 1164 0002 7047     	 bx lr
 1166              	 .section .text.ucStreamBufferGetStreamBufferType,"ax",%progbits
 1167              	 .align 1
 1168              	 .global ucStreamBufferGetStreamBufferType
 1169              	 .thumb
 1170              	 .thumb_func
 1172              	ucStreamBufferGetStreamBufferType:
 1173              	 
 1174              	 
 1175              	 
 1176 0000 007F     	 ldrb r0,[r0,#28]
 1177 0002 40F00100 	 orr r0,r0,#1
 1178 0006 7047     	 bx lr
 1180              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 stream_buffer.c
    {standard input}:17     .text.prvBytesInBuffer:00000000 $t
    {standard input}:21     .text.prvBytesInBuffer:00000000 prvBytesInBuffer
    {standard input}:36     .text.unlikely.prvInitialiseNewStreamBuffer:00000000 $t
    {standard input}:40     .text.unlikely.prvInitialiseNewStreamBuffer:00000000 prvInitialiseNewStreamBuffer
    {standard input}:81     .text.prvWriteBytesToBuffer:00000000 $t
    {standard input}:85     .text.prvWriteBytesToBuffer:00000000 prvWriteBytesToBuffer
    {standard input}:159    .text.prvWriteMessageToBuffer:00000000 $t
    {standard input}:163    .text.prvWriteMessageToBuffer:00000000 prvWriteMessageToBuffer
    {standard input}:201    .text.prvReadBytesFromBuffer:00000000 $t
    {standard input}:205    .text.prvReadBytesFromBuffer:00000000 prvReadBytesFromBuffer
    {standard input}:287    .text.prvReadMessageFromBuffer:00000000 $t
    {standard input}:291    .text.prvReadMessageFromBuffer:00000000 prvReadMessageFromBuffer
    {standard input}:326    .text.xStreamBufferGenericCreate:00000000 $t
    {standard input}:331    .text.xStreamBufferGenericCreate:00000000 xStreamBufferGenericCreate
    {standard input}:384    .text.vStreamBufferDelete:00000000 $t
    {standard input}:389    .text.vStreamBufferDelete:00000000 vStreamBufferDelete
    {standard input}:415    .text.xStreamBufferReset:00000000 $t
    {standard input}:420    .text.xStreamBufferReset:00000000 xStreamBufferReset
    {standard input}:463    .text.xStreamBufferSetTriggerLevel:00000000 $t
    {standard input}:468    .text.xStreamBufferSetTriggerLevel:00000000 xStreamBufferSetTriggerLevel
    {standard input}:496    .text.xStreamBufferSpacesAvailable:00000000 $t
    {standard input}:501    .text.xStreamBufferSpacesAvailable:00000000 xStreamBufferSpacesAvailable
    {standard input}:529    .text.xStreamBufferBytesAvailable:00000000 $t
    {standard input}:534    .text.xStreamBufferBytesAvailable:00000000 xStreamBufferBytesAvailable
    {standard input}:553    .text.xStreamBufferSend:00000000 $t
    {standard input}:558    .text.xStreamBufferSend:00000000 xStreamBufferSend
    {standard input}:682    .text.xStreamBufferSendFromISR:00000000 $t
    {standard input}:687    .text.xStreamBufferSendFromISR:00000000 xStreamBufferSendFromISR
    {standard input}:769    .text.xStreamBufferReceive:00000000 $t
    {standard input}:774    .text.xStreamBufferReceive:00000000 xStreamBufferReceive
    {standard input}:885    .text.xStreamBufferReceiveFromISR:00000000 $t
    {standard input}:890    .text.xStreamBufferReceiveFromISR:00000000 xStreamBufferReceiveFromISR
    {standard input}:974    .text.xStreamBufferIsEmpty:00000000 $t
    {standard input}:979    .text.xStreamBufferIsEmpty:00000000 xStreamBufferIsEmpty
    {standard input}:1003   .text.xStreamBufferIsFull:00000000 $t
    {standard input}:1008   .text.xStreamBufferIsFull:00000000 xStreamBufferIsFull
    {standard input}:1037   .text.xStreamBufferSendCompletedFromISR:00000000 $t
    {standard input}:1042   .text.xStreamBufferSendCompletedFromISR:00000000 xStreamBufferSendCompletedFromISR
    {standard input}:1089   .text.xStreamBufferReceiveCompletedFromISR:00000000 $t
    {standard input}:1094   .text.xStreamBufferReceiveCompletedFromISR:00000000 xStreamBufferReceiveCompletedFromISR
    {standard input}:1141   .text.uxStreamBufferGetStreamBufferNumber:00000000 $t
    {standard input}:1146   .text.uxStreamBufferGetStreamBufferNumber:00000000 uxStreamBufferGetStreamBufferNumber
    {standard input}:1154   .text.vStreamBufferSetStreamBufferNumber:00000000 $t
    {standard input}:1159   .text.vStreamBufferSetStreamBufferNumber:00000000 vStreamBufferSetStreamBufferNumber
    {standard input}:1167   .text.ucStreamBufferGetStreamBufferType:00000000 $t
    {standard input}:1172   .text.ucStreamBufferGetStreamBufferType:00000000 ucStreamBufferGetStreamBufferType

UNDEFINED SYMBOLS
memset
memcpy
pvPortMalloc
vPortFree
vTaskSetTimeOutState
vPortEnterCritical
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
vPortExitCritical
xTaskNotifyWait
xTaskCheckForTimeOut
vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
