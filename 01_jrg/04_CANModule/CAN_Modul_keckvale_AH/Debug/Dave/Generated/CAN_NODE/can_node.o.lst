   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "can_node.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_NODE_SetEventNodePointer,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_NODE_SetEventNodePointer:
  25              	.LFB178:
  26              	 .file 1 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,       /**< Bus-off status */
 337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator 
 454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {  
 457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 
 481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection:3;   /**<   Defines function of the frame counter  */
 541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode:2;      /**<   Determines the operation mode of the frame count
 542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message ident
 563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint8_t can_data_byte[8];                 /**< Each position of the array represents a data b
 580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bit
 581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_dat
 582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint64_t can_data_long;                   /** Data of the Message Object*/
 584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       };
 585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg1,
 704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg2)
 705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). 
 744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN. 
 753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency 
 793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency 
 804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const uint32_t service_request)
 876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 876 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 85B0     	 sub sp,sp,#20
  36              	 .cfi_def_cfa_offset 24
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 F860     	 str r0,[r7,#12]
  40 0008 0B46     	 mov r3,r1
  41 000a 7A60     	 str r2,[r7,#4]
  42 000c FB72     	 strb r3,[r7,#11]
 877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
  43              	 .loc 1 877 0
  44 000e FB68     	 ldr r3,[r7,#12]
  45 0010 9A68     	 ldr r2,[r3,#8]
  46 0012 FB7A     	 ldrb r3,[r7,#11]
  47 0014 0721     	 movs r1,#7
  48 0016 01FA03F3 	 lsl r3,r1,r3
  49 001a DB43     	 mvns r3,r3
  50 001c 1A40     	 ands r2,r2,r3
  51 001e FB7A     	 ldrb r3,[r7,#11]
  52 0020 7968     	 ldr r1,[r7,#4]
  53 0022 01FA03F3 	 lsl r3,r1,r3
  54 0026 1A43     	 orrs r2,r2,r3
  55 0028 FB68     	 ldr r3,[r7,#12]
  56 002a 9A60     	 str r2,[r3,#8]
 878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
  57              	 .loc 1 878 0
  58 002c 1437     	 adds r7,r7,#20
  59              	 .cfi_def_cfa_offset 4
  60 002e BD46     	 mov sp,r7
  61              	 .cfi_def_cfa_register 13
  62              	 
  63 0030 5DF8047B 	 ldr r7,[sp],#4
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0034 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE178:
  70 0036 00BF     	 .section .text.XMC_CAN_NODE_SetReceiveInput,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CAN_NODE_SetReceiveInput:
  76              	.LFB179:
 879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_b
 898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate. 
 908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                               const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
  77              	 .loc 1 943 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	 .cfi_def_cfa_offset 16
  87 0004 00AF     	 add r7,sp,#0
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
  92              	 .loc 1 944 0
  93 000c 7B68     	 ldr r3,[r7,#4]
  94 000e DB68     	 ldr r3,[r3,#12]
  95 0010 23F00702 	 bic r2,r3,#7
 945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
  96              	 .loc 1 945 0
  97 0014 FB78     	 ldrb r3,[r7,#3]
  98 0016 03F00703 	 and r3,r3,#7
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
  99              	 .loc 1 944 0
 100 001a 1A43     	 orrs r2,r2,r3
 101 001c 7B68     	 ldr r3,[r7,#4]
 102 001e DA60     	 str r2,[r3,#12]
 946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 103              	 .loc 1 946 0
 104 0020 0C37     	 adds r7,r7,#12
 105              	 .cfi_def_cfa_offset 4
 106 0022 BD46     	 mov sp,r7
 107              	 .cfi_def_cfa_register 13
 108              	 
 109 0024 5DF8047B 	 ldr r7,[sp],#4
 110              	 .cfi_restore 7
 111              	 .cfi_def_cfa_offset 0
 112 0028 7047     	 bx lr
 113              	 .cfi_endproc
 114              	.LFE179:
 116 002a 00BF     	 .section .text.XMC_CAN_NODE_EnableLoopBack,"ax",%progbits
 117              	 .align 2
 118              	 .thumb
 119              	 .thumb_func
 121              	XMC_CAN_NODE_EnableLoopBack:
 122              	.LFB180:
 947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 123              	 .loc 1 970 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	 .cfi_def_cfa_register 7
 135 0006 7860     	 str r0,[r7,#4]
 971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 136              	 .loc 1 971 0
 137 0008 7B68     	 ldr r3,[r7,#4]
 138 000a DB68     	 ldr r3,[r3,#12]
 139 000c 43F48072 	 orr r2,r3,#256
 140 0010 7B68     	 ldr r3,[r7,#4]
 141 0012 DA60     	 str r2,[r3,#12]
 972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 142              	 .loc 1 972 0
 143 0014 0C37     	 adds r7,r7,#12
 144              	 .cfi_def_cfa_offset 4
 145 0016 BD46     	 mov sp,r7
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 0018 5DF8047B 	 ldr r7,[sp],#4
 149              	 .cfi_restore 7
 150              	 .cfi_def_cfa_offset 0
 151 001c 7047     	 bx lr
 152              	 .cfi_endproc
 153              	.LFE180:
 155 001e 00BF     	 .section .text.XMC_CAN_NODE_GetStatus,"ax",%progbits
 156              	 .align 2
 157              	 .thumb
 158              	 .thumb_func
 160              	XMC_CAN_NODE_GetStatus:
 161              	.LFB190:
 973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1040:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1041:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1043:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1044:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1045:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1046:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1047:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1048:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1049:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1050:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1051:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1052:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1053:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1054:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1055:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1056:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1057:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1058:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1059:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1060:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1061:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1063:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1064:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1065:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1066:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1067:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1068:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1069:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1070:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1071:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1072:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1073:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1074:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
1075:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1076:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1077:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1078:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1079:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1080:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1081:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1082:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1083:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1084:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1085:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1086:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1087:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1088:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1089:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1090:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1091:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1093:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1094:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1096:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1097:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1098:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1099:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 162              	 .loc 1 1239 0
 163              	 .cfi_startproc
 164              	 
 165              	 
 166              	 
 167 0000 80B4     	 push {r7}
 168              	 .cfi_def_cfa_offset 4
 169              	 .cfi_offset 7,-4
 170 0002 83B0     	 sub sp,sp,#12
 171              	 .cfi_def_cfa_offset 16
 172 0004 00AF     	 add r7,sp,#0
 173              	 .cfi_def_cfa_register 7
 174 0006 7860     	 str r0,[r7,#4]
1240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
 175              	 .loc 1 1240 0
 176 0008 7B68     	 ldr r3,[r7,#4]
 177 000a 5B68     	 ldr r3,[r3,#4]
1241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 178              	 .loc 1 1241 0
 179 000c 1846     	 mov r0,r3
 180 000e 0C37     	 adds r7,r7,#12
 181              	 .cfi_def_cfa_offset 4
 182 0010 BD46     	 mov sp,r7
 183              	 .cfi_def_cfa_register 13
 184              	 
 185 0012 5DF8047B 	 ldr r7,[sp],#4
 186              	 .cfi_restore 7
 187              	 .cfi_def_cfa_offset 0
 188 0016 7047     	 bx lr
 189              	 .cfi_endproc
 190              	.LFE190:
 192              	 .section .text.XMC_CAN_NODE_ClearStatus,"ax",%progbits
 193              	 .align 2
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_CAN_NODE_ClearStatus:
 198              	.LFB191:
1242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 199              	 .loc 1 1259 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203              	 
 204 0000 80B4     	 push {r7}
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 83B0     	 sub sp,sp,#12
 208              	 .cfi_def_cfa_offset 16
 209 0004 00AF     	 add r7,sp,#0
 210              	 .cfi_def_cfa_register 7
 211 0006 7860     	 str r0,[r7,#4]
 212 0008 0B46     	 mov r3,r1
 213 000a 7B80     	 strh r3,[r7,#2]
1260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
 214              	 .loc 1 1260 0
 215 000c 7B68     	 ldr r3,[r7,#4]
 216 000e 5A68     	 ldr r2,[r3,#4]
 217 0010 7B88     	 ldrh r3,[r7,#2]
 218 0012 DB43     	 mvns r3,r3
 219 0014 1A40     	 ands r2,r2,r3
 220 0016 7B68     	 ldr r3,[r7,#4]
 221 0018 5A60     	 str r2,[r3,#4]
1261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 222              	 .loc 1 1261 0
 223 001a 0C37     	 adds r7,r7,#12
 224              	 .cfi_def_cfa_offset 4
 225 001c BD46     	 mov sp,r7
 226              	 .cfi_def_cfa_register 13
 227              	 
 228 001e 5DF8047B 	 ldr r7,[sp],#4
 229              	 .cfi_restore 7
 230              	 .cfi_def_cfa_offset 0
 231 0022 7047     	 bx lr
 232              	 .cfi_endproc
 233              	.LFE191:
 235              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 236              	 .align 2
 237              	 .thumb
 238              	 .thumb_func
 240              	XMC_CAN_NODE_EnableConfigurationChange:
 241              	.LFB192:
1262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 242              	 .loc 1 1280 0
 243              	 .cfi_startproc
 244              	 
 245              	 
 246              	 
 247 0000 80B4     	 push {r7}
 248              	 .cfi_def_cfa_offset 4
 249              	 .cfi_offset 7,-4
 250 0002 83B0     	 sub sp,sp,#12
 251              	 .cfi_def_cfa_offset 16
 252 0004 00AF     	 add r7,sp,#0
 253              	 .cfi_def_cfa_register 7
 254 0006 7860     	 str r0,[r7,#4]
1281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 255              	 .loc 1 1281 0
 256 0008 7B68     	 ldr r3,[r7,#4]
 257 000a 1B68     	 ldr r3,[r3]
 258 000c 43F04002 	 orr r2,r3,#64
 259 0010 7B68     	 ldr r3,[r7,#4]
 260 0012 1A60     	 str r2,[r3]
1282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 261              	 .loc 1 1282 0
 262 0014 0C37     	 adds r7,r7,#12
 263              	 .cfi_def_cfa_offset 4
 264 0016 BD46     	 mov sp,r7
 265              	 .cfi_def_cfa_register 13
 266              	 
 267 0018 5DF8047B 	 ldr r7,[sp],#4
 268              	 .cfi_restore 7
 269              	 .cfi_def_cfa_offset 0
 270 001c 7047     	 bx lr
 271              	 .cfi_endproc
 272              	.LFE192:
 274 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 275              	 .align 2
 276              	 .thumb
 277              	 .thumb_func
 279              	XMC_CAN_NODE_DisableConfigurationChange:
 280              	.LFB193:
1283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 281              	 .loc 1 1300 0
 282              	 .cfi_startproc
 283              	 
 284              	 
 285              	 
 286 0000 80B4     	 push {r7}
 287              	 .cfi_def_cfa_offset 4
 288              	 .cfi_offset 7,-4
 289 0002 83B0     	 sub sp,sp,#12
 290              	 .cfi_def_cfa_offset 16
 291 0004 00AF     	 add r7,sp,#0
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
1301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 294              	 .loc 1 1301 0
 295 0008 7B68     	 ldr r3,[r7,#4]
 296 000a 1B68     	 ldr r3,[r3]
 297 000c 23F04002 	 bic r2,r3,#64
 298 0010 7B68     	 ldr r3,[r7,#4]
 299 0012 1A60     	 str r2,[r3]
1302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 300              	 .loc 1 1302 0
 301 0014 0C37     	 adds r7,r7,#12
 302              	 .cfi_def_cfa_offset 4
 303 0016 BD46     	 mov sp,r7
 304              	 .cfi_def_cfa_register 13
 305              	 
 306 0018 5DF8047B 	 ldr r7,[sp],#4
 307              	 .cfi_restore 7
 308              	 .cfi_def_cfa_offset 0
 309 001c 7047     	 bx lr
 310              	 .cfi_endproc
 311              	.LFE193:
 313 001e 00BF     	 .section .text.XMC_CAN_NODE_SetInitBit,"ax",%progbits
 314              	 .align 2
 315              	 .thumb
 316              	 .thumb_func
 318              	XMC_CAN_NODE_SetInitBit:
 319              	.LFB194:
1303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node e
1314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit()
1318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetInitBit(XMC_CAN_NODE_t *const can_node)
1322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 320              	 .loc 1 1322 0
 321              	 .cfi_startproc
 322              	 
 323              	 
 324              	 
 325 0000 80B4     	 push {r7}
 326              	 .cfi_def_cfa_offset 4
 327              	 .cfi_offset 7,-4
 328 0002 83B0     	 sub sp,sp,#12
 329              	 .cfi_def_cfa_offset 16
 330 0004 00AF     	 add r7,sp,#0
 331              	 .cfi_def_cfa_register 7
 332 0006 7860     	 str r0,[r7,#4]
1323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_INIT_Msk;
 333              	 .loc 1 1323 0
 334 0008 7B68     	 ldr r3,[r7,#4]
 335 000a 1B68     	 ldr r3,[r3]
 336 000c 43F00102 	 orr r2,r3,#1
 337 0010 7B68     	 ldr r3,[r7,#4]
 338 0012 1A60     	 str r2,[r3]
1324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 339              	 .loc 1 1324 0
 340 0014 0C37     	 adds r7,r7,#12
 341              	 .cfi_def_cfa_offset 4
 342 0016 BD46     	 mov sp,r7
 343              	 .cfi_def_cfa_register 13
 344              	 
 345 0018 5DF8047B 	 ldr r7,[sp],#4
 346              	 .cfi_restore 7
 347              	 .cfi_def_cfa_offset 0
 348 001c 7047     	 bx lr
 349              	 .cfi_endproc
 350              	.LFE194:
 352 001e 00BF     	 .section .text.XMC_CAN_NODE_ResetInitBit,"ax",%progbits
 353              	 .align 2
 354              	 .thumb
 355              	 .thumb_func
 357              	XMC_CAN_NODE_ResetInitBit:
 358              	.LFB195:
1325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node en
1334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit()
1338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ResetInitBit(XMC_CAN_NODE_t *const can_node)
1341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 359              	 .loc 1 1341 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363              	 
 364 0000 80B4     	 push {r7}
 365              	 .cfi_def_cfa_offset 4
 366              	 .cfi_offset 7,-4
 367 0002 83B0     	 sub sp,sp,#12
 368              	 .cfi_def_cfa_offset 16
 369 0004 00AF     	 add r7,sp,#0
 370              	 .cfi_def_cfa_register 7
 371 0006 7860     	 str r0,[r7,#4]
1342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_INIT_Msk;
 372              	 .loc 1 1342 0
 373 0008 7B68     	 ldr r3,[r7,#4]
 374 000a 1B68     	 ldr r3,[r3]
 375 000c 23F00102 	 bic r2,r3,#1
 376 0010 7B68     	 ldr r3,[r7,#4]
 377 0012 1A60     	 str r2,[r3]
1343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 378              	 .loc 1 1343 0
 379 0014 0C37     	 adds r7,r7,#12
 380              	 .cfi_def_cfa_offset 4
 381 0016 BD46     	 mov sp,r7
 382              	 .cfi_def_cfa_register 13
 383              	 
 384 0018 5DF8047B 	 ldr r7,[sp],#4
 385              	 .cfi_restore 7
 386              	 .cfi_def_cfa_offset 0
 387 001c 7047     	 bx lr
 388              	 .cfi_endproc
 389              	.LFE195:
 391 001e 00BF     	 .section .text.XMC_CAN_MO_SetEventNodePointer,"ax",%progbits
 392              	 .align 2
 393              	 .thumb
 394              	 .thumb_func
 396              	XMC_CAN_MO_SetEventNodePointer:
 397              	.LFB203:
1344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the N
1353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Enable(XMC_CAN_NODE_t *const can_node)
1359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_ResetInitBit(can_node);
1362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.
1372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Disable(XMC_CAN_NODE_t *const can_node)
1378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitt
1389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of do
1390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The transmit line is continuously held at recessive (1) level. XMC_CAN_NODE_SetInitBit() should 
1391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * set / reset AnalyzerMode. It configures NCR.CALM bit.
1392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ReSetAnalyzerMode()
1395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CALM_Msk;
1402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer XMC_CAN_NODE_SetAnal
1412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NCR.CALM bit. XMC_CAN_NODE_SetInitBit() should be called before set / reset Analyz
1413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetAnalyzerMode()
1416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ReSetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CALM_Msk;
1422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
1425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables 
1432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable 
1433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit
1434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Note:</b><br>
1439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Bit SUSEN is reset via OCDS(on chip debug support) Reset.
1440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableSuspend(XMC_CAN_NODE_t *const can_node)
1444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_SUSEN_Msk;
1446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
1448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Disables the transmission on CAN node x as soon as bus-idle is reached.
1455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Only available for XMC1400,XMC4800 and XMC4700 series
1460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableTransmit(XMC_CAN_NODE_t *const can_node)
1463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_TXDIS_Msk;
1465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
1467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_init frame counter mode selection. Refer @ref XMC_CAN_NODE_FRAME_COUNTER_t for v
1473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures frame counter functions. Each CAN \a can_node is equipped with a frame counter that c
1478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * CAN frames or obtains information about the time when a frame has been started to transmit or be
1479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * node. It configures NFCR register.
1480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_FrameCounterConfigure(XMC_CAN_NODE_t *const can_node,
1487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                         const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)
1488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NFCR = (can_node->NFCR & ~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk |
1490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                        CAN_NODE_NFCR_CFSEL_Msk)) |
1491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                     can_node_init->nfcr;
1492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint16_t current value of the CAN frame counter. Range :0-65535
1500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns the frame counter value \a can_node of the CAN node. In Frame Count Mode (CFMOD = 00B),
1503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count val
1504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always retur
1505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  fCLC clock cycles (measurement result) minus 1.
1506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint16_t XMC_CAN_NODE_GetCANFrameCounter(XMC_CAN_NODE_t *const can_node)
1513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (uint16_t)(((uint32_t)(can_node->NFCR & CAN_NODE_NFCR_CFC_Msk) >> CAN_NODE_NFCR_CFC_Pos));
1515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                      /*MO APIs*/
1518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Data to be transmitted and data length code.
1529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_Config()\n\n\n
1532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo);
1537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures transmit request for sending data frame. It configures MOCTR register. Data shall be
1546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  using XMC_CAN_MO_UpdateData() before calling this API.
1547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_UpdateData()\n\n\n
1550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo);
1554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive(XMC_CAN_MO_t *can_mo);
1571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo);
1587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo       Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure 
1589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo_ptr_int   Message Object event node pointer selection. Refer @ref XMC_CAN_MO_POINT
1590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                for valid values.
1591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request interrupt output line of multiCAN module.
1592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Message Object event node pointer with \a service_request number. It configures MOIPR
1597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetEventNodePointer(const XMC_CAN_MO_t *const can_mo,
1604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                                 const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int,
1605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                                 const uint32_t service_request)
1606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 398              	 .loc 1 1606 0
 399              	 .cfi_startproc
 400              	 
 401              	 
 402              	 
 403 0000 80B4     	 push {r7}
 404              	 .cfi_def_cfa_offset 4
 405              	 .cfi_offset 7,-4
 406 0002 85B0     	 sub sp,sp,#20
 407              	 .cfi_def_cfa_offset 24
 408 0004 00AF     	 add r7,sp,#0
 409              	 .cfi_def_cfa_register 7
 410 0006 F860     	 str r0,[r7,#12]
 411 0008 0B46     	 mov r3,r1
 412 000a 7A60     	 str r2,[r7,#4]
 413 000c FB72     	 strb r3,[r7,#11]
1607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 414              	 .loc 1 1607 0
 415 000e FB68     	 ldr r3,[r7,#12]
 416 0010 1B68     	 ldr r3,[r3]
 417 0012 FA68     	 ldr r2,[r7,#12]
 418 0014 1268     	 ldr r2,[r2]
 419 0016 9168     	 ldr r1,[r2,#8]
 420 0018 FA7A     	 ldrb r2,[r7,#11]
 421 001a 0720     	 movs r0,#7
 422 001c 00FA02F2 	 lsl r2,r0,r2
 423 0020 D243     	 mvns r2,r2
 424 0022 1140     	 ands r1,r1,r2
1608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                           (service_request << (uint32_t)can_mo_ptr_int);
 425              	 .loc 1 1608 0
 426 0024 FA7A     	 ldrb r2,[r7,#11]
 427 0026 7868     	 ldr r0,[r7,#4]
 428 0028 00FA02F2 	 lsl r2,r0,r2
1607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 429              	 .loc 1 1607 0
 430 002c 0A43     	 orrs r2,r2,r1
 431 002e 9A60     	 str r2,[r3,#8]
1609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 432              	 .loc 1 1609 0
 433 0030 1437     	 adds r7,r7,#20
 434              	 .cfi_def_cfa_offset 4
 435 0032 BD46     	 mov sp,r7
 436              	 .cfi_def_cfa_register 13
 437              	 
 438 0034 5DF8047B 	 ldr r7,[sp],#4
 439              	 .cfi_restore 7
 440              	 .cfi_def_cfa_offset 0
 441 0038 7047     	 bx lr
 442              	 .cfi_endproc
 443              	.LFE203:
 445 003a 00BF     	 .section .text.XMC_CAN_MO_GetStatus,"ax",%progbits
 446              	 .align 2
 447              	 .thumb
 448              	 .thumb_func
 450              	XMC_CAN_MO_GetStatus:
 451              	.LFB204:
1610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current Message Object status.
1615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Message Object status, that indicates message object transfer status and message object
1618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  information such as the number of the current message object predecessor and successor message 
1619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  the list number to which the message object is assigned.
1620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_MO_GetStatus(const XMC_CAN_MO_t *const can_mo)
1627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 452              	 .loc 1 1627 0
 453              	 .cfi_startproc
 454              	 
 455              	 
 456              	 
 457 0000 80B4     	 push {r7}
 458              	 .cfi_def_cfa_offset 4
 459              	 .cfi_offset 7,-4
 460 0002 83B0     	 sub sp,sp,#12
 461              	 .cfi_def_cfa_offset 16
 462 0004 00AF     	 add r7,sp,#0
 463              	 .cfi_def_cfa_register 7
 464 0006 7860     	 str r0,[r7,#4]
1628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_mo->can_mo_ptr->MOSTAT));
 465              	 .loc 1 1628 0
 466 0008 7B68     	 ldr r3,[r7,#4]
 467 000a 1B68     	 ldr r3,[r3]
 468 000c DB69     	 ldr r3,[r3,#28]
1629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 469              	 .loc 1 1629 0
 470 000e 1846     	 mov r0,r3
 471 0010 0C37     	 adds r7,r7,#12
 472              	 .cfi_def_cfa_offset 4
 473 0012 BD46     	 mov sp,r7
 474              	 .cfi_def_cfa_register 13
 475              	 
 476 0014 5DF8047B 	 ldr r7,[sp],#4
 477              	 .cfi_restore 7
 478              	 .cfi_def_cfa_offset 0
 479 0018 7047     	 bx lr
 480              	 .cfi_endproc
 481              	.LFE204:
 483 001a 00BF     	 .section .text.XMC_CAN_MO_ResetStatus,"ax",%progbits
 484              	 .align 2
 485              	 .thumb
 486              	 .thumb_func
 488              	XMC_CAN_MO_ResetStatus:
 489              	.LFB206:
1630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_SET_STATUS_t for detail
1635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *         Multiple enums can be ORed.
1636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Message Object set Status. It configures MOCTR register.
1640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_ResetStatus()\n\n\n
1643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
1649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_RESET_STATUS_t for deta
1655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *             Multiple enums can be ORed.
1656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Clears Message Object interrupt events. It configures MOCTR register.
1660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
1663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_ResetStatus(const XMC_CAN_MO_t *const can_mo,const uint32_t mask)
1667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 490              	 .loc 1 1667 0
 491              	 .cfi_startproc
 492              	 
 493              	 
 494              	 
 495 0000 80B4     	 push {r7}
 496              	 .cfi_def_cfa_offset 4
 497              	 .cfi_offset 7,-4
 498 0002 83B0     	 sub sp,sp,#12
 499              	 .cfi_def_cfa_offset 16
 500 0004 00AF     	 add r7,sp,#0
 501              	 .cfi_def_cfa_register 7
 502 0006 7860     	 str r0,[r7,#4]
 503 0008 3960     	 str r1,[r7]
1668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
 504              	 .loc 1 1668 0
 505 000a 7B68     	 ldr r3,[r7,#4]
 506 000c 1B68     	 ldr r3,[r3]
 507 000e 3A68     	 ldr r2,[r7]
 508 0010 DA61     	 str r2,[r3,#28]
1669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 509              	 .loc 1 1669 0
 510 0012 0C37     	 adds r7,r7,#12
 511              	 .cfi_def_cfa_offset 4
 512 0014 BD46     	 mov sp,r7
 513              	 .cfi_def_cfa_register 13
 514              	 
 515 0016 5DF8047B 	 ldr r7,[sp],#4
 516              	 .cfi_restore 7
 517              	 .cfi_def_cfa_offset 0
 518 001a 7047     	 bx lr
 519              	 .cfi_endproc
 520              	.LFE206:
 522              	 .section .text.XMC_CAN_MO_EnableEvent,"ax",%progbits
 523              	 .align 2
 524              	 .thumb
 525              	 .thumb_func
 527              	XMC_CAN_MO_EnableEvent:
 528              	.LFB207:
1670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param event  CAN node Message Object event selection. Refer @ref XMC_CAN_MO_EVENT_t for details
1676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN Message Object events. \a event can be ORed multiple Message Object events. It config
1681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_MO_DisableEvent()
1684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_EnableEvent(const XMC_CAN_MO_t *const can_mo,
1688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                         const uint32_t event)
1689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 529              	 .loc 1 1689 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533              	 
 534 0000 80B4     	 push {r7}
 535              	 .cfi_def_cfa_offset 4
 536              	 .cfi_offset 7,-4
 537 0002 83B0     	 sub sp,sp,#12
 538              	 .cfi_def_cfa_offset 16
 539 0004 00AF     	 add r7,sp,#0
 540              	 .cfi_def_cfa_register 7
 541 0006 7860     	 str r0,[r7,#4]
 542 0008 3960     	 str r1,[r7]
1690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOFCR |= event;
 543              	 .loc 1 1690 0
 544 000a 7B68     	 ldr r3,[r7,#4]
 545 000c 1B68     	 ldr r3,[r3]
 546 000e 7A68     	 ldr r2,[r7,#4]
 547 0010 1268     	 ldr r2,[r2]
 548 0012 1168     	 ldr r1,[r2]
 549 0014 3A68     	 ldr r2,[r7]
 550 0016 0A43     	 orrs r2,r2,r1
 551 0018 1A60     	 str r2,[r3]
1691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 552              	 .loc 1 1691 0
 553 001a 0C37     	 adds r7,r7,#12
 554              	 .cfi_def_cfa_offset 4
 555 001c BD46     	 mov sp,r7
 556              	 .cfi_def_cfa_register 13
 557              	 
 558 001e 5DF8047B 	 ldr r7,[sp],#4
 559              	 .cfi_restore 7
 560              	 .cfi_def_cfa_offset 0
 561 0022 7047     	 bx lr
 562              	 .cfi_endproc
 563              	.LFE207:
 565              	 .section .text.CAN_NODE_MO_EnableTxEvent,"ax",%progbits
 566              	 .align 2
 567              	 .thumb
 568              	 .thumb_func
 570              	CAN_NODE_MO_EnableTxEvent:
 571              	.LFB245:
 572              	 .file 2 "../Dave/Generated/CAN_NODE/can_node.h"
   1:../Dave/Generated/CAN_NODE/can_node.h **** /**
   2:../Dave/Generated/CAN_NODE/can_node.h ****  * @file can_node.h
   3:../Dave/Generated/CAN_NODE/can_node.h ****  * @date 2016-06-20
   4:../Dave/Generated/CAN_NODE/can_node.h ****  *
   5:../Dave/Generated/CAN_NODE/can_node.h ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.h ****  *
   8:../Dave/Generated/CAN_NODE/can_node.h ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.h ****  * CAN_NODE v4.1.14 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.h ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.h ****  *
  13:../Dave/Generated/CAN_NODE/can_node.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.h ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.h ****  *
  16:../Dave/Generated/CAN_NODE/can_node.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.h ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.h ****  *
  19:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.h ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.h ****  *
  22:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.h ****  *
  25:../Dave/Generated/CAN_NODE/can_node.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.h ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.h ****  *
  28:../Dave/Generated/CAN_NODE/can_node.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.h ****  *
  36:../Dave/Generated/CAN_NODE/can_node.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.h ****  *
  40:../Dave/Generated/CAN_NODE/can_node.h ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.h ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.h ****  *
  43:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.h ****  *
  46:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.h ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(),CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSta
  49:../Dave/Generated/CAN_NODE/can_node.h ****  *
  50:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-18:
  51:../Dave/Generated/CAN_NODE/can_node.h ****  *     - LLD version check is removed.<br>
  52:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Version check added for XMCLib dependency.<br>
  53:../Dave/Generated/CAN_NODE/can_node.h ****  *
  54:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-30:
  55:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_Enable() and CAN_NODE_Disable() to enable and disable CAN nod
  56:../Dave/Generated/CAN_NODE/can_node.h ****  *         from participating CAN traffic. <br>
  57:../Dave/Generated/CAN_NODE/can_node.h ****  *
  58:../Dave/Generated/CAN_NODE/can_node.h ****  * 2016-06-20:
  59:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New API added: CAN_NODE_MO_UpdateID() to update the message object identifier.
  60:../Dave/Generated/CAN_NODE/can_node.h ****  *
  61:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcond
  62:../Dave/Generated/CAN_NODE/can_node.h ****  *
  63:../Dave/Generated/CAN_NODE/can_node.h ****  */
  64:../Dave/Generated/CAN_NODE/can_node.h **** 
  65:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
  66:../Dave/Generated/CAN_NODE/can_node.h ****  * HEADER FILES
  67:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  68:../Dave/Generated/CAN_NODE/can_node.h **** 
  69:../Dave/Generated/CAN_NODE/can_node.h **** #ifndef CAN_NODE_H
  70:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_H
  71:../Dave/Generated/CAN_NODE/can_node.h **** 
  72:../Dave/Generated/CAN_NODE/can_node.h **** #include <xmc_can.h>
  73:../Dave/Generated/CAN_NODE/can_node.h **** #include <xmc_gpio.h>
  74:../Dave/Generated/CAN_NODE/can_node.h **** #include "../GLOBAL_CAN/global_can.h"
  75:../Dave/Generated/CAN_NODE/can_node.h **** #include "can_node_conf.h"
  76:../Dave/Generated/CAN_NODE/can_node.h **** #include <DAVE_common.h>
  77:../Dave/Generated/CAN_NODE/can_node.h **** 
  78:../Dave/Generated/CAN_NODE/can_node.h ****  /*************************************************************************************************
  79:../Dave/Generated/CAN_NODE/can_node.h ****  * MACROS
  80:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  81:../Dave/Generated/CAN_NODE/can_node.h **** 
  82:../Dave/Generated/CAN_NODE/can_node.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  83:../Dave/Generated/CAN_NODE/can_node.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  84:../Dave/Generated/CAN_NODE/can_node.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  85:../Dave/Generated/CAN_NODE/can_node.h **** #error "CAN_NODE requires XMC Peripheral Library v2.0.0 or higher"
  86:../Dave/Generated/CAN_NODE/can_node.h **** #endif
  87:../Dave/Generated/CAN_NODE/can_node.h **** 
  88:../Dave/Generated/CAN_NODE/can_node.h ****  /*************************************************************************************************
  89:../Dave/Generated/CAN_NODE/can_node.h ****  * ENUMS
  90:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  91:../Dave/Generated/CAN_NODE/can_node.h **** /**
  92:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_enumerations
  93:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
  94:../Dave/Generated/CAN_NODE/can_node.h ****  */
  95:../Dave/Generated/CAN_NODE/can_node.h **** 
  96:../Dave/Generated/CAN_NODE/can_node.h **** /**
  97:../Dave/Generated/CAN_NODE/can_node.h ****  *  Enum to describe the possible status values, returned
  98:../Dave/Generated/CAN_NODE/can_node.h ****  *  by CAN APIs.
  99:../Dave/Generated/CAN_NODE/can_node.h ****  */
 100:../Dave/Generated/CAN_NODE/can_node.h **** typedef enum CAN_NODE_STATUS
 101:../Dave/Generated/CAN_NODE/can_node.h **** {
 102:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_SUCCESS = 0, /**< APP success state */
 103:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_FAILURE,  /**< Returned when unknown error occurred */
 104:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_BUSY,      /**< CAN_NODE is busy and can not handle request*/
 105:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_NOT_ACCEPTABLE,/**< Message object type not allowed*/
 106:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_DISABLED  /**< Returned if Message object is disabled */
 107:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_STATUS_t;
 108:../Dave/Generated/CAN_NODE/can_node.h **** 
 109:../Dave/Generated/CAN_NODE/can_node.h **** 
 110:../Dave/Generated/CAN_NODE/can_node.h **** /**
 111:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 112:../Dave/Generated/CAN_NODE/can_node.h ****  */
 113:../Dave/Generated/CAN_NODE/can_node.h **** 
 114:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 115:../Dave/Generated/CAN_NODE/can_node.h **** * DATA STRUCTURES
 116:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 117:../Dave/Generated/CAN_NODE/can_node.h **** 
 118:../Dave/Generated/CAN_NODE/can_node.h **** /**
 119:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_datastructures
 120:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 121:../Dave/Generated/CAN_NODE/can_node.h ****  */
 122:../Dave/Generated/CAN_NODE/can_node.h **** 
 123:../Dave/Generated/CAN_NODE/can_node.h **** /**
 124:../Dave/Generated/CAN_NODE/can_node.h ****  * This is the data structure to hold the configured port and pin numbers for CAN_NODE.
 125:../Dave/Generated/CAN_NODE/can_node.h ****  *
 126:../Dave/Generated/CAN_NODE/can_node.h ****  */
 127:../Dave/Generated/CAN_NODE/can_node.h **** 
 128:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_GPIO
 129:../Dave/Generated/CAN_NODE/can_node.h **** {
 130:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_GPIO_PORT_t  *const port; /**< Pointer to port hardware register to select for CAN communicat
 131:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t  pin;    /**< Configured CAN Tx/Rx pin number */
 132:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_GPIO_t;
 133:../Dave/Generated/CAN_NODE/can_node.h **** 
 134:../Dave/Generated/CAN_NODE/can_node.h **** /**
 135:../Dave/Generated/CAN_NODE/can_node.h ****  *    Node events service request structure for CAN_NODE.
 136:../Dave/Generated/CAN_NODE/can_node.h ****  *    To enable the events user explicitly connect the signals to INTERUPT APP.
 137:../Dave/Generated/CAN_NODE/can_node.h ****  */
 138:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_SR
 139:../Dave/Generated/CAN_NODE/can_node.h **** {
 140:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t alert_event_sr;      /**< Alert event service request  */
 141:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t lec_event_sr;        /**< LEC event service request  */
 142:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t txok_event_sr;       /**< Transmit OK event service request  */
 143:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t framecount_event_sr; /**< Frame count event service request  */
 144:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_SR_t;
 145:../Dave/Generated/CAN_NODE/can_node.h **** 
 146:../Dave/Generated/CAN_NODE/can_node.h **** /**
 147:../Dave/Generated/CAN_NODE/can_node.h ****  *   Message object structure for CAN_NODE APP
 148:../Dave/Generated/CAN_NODE/can_node.h ****  */
 149:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE_LMO
 150:../Dave/Generated/CAN_NODE/can_node.h **** {
 151:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_t *mo_ptr;        /**< CAN message object pointer */
 152:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t number;              /**< Consumed CAN message object number */
 153:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t tx_sr;               /**< CAN message object transmit service request */
 154:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t rx_sr;               /**< CAN message object receive service request */
 155:../Dave/Generated/CAN_NODE/can_node.h ****   const bool tx_event_enable;  /**< GUI configured value for CAN message object transmit event chec
 156:../Dave/Generated/CAN_NODE/can_node.h ****   const bool rx_event_enable;  /**< GUI configured value for CAN message object receive event check
 157:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_LMO_t;
 158:../Dave/Generated/CAN_NODE/can_node.h **** 
 159:../Dave/Generated/CAN_NODE/can_node.h **** /**
 160:../Dave/Generated/CAN_NODE/can_node.h ****  *  Initialization data structure for CAN_NODE APP
 161:../Dave/Generated/CAN_NODE/can_node.h ****  */
 162:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE
 163:../Dave/Generated/CAN_NODE/can_node.h **** {
 164:../Dave/Generated/CAN_NODE/can_node.h ****   GLOBAL_CAN_t *const global_ptr;                    /**< Global CAN pointer */
 165:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_t *const node_ptr;                    /**< Consumed CAN node pointer */
 166:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *baudrate_config; /**< Pointer to bit time configuration s
 167:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_LMO_t *lmobj_ptr[32];                     /**< Array of pointer to logical message objec
 168:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_SR_t *node_sr_ptr;                        /**< Node service request  */
 169:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_out;          /**< GPIO structure for CAN transmit pin  */
 170:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_out_config;   /**< GPIO configuration structure for CAN tran
 171:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_in;           /**< GPIO structure for CAN receive pin  */
 172:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_in_config;    /**< GPIO configuration structure for CAN rece
 173:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_CAN_NODE_RECEIVE_INPUT_t rx_signal;      /**< Possible input type for CAN receive pin *
 174:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t node_num;                                  /**< Consumed CAN node number */
 175:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t mo_count;                                  /**< GUI configured value Consumed CAN MO coun
 176:../Dave/Generated/CAN_NODE/can_node.h ****   bool lec_event_enable;                       /**< GUI configured value for LEC event check box  *
 177:../Dave/Generated/CAN_NODE/can_node.h ****   bool txok_event_enable;                      /**< GUI configured value for transmit OK event chec
 178:../Dave/Generated/CAN_NODE/can_node.h ****   bool alert_event_enable;                     /**< GUI configured value for alert event check box 
 179:../Dave/Generated/CAN_NODE/can_node.h ****   bool framecount_event_enable;                /**< GUI configured value for frame count event chec
 180:../Dave/Generated/CAN_NODE/can_node.h ****   bool loopback_enable;                        /**< GUI configured value for loop back enable check
 181:../Dave/Generated/CAN_NODE/can_node.h **** 
 182:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_t;
 183:../Dave/Generated/CAN_NODE/can_node.h **** 
 184:../Dave/Generated/CAN_NODE/can_node.h **** /**
 185:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 186:../Dave/Generated/CAN_NODE/can_node.h ****  */
 187:../Dave/Generated/CAN_NODE/can_node.h **** 
 188:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 189:../Dave/Generated/CAN_NODE/can_node.h **** * API Prototypes
 190:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 191:../Dave/Generated/CAN_NODE/can_node.h **** /* Support for C++ codebase */
 192:../Dave/Generated/CAN_NODE/can_node.h **** #ifdef __cplusplus
 193:../Dave/Generated/CAN_NODE/can_node.h **** extern "C" {
 194:../Dave/Generated/CAN_NODE/can_node.h **** #endif
 195:../Dave/Generated/CAN_NODE/can_node.h **** 
 196:../Dave/Generated/CAN_NODE/can_node.h **** /**
 197:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_apidoc
 198:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 199:../Dave/Generated/CAN_NODE/can_node.h ****  */
 200:../Dave/Generated/CAN_NODE/can_node.h **** 
 201:../Dave/Generated/CAN_NODE/can_node.h **** /**
 202:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to read the CAN_NODE APP version.
 203:../Dave/Generated/CAN_NODE/can_node.h ****  *
 204:../Dave/Generated/CAN_NODE/can_node.h ****  * @return DAVE_APP_VERSION_t Structure that contains the members
 205:../Dave/Generated/CAN_NODE/can_node.h ****  *         major, minor and patch values.
 206:../Dave/Generated/CAN_NODE/can_node.h ****  *
 207:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 208:../Dave/Generated/CAN_NODE/can_node.h ****  * The function can be used to check application software compatibility with a
 209:../Dave/Generated/CAN_NODE/can_node.h ****  * specific version of the APP.
 210:../Dave/Generated/CAN_NODE/can_node.h ****  *
 211:../Dave/Generated/CAN_NODE/can_node.h ****  *
 212:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 213:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 214:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 215:../Dave/Generated/CAN_NODE/can_node.h ****  *
 216:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 217:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 218:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 219:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_APP_VERSION_t can_version;
 220:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 221:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 222:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 223:../Dave/Generated/CAN_NODE/can_node.h ****  *       can_version = CAN_NODE_GetAppVersion();
 224:../Dave/Generated/CAN_NODE/can_node.h ****  *       if ((can_version.major == 4U) &&
 225:../Dave/Generated/CAN_NODE/can_node.h ****  *          (can_version.minor == 1U))
 226:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 227:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code
 228:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 229:../Dave/Generated/CAN_NODE/can_node.h ****  *       else
 230:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 231:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Probably, not the right version.
 232:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 233:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 234:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 235:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 236:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 237:../Dave/Generated/CAN_NODE/can_node.h ****  *
 238:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 239:../Dave/Generated/CAN_NODE/can_node.h ****  *
 240:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 241:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 242:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 243:../Dave/Generated/CAN_NODE/can_node.h ****  */
 244:../Dave/Generated/CAN_NODE/can_node.h **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion(void);
 245:../Dave/Generated/CAN_NODE/can_node.h **** 
 246:../Dave/Generated/CAN_NODE/can_node.h **** /**
 247:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN node by configuring the baud rate,
 248:../Dave/Generated/CAN_NODE/can_node.h ****  *        can bus type(External or internal) and message objects.
 249:../Dave/Generated/CAN_NODE/can_node.h ****  *
 250:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 251:../Dave/Generated/CAN_NODE/can_node.h ****  * @return CAN_NODE_STATUS_t CAN_NODE_STATUS_SUCCESS: if the initialization succeeds.<BR>
 252:../Dave/Generated/CAN_NODE/can_node.h ****  *                           CAN_NODE_STATUS_FAILURE  : for failure case.<BR>
 253:../Dave/Generated/CAN_NODE/can_node.h ****  *
 254:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 255:../Dave/Generated/CAN_NODE/can_node.h ****  * This function internally calls GLOBAL_CAN_Init() API to configure peripheral frequency
 256:../Dave/Generated/CAN_NODE/can_node.h ****  * to enable CAN communication. API configures loop back mode or external CAN bus, message objects
 257:../Dave/Generated/CAN_NODE/can_node.h ****  *  based on the settings and enables configured event flags and service request values.
 258:../Dave/Generated/CAN_NODE/can_node.h ****  *
 259:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 260:../Dave/Generated/CAN_NODE/can_node.h ****  *
 261:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 262:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 263:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 264:../Dave/Generated/CAN_NODE/can_node.h ****  *
 265:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 266:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 267:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_STATUS_t init_status;
 268:../Dave/Generated/CAN_NODE/can_node.h ****  *      // DAVE_Init() internally calls CAN_NODE_Init()
 269:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = CAN_NODE_Init(&CAN_NODE_0);
 270:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == CAN_NODE_STATUS_SUCCESS)
 271:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 272:../Dave/Generated/CAN_NODE/can_node.h ****  *
 273:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code
 274:../Dave/Generated/CAN_NODE/can_node.h ****  *
 275:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 276:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 277:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 278:../Dave/Generated/CAN_NODE/can_node.h ****  *
 279:../Dave/Generated/CAN_NODE/can_node.h ****  *      // Failed to initialize the CAN peripheral
 280:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 281:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 282:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 283:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 284:../Dave/Generated/CAN_NODE/can_node.h ****  *
 285:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 286:../Dave/Generated/CAN_NODE/can_node.h ****  *
 287:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 288:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 289:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 290:../Dave/Generated/CAN_NODE/can_node.h ****  */
 291:../Dave/Generated/CAN_NODE/can_node.h **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t *handle);
 292:../Dave/Generated/CAN_NODE/can_node.h **** 
 293:../Dave/Generated/CAN_NODE/can_node.h **** /**
 294:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN message object. It configures message type,
 295:../Dave/Generated/CAN_NODE/can_node.h ****  *         message ID type, Identifier value, mask bits, required data length.<br>
 296:../Dave/Generated/CAN_NODE/can_node.h ****  *         It also configures the transmit and receive events for the message object.<br>
 297:../Dave/Generated/CAN_NODE/can_node.h ****  *
 298:../Dave/Generated/CAN_NODE/can_node.h ****  * @param lmo_ptr is a handle with pointers to static and dynamic content of message object.@ref CA
 299:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.
 300:../Dave/Generated/CAN_NODE/can_node.h ****  *
 301:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 302:../Dave/Generated/CAN_NODE/can_node.h ****  *
 303:../Dave/Generated/CAN_NODE/can_node.h ****  *  It configures message type to transmit / receive message object, message ID type to standard / 
 304:../Dave/Generated/CAN_NODE/can_node.h ****  *         Identifier value, mask bits,required data length for the transmit message object.
 305:../Dave/Generated/CAN_NODE/can_node.h ****  *  It also enables configured event flags for message objects.
 306:../Dave/Generated/CAN_NODE/can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_Config().
 307:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 308:../Dave/Generated/CAN_NODE/can_node.h ****  *
 309:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 310:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 311:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 312:../Dave/Generated/CAN_NODE/can_node.h ****  *
 313:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 314:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 315:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 316:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 317:../Dave/Generated/CAN_NODE/can_node.h ****  *     XMC_CAN_MO_t *MO_Ptr;
 318:../Dave/Generated/CAN_NODE/can_node.h ****  *
 319:../Dave/Generated/CAN_NODE/can_node.h ****  *     MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;   //'0' refers to first message object configured
 320:../Dave/Generated/CAN_NODE/can_node.h ****  *                                                   // for the selected can node
 321:../Dave/Generated/CAN_NODE/can_node.h ****  *
 322:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init(); //CAN_NODE_Init();
 323:../Dave/Generated/CAN_NODE/can_node.h ****  *
 324:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 325:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 326:../Dave/Generated/CAN_NODE/can_node.h ****  *
 327:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Application code.
 328:../Dave/Generated/CAN_NODE/can_node.h ****  *
 329:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_mo_type = XMC_CAN_MO_TYPE_TRANSMSGOBJ;  //Configure message object type as tra
 330:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_id_mode = XMC_CAN_FRAME_TYPE_STANDARD_11BITS; //configure MO identifier type
 331:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data_length = 8; // Configure CAN transmit MO data length field
 332:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[1] = 0xAAAA5555;  // Configure Higher 4 bytes of Data
 333:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[0] = 0xAAAA5555;  // Configure Lower 4 bytes of Data
 334:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Runtime change the MO configuration
 335:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Init(HandlePtr1->lmobj_ptr[0]);
 336:../Dave/Generated/CAN_NODE/can_node.h ****  *
 337:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 338:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 339:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 340:../Dave/Generated/CAN_NODE/can_node.h ****  *       // CAN initialization failed
 341:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 342:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 343:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 344:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 345:../Dave/Generated/CAN_NODE/can_node.h ****  *
 346:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 347:../Dave/Generated/CAN_NODE/can_node.h ****  *
 348:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 349:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 350:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 351:../Dave/Generated/CAN_NODE/can_node.h ****  */
 352:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr);
 353:../Dave/Generated/CAN_NODE/can_node.h **** 
 354:../Dave/Generated/CAN_NODE/can_node.h **** /**
 355:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to configures the CAN bit time by using SJW, sample point and can frequency.<br>
 356:../Dave/Generated/CAN_NODE/can_node.h ****  *
 357:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t
 358:../Dave/Generated/CAN_NODE/can_node.h ****  * @param baudrate  is the required baud rate for the CAN node.
 359:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sample_point is the sample point for the bit time.<br>
 360:../Dave/Generated/CAN_NODE/can_node.h ****  *        \b Range: 0% to 100% of the total bit time.<br>
 361:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sjw is the (synchronization jump width) time quanta for resynchronizations.<br>
 362:../Dave/Generated/CAN_NODE/can_node.h ****  *
 363:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 364:../Dave/Generated/CAN_NODE/can_node.h ****  *
 365:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 366:../Dave/Generated/CAN_NODE/can_node.h ****  *
 367:../Dave/Generated/CAN_NODE/can_node.h ****  * This function configures the CAN node bit time by updating synchronous jump width,
 368:../Dave/Generated/CAN_NODE/can_node.h ****  *      baud rate prescaler(BRP),sample point, divider mode, and time segment values to
 369:../Dave/Generated/CAN_NODE/can_node.h ****  *      the node bit timing register(NBTR). To achieve this functionality
 370:../Dave/Generated/CAN_NODE/can_node.h ****  *      API calls XMC_CAN_NODE_NominalBitTimeConfigure().
 371:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 372:../Dave/Generated/CAN_NODE/can_node.h ****  *
 373:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 374:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 375:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 376:../Dave/Generated/CAN_NODE/can_node.h ****  *
 377:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 378:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 379:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 380:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 381:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t new_baudrate = 1000000;  // in Hz
 382:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint16_t new_sampe_point = 80;
 383:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint8_t new_sjw = 2;
 384:../Dave/Generated/CAN_NODE/can_node.h ****  *
 385:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 386:../Dave/Generated/CAN_NODE/can_node.h ****  *     // DAVE_Init() internally calls CAN_NODE_Init()
 387:../Dave/Generated/CAN_NODE/can_node.h ****  *     //CAN_NODE_Init() internally calls CAN_NODE_ConfigBaudrate()
 388:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 389:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 390:../Dave/Generated/CAN_NODE/can_node.h ****  *       //  Application code ........
 391:../Dave/Generated/CAN_NODE/can_node.h ****  *
 392:../Dave/Generated/CAN_NODE/can_node.h ****  *       // For run time baud rate configuration change
 393:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure new baud rate to 1MHz
 394:../Dave/Generated/CAN_NODE/can_node.h ****  *
 395:../Dave/Generated/CAN_NODE/can_node.h ****  *       XMC_CAN_NODE_SetInitBit(HandlePtr1->node_ptr);
 396:../Dave/Generated/CAN_NODE/can_node.h ****  *
 397:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_ConfigBaudrate(HandlePtr1, new_baudrate, new_sampe_point,new_sjw);
 398:../Dave/Generated/CAN_NODE/can_node.h ****  *
 399:../Dave/Generated/CAN_NODE/can_node.h ****  *       XMC_CAN_NODE_ResetInitBit(HandlePtr1->node_ptr);
 400:../Dave/Generated/CAN_NODE/can_node.h ****  *
 401:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 402:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 403:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 404:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 405:../Dave/Generated/CAN_NODE/can_node.h ****  *
 406:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 407:../Dave/Generated/CAN_NODE/can_node.h ****  *
 408:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 409:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 410:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 411:../Dave/Generated/CAN_NODE/can_node.h ****  */
 412:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 413:../Dave/Generated/CAN_NODE/can_node.h **** 
 414:../Dave/Generated/CAN_NODE/can_node.h **** 
 415:../Dave/Generated/CAN_NODE/can_node.h **** /**
 416:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable the node events like node alert, LEC, Transfer OK, frame counter overf
 417:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t<br>
 418:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to enable. @ref XMC_CAN_NODE_EVENT_t <br>
 419:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 420:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None <BR>
 421:../Dave/Generated/CAN_NODE/can_node.h ****  *
 422:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 423:../Dave/Generated/CAN_NODE/can_node.h ****  * This function check the node event flags which are enabled through GUI. If the flags are configu
 424:../Dave/Generated/CAN_NODE/can_node.h ****  * then API enables the related CAN node events.
 425:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 426:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 427:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 428:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 429:../Dave/Generated/CAN_NODE/can_node.h ****  * This API enables the above events by configuring NCR register.
 430:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_EnableEvent().
 431:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 432:../Dave/Generated/CAN_NODE/can_node.h ****  *
 433:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 434:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 435:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 436:../Dave/Generated/CAN_NODE/can_node.h ****  *
 437:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 438:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 439:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 440:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 441:../Dave/Generated/CAN_NODE/can_node.h ****  *
 442:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 443:../Dave/Generated/CAN_NODE/can_node.h ****  *     //DAVE_Init();   internally calls CAN_NODE_Init()
 444:../Dave/Generated/CAN_NODE/can_node.h ****  *     //CAN_NODE_Init() internally calls CAN_NODE_EnableEvent()
 445:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 446:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 447:../Dave/Generated/CAN_NODE/can_node.h ****  *
 448:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code ..
 449:../Dave/Generated/CAN_NODE/can_node.h ****  *
 450:../Dave/Generated/CAN_NODE/can_node.h ****  *       // enable the events during run time....
 451:../Dave/Generated/CAN_NODE/can_node.h ****  *       //  enable LEC event
 452:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 453:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Alert event
 454:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 455:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Transmit OK event
 456:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 457:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable CFCIE event
 458:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 459:../Dave/Generated/CAN_NODE/can_node.h ****  *
 460:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code...
 461:../Dave/Generated/CAN_NODE/can_node.h ****  *
 462:../Dave/Generated/CAN_NODE/can_node.h ****  *
 463:../Dave/Generated/CAN_NODE/can_node.h ****  *
 464:../Dave/Generated/CAN_NODE/can_node.h ****  *        // disable the events by calling CAN_NODE_DisableEvent() API
 465:../Dave/Generated/CAN_NODE/can_node.h ****  *
 466:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 467:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 468:../Dave/Generated/CAN_NODE/can_node.h ****  *     while (1)
 469:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 470:../Dave/Generated/CAN_NODE/can_node.h ****  *
 471:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 472:../Dave/Generated/CAN_NODE/can_node.h ****  *
 473:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 474:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 475:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 476:../Dave/Generated/CAN_NODE/can_node.h ****  */
 477:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 478:../Dave/Generated/CAN_NODE/can_node.h **** 
 479:../Dave/Generated/CAN_NODE/can_node.h **** /**
 480:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable the selected node events like node alert, LEC, Transfer OK, frame cou
 481:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t.<br>
 482:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to disable. @ref XMC_CAN_NODE_EVENT_t <br>
 483:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 484:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 485:../Dave/Generated/CAN_NODE/can_node.h ****  *
 486:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 487:../Dave/Generated/CAN_NODE/can_node.h ****  *
 488:../Dave/Generated/CAN_NODE/can_node.h ****  * This function disables the CAN node events. Using the API following node events can be disabled,
 489:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 490:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 491:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 492:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 493:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_DisableEvent().
 494:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 495:../Dave/Generated/CAN_NODE/can_node.h ****  *
 496:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 497:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 498:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 499:../Dave/Generated/CAN_NODE/can_node.h ****  *
 500:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 501:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 502:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 503:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 504:../Dave/Generated/CAN_NODE/can_node.h ****  *
 505:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 506:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 507:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 508:../Dave/Generated/CAN_NODE/can_node.h ****  *
 509:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code..
 510:../Dave/Generated/CAN_NODE/can_node.h ****  *
 511:../Dave/Generated/CAN_NODE/can_node.h ****  *        //  enable LEC event
 512:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 513:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Alert event
 514:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 515:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Transmit OK event
 516:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 517:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable CFCIE event
 518:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 519:../Dave/Generated/CAN_NODE/can_node.h ****  *
 520:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code
 521:../Dave/Generated/CAN_NODE/can_node.h ****  *
 522:../Dave/Generated/CAN_NODE/can_node.h ****  *
 523:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling LEC event
 524:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 525:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling Alert event
 526:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 527:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling Transmit OK event
 528:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 529:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling CFCIE event
 530:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 531:../Dave/Generated/CAN_NODE/can_node.h ****  *
 532:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 533:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 534:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 535:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 536:../Dave/Generated/CAN_NODE/can_node.h ****  *
 537:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 538:../Dave/Generated/CAN_NODE/can_node.h ****  *
 539:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 540:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 541:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 542:../Dave/Generated/CAN_NODE/can_node.h ****  */
 543:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 544:../Dave/Generated/CAN_NODE/can_node.h **** 
 545:../Dave/Generated/CAN_NODE/can_node.h **** /**
 546:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to retrieve the current status of the can node.
 547:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.
 548:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 549:../Dave/Generated/CAN_NODE/can_node.h ****  * @return status of type uint32_t.<BR>
 550:../Dave/Generated/CAN_NODE/can_node.h ****  *
 551:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 552:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 553:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 554:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 555:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 556:../Dave/Generated/CAN_NODE/can_node.h ****  *
 557:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 558:../Dave/Generated/CAN_NODE/can_node.h ****  *
 559:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 560:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 561:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 562:../Dave/Generated/CAN_NODE/can_node.h ****  *
 563:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 564:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 565:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 566:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 567:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t status;
 568:../Dave/Generated/CAN_NODE/can_node.h ****  *
 569:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 570:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 571:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 572:../Dave/Generated/CAN_NODE/can_node.h ****  *
 573:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Transmit MO data
 574:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 575:../Dave/Generated/CAN_NODE/can_node.h ****  *
 576:../Dave/Generated/CAN_NODE/can_node.h ****  *       status = CAN_NODE_GetStatus(HandlePtr1);
 577:../Dave/Generated/CAN_NODE/can_node.h ****  *       if (status & XMC_CAN_NODE_STATUS_TX_OK)
 578:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 579:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Message transmitted successfully
 580:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 581:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 582:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 583:../Dave/Generated/CAN_NODE/can_node.h ****  *         // node alert warning event enabled
 584:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 585:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 586:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 587:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Bus off error
 588:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 589:../Dave/Generated/CAN_NODE/can_node.h ****  *
 590:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 591:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 592:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 593:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 594:../Dave/Generated/CAN_NODE/can_node.h ****  *
 595:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 596:../Dave/Generated/CAN_NODE/can_node.h ****  *
 597:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 598:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 599:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 600:../Dave/Generated/CAN_NODE/can_node.h ****  */
 601:../Dave/Generated/CAN_NODE/can_node.h **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t *handle);
 602:../Dave/Generated/CAN_NODE/can_node.h **** 
 603:../Dave/Generated/CAN_NODE/can_node.h **** 
 604:../Dave/Generated/CAN_NODE/can_node.h **** /**
 605:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to reset / clear the specific status of the can node.
 606:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.<br>
 607:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_node_status  is a node status enum. @ref XMC_CAN_NODE_STATUS_t <br>
 608:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 609:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 610:../Dave/Generated/CAN_NODE/can_node.h ****  *
 611:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 612:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 613:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 614:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 615:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 616:../Dave/Generated/CAN_NODE/can_node.h ****  *
 617:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 618:../Dave/Generated/CAN_NODE/can_node.h ****  *
 619:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 620:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 621:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 622:../Dave/Generated/CAN_NODE/can_node.h ****  *
 623:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 624:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 625:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 626:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 627:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t status;
 628:../Dave/Generated/CAN_NODE/can_node.h ****  *
 629:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 630:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 631:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 632:../Dave/Generated/CAN_NODE/can_node.h ****  *
 633:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Transmit MO data
 634:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 635:../Dave/Generated/CAN_NODE/can_node.h ****  *
 636:../Dave/Generated/CAN_NODE/can_node.h ****  *       status = CAN_NODE_GetStatus(HandlePtr1);
 637:../Dave/Generated/CAN_NODE/can_node.h ****  *       if (status & XMC_CAN_NODE_STATUS_TX_OK)
 638:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 639:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Message transmitted successfully
 640:../Dave/Generated/CAN_NODE/can_node.h ****  *         CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_TX_OK);
 641:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code..
 642:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 643:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 644:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 645:../Dave/Generated/CAN_NODE/can_node.h ****  *         // node alert warning event enabled
 646:../Dave/Generated/CAN_NODE/can_node.h ****  *         CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_ALERT_WARNING);
 647:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code..
 648:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 649:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 650:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 651:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Bus off error
 652:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 653:../Dave/Generated/CAN_NODE/can_node.h ****  *
 654:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 655:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 656:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 657:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 658:../Dave/Generated/CAN_NODE/can_node.h ****  *
 659:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 660:../Dave/Generated/CAN_NODE/can_node.h ****  *
 661:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 662:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 663:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 664:../Dave/Generated/CAN_NODE/can_node.h ****  */
 665:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status);
 666:../Dave/Generated/CAN_NODE/can_node.h **** 
 667:../Dave/Generated/CAN_NODE/can_node.h **** /**
 668:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable CAN node for participation in CAN traffic.<br>
 669:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 670:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 671:../Dave/Generated/CAN_NODE/can_node.h ****  *
 672:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 673:../Dave/Generated/CAN_NODE/can_node.h ****  * Enables the CAN node for participation in the CAN traffic by configuring NCR.INIT and NCR.CANDIS
 674:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 675:../Dave/Generated/CAN_NODE/can_node.h ****  *
 676:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 677:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 678:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 679:../Dave/Generated/CAN_NODE/can_node.h ****  *
 680:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 681:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 682:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 683:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 684:../Dave/Generated/CAN_NODE/can_node.h ****  *
 685:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 686:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 687:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 688:../Dave/Generated/CAN_NODE/can_node.h ****  *
 689:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 690:../Dave/Generated/CAN_NODE/can_node.h ****  *
 691:../Dave/Generated/CAN_NODE/can_node.h ****  *
 692:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Disable CAN node from participating in CAN traffic.
 693:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Disable(HandlePtr1);
 694:../Dave/Generated/CAN_NODE/can_node.h ****  *
 695:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 696:../Dave/Generated/CAN_NODE/can_node.h ****  *
 697:../Dave/Generated/CAN_NODE/can_node.h ****  *
 698:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable CAN node for participating in CAN traffic.
 699:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Enable(HandlePtr1);
 700:../Dave/Generated/CAN_NODE/can_node.h ****  *
 701:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 702:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 703:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 704:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 705:../Dave/Generated/CAN_NODE/can_node.h ****  *
 706:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 707:../Dave/Generated/CAN_NODE/can_node.h ****  *
 708:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 709:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 710:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 711:../Dave/Generated/CAN_NODE/can_node.h ****  */
 712:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Enable(const CAN_NODE_t *handle)
 713:../Dave/Generated/CAN_NODE/can_node.h **** {
 714:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Enable: null pointer", handle != NULL);
 715:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Enable(handle->node_ptr);
 716:../Dave/Generated/CAN_NODE/can_node.h **** }
 717:../Dave/Generated/CAN_NODE/can_node.h **** 
 718:../Dave/Generated/CAN_NODE/can_node.h **** /**
 719:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable CAN node from participating in CAN traffic.<br>
 720:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 721:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 722:../Dave/Generated/CAN_NODE/can_node.h ****  *
 723:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 724:../Dave/Generated/CAN_NODE/can_node.h ****  * Disables the CAN node from participating in the CAN traffic by configuring NCR.CANDIS bit.
 725:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 726:../Dave/Generated/CAN_NODE/can_node.h ****  *
 727:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 728:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 729:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 730:../Dave/Generated/CAN_NODE/can_node.h ****  *
 731:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 732:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 733:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 734:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 735:../Dave/Generated/CAN_NODE/can_node.h ****  *
 736:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 737:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 738:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 739:../Dave/Generated/CAN_NODE/can_node.h ****  *
 740:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 741:../Dave/Generated/CAN_NODE/can_node.h ****  *
 742:../Dave/Generated/CAN_NODE/can_node.h ****  *
 743:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Disable CAN node from participating in CAN traffic.
 744:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Disable(HandlePtr1);
 745:../Dave/Generated/CAN_NODE/can_node.h ****  *
 746:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 747:../Dave/Generated/CAN_NODE/can_node.h ****  *
 748:../Dave/Generated/CAN_NODE/can_node.h ****  *
 749:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable CAN node for participating in CAN traffic.
 750:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Enable(HandlePtr1);
 751:../Dave/Generated/CAN_NODE/can_node.h ****  *
 752:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 753:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 754:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 755:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 756:../Dave/Generated/CAN_NODE/can_node.h ****  *
 757:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 758:../Dave/Generated/CAN_NODE/can_node.h ****  *
 759:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 760:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 761:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 762:../Dave/Generated/CAN_NODE/can_node.h ****  */
 763:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Disable(const CAN_NODE_t *handle)
 764:../Dave/Generated/CAN_NODE/can_node.h **** {
 765:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Disable: null pointer", handle != NULL);
 766:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Disable(handle->node_ptr);
 767:../Dave/Generated/CAN_NODE/can_node.h **** }
 768:../Dave/Generated/CAN_NODE/can_node.h **** 
 769:../Dave/Generated/CAN_NODE/can_node.h **** /**
 770:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO transmit event for the selected logical message object.
 771:../Dave/Generated/CAN_NODE/can_node.h ****  *         It sets the TXIE bit of the MOFCR register.
 772:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure.@ref CAN_NODE_LMO_t<br>
 773:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 774:../Dave/Generated/CAN_NODE/can_node.h ****  *
 775:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 776:../Dave/Generated/CAN_NODE/can_node.h ****  *
 777:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO transmit event for the selected logical message object.
 778:../Dave/Generated/CAN_NODE/can_node.h ****  * It configures MOFCR register. To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 779:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 780:../Dave/Generated/CAN_NODE/can_node.h ****  *
 781:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 782:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 783:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 784:../Dave/Generated/CAN_NODE/can_node.h ****  *
 785:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 786:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 787:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 788:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 789:../Dave/Generated/CAN_NODE/can_node.h ****  *
 790:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 791:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 792:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 793:../Dave/Generated/CAN_NODE/can_node.h ****  *
 794:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable the transmit event for the selected message object.
 795:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_EnableTxEvent(HandlePtr1->lmobj_ptr[0]);
 796:../Dave/Generated/CAN_NODE/can_node.h ****  *
 797:../Dave/Generated/CAN_NODE/can_node.h ****  *       //transmit data from the message object.
 798:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 799:../Dave/Generated/CAN_NODE/can_node.h ****  *
 800:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure the interrupt APP and connect the transmit signal of the message object to NV
 801:../Dave/Generated/CAN_NODE/can_node.h ****  *       //After the successful transmission of message object, transmit event will be generated.
 802:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code
 803:../Dave/Generated/CAN_NODE/can_node.h ****  *
 804:../Dave/Generated/CAN_NODE/can_node.h ****  *
 805:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 806:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 807:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 808:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 809:../Dave/Generated/CAN_NODE/can_node.h ****  *
 810:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 811:../Dave/Generated/CAN_NODE/can_node.h ****  *
 812:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 813:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 814:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 815:../Dave/Generated/CAN_NODE/can_node.h ****  */
 816:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableTxEvent(const CAN_NODE_LMO_t *const can_lmo)
 817:../Dave/Generated/CAN_NODE/can_node.h **** {
 573              	 .loc 2 817 0
 574              	 .cfi_startproc
 575              	 
 576              	 
 577 0000 80B5     	 push {r7,lr}
 578              	 .cfi_def_cfa_offset 8
 579              	 .cfi_offset 7,-8
 580              	 .cfi_offset 14,-4
 581 0002 82B0     	 sub sp,sp,#8
 582              	 .cfi_def_cfa_offset 16
 583 0004 00AF     	 add r7,sp,#0
 584              	 .cfi_def_cfa_register 7
 585 0006 7860     	 str r0,[r7,#4]
 818:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableTxEvent: null pointer", can_lmo != NULL);
 819:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_TRANSMIT);
 586              	 .loc 2 819 0
 587 0008 7B68     	 ldr r3,[r7,#4]
 588 000a 1B68     	 ldr r3,[r3]
 589 000c 1846     	 mov r0,r3
 590 000e 4FF40031 	 mov r1,#131072
 591 0012 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 820:../Dave/Generated/CAN_NODE/can_node.h **** }
 592              	 .loc 2 820 0
 593 0016 0837     	 adds r7,r7,#8
 594              	 .cfi_def_cfa_offset 8
 595 0018 BD46     	 mov sp,r7
 596              	 .cfi_def_cfa_register 13
 597              	 
 598 001a 80BD     	 pop {r7,pc}
 599              	 .cfi_endproc
 600              	.LFE245:
 602              	 .section .text.CAN_NODE_MO_EnableRxEvent,"ax",%progbits
 603              	 .align 2
 604              	 .thumb
 605              	 .thumb_func
 607              	CAN_NODE_MO_EnableRxEvent:
 608              	.LFB246:
 821:../Dave/Generated/CAN_NODE/can_node.h **** 
 822:../Dave/Generated/CAN_NODE/can_node.h **** /**
 823:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO receive event for the selected logical message object.
 824:../Dave/Generated/CAN_NODE/can_node.h ****  *        It sets the RXIE bit of the MOFCR register. The event will be generated after
 825:../Dave/Generated/CAN_NODE/can_node.h ****                reception of a CAN message.<br>
 826:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 827:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 828:../Dave/Generated/CAN_NODE/can_node.h ****  *
 829:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 830:../Dave/Generated/CAN_NODE/can_node.h ****  *
 831:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO receive event for the selected logical message object.
 832:../Dave/Generated/CAN_NODE/can_node.h ****  * The event is generated after reception of a CAN message.
 833:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 834:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 835:../Dave/Generated/CAN_NODE/can_node.h ****  *
 836:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 837:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 838:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 839:../Dave/Generated/CAN_NODE/can_node.h ****  *
 840:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 841:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 842:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 843:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 844:../Dave/Generated/CAN_NODE/can_node.h ****  *
 845:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 846:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 847:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 848:../Dave/Generated/CAN_NODE/can_node.h ****  *
 849:../Dave/Generated/CAN_NODE/can_node.h ****  *
 850:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_EnableRxEvent(HandlePtr1->lmobj_ptr[0]);
 851:../Dave/Generated/CAN_NODE/can_node.h ****  *
 852:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code
 853:../Dave/Generated/CAN_NODE/can_node.h ****  *
 854:../Dave/Generated/CAN_NODE/can_node.h ****  *
 855:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure the interrupt APP and connect the receive signal of the message object to NVI
 856:../Dave/Generated/CAN_NODE/can_node.h ****  *       //After the successful reception of message object, receive event will be generated.
 857:../Dave/Generated/CAN_NODE/can_node.h ****  *
 858:../Dave/Generated/CAN_NODE/can_node.h ****  *
 859:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 860:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 861:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 862:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 863:../Dave/Generated/CAN_NODE/can_node.h ****  *
 864:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 865:../Dave/Generated/CAN_NODE/can_node.h ****  *
 866:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 867:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 868:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 869:../Dave/Generated/CAN_NODE/can_node.h ****  */
 870:../Dave/Generated/CAN_NODE/can_node.h **** 
 871:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableRxEvent(const CAN_NODE_LMO_t *const can_lmo)
 872:../Dave/Generated/CAN_NODE/can_node.h **** {
 609              	 .loc 2 872 0
 610              	 .cfi_startproc
 611              	 
 612              	 
 613 0000 80B5     	 push {r7,lr}
 614              	 .cfi_def_cfa_offset 8
 615              	 .cfi_offset 7,-8
 616              	 .cfi_offset 14,-4
 617 0002 82B0     	 sub sp,sp,#8
 618              	 .cfi_def_cfa_offset 16
 619 0004 00AF     	 add r7,sp,#0
 620              	 .cfi_def_cfa_register 7
 621 0006 7860     	 str r0,[r7,#4]
 873:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableRxEvent: null pointer", can_lmo != NULL);
 874:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_RECEIVE);
 622              	 .loc 2 874 0
 623 0008 7B68     	 ldr r3,[r7,#4]
 624 000a 1B68     	 ldr r3,[r3]
 625 000c 1846     	 mov r0,r3
 626 000e 4FF48031 	 mov r1,#65536
 627 0012 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 875:../Dave/Generated/CAN_NODE/can_node.h **** }
 628              	 .loc 2 875 0
 629 0016 0837     	 adds r7,r7,#8
 630              	 .cfi_def_cfa_offset 8
 631 0018 BD46     	 mov sp,r7
 632              	 .cfi_def_cfa_register 13
 633              	 
 634 001a 80BD     	 pop {r7,pc}
 635              	 .cfi_endproc
 636              	.LFE246:
 638              	 .section .text.CAN_NODE_SetNodeEvents,"ax",%progbits
 639              	 .align 2
 640              	 .thumb
 641              	 .thumb_func
 643              	CAN_NODE_SetNodeEvents:
 644              	.LFB250:
 645              	 .file 3 "../Dave/Generated/CAN_NODE/can_node.c"
   1:../Dave/Generated/CAN_NODE/can_node.c **** /**
   2:../Dave/Generated/CAN_NODE/can_node.c ****  * @file can_node.c
   3:../Dave/Generated/CAN_NODE/can_node.c ****  * @date 2015-06-30
   4:../Dave/Generated/CAN_NODE/can_node.c ****  *
   5:../Dave/Generated/CAN_NODE/can_node.c ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.c ****  *
   8:../Dave/Generated/CAN_NODE/can_node.c ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.c ****  * CAN_NODE v4.1.14 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.c ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.c ****  *
  13:../Dave/Generated/CAN_NODE/can_node.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.c ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.c ****  *
  16:../Dave/Generated/CAN_NODE/can_node.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.c ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.c ****  *
  19:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.c ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.c ****  *
  22:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.c ****  *
  25:../Dave/Generated/CAN_NODE/can_node.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.c ****  *
  28:../Dave/Generated/CAN_NODE/can_node.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.c ****  *
  36:../Dave/Generated/CAN_NODE/can_node.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.c ****  *
  40:../Dave/Generated/CAN_NODE/can_node.c ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.c ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.c ****  *
  43:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.c ****  *
  46:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.c ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.c ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(), CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSt
  49:../Dave/Generated/CAN_NODE/can_node.c ****  *
  50:../Dave/Generated/CAN_NODE/can_node.c ****  * @endcond
  51:../Dave/Generated/CAN_NODE/can_node.c ****  *
  52:../Dave/Generated/CAN_NODE/can_node.c ****  */
  53:../Dave/Generated/CAN_NODE/can_node.c **** 
  54:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  55:../Dave/Generated/CAN_NODE/can_node.c ****  * HEADER FILES
  56:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  57:../Dave/Generated/CAN_NODE/can_node.c **** #include "can_node.h"
  58:../Dave/Generated/CAN_NODE/can_node.c **** 
  59:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  60:../Dave/Generated/CAN_NODE/can_node.c ****  * MACROS
  61:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  62:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MIN_BAUDRATE (100000U)
  63:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_BAUDRATE (1000000U)
  64:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SAMPLE_POINT (100U)
  65:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SJW    (3U)
  66:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MO_CLEAR_MASK (0x0fffU)
  67:../Dave/Generated/CAN_NODE/can_node.c **** 
  68:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  69:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL DATA
  70:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  71:../Dave/Generated/CAN_NODE/can_node.c **** 
  72:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  73:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL ROUTINES
  74:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  75:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle);
  76:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle);
  77:../Dave/Generated/CAN_NODE/can_node.c **** 
  78:../Dave/Generated/CAN_NODE/can_node.c **** /**
  79:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to enable the can node events like node alert,LEC,
  80:../Dave/Generated/CAN_NODE/can_node.c ****   *         Transfer OK and Frame counter overflow based on GUI configuration.
  81:../Dave/Generated/CAN_NODE/can_node.c ****   * @param  handle is a pointer pointing to APP data structure.
  82:../Dave/Generated/CAN_NODE/can_node.c ****   * @return None
  83:../Dave/Generated/CAN_NODE/can_node.c ****   */
  84:../Dave/Generated/CAN_NODE/can_node.c **** 
  85:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle)
  86:../Dave/Generated/CAN_NODE/can_node.c **** {
 646              	 .loc 3 86 0
 647              	 .cfi_startproc
 648              	 
 649              	 
 650 0000 80B5     	 push {r7,lr}
 651              	 .cfi_def_cfa_offset 8
 652              	 .cfi_offset 7,-8
 653              	 .cfi_offset 14,-4
 654 0002 84B0     	 sub sp,sp,#16
 655              	 .cfi_def_cfa_offset 24
 656 0004 00AF     	 add r7,sp,#0
 657              	 .cfi_def_cfa_register 7
 658 0006 7860     	 str r0,[r7,#4]
  87:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t lnode_event = 0U;
 659              	 .loc 3 87 0
 660 0008 0023     	 movs r3,#0
 661 000a FB60     	 str r3,[r7,#12]
  88:../Dave/Generated/CAN_NODE/can_node.c **** 
  89:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_lInit: handle null", handle != NULL);
  90:../Dave/Generated/CAN_NODE/can_node.c **** 
  91:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_SetNodePointer(handle); /* set node service pointer */
 662              	 .loc 3 91 0
 663 000c 7868     	 ldr r0,[r7,#4]
 664 000e FFF7FEFF 	 bl CAN_NODE_SetNodePointer
  92:../Dave/Generated/CAN_NODE/can_node.c **** 
  93:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->txok_event_enable == true)
 665              	 .loc 3 93 0
 666 0012 7B68     	 ldr r3,[r7,#4]
 667 0014 93F8A430 	 ldrb r3,[r3,#164]
 668 0018 002B     	 cmp r3,#0
 669 001a 03D0     	 beq .L19
  94:../Dave/Generated/CAN_NODE/can_node.c ****   {
  95:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_TX_INT;
 670              	 .loc 3 95 0
 671 001c FB68     	 ldr r3,[r7,#12]
 672 001e 43F00203 	 orr r3,r3,#2
 673 0022 FB60     	 str r3,[r7,#12]
 674              	.L19:
  96:../Dave/Generated/CAN_NODE/can_node.c ****   }
  97:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->lec_event_enable == true)
 675              	 .loc 3 97 0
 676 0024 7B68     	 ldr r3,[r7,#4]
 677 0026 93F8A330 	 ldrb r3,[r3,#163]
 678 002a 002B     	 cmp r3,#0
 679 002c 03D0     	 beq .L20
  98:../Dave/Generated/CAN_NODE/can_node.c ****   {
  99:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_LEC;
 680              	 .loc 3 99 0
 681 002e FB68     	 ldr r3,[r7,#12]
 682 0030 43F00403 	 orr r3,r3,#4
 683 0034 FB60     	 str r3,[r7,#12]
 684              	.L20:
 100:../Dave/Generated/CAN_NODE/can_node.c ****   }
 101:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->alert_event_enable == true)
 685              	 .loc 3 101 0
 686 0036 7B68     	 ldr r3,[r7,#4]
 687 0038 93F8A530 	 ldrb r3,[r3,#165]
 688 003c 002B     	 cmp r3,#0
 689 003e 03D0     	 beq .L21
 102:../Dave/Generated/CAN_NODE/can_node.c ****   {
 103:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_ALERT;
 690              	 .loc 3 103 0
 691 0040 FB68     	 ldr r3,[r7,#12]
 692 0042 43F00803 	 orr r3,r3,#8
 693 0046 FB60     	 str r3,[r7,#12]
 694              	.L21:
 104:../Dave/Generated/CAN_NODE/can_node.c ****   }
 105:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(handle->node_ptr, (XMC_CAN_NODE_EVENT_t)lnode_event);
 695              	 .loc 3 105 0
 696 0048 7B68     	 ldr r3,[r7,#4]
 697 004a 5B68     	 ldr r3,[r3,#4]
 698 004c 1846     	 mov r0,r3
 699 004e F968     	 ldr r1,[r7,#12]
 700 0050 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 106:../Dave/Generated/CAN_NODE/can_node.c **** 
 107:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->framecount_event_enable == true)
 701              	 .loc 3 107 0
 702 0054 7B68     	 ldr r3,[r7,#4]
 703 0056 93F8A630 	 ldrb r3,[r3,#166]
 704 005a 002B     	 cmp r3,#0
 705 005c 06D0     	 beq .L18
 108:../Dave/Generated/CAN_NODE/can_node.c ****   {
 109:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_EnableEvent(handle->node_ptr, XMC_CAN_NODE_EVENT_CFCIE);
 706              	 .loc 3 109 0
 707 005e 7B68     	 ldr r3,[r7,#4]
 708 0060 5B68     	 ldr r3,[r3,#4]
 709 0062 1846     	 mov r0,r3
 710 0064 4FF48001 	 mov r1,#4194304
 711 0068 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 712              	.L18:
 110:../Dave/Generated/CAN_NODE/can_node.c ****   }
 111:../Dave/Generated/CAN_NODE/can_node.c **** 
 112:../Dave/Generated/CAN_NODE/can_node.c **** }
 713              	 .loc 3 112 0
 714 006c 1037     	 adds r7,r7,#16
 715              	 .cfi_def_cfa_offset 8
 716 006e BD46     	 mov sp,r7
 717              	 .cfi_def_cfa_register 13
 718              	 
 719 0070 80BD     	 pop {r7,pc}
 720              	 .cfi_endproc
 721              	.LFE250:
 723 0072 00BF     	 .section .text.CAN_NODE_SetNodePointer,"ax",%progbits
 724              	 .align 2
 725              	 .thumb
 726              	 .thumb_func
 728              	CAN_NODE_SetNodePointer:
 729              	.LFB251:
 113:../Dave/Generated/CAN_NODE/can_node.c **** 
 114:../Dave/Generated/CAN_NODE/can_node.c **** /**
 115:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to set the Node event pointer
 116:../Dave/Generated/CAN_NODE/can_node.c ****   *
 117:../Dave/Generated/CAN_NODE/can_node.c ****   */
 118:../Dave/Generated/CAN_NODE/can_node.c **** 
 119:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle)
 120:../Dave/Generated/CAN_NODE/can_node.c **** {
 730              	 .loc 3 120 0
 731              	 .cfi_startproc
 732              	 
 733              	 
 734 0000 80B5     	 push {r7,lr}
 735              	 .cfi_def_cfa_offset 8
 736              	 .cfi_offset 7,-8
 737              	 .cfi_offset 14,-4
 738 0002 82B0     	 sub sp,sp,#8
 739              	 .cfi_def_cfa_offset 16
 740 0004 00AF     	 add r7,sp,#0
 741              	 .cfi_def_cfa_register 7
 742 0006 7860     	 str r0,[r7,#4]
 121:../Dave/Generated/CAN_NODE/can_node.c **** 
 122:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_SetNodePointer: handle null", handle != NULL);
 123:../Dave/Generated/CAN_NODE/can_node.c **** 
 124:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the alert event with the service request number */
 125:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_ALERT,
 743              	 .loc 3 125 0
 744 0008 7B68     	 ldr r3,[r7,#4]
 745 000a 5A68     	 ldr r2,[r3,#4]
 126:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 746              	 .loc 3 126 0
 747 000c 7B68     	 ldr r3,[r7,#4]
 748 000e D3F88C30 	 ldr r3,[r3,#140]
 749 0012 1B78     	 ldrb r3,[r3]
 125:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 750              	 .loc 3 125 0
 751 0014 1046     	 mov r0,r2
 752 0016 0021     	 movs r1,#0
 753 0018 1A46     	 mov r2,r3
 754 001a FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 127:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the LEC event with the service request number */
 128:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_LEC,
 755              	 .loc 3 128 0
 756 001e 7B68     	 ldr r3,[r7,#4]
 757 0020 5A68     	 ldr r2,[r3,#4]
 129:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 758              	 .loc 3 129 0
 759 0022 7B68     	 ldr r3,[r7,#4]
 760 0024 D3F88C30 	 ldr r3,[r3,#140]
 761 0028 5B78     	 ldrb r3,[r3,#1]
 128:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 762              	 .loc 3 128 0
 763 002a 1046     	 mov r0,r2
 764 002c 0421     	 movs r1,#4
 765 002e 1A46     	 mov r2,r3
 766 0030 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 130:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the TXOK event with the service request number */
 131:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK,
 767              	 .loc 3 131 0
 768 0034 7B68     	 ldr r3,[r7,#4]
 769 0036 5A68     	 ldr r2,[r3,#4]
 132:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 770              	 .loc 3 132 0
 771 0038 7B68     	 ldr r3,[r7,#4]
 772 003a D3F88C30 	 ldr r3,[r3,#140]
 773 003e 9B78     	 ldrb r3,[r3,#2]
 131:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 774              	 .loc 3 131 0
 775 0040 1046     	 mov r0,r2
 776 0042 0821     	 movs r1,#8
 777 0044 1A46     	 mov r2,r3
 778 0046 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 133:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the Frame counter event with the service request number 
 134:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER,
 779              	 .loc 3 134 0
 780 004a 7B68     	 ldr r3,[r7,#4]
 781 004c 5A68     	 ldr r2,[r3,#4]
 135:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 782              	 .loc 3 135 0
 783 004e 7B68     	 ldr r3,[r7,#4]
 784 0050 D3F88C30 	 ldr r3,[r3,#140]
 785 0054 DB78     	 ldrb r3,[r3,#3]
 134:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 786              	 .loc 3 134 0
 787 0056 1046     	 mov r0,r2
 788 0058 0C21     	 movs r1,#12
 789 005a 1A46     	 mov r2,r3
 790 005c FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 136:../Dave/Generated/CAN_NODE/can_node.c **** 
 137:../Dave/Generated/CAN_NODE/can_node.c **** }
 791              	 .loc 3 137 0
 792 0060 0837     	 adds r7,r7,#8
 793              	 .cfi_def_cfa_offset 8
 794 0062 BD46     	 mov sp,r7
 795              	 .cfi_def_cfa_register 13
 796              	 
 797 0064 80BD     	 pop {r7,pc}
 798              	 .cfi_endproc
 799              	.LFE251:
 801 0066 00BF     	 .section .text.CAN_NODE_GetAppVersion,"ax",%progbits
 802              	 .align 2
 803              	 .global CAN_NODE_GetAppVersion
 804              	 .thumb
 805              	 .thumb_func
 807              	CAN_NODE_GetAppVersion:
 808              	.LFB252:
 138:../Dave/Generated/CAN_NODE/can_node.c **** 
 139:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
 140:../Dave/Generated/CAN_NODE/can_node.c ****  * API IMPLEMENTATION
 141:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
 142:../Dave/Generated/CAN_NODE/can_node.c **** 
 143:../Dave/Generated/CAN_NODE/can_node.c **** /*  API to retrieve the version of the CAN_NODE APP */
 144:../Dave/Generated/CAN_NODE/can_node.c **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion()
 145:../Dave/Generated/CAN_NODE/can_node.c **** {
 809              	 .loc 3 145 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814 0000 80B4     	 push {r7}
 815              	 .cfi_def_cfa_offset 4
 816              	 .cfi_offset 7,-4
 817 0002 83B0     	 sub sp,sp,#12
 818              	 .cfi_def_cfa_offset 16
 819 0004 00AF     	 add r7,sp,#0
 820              	 .cfi_def_cfa_register 7
 146:../Dave/Generated/CAN_NODE/can_node.c ****   DAVE_APP_VERSION_t version;
 147:../Dave/Generated/CAN_NODE/can_node.c **** 
 148:../Dave/Generated/CAN_NODE/can_node.c ****   version.major = (uint8_t)CAN_NODE_MAJOR_VERSION;
 821              	 .loc 3 148 0
 822 0006 0423     	 movs r3,#4
 823 0008 3B70     	 strb r3,[r7]
 149:../Dave/Generated/CAN_NODE/can_node.c ****   version.minor = (uint8_t)CAN_NODE_MINOR_VERSION;
 824              	 .loc 3 149 0
 825 000a 0123     	 movs r3,#1
 826 000c 7B70     	 strb r3,[r7,#1]
 150:../Dave/Generated/CAN_NODE/can_node.c ****   version.patch = (uint8_t)CAN_NODE_PATCH_VERSION;
 827              	 .loc 3 150 0
 828 000e 0E23     	 movs r3,#14
 829 0010 BB70     	 strb r3,[r7,#2]
 151:../Dave/Generated/CAN_NODE/can_node.c **** 
 152:../Dave/Generated/CAN_NODE/can_node.c ****   return (version);
 830              	 .loc 3 152 0
 831 0012 3B1D     	 adds r3,r7,#4
 832 0014 3A46     	 mov r2,r7
 833 0016 1268     	 ldr r2,[r2]
 834 0018 1146     	 mov r1,r2
 835 001a 1980     	 strh r1,[r3]
 836 001c 0233     	 adds r3,r3,#2
 837 001e 120C     	 lsrs r2,r2,#16
 838 0020 1A70     	 strb r2,[r3]
 839 0022 0023     	 movs r3,#0
 840 0024 3A79     	 ldrb r2,[r7,#4]
 841 0026 62F30703 	 bfi r3,r2,#0,#8
 842 002a 7A79     	 ldrb r2,[r7,#5]
 843 002c 62F30F23 	 bfi r3,r2,#8,#8
 844 0030 BA79     	 ldrb r2,[r7,#6]
 845 0032 62F31743 	 bfi r3,r2,#16,#8
 153:../Dave/Generated/CAN_NODE/can_node.c **** }
 846              	 .loc 3 153 0
 847 0036 1846     	 mov r0,r3
 848 0038 0C37     	 adds r7,r7,#12
 849              	 .cfi_def_cfa_offset 4
 850 003a BD46     	 mov sp,r7
 851              	 .cfi_def_cfa_register 13
 852              	 
 853 003c 5DF8047B 	 ldr r7,[sp],#4
 854              	 .cfi_restore 7
 855              	 .cfi_def_cfa_offset 0
 856 0040 7047     	 bx lr
 857              	 .cfi_endproc
 858              	.LFE252:
 860 0042 00BF     	 .section .text.CAN_NODE_EnableEvent,"ax",%progbits
 861              	 .align 2
 862              	 .global CAN_NODE_EnableEvent
 863              	 .thumb
 864              	 .thumb_func
 866              	CAN_NODE_EnableEvent:
 867              	.LFB253:
 154:../Dave/Generated/CAN_NODE/can_node.c **** 
 155:../Dave/Generated/CAN_NODE/can_node.c **** /* API to enable the can node events like node alert,LEC,Transfer OK and Frame counter overflow. */
 156:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 157:../Dave/Generated/CAN_NODE/can_node.c **** {
 868              	 .loc 3 157 0
 869              	 .cfi_startproc
 870              	 
 871              	 
 872 0000 80B5     	 push {r7,lr}
 873              	 .cfi_def_cfa_offset 8
 874              	 .cfi_offset 7,-8
 875              	 .cfi_offset 14,-4
 876 0002 84B0     	 sub sp,sp,#16
 877              	 .cfi_def_cfa_offset 24
 878 0004 00AF     	 add r7,sp,#0
 879              	 .cfi_def_cfa_register 7
 880 0006 7860     	 str r0,[r7,#4]
 881 0008 3960     	 str r1,[r7]
 158:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_EnableEvent: handle null", handle != NULL);
 159:../Dave/Generated/CAN_NODE/can_node.c **** 
 160:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 882              	 .loc 3 160 0
 883 000a 7B68     	 ldr r3,[r7,#4]
 884 000c 5B68     	 ldr r3,[r3,#4]
 885 000e FB60     	 str r3,[r7,#12]
 161:../Dave/Generated/CAN_NODE/can_node.c **** 
 162:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(can_node,node_event);
 886              	 .loc 3 162 0
 887 0010 F868     	 ldr r0,[r7,#12]
 888 0012 3968     	 ldr r1,[r7]
 889 0014 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 163:../Dave/Generated/CAN_NODE/can_node.c **** 
 164:../Dave/Generated/CAN_NODE/can_node.c **** }
 890              	 .loc 3 164 0
 891 0018 1037     	 adds r7,r7,#16
 892              	 .cfi_def_cfa_offset 8
 893 001a BD46     	 mov sp,r7
 894              	 .cfi_def_cfa_register 13
 895              	 
 896 001c 80BD     	 pop {r7,pc}
 897              	 .cfi_endproc
 898              	.LFE253:
 900 001e 00BF     	 .section .text.CAN_NODE_ConfigBaudrate,"ax",%progbits
 901              	 .align 2
 902              	 .global CAN_NODE_ConfigBaudrate
 903              	 .thumb
 904              	 .thumb_func
 906              	CAN_NODE_ConfigBaudrate:
 907              	.LFB254:
 165:../Dave/Generated/CAN_NODE/can_node.c **** 
 166:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to configure the baud rate based on UI configuration. */
 167:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 168:../Dave/Generated/CAN_NODE/can_node.c **** {
 908              	 .loc 3 168 0
 909              	 .cfi_startproc
 910              	 
 911              	 
 912 0000 80B5     	 push {r7,lr}
 913              	 .cfi_def_cfa_offset 8
 914              	 .cfi_offset 7,-8
 915              	 .cfi_offset 14,-4
 916 0002 86B0     	 sub sp,sp,#24
 917              	 .cfi_def_cfa_offset 32
 918 0004 00AF     	 add r7,sp,#0
 919              	 .cfi_def_cfa_register 7
 920 0006 F860     	 str r0,[r7,#12]
 921 0008 B960     	 str r1,[r7,#8]
 922 000a 1146     	 mov r1,r2
 923 000c 1A46     	 mov r2,r3
 924 000e 0B46     	 mov r3,r1
 925 0010 FB80     	 strh r3,[r7,#6]
 926 0012 1346     	 mov r3,r2
 927 0014 7B71     	 strb r3,[r7,#5]
 169:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 928              	 .loc 3 169 0
 929 0016 FB68     	 ldr r3,[r7,#12]
 930 0018 5B68     	 ldr r3,[r3,#4]
 931 001a 7B61     	 str r3,[r7,#20]
 170:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time = handle->baudrate_config;
 932              	 .loc 3 170 0
 933 001c FB68     	 ldr r3,[r7,#12]
 934 001e 9B68     	 ldr r3,[r3,#8]
 935 0020 3B61     	 str r3,[r7,#16]
 171:../Dave/Generated/CAN_NODE/can_node.c **** 
 172:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: handle null", handle != NULL);
 173:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: baud rate invalid", (baudrate >= CAN_NODE_MIN_BAUDRATE)
 174:../Dave/Generated/CAN_NODE/can_node.c **** 		                                                                 && (baudrate <= CAN_NODE_MAX_BAU
 175:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: sample_point invalid", (sample_point >= 0U) &&
 176:../Dave/Generated/CAN_NODE/can_node.c ****                                                                         (sample_point <= CAN_NODE_M
 177:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: Synchronization jump width invalid", (sjw >= 0U) && (sjw <= 
 178:../Dave/Generated/CAN_NODE/can_node.c **** 
 179:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->baudrate = baudrate;
 936              	 .loc 3 179 0
 937 0022 3B69     	 ldr r3,[r7,#16]
 938 0024 BA68     	 ldr r2,[r7,#8]
 939 0026 5A60     	 str r2,[r3,#4]
 180:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sample_point = (sample_point * CAN_NODE_MAX_SAMPLE_POINT);
 940              	 .loc 3 180 0
 941 0028 FB88     	 ldrh r3,[r7,#6]
 942 002a 1A46     	 mov r2,r3
 943 002c 9200     	 lsls r2,r2,#2
 944 002e 1344     	 add r3,r3,r2
 945 0030 1A46     	 mov r2,r3
 946 0032 9100     	 lsls r1,r2,#2
 947 0034 1A46     	 mov r2,r3
 948 0036 0B46     	 mov r3,r1
 949 0038 1344     	 add r3,r3,r2
 950 003a 9B00     	 lsls r3,r3,#2
 951 003c 9AB2     	 uxth r2,r3
 952 003e 3B69     	 ldr r3,[r7,#16]
 953 0040 1A81     	 strh r2,[r3,#8]
 181:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sjw = (uint16_t)sjw;
 954              	 .loc 3 181 0
 955 0042 7B79     	 ldrb r3,[r7,#5]
 956 0044 9AB2     	 uxth r2,r3
 957 0046 3B69     	 ldr r3,[r7,#16]
 958 0048 5A81     	 strh r2,[r3,#10]
 182:../Dave/Generated/CAN_NODE/can_node.c **** 
 183:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NominalBitTimeConfigure(can_node, can_bit_time);
 959              	 .loc 3 183 0
 960 004a 7869     	 ldr r0,[r7,#20]
 961 004c 3969     	 ldr r1,[r7,#16]
 962 004e FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigure
 184:../Dave/Generated/CAN_NODE/can_node.c **** }
 963              	 .loc 3 184 0
 964 0052 1837     	 adds r7,r7,#24
 965              	 .cfi_def_cfa_offset 8
 966 0054 BD46     	 mov sp,r7
 967              	 .cfi_def_cfa_register 13
 968              	 
 969 0056 80BD     	 pop {r7,pc}
 970              	 .cfi_endproc
 971              	.LFE254:
 973              	 .section .text.CAN_NODE_MO_Init,"ax",%progbits
 974              	 .align 2
 975              	 .global CAN_NODE_MO_Init
 976              	 .thumb
 977              	 .thumb_func
 979              	CAN_NODE_MO_Init:
 980              	.LFB255:
 185:../Dave/Generated/CAN_NODE/can_node.c **** 
 186:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN MO based on UI configuration. */
 187:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr)
 188:../Dave/Generated/CAN_NODE/can_node.c **** {
 981              	 .loc 3 188 0
 982              	 .cfi_startproc
 983              	 
 984              	 
 985 0000 80B5     	 push {r7,lr}
 986              	 .cfi_def_cfa_offset 8
 987              	 .cfi_offset 7,-8
 988              	 .cfi_offset 14,-4
 989 0002 82B0     	 sub sp,sp,#8
 990              	 .cfi_def_cfa_offset 16
 991 0004 00AF     	 add r7,sp,#0
 992              	 .cfi_def_cfa_register 7
 993 0006 7860     	 str r0,[r7,#4]
 189:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Init: lmo_ptr null", lmo_ptr != NULL);
 190:../Dave/Generated/CAN_NODE/can_node.c **** 
 191:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_Config(lmo_ptr->mo_ptr);
 994              	 .loc 3 191 0
 995 0008 7B68     	 ldr r3,[r7,#4]
 996 000a 1B68     	 ldr r3,[r3]
 997 000c 1846     	 mov r0,r3
 998 000e FFF7FEFF 	 bl XMC_CAN_MO_Config
 192:../Dave/Generated/CAN_NODE/can_node.c **** 
 193:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->tx_event_enable == true)
 999              	 .loc 3 193 0
 1000 0012 7B68     	 ldr r3,[r7,#4]
 1001 0014 DB79     	 ldrb r3,[r3,#7]
 1002 0016 002B     	 cmp r3,#0
 1003 0018 0BD0     	 beq .L29
 194:../Dave/Generated/CAN_NODE/can_node.c ****   {
 195:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_TRANSMIT, lmo_ptr->tx_
 1004              	 .loc 3 195 0
 1005 001a 7B68     	 ldr r3,[r7,#4]
 1006 001c 1A68     	 ldr r2,[r3]
 1007 001e 7B68     	 ldr r3,[r7,#4]
 1008 0020 5B79     	 ldrb r3,[r3,#5]
 1009 0022 1046     	 mov r0,r2
 1010 0024 0421     	 movs r1,#4
 1011 0026 1A46     	 mov r2,r3
 1012 0028 FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 196:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableTxEvent(lmo_ptr);
 1013              	 .loc 3 196 0
 1014 002c 7868     	 ldr r0,[r7,#4]
 1015 002e FFF7FEFF 	 bl CAN_NODE_MO_EnableTxEvent
 1016              	.L29:
 197:../Dave/Generated/CAN_NODE/can_node.c ****   }
 198:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->rx_event_enable == true)
 1017              	 .loc 3 198 0
 1018 0032 7B68     	 ldr r3,[r7,#4]
 1019 0034 1B7A     	 ldrb r3,[r3,#8]
 1020 0036 002B     	 cmp r3,#0
 1021 0038 0BD0     	 beq .L28
 199:../Dave/Generated/CAN_NODE/can_node.c ****   {
 200:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_RECEIVE, lmo_ptr->rx_s
 1022              	 .loc 3 200 0
 1023 003a 7B68     	 ldr r3,[r7,#4]
 1024 003c 1A68     	 ldr r2,[r3]
 1025 003e 7B68     	 ldr r3,[r7,#4]
 1026 0040 9B79     	 ldrb r3,[r3,#6]
 1027 0042 1046     	 mov r0,r2
 1028 0044 0021     	 movs r1,#0
 1029 0046 1A46     	 mov r2,r3
 1030 0048 FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 201:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableRxEvent(lmo_ptr);
 1031              	 .loc 3 201 0
 1032 004c 7868     	 ldr r0,[r7,#4]
 1033 004e FFF7FEFF 	 bl CAN_NODE_MO_EnableRxEvent
 1034              	.L28:
 202:../Dave/Generated/CAN_NODE/can_node.c ****   }
 203:../Dave/Generated/CAN_NODE/can_node.c **** 
 204:../Dave/Generated/CAN_NODE/can_node.c **** }
 1035              	 .loc 3 204 0
 1036 0052 0837     	 adds r7,r7,#8
 1037              	 .cfi_def_cfa_offset 8
 1038 0054 BD46     	 mov sp,r7
 1039              	 .cfi_def_cfa_register 13
 1040              	 
 1041 0056 80BD     	 pop {r7,pc}
 1042              	 .cfi_endproc
 1043              	.LFE255:
 1045              	 .section .text.CAN_NODE_MO_Transmit,"ax",%progbits
 1046              	 .align 2
 1047              	 .global CAN_NODE_MO_Transmit
 1048              	 .thumb
 1049              	 .thumb_func
 1051              	CAN_NODE_MO_Transmit:
 1052              	.LFB256:
 205:../Dave/Generated/CAN_NODE/can_node.c **** 
 206:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to transmit the can MO frame.  */
 207:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Transmit(const CAN_NODE_LMO_t *lmo_ptr)
 208:../Dave/Generated/CAN_NODE/can_node.c **** {
 1053              	 .loc 3 208 0
 1054              	 .cfi_startproc
 1055              	 
 1056              	 
 1057 0000 80B5     	 push {r7,lr}
 1058              	 .cfi_def_cfa_offset 8
 1059              	 .cfi_offset 7,-8
 1060              	 .cfi_offset 14,-4
 1061 0002 84B0     	 sub sp,sp,#16
 1062              	 .cfi_def_cfa_offset 24
 1063 0004 00AF     	 add r7,sp,#0
 1064              	 .cfi_def_cfa_register 7
 1065 0006 7860     	 str r0,[r7,#4]
 209:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1066              	 .loc 3 209 0
 1067 0008 0023     	 movs r3,#0
 1068 000a FB73     	 strb r3,[r7,#15]
 210:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Transmit: lmo_ptr null", lmo_ptr != NULL);
 211:../Dave/Generated/CAN_NODE/can_node.c **** 
 212:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Transmit(lmo_ptr->mo_ptr);
 1069              	 .loc 3 212 0
 1070 000c 7B68     	 ldr r3,[r7,#4]
 1071 000e 1B68     	 ldr r3,[r3]
 1072 0010 1846     	 mov r0,r3
 1073 0012 FFF7FEFF 	 bl XMC_CAN_MO_Transmit
 1074 0016 0346     	 mov r3,r0
 1075 0018 FB73     	 strb r3,[r7,#15]
 213:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1076              	 .loc 3 213 0
 1077 001a FB7B     	 ldrb r3,[r7,#15]
 214:../Dave/Generated/CAN_NODE/can_node.c **** }
 1078              	 .loc 3 214 0
 1079 001c 1846     	 mov r0,r3
 1080 001e 1037     	 adds r7,r7,#16
 1081              	 .cfi_def_cfa_offset 8
 1082 0020 BD46     	 mov sp,r7
 1083              	 .cfi_def_cfa_register 13
 1084              	 
 1085 0022 80BD     	 pop {r7,pc}
 1086              	 .cfi_endproc
 1087              	.LFE256:
 1089              	 .section .text.CAN_NODE_MO_Receive,"ax",%progbits
 1090              	 .align 2
 1091              	 .global CAN_NODE_MO_Receive
 1092              	 .thumb
 1093              	 .thumb_func
 1095              	CAN_NODE_MO_Receive:
 1096              	.LFB257:
 215:../Dave/Generated/CAN_NODE/can_node.c **** 
 216:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message from the selected message object. */
 217:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Receive( CAN_NODE_LMO_t *lmo_ptr)
 218:../Dave/Generated/CAN_NODE/can_node.c **** {
 1097              	 .loc 3 218 0
 1098              	 .cfi_startproc
 1099              	 
 1100              	 
 1101 0000 80B5     	 push {r7,lr}
 1102              	 .cfi_def_cfa_offset 8
 1103              	 .cfi_offset 7,-8
 1104              	 .cfi_offset 14,-4
 1105 0002 84B0     	 sub sp,sp,#16
 1106              	 .cfi_def_cfa_offset 24
 1107 0004 00AF     	 add r7,sp,#0
 1108              	 .cfi_def_cfa_register 7
 1109 0006 7860     	 str r0,[r7,#4]
 219:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1110              	 .loc 3 219 0
 1111 0008 0023     	 movs r3,#0
 1112 000a FB73     	 strb r3,[r7,#15]
 220:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Receive: lmo_ptr null", lmo_ptr != NULL);
 221:../Dave/Generated/CAN_NODE/can_node.c **** 
 222:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Receive(lmo_ptr->mo_ptr);
 1113              	 .loc 3 222 0
 1114 000c 7B68     	 ldr r3,[r7,#4]
 1115 000e 1B68     	 ldr r3,[r3]
 1116 0010 1846     	 mov r0,r3
 1117 0012 FFF7FEFF 	 bl XMC_CAN_MO_Receive
 1118 0016 0346     	 mov r3,r0
 1119 0018 FB73     	 strb r3,[r7,#15]
 223:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1120              	 .loc 3 223 0
 1121 001a FB7B     	 ldrb r3,[r7,#15]
 224:../Dave/Generated/CAN_NODE/can_node.c **** }
 1122              	 .loc 3 224 0
 1123 001c 1846     	 mov r0,r3
 1124 001e 1037     	 adds r7,r7,#16
 1125              	 .cfi_def_cfa_offset 8
 1126 0020 BD46     	 mov sp,r7
 1127              	 .cfi_def_cfa_register 13
 1128              	 
 1129 0022 80BD     	 pop {r7,pc}
 1130              	 .cfi_endproc
 1131              	.LFE257:
 1133              	 .section .text.CAN_NODE_MO_ReceiveData,"ax",%progbits
 1134              	 .align 2
 1135              	 .global CAN_NODE_MO_ReceiveData
 1136              	 .thumb
 1137              	 .thumb_func
 1139              	CAN_NODE_MO_ReceiveData:
 1140              	.LFB258:
 225:../Dave/Generated/CAN_NODE/can_node.c **** 
 226:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message data from the selected message object excluding other 
 227:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_ReceiveData( CAN_NODE_LMO_t *lmo_ptr)
 228:../Dave/Generated/CAN_NODE/can_node.c **** {
 1141              	 .loc 3 228 0
 1142              	 .cfi_startproc
 1143              	 
 1144              	 
 1145 0000 80B5     	 push {r7,lr}
 1146              	 .cfi_def_cfa_offset 8
 1147              	 .cfi_offset 7,-8
 1148              	 .cfi_offset 14,-4
 1149 0002 84B0     	 sub sp,sp,#16
 1150              	 .cfi_def_cfa_offset 24
 1151 0004 00AF     	 add r7,sp,#0
 1152              	 .cfi_def_cfa_register 7
 1153 0006 7860     	 str r0,[r7,#4]
 229:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1154              	 .loc 3 229 0
 1155 0008 0023     	 movs r3,#0
 1156 000a FB73     	 strb r3,[r7,#15]
 230:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ReceiveData: lmo_ptr null", lmo_ptr != NULL);
 231:../Dave/Generated/CAN_NODE/can_node.c **** 
 232:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_ReceiveData(lmo_ptr->mo_ptr);
 1157              	 .loc 3 232 0
 1158 000c 7B68     	 ldr r3,[r7,#4]
 1159 000e 1B68     	 ldr r3,[r3]
 1160 0010 1846     	 mov r0,r3
 1161 0012 FFF7FEFF 	 bl XMC_CAN_MO_ReceiveData
 1162 0016 0346     	 mov r3,r0
 1163 0018 FB73     	 strb r3,[r7,#15]
 233:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1164              	 .loc 3 233 0
 1165 001a FB7B     	 ldrb r3,[r7,#15]
 234:../Dave/Generated/CAN_NODE/can_node.c **** }
 1166              	 .loc 3 234 0
 1167 001c 1846     	 mov r0,r3
 1168 001e 1037     	 adds r7,r7,#16
 1169              	 .cfi_def_cfa_offset 8
 1170 0020 BD46     	 mov sp,r7
 1171              	 .cfi_def_cfa_register 13
 1172              	 
 1173 0022 80BD     	 pop {r7,pc}
 1174              	 .cfi_endproc
 1175              	.LFE258:
 1177              	 .section .text.CAN_NODE_MO_UpdateData,"ax",%progbits
 1178              	 .align 2
 1179              	 .global CAN_NODE_MO_UpdateData
 1180              	 .thumb
 1181              	 .thumb_func
 1183              	CAN_NODE_MO_UpdateData:
 1184              	.LFB259:
 235:../Dave/Generated/CAN_NODE/can_node.c **** 
 236:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to updates the data for the CAN Message Object. */
 237:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_UpdateData(const CAN_NODE_LMO_t *const lmo_ptr, uint8_t *array_data)
 238:../Dave/Generated/CAN_NODE/can_node.c **** {
 1185              	 .loc 3 238 0
 1186              	 .cfi_startproc
 1187              	 
 1188              	 
 1189 0000 80B5     	 push {r7,lr}
 1190              	 .cfi_def_cfa_offset 8
 1191              	 .cfi_offset 7,-8
 1192              	 .cfi_offset 14,-4
 1193 0002 84B0     	 sub sp,sp,#16
 1194              	 .cfi_def_cfa_offset 24
 1195 0004 00AF     	 add r7,sp,#0
 1196              	 .cfi_def_cfa_register 7
 1197 0006 7860     	 str r0,[r7,#4]
 1198 0008 3960     	 str r1,[r7]
 239:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1199              	 .loc 3 239 0
 1200 000a 0023     	 movs r3,#0
 1201 000c FB73     	 strb r3,[r7,#15]
 240:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t *data_pointer = (uint32_t*) array_data;
 1202              	 .loc 3 240 0
 1203 000e 3B68     	 ldr r3,[r7]
 1204 0010 BB60     	 str r3,[r7,#8]
 241:../Dave/Generated/CAN_NODE/can_node.c **** 
 242:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_UpdateData: lmo_ptr null", lmo_ptr != NULL);
 243:../Dave/Generated/CAN_NODE/can_node.c **** 
 244:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[0U] = *data_pointer;
 1205              	 .loc 3 244 0
 1206 0012 7B68     	 ldr r3,[r7,#4]
 1207 0014 1B68     	 ldr r3,[r3]
 1208 0016 BA68     	 ldr r2,[r7,#8]
 1209 0018 1268     	 ldr r2,[r2]
 1210 001a 1A61     	 str r2,[r3,#16]
 245:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[1U] = *(data_pointer + 1U);
 1211              	 .loc 3 245 0
 1212 001c 7B68     	 ldr r3,[r7,#4]
 1213 001e 1B68     	 ldr r3,[r3]
 1214 0020 BA68     	 ldr r2,[r7,#8]
 1215 0022 5268     	 ldr r2,[r2,#4]
 1216 0024 5A61     	 str r2,[r3,#20]
 246:../Dave/Generated/CAN_NODE/can_node.c **** 
 247:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(lmo_ptr->mo_ptr);
 1217              	 .loc 3 247 0
 1218 0026 7B68     	 ldr r3,[r7,#4]
 1219 0028 1B68     	 ldr r3,[r3]
 1220 002a 1846     	 mov r0,r3
 1221 002c FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1222 0030 0346     	 mov r3,r0
 1223 0032 FB73     	 strb r3,[r7,#15]
 248:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1224              	 .loc 3 248 0
 1225 0034 FB7B     	 ldrb r3,[r7,#15]
 249:../Dave/Generated/CAN_NODE/can_node.c **** }
 1226              	 .loc 3 249 0
 1227 0036 1846     	 mov r0,r3
 1228 0038 1037     	 adds r7,r7,#16
 1229              	 .cfi_def_cfa_offset 8
 1230 003a BD46     	 mov sp,r7
 1231              	 .cfi_def_cfa_register 13
 1232              	 
 1233 003c 80BD     	 pop {r7,pc}
 1234              	 .cfi_endproc
 1235              	.LFE259:
 1237 003e 00BF     	 .section .text.CAN_NODE_MO_GetStatus,"ax",%progbits
 1238              	 .align 2
 1239              	 .global CAN_NODE_MO_GetStatus
 1240              	 .thumb
 1241              	 .thumb_func
 1243              	CAN_NODE_MO_GetStatus:
 1244              	.LFB260:
 250:../Dave/Generated/CAN_NODE/can_node.c **** 
 251:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to reads the status of the CAN Message Object.  */
 252:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_MO_GetStatus(const CAN_NODE_LMO_t *lmo_ptr)
 253:../Dave/Generated/CAN_NODE/can_node.c **** {
 1245              	 .loc 3 253 0
 1246              	 .cfi_startproc
 1247              	 
 1248              	 
 1249 0000 80B5     	 push {r7,lr}
 1250              	 .cfi_def_cfa_offset 8
 1251              	 .cfi_offset 7,-8
 1252              	 .cfi_offset 14,-4
 1253 0002 84B0     	 sub sp,sp,#16
 1254              	 .cfi_def_cfa_offset 24
 1255 0004 00AF     	 add r7,sp,#0
 1256              	 .cfi_def_cfa_register 7
 1257 0006 7860     	 str r0,[r7,#4]
 254:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t status;
 255:../Dave/Generated/CAN_NODE/can_node.c **** 
 256:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_GetStatus: lmo_ptr null", lmo_ptr != NULL);
 257:../Dave/Generated/CAN_NODE/can_node.c **** 
 258:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_MO_GetStatus(lmo_ptr->mo_ptr);
 1258              	 .loc 3 258 0
 1259 0008 7B68     	 ldr r3,[r7,#4]
 1260 000a 1B68     	 ldr r3,[r3]
 1261 000c 1846     	 mov r0,r3
 1262 000e FFF7FEFF 	 bl XMC_CAN_MO_GetStatus
 1263 0012 F860     	 str r0,[r7,#12]
 259:../Dave/Generated/CAN_NODE/can_node.c **** 
 260:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1264              	 .loc 3 260 0
 1265 0014 FB68     	 ldr r3,[r7,#12]
 261:../Dave/Generated/CAN_NODE/can_node.c **** }
 1266              	 .loc 3 261 0
 1267 0016 1846     	 mov r0,r3
 1268 0018 1037     	 adds r7,r7,#16
 1269              	 .cfi_def_cfa_offset 8
 1270 001a BD46     	 mov sp,r7
 1271              	 .cfi_def_cfa_register 13
 1272              	 
 1273 001c 80BD     	 pop {r7,pc}
 1274              	 .cfi_endproc
 1275              	.LFE260:
 1277 001e 00BF     	 .section .text.CAN_NODE_MO_ClearStatus,"ax",%progbits
 1278              	 .align 2
 1279              	 .global CAN_NODE_MO_ClearStatus
 1280              	 .thumb
 1281              	 .thumb_func
 1283              	CAN_NODE_MO_ClearStatus:
 1284              	.LFB261:
 262:../Dave/Generated/CAN_NODE/can_node.c **** 
 263:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to clear/ reset the status of the CAN Message Object  */
 264:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_ClearStatus(const CAN_NODE_LMO_t *lmo_ptr, const uint32_t mask)
 265:../Dave/Generated/CAN_NODE/can_node.c **** {
 1285              	 .loc 3 265 0
 1286              	 .cfi_startproc
 1287              	 
 1288              	 
 1289 0000 80B5     	 push {r7,lr}
 1290              	 .cfi_def_cfa_offset 8
 1291              	 .cfi_offset 7,-8
 1292              	 .cfi_offset 14,-4
 1293 0002 82B0     	 sub sp,sp,#8
 1294              	 .cfi_def_cfa_offset 16
 1295 0004 00AF     	 add r7,sp,#0
 1296              	 .cfi_def_cfa_register 7
 1297 0006 7860     	 str r0,[r7,#4]
 1298 0008 3960     	 str r1,[r7]
 266:../Dave/Generated/CAN_NODE/can_node.c **** 
 267:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: lmo_ptr null", lmo_ptr != NULL);
 268:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: mask invalid", (mask <= CAN_NODE_MO_CLEAR_MASK));
 269:../Dave/Generated/CAN_NODE/can_node.c **** 
 270:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_ResetStatus(lmo_ptr->mo_ptr, mask);
 1299              	 .loc 3 270 0
 1300 000a 7B68     	 ldr r3,[r7,#4]
 1301 000c 1B68     	 ldr r3,[r3]
 1302 000e 1846     	 mov r0,r3
 1303 0010 3968     	 ldr r1,[r7]
 1304 0012 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 271:../Dave/Generated/CAN_NODE/can_node.c **** 
 272:../Dave/Generated/CAN_NODE/can_node.c **** }
 1305              	 .loc 3 272 0
 1306 0016 0837     	 adds r7,r7,#8
 1307              	 .cfi_def_cfa_offset 8
 1308 0018 BD46     	 mov sp,r7
 1309              	 .cfi_def_cfa_register 13
 1310              	 
 1311 001a 80BD     	 pop {r7,pc}
 1312              	 .cfi_endproc
 1313              	.LFE261:
 1315              	 .section .text.CAN_NODE_DisableEvent,"ax",%progbits
 1316              	 .align 2
 1317              	 .global CAN_NODE_DisableEvent
 1318              	 .thumb
 1319              	 .thumb_func
 1321              	CAN_NODE_DisableEvent:
 1322              	.LFB262:
 273:../Dave/Generated/CAN_NODE/can_node.c **** 
 274:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to disable the node event  */
 275:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 276:../Dave/Generated/CAN_NODE/can_node.c **** {
 1323              	 .loc 3 276 0
 1324              	 .cfi_startproc
 1325              	 
 1326              	 
 1327 0000 80B5     	 push {r7,lr}
 1328              	 .cfi_def_cfa_offset 8
 1329              	 .cfi_offset 7,-8
 1330              	 .cfi_offset 14,-4
 1331 0002 84B0     	 sub sp,sp,#16
 1332              	 .cfi_def_cfa_offset 24
 1333 0004 00AF     	 add r7,sp,#0
 1334              	 .cfi_def_cfa_register 7
 1335 0006 7860     	 str r0,[r7,#4]
 1336 0008 3960     	 str r1,[r7]
 277:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1337              	 .loc 3 277 0
 1338 000a 7B68     	 ldr r3,[r7,#4]
 1339 000c 5B68     	 ldr r3,[r3,#4]
 1340 000e FB60     	 str r3,[r7,#12]
 278:../Dave/Generated/CAN_NODE/can_node.c **** 
 279:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_DisableEvent: handle null", handle != NULL);
 280:../Dave/Generated/CAN_NODE/can_node.c **** 
 281:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_DisableEvent(can_node,node_event);
 1341              	 .loc 3 281 0
 1342 0010 F868     	 ldr r0,[r7,#12]
 1343 0012 3968     	 ldr r1,[r7]
 1344 0014 FFF7FEFF 	 bl XMC_CAN_NODE_DisableEvent
 282:../Dave/Generated/CAN_NODE/can_node.c **** 
 283:../Dave/Generated/CAN_NODE/can_node.c **** }
 1345              	 .loc 3 283 0
 1346 0018 1037     	 adds r7,r7,#16
 1347              	 .cfi_def_cfa_offset 8
 1348 001a BD46     	 mov sp,r7
 1349              	 .cfi_def_cfa_register 13
 1350              	 
 1351 001c 80BD     	 pop {r7,pc}
 1352              	 .cfi_endproc
 1353              	.LFE262:
 1355 001e 00BF     	 .section .text.CAN_NODE_GetStatus,"ax",%progbits
 1356              	 .align 2
 1357              	 .global CAN_NODE_GetStatus
 1358              	 .thumb
 1359              	 .thumb_func
 1361              	CAN_NODE_GetStatus:
 1362              	.LFB263:
 284:../Dave/Generated/CAN_NODE/can_node.c **** 
 285:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the current status of the CAN node  */
 286:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t* handle)
 287:../Dave/Generated/CAN_NODE/can_node.c **** {
 1363              	 .loc 3 287 0
 1364              	 .cfi_startproc
 1365              	 
 1366              	 
 1367 0000 80B5     	 push {r7,lr}
 1368              	 .cfi_def_cfa_offset 8
 1369              	 .cfi_offset 7,-8
 1370              	 .cfi_offset 14,-4
 1371 0002 84B0     	 sub sp,sp,#16
 1372              	 .cfi_def_cfa_offset 24
 1373 0004 00AF     	 add r7,sp,#0
 1374              	 .cfi_def_cfa_register 7
 1375 0006 7860     	 str r0,[r7,#4]
 288:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t  status;
 289:../Dave/Generated/CAN_NODE/can_node.c **** 
 290:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_GetStatus: handle null", handle != NULL);
 291:../Dave/Generated/CAN_NODE/can_node.c **** 
 292:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1376              	 .loc 3 292 0
 1377 0008 7B68     	 ldr r3,[r7,#4]
 1378 000a 5B68     	 ldr r3,[r3,#4]
 1379 000c FB60     	 str r3,[r7,#12]
 293:../Dave/Generated/CAN_NODE/can_node.c **** 
 294:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_NODE_GetStatus(can_node);
 1380              	 .loc 3 294 0
 1381 000e F868     	 ldr r0,[r7,#12]
 1382 0010 FFF7FEFF 	 bl XMC_CAN_NODE_GetStatus
 1383 0014 B860     	 str r0,[r7,#8]
 295:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1384              	 .loc 3 295 0
 1385 0016 BB68     	 ldr r3,[r7,#8]
 296:../Dave/Generated/CAN_NODE/can_node.c **** }
 1386              	 .loc 3 296 0
 1387 0018 1846     	 mov r0,r3
 1388 001a 1037     	 adds r7,r7,#16
 1389              	 .cfi_def_cfa_offset 8
 1390 001c BD46     	 mov sp,r7
 1391              	 .cfi_def_cfa_register 13
 1392              	 
 1393 001e 80BD     	 pop {r7,pc}
 1394              	 .cfi_endproc
 1395              	.LFE263:
 1397              	 .section .text.CAN_NODE_ClearStatus,"ax",%progbits
 1398              	 .align 2
 1399              	 .global CAN_NODE_ClearStatus
 1400              	 .thumb
 1401              	 .thumb_func
 1403              	CAN_NODE_ClearStatus:
 1404              	.LFB264:
 297:../Dave/Generated/CAN_NODE/can_node.c **** 
 298:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to clear the current status of the CAN node  */
 299:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status)
 300:../Dave/Generated/CAN_NODE/can_node.c **** {
 1405              	 .loc 3 300 0
 1406              	 .cfi_startproc
 1407              	 
 1408              	 
 1409 0000 80B5     	 push {r7,lr}
 1410              	 .cfi_def_cfa_offset 8
 1411              	 .cfi_offset 7,-8
 1412              	 .cfi_offset 14,-4
 1413 0002 84B0     	 sub sp,sp,#16
 1414              	 .cfi_def_cfa_offset 24
 1415 0004 00AF     	 add r7,sp,#0
 1416              	 .cfi_def_cfa_register 7
 1417 0006 7860     	 str r0,[r7,#4]
 1418 0008 0B46     	 mov r3,r1
 1419 000a 7B80     	 strh r3,[r7,#2]
 301:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ClearStatus: handle null", handle != NULL);
 302:../Dave/Generated/CAN_NODE/can_node.c **** 
 303:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1420              	 .loc 3 303 0
 1421 000c 7B68     	 ldr r3,[r7,#4]
 1422 000e 5B68     	 ldr r3,[r3,#4]
 1423 0010 FB60     	 str r3,[r7,#12]
 304:../Dave/Generated/CAN_NODE/can_node.c **** 
 305:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_ClearStatus(can_node, can_node_status);
 1424              	 .loc 3 305 0
 1425 0012 7B88     	 ldrh r3,[r7,#2]
 1426 0014 F868     	 ldr r0,[r7,#12]
 1427 0016 1946     	 mov r1,r3
 1428 0018 FFF7FEFF 	 bl XMC_CAN_NODE_ClearStatus
 306:../Dave/Generated/CAN_NODE/can_node.c **** }
 1429              	 .loc 3 306 0
 1430 001c 1037     	 adds r7,r7,#16
 1431              	 .cfi_def_cfa_offset 8
 1432 001e BD46     	 mov sp,r7
 1433              	 .cfi_def_cfa_register 13
 1434              	 
 1435 0020 80BD     	 pop {r7,pc}
 1436              	 .cfi_endproc
 1437              	.LFE264:
 1439 0022 00BF     	 .section .text.CAN_NODE_Init,"ax",%progbits
 1440              	 .align 2
 1441              	 .global CAN_NODE_Init
 1442              	 .thumb
 1443              	 .thumb_func
 1445              	CAN_NODE_Init:
 1446              	.LFB265:
 307:../Dave/Generated/CAN_NODE/can_node.c **** 
 308:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN node by configuring the baud rate, can bus type (External or int
 309:../Dave/Generated/CAN_NODE/can_node.c ****  *  and message objects.
 310:../Dave/Generated/CAN_NODE/can_node.c ****  */
 311:../Dave/Generated/CAN_NODE/can_node.c **** 
 312:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t* handle)
 313:../Dave/Generated/CAN_NODE/can_node.c **** {
 1447              	 .loc 3 313 0
 1448              	 .cfi_startproc
 1449              	 
 1450              	 
 1451 0000 80B5     	 push {r7,lr}
 1452              	 .cfi_def_cfa_offset 8
 1453              	 .cfi_offset 7,-8
 1454              	 .cfi_offset 14,-4
 1455 0002 86B0     	 sub sp,sp,#24
 1456              	 .cfi_def_cfa_offset 32
 1457 0004 00AF     	 add r7,sp,#0
 1458              	 .cfi_def_cfa_register 7
 1459 0006 7860     	 str r0,[r7,#4]
 314:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1460              	 .loc 3 314 0
 1461 0008 0023     	 movs r3,#0
 1462 000a FB75     	 strb r3,[r7,#23]
 315:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t loop_count;
 316:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_LMO_t *lmo_ptr;
 317:../Dave/Generated/CAN_NODE/can_node.c **** 
 318:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_Init: handle null", handle != NULL);
 319:../Dave/Generated/CAN_NODE/can_node.c **** 
 320:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_GPIO_t *const lgpio_ptr = handle->gpio_out;
 1463              	 .loc 3 320 0
 1464 000c 7B68     	 ldr r3,[r7,#4]
 1465 000e D3F89030 	 ldr r3,[r3,#144]
 1466 0012 FB60     	 str r3,[r7,#12]
 321:../Dave/Generated/CAN_NODE/can_node.c **** 
 322:../Dave/Generated/CAN_NODE/can_node.c ****   /* Initialize the GLOBAL_CAN APP */
 323:../Dave/Generated/CAN_NODE/can_node.c ****   status  = (CAN_NODE_STATUS_t)GLOBAL_CAN_Init(handle->global_ptr);
 1467              	 .loc 3 323 0
 1468 0014 7B68     	 ldr r3,[r7,#4]
 1469 0016 1B68     	 ldr r3,[r3]
 1470 0018 1846     	 mov r0,r3
 1471 001a FFF7FEFF 	 bl GLOBAL_CAN_Init
 1472 001e 0346     	 mov r3,r0
 1473 0020 FB75     	 strb r3,[r7,#23]
 324:../Dave/Generated/CAN_NODE/can_node.c **** 
 325:../Dave/Generated/CAN_NODE/can_node.c ****   if (status == CAN_NODE_STATUS_SUCCESS)
 1474              	 .loc 3 325 0
 1475 0022 FB7D     	 ldrb r3,[r7,#23]
 1476 0024 002B     	 cmp r3,#0
 1477 0026 7BD1     	 bne .L47
 326:../Dave/Generated/CAN_NODE/can_node.c ****   {
 327:../Dave/Generated/CAN_NODE/can_node.c ****     /* Initialize the GUI configured values for baud rate to NBTR Reg */
 328:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_NominalBitTimeConfigure(handle->node_ptr, handle->baudrate_config);
 1478              	 .loc 3 328 0
 1479 0028 7B68     	 ldr r3,[r7,#4]
 1480 002a 5A68     	 ldr r2,[r3,#4]
 1481 002c 7B68     	 ldr r3,[r7,#4]
 1482 002e 9B68     	 ldr r3,[r3,#8]
 1483 0030 1046     	 mov r0,r2
 1484 0032 1946     	 mov r1,r3
 1485 0034 FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigure
 329:../Dave/Generated/CAN_NODE/can_node.c ****     /* set CCE and INIT bit NCR for node configuration */
 330:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_EnableConfigurationChange(handle->node_ptr);
 1486              	 .loc 3 330 0
 1487 0038 7B68     	 ldr r3,[r7,#4]
 1488 003a 5B68     	 ldr r3,[r3,#4]
 1489 003c 1846     	 mov r0,r3
 1490 003e FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 331:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_SetInitBit(handle->node_ptr);
 1491              	 .loc 3 331 0
 1492 0042 7B68     	 ldr r3,[r7,#4]
 1493 0044 5B68     	 ldr r3,[r3,#4]
 1494 0046 1846     	 mov r0,r3
 1495 0048 FFF7FEFF 	 bl XMC_CAN_NODE_SetInitBit
 332:../Dave/Generated/CAN_NODE/can_node.c **** 
 333:../Dave/Generated/CAN_NODE/can_node.c ****     if (handle->loopback_enable == true) /* Loop back mode enabled */
 1496              	 .loc 3 333 0
 1497 004c 7B68     	 ldr r3,[r7,#4]
 1498 004e 93F8A730 	 ldrb r3,[r3,#167]
 1499 0052 002B     	 cmp r3,#0
 1500 0054 05D0     	 beq .L48
 334:../Dave/Generated/CAN_NODE/can_node.c ****     {
 335:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_EnableLoopBack(handle->node_ptr);
 1501              	 .loc 3 335 0
 1502 0056 7B68     	 ldr r3,[r7,#4]
 1503 0058 5B68     	 ldr r3,[r3,#4]
 1504 005a 1846     	 mov r0,r3
 1505 005c FFF7FEFF 	 bl XMC_CAN_NODE_EnableLoopBack
 1506 0060 18E0     	 b .L49
 1507              	.L48:
 336:../Dave/Generated/CAN_NODE/can_node.c ****     }
 337:../Dave/Generated/CAN_NODE/can_node.c ****     else
 338:../Dave/Generated/CAN_NODE/can_node.c ****     {
 339:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_GPIO_Init(handle->gpio_in->port, handle->gpio_in->pin, handle->gpio_in_config);
 1508              	 .loc 3 339 0
 1509 0062 7B68     	 ldr r3,[r7,#4]
 1510 0064 D3F89830 	 ldr r3,[r3,#152]
 1511 0068 1968     	 ldr r1,[r3]
 1512 006a 7B68     	 ldr r3,[r7,#4]
 1513 006c D3F89830 	 ldr r3,[r3,#152]
 1514 0070 1A79     	 ldrb r2,[r3,#4]
 1515 0072 7B68     	 ldr r3,[r7,#4]
 1516 0074 D3F89C30 	 ldr r3,[r3,#156]
 1517 0078 0846     	 mov r0,r1
 1518 007a 1146     	 mov r1,r2
 1519 007c 1A46     	 mov r2,r3
 1520 007e FFF7FEFF 	 bl XMC_GPIO_Init
 340:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_SetReceiveInput(handle->node_ptr, handle->rx_signal);
 1521              	 .loc 3 340 0
 1522 0082 7B68     	 ldr r3,[r7,#4]
 1523 0084 5A68     	 ldr r2,[r3,#4]
 1524 0086 7B68     	 ldr r3,[r7,#4]
 1525 0088 93F8A030 	 ldrb r3,[r3,#160]
 1526 008c 1046     	 mov r0,r2
 1527 008e 1946     	 mov r1,r3
 1528 0090 FFF7FEFF 	 bl XMC_CAN_NODE_SetReceiveInput
 1529              	.L49:
 341:../Dave/Generated/CAN_NODE/can_node.c ****     }
 342:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_SetNodeEvents(handle); /* API to enable node events */
 1530              	 .loc 3 342 0
 1531 0094 7868     	 ldr r0,[r7,#4]
 1532 0096 FFF7FEFF 	 bl CAN_NODE_SetNodeEvents
 343:../Dave/Generated/CAN_NODE/can_node.c **** 
 344:../Dave/Generated/CAN_NODE/can_node.c ****     for (loop_count = 0U; loop_count < handle->mo_count; loop_count++)
 1533              	 .loc 3 344 0
 1534 009a 0023     	 movs r3,#0
 1535 009c 3B61     	 str r3,[r7,#16]
 1536 009e 19E0     	 b .L50
 1537              	.L51:
 345:../Dave/Generated/CAN_NODE/can_node.c ****     {
 346:../Dave/Generated/CAN_NODE/can_node.c ****       lmo_ptr = handle->lmobj_ptr[loop_count];
 1538              	 .loc 3 346 0 discriminator 3
 1539 00a0 7A68     	 ldr r2,[r7,#4]
 1540 00a2 3B69     	 ldr r3,[r7,#16]
 1541 00a4 0233     	 adds r3,r3,#2
 1542 00a6 9B00     	 lsls r3,r3,#2
 1543 00a8 1344     	 add r3,r3,r2
 1544 00aa 5B68     	 ldr r3,[r3,#4]
 1545 00ac BB60     	 str r3,[r7,#8]
 347:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_AllocateMOtoNodeList(handle->global_ptr->canglobal_ptr, handle->node_num, lmo_ptr->nu
 1546              	 .loc 3 347 0 discriminator 3
 1547 00ae 7B68     	 ldr r3,[r7,#4]
 1548 00b0 1B68     	 ldr r3,[r3]
 1549 00b2 5968     	 ldr r1,[r3,#4]
 1550 00b4 7B68     	 ldr r3,[r7,#4]
 1551 00b6 93F8A120 	 ldrb r2,[r3,#161]
 1552 00ba BB68     	 ldr r3,[r7,#8]
 1553 00bc 1B79     	 ldrb r3,[r3,#4]
 1554 00be 0846     	 mov r0,r1
 1555 00c0 1146     	 mov r1,r2
 1556 00c2 1A46     	 mov r2,r3
 1557 00c4 FFF7FEFF 	 bl XMC_CAN_AllocateMOtoNodeList
 348:../Dave/Generated/CAN_NODE/can_node.c ****       CAN_NODE_MO_Init(lmo_ptr);
 1558              	 .loc 3 348 0 discriminator 3
 1559 00c8 B868     	 ldr r0,[r7,#8]
 1560 00ca FFF7FEFF 	 bl CAN_NODE_MO_Init
 344:../Dave/Generated/CAN_NODE/can_node.c ****     {
 1561              	 .loc 3 344 0 discriminator 3
 1562 00ce 3B69     	 ldr r3,[r7,#16]
 1563 00d0 0133     	 adds r3,r3,#1
 1564 00d2 3B61     	 str r3,[r7,#16]
 1565              	.L50:
 344:../Dave/Generated/CAN_NODE/can_node.c ****     {
 1566              	 .loc 3 344 0 is_stmt 0 discriminator 1
 1567 00d4 7B68     	 ldr r3,[r7,#4]
 1568 00d6 93F8A230 	 ldrb r3,[r3,#162]
 1569 00da 1A46     	 mov r2,r3
 1570 00dc 3B69     	 ldr r3,[r7,#16]
 1571 00de 9A42     	 cmp r2,r3
 1572 00e0 DED8     	 bhi .L51
 349:../Dave/Generated/CAN_NODE/can_node.c ****     }
 350:../Dave/Generated/CAN_NODE/can_node.c ****     /* reset CCE and INIT bit NCR for node configuration */
 351:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_DisableConfigurationChange(handle->node_ptr);
 1573              	 .loc 3 351 0 is_stmt 1
 1574 00e2 7B68     	 ldr r3,[r7,#4]
 1575 00e4 5B68     	 ldr r3,[r3,#4]
 1576 00e6 1846     	 mov r0,r3
 1577 00e8 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 352:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_ResetInitBit(handle->node_ptr);
 1578              	 .loc 3 352 0
 1579 00ec 7B68     	 ldr r3,[r7,#4]
 1580 00ee 5B68     	 ldr r3,[r3,#4]
 1581 00f0 1846     	 mov r0,r3
 1582 00f2 FFF7FEFF 	 bl XMC_CAN_NODE_ResetInitBit
 353:../Dave/Generated/CAN_NODE/can_node.c ****     if (handle->loopback_enable == false)
 1583              	 .loc 3 353 0
 1584 00f6 7B68     	 ldr r3,[r7,#4]
 1585 00f8 93F8A730 	 ldrb r3,[r3,#167]
 1586 00fc 83F00103 	 eor r3,r3,#1
 1587 0100 DBB2     	 uxtb r3,r3
 1588 0102 002B     	 cmp r3,#0
 1589 0104 0ED0     	 beq .L53
 354:../Dave/Generated/CAN_NODE/can_node.c ****     {
 355:../Dave/Generated/CAN_NODE/can_node.c ****       /* CAN transmit pin configuration */
 356:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_GPIO_Init(lgpio_ptr->port, lgpio_ptr->pin, handle->gpio_out_config);
 1590              	 .loc 3 356 0
 1591 0106 FB68     	 ldr r3,[r7,#12]
 1592 0108 1968     	 ldr r1,[r3]
 1593 010a FB68     	 ldr r3,[r7,#12]
 1594 010c 1A79     	 ldrb r2,[r3,#4]
 1595 010e 7B68     	 ldr r3,[r7,#4]
 1596 0110 D3F89430 	 ldr r3,[r3,#148]
 1597 0114 0846     	 mov r0,r1
 1598 0116 1146     	 mov r1,r2
 1599 0118 1A46     	 mov r2,r3
 1600 011a FFF7FEFF 	 bl XMC_GPIO_Init
 1601 011e 01E0     	 b .L53
 1602              	.L47:
 357:../Dave/Generated/CAN_NODE/can_node.c ****     }
 358:../Dave/Generated/CAN_NODE/can_node.c ****   }
 359:../Dave/Generated/CAN_NODE/can_node.c ****   else
 360:../Dave/Generated/CAN_NODE/can_node.c ****   {
 361:../Dave/Generated/CAN_NODE/can_node.c ****     status = CAN_NODE_STATUS_FAILURE;
 1603              	 .loc 3 361 0
 1604 0120 0123     	 movs r3,#1
 1605 0122 FB75     	 strb r3,[r7,#23]
 1606              	.L53:
 362:../Dave/Generated/CAN_NODE/can_node.c ****   }
 363:../Dave/Generated/CAN_NODE/can_node.c **** 
 364:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1607              	 .loc 3 364 0
 1608 0124 FB7D     	 ldrb r3,[r7,#23]
 365:../Dave/Generated/CAN_NODE/can_node.c **** }
 1609              	 .loc 3 365 0
 1610 0126 1846     	 mov r0,r3
 1611 0128 1837     	 adds r7,r7,#24
 1612              	 .cfi_def_cfa_offset 8
 1613 012a BD46     	 mov sp,r7
 1614              	 .cfi_def_cfa_register 13
 1615              	 
 1616 012c 80BD     	 pop {r7,pc}
 1617              	 .cfi_endproc
 1618              	.LFE265:
 1620 012e 00BF     	 .text
 1621              	.Letext0:
 1622              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1623              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1624              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1625              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_gpio.h"
 1626              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_gpio.h"
 1627              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Dave/Generated/DAVE_Common.h"
 1628              	 .file 10 "../Dave/Generated/CAN_NODE/../GLOBAL_CAN/global_can.h"
 1629              	 .file 11 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 1630              	 .file 12 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 1631              	 .file 13 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 can_node.c
    {standard input}:20     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 $t
    {standard input}:24     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 XMC_CAN_NODE_SetEventNodePointer
    {standard input}:71     .text.XMC_CAN_NODE_SetReceiveInput:00000000 $t
    {standard input}:75     .text.XMC_CAN_NODE_SetReceiveInput:00000000 XMC_CAN_NODE_SetReceiveInput
    {standard input}:117    .text.XMC_CAN_NODE_EnableLoopBack:00000000 $t
    {standard input}:121    .text.XMC_CAN_NODE_EnableLoopBack:00000000 XMC_CAN_NODE_EnableLoopBack
    {standard input}:156    .text.XMC_CAN_NODE_GetStatus:00000000 $t
    {standard input}:160    .text.XMC_CAN_NODE_GetStatus:00000000 XMC_CAN_NODE_GetStatus
    {standard input}:193    .text.XMC_CAN_NODE_ClearStatus:00000000 $t
    {standard input}:197    .text.XMC_CAN_NODE_ClearStatus:00000000 XMC_CAN_NODE_ClearStatus
    {standard input}:236    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:240    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:275    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:279    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:314    .text.XMC_CAN_NODE_SetInitBit:00000000 $t
    {standard input}:318    .text.XMC_CAN_NODE_SetInitBit:00000000 XMC_CAN_NODE_SetInitBit
    {standard input}:353    .text.XMC_CAN_NODE_ResetInitBit:00000000 $t
    {standard input}:357    .text.XMC_CAN_NODE_ResetInitBit:00000000 XMC_CAN_NODE_ResetInitBit
    {standard input}:392    .text.XMC_CAN_MO_SetEventNodePointer:00000000 $t
    {standard input}:396    .text.XMC_CAN_MO_SetEventNodePointer:00000000 XMC_CAN_MO_SetEventNodePointer
    {standard input}:446    .text.XMC_CAN_MO_GetStatus:00000000 $t
    {standard input}:450    .text.XMC_CAN_MO_GetStatus:00000000 XMC_CAN_MO_GetStatus
    {standard input}:484    .text.XMC_CAN_MO_ResetStatus:00000000 $t
    {standard input}:488    .text.XMC_CAN_MO_ResetStatus:00000000 XMC_CAN_MO_ResetStatus
    {standard input}:523    .text.XMC_CAN_MO_EnableEvent:00000000 $t
    {standard input}:527    .text.XMC_CAN_MO_EnableEvent:00000000 XMC_CAN_MO_EnableEvent
    {standard input}:566    .text.CAN_NODE_MO_EnableTxEvent:00000000 $t
    {standard input}:570    .text.CAN_NODE_MO_EnableTxEvent:00000000 CAN_NODE_MO_EnableTxEvent
    {standard input}:603    .text.CAN_NODE_MO_EnableRxEvent:00000000 $t
    {standard input}:607    .text.CAN_NODE_MO_EnableRxEvent:00000000 CAN_NODE_MO_EnableRxEvent
    {standard input}:639    .text.CAN_NODE_SetNodeEvents:00000000 $t
    {standard input}:643    .text.CAN_NODE_SetNodeEvents:00000000 CAN_NODE_SetNodeEvents
    {standard input}:728    .text.CAN_NODE_SetNodePointer:00000000 CAN_NODE_SetNodePointer
    {standard input}:724    .text.CAN_NODE_SetNodePointer:00000000 $t
    {standard input}:802    .text.CAN_NODE_GetAppVersion:00000000 $t
    {standard input}:807    .text.CAN_NODE_GetAppVersion:00000000 CAN_NODE_GetAppVersion
    {standard input}:861    .text.CAN_NODE_EnableEvent:00000000 $t
    {standard input}:866    .text.CAN_NODE_EnableEvent:00000000 CAN_NODE_EnableEvent
    {standard input}:901    .text.CAN_NODE_ConfigBaudrate:00000000 $t
    {standard input}:906    .text.CAN_NODE_ConfigBaudrate:00000000 CAN_NODE_ConfigBaudrate
    {standard input}:974    .text.CAN_NODE_MO_Init:00000000 $t
    {standard input}:979    .text.CAN_NODE_MO_Init:00000000 CAN_NODE_MO_Init
    {standard input}:1046   .text.CAN_NODE_MO_Transmit:00000000 $t
    {standard input}:1051   .text.CAN_NODE_MO_Transmit:00000000 CAN_NODE_MO_Transmit
    {standard input}:1090   .text.CAN_NODE_MO_Receive:00000000 $t
    {standard input}:1095   .text.CAN_NODE_MO_Receive:00000000 CAN_NODE_MO_Receive
    {standard input}:1134   .text.CAN_NODE_MO_ReceiveData:00000000 $t
    {standard input}:1139   .text.CAN_NODE_MO_ReceiveData:00000000 CAN_NODE_MO_ReceiveData
    {standard input}:1178   .text.CAN_NODE_MO_UpdateData:00000000 $t
    {standard input}:1183   .text.CAN_NODE_MO_UpdateData:00000000 CAN_NODE_MO_UpdateData
    {standard input}:1238   .text.CAN_NODE_MO_GetStatus:00000000 $t
    {standard input}:1243   .text.CAN_NODE_MO_GetStatus:00000000 CAN_NODE_MO_GetStatus
    {standard input}:1278   .text.CAN_NODE_MO_ClearStatus:00000000 $t
    {standard input}:1283   .text.CAN_NODE_MO_ClearStatus:00000000 CAN_NODE_MO_ClearStatus
    {standard input}:1316   .text.CAN_NODE_DisableEvent:00000000 $t
    {standard input}:1321   .text.CAN_NODE_DisableEvent:00000000 CAN_NODE_DisableEvent
    {standard input}:1356   .text.CAN_NODE_GetStatus:00000000 $t
    {standard input}:1361   .text.CAN_NODE_GetStatus:00000000 CAN_NODE_GetStatus
    {standard input}:1398   .text.CAN_NODE_ClearStatus:00000000 $t
    {standard input}:1403   .text.CAN_NODE_ClearStatus:00000000 CAN_NODE_ClearStatus
    {standard input}:1440   .text.CAN_NODE_Init:00000000 $t
    {standard input}:1445   .text.CAN_NODE_Init:00000000 CAN_NODE_Init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CAN_NODE_EnableEvent
XMC_CAN_NODE_NominalBitTimeConfigure
XMC_CAN_MO_Config
XMC_CAN_MO_Transmit
XMC_CAN_MO_Receive
XMC_CAN_MO_ReceiveData
XMC_CAN_MO_UpdateData
XMC_CAN_NODE_DisableEvent
GLOBAL_CAN_Init
XMC_GPIO_Init
XMC_CAN_AllocateMOtoNodeList
