   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB175:
  26              	 .file 1 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,       /**< Bus-off status */
 337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator 
 454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {  
 457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 
 481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection:3;   /**<   Defines function of the frame counter  */
 541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode:2;      /**<   Determines the operation mode of the frame count
 542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** */
 552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message ident
 563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     };
 573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   };
 575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   union{
 578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint8_t can_data_byte[8];                 /**< Each position of the array represents a data b
 580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bit
 581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_dat
 582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       uint64_t can_data_long;                   /** Data of the Message Object*/
 584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****       };
 585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 674 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	 .cfi_def_cfa_offset 16
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
 675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  40              	 .loc 1 675 0
  41 0008 7B68     	 ldr r3,[r7,#4]
  42 000a D3F8C431 	 ldr r3,[r3,#452]
  43 000e 03F44073 	 and r3,r3,#768
  44 0012 002B     	 cmp r3,#0
  45 0014 0CBF     	 ite eq
  46 0016 0123     	 moveq r3,#1
  47 0018 0023     	 movne r3,#0
  48 001a DBB2     	 uxtb r3,r3
 676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
  49              	 .loc 1 676 0
  50 001c 1846     	 mov r0,r3
  51 001e 0C37     	 adds r7,r7,#12
  52              	 .cfi_def_cfa_offset 4
  53 0020 BD46     	 mov sp,r7
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 0022 5DF8047B 	 ldr r7,[sp],#4
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0026 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE175:
  63              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_CAN_PanelControl:
  69              	.LFB176:
 677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg1,
 704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg2)
 705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
  70              	 .loc 1 705 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	 .cfi_def_cfa_offset 16
  80 0004 00AF     	 add r7,sp,#0
  81              	 .cfi_def_cfa_register 7
  82 0006 7860     	 str r0,[r7,#4]
  83 0008 0846     	 mov r0,r1
  84 000a 1146     	 mov r1,r2
  85 000c 1A46     	 mov r2,r3
  86 000e 0346     	 mov r3,r0
  87 0010 FB70     	 strb r3,[r7,#3]
  88 0012 0B46     	 mov r3,r1
  89 0014 BB70     	 strb r3,[r7,#2]
  90 0016 1346     	 mov r3,r2
  91 0018 7B70     	 strb r3,[r7,#1]
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  92              	 .loc 1 706 0
  93 001a FA78     	 ldrb r2,[r7,#3]
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
  94              	 .loc 1 707 0
  95 001c BB78     	 ldrb r3,[r7,#2]
  96 001e 1B04     	 lsls r3,r3,#16
  97 0020 03F47F03 	 and r3,r3,#16711680
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  98              	 .loc 1 706 0
  99 0024 1A43     	 orrs r2,r2,r3
 708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 100              	 .loc 1 708 0
 101 0026 7B78     	 ldrb r3,[r7,#1]
 102 0028 1B06     	 lsls r3,r3,#24
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 103              	 .loc 1 707 0
 104 002a 1A43     	 orrs r2,r2,r3
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 105              	 .loc 1 706 0
 106 002c 7B68     	 ldr r3,[r7,#4]
 107 002e C3F8C421 	 str r2,[r3,#452]
 709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 108              	 .loc 1 709 0
 109 0032 0C37     	 adds r7,r7,#12
 110              	 .cfi_def_cfa_offset 4
 111 0034 BD46     	 mov sp,r7
 112              	 .cfi_def_cfa_register 13
 113              	 
 114 0036 5DF8047B 	 ldr r7,[sp],#4
 115              	 .cfi_restore 7
 116              	 .cfi_def_cfa_offset 0
 117 003a 7047     	 bx lr
 118              	 .cfi_endproc
 119              	.LFE176:
 121              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 122              	 .align 2
 123              	 .thumb
 124              	 .thumb_func
 126              	XMC_CAN_NODE_EnableConfigurationChange:
 127              	.LFB192:
 710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). 
 744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN. 
 753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * 
 783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency 
 793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency 
 804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #else
 836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** #endif
 838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const uint32_t service_request)
 876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_b
 898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate. 
 908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * None
 935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                                               const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
 976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
 993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
 999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1040:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1041:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1043:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1044:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1045:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1046:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1047:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1048:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1049:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1050:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1051:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1052:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1053:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1054:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1055:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1056:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1057:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1058:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1059:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1060:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1061:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1063:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1064:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1065:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1066:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1067:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1068:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1069:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1070:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1071:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1072:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1073:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1074:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
1075:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1076:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1077:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1078:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1079:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1080:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1081:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1082:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1083:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1084:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1085:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1086:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1087:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1088:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1089:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1090:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1091:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1093:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1094:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1096:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1097:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1098:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1099:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
1260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
1262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 128              	 .loc 1 1280 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133 0000 80B4     	 push {r7}
 134              	 .cfi_def_cfa_offset 4
 135              	 .cfi_offset 7,-4
 136 0002 83B0     	 sub sp,sp,#12
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
1281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 141              	 .loc 1 1281 0
 142 0008 7B68     	 ldr r3,[r7,#4]
 143 000a 1B68     	 ldr r3,[r3]
 144 000c 43F04002 	 orr r2,r3,#64
 145 0010 7B68     	 ldr r3,[r7,#4]
 146 0012 1A60     	 str r2,[r3]
1282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 147              	 .loc 1 1282 0
 148 0014 0C37     	 adds r7,r7,#12
 149              	 .cfi_def_cfa_offset 4
 150 0016 BD46     	 mov sp,r7
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0018 5DF8047B 	 ldr r7,[sp],#4
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 001c 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE192:
 160 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_CAN_NODE_DisableConfigurationChange:
 166              	.LFB193:
1283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** /**
1286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  *
1297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****  */
1298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** 
1299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** {
 167              	 .loc 1 1300 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	 .cfi_def_cfa_offset 4
 174              	 .cfi_offset 7,-4
 175 0002 83B0     	 sub sp,sp,#12
 176              	 .cfi_def_cfa_offset 16
 177 0004 00AF     	 add r7,sp,#0
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
1301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 180              	 .loc 1 1301 0
 181 0008 7B68     	 ldr r3,[r7,#4]
 182 000a 1B68     	 ldr r3,[r3]
 183 000c 23F04002 	 bic r2,r3,#64
 184 0010 7B68     	 ldr r3,[r7,#4]
 185 0012 1A60     	 str r2,[r3]
1302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_can.h **** }
 186              	 .loc 1 1302 0
 187 0014 0C37     	 adds r7,r7,#12
 188              	 .cfi_def_cfa_offset 4
 189 0016 BD46     	 mov sp,r7
 190              	 .cfi_def_cfa_register 13
 191              	 
 192 0018 5DF8047B 	 ldr r7,[sp],#4
 193              	 .cfi_restore 7
 194              	 .cfi_def_cfa_offset 0
 195 001c 7047     	 bx lr
 196              	 .cfi_endproc
 197              	.LFE193:
 199 001e 00BF     	 .section .text.max,"ax",%progbits
 200              	 .align 2
 201              	 .thumb
 202              	 .thumb_func
 204              	max:
 205              	.LFB233:
 206              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2019-06-26
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *
  50:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  51:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  52:../Libraries/XMCLib/src/xmc_can.c ****  *
  53:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  54:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  55:../Libraries/XMCLib/src/xmc_can.c ****  *
  56:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  57:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  58:../Libraries/XMCLib/src/xmc_can.c ****  *
  59:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  60:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br> 
  61:../Libraries/XMCLib/src/xmc_can.c ****  *
  62:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  63:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  64:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *
  70:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-11-12:
  71:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed assertion at XMC_CAN_InitEx()
  72:../Libraries/XMCLib/src/xmc_can.c ****  *
  73:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-05-07:
  74:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed compilation warnings
  75:../Libraries/XMCLib/src/xmc_can.c ****  *
  76:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-06-26:
  77:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx() non returning, decrementing ntq before cont
  78:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_GetClockFrequency()
  79:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_InitEx() so that XMC_CAN_SetBaudrateClockSource() is invoked before XMC_CAN_
  80:../Libraries/XMCLib/src/xmc_can.c ****  *
  81:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  82:../Libraries/XMCLib/src/xmc_can.c ****  *
  83:../Libraries/XMCLib/src/xmc_can.c ****  */ 
  84:../Libraries/XMCLib/src/xmc_can.c **** 
  85:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  86:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  87:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  88:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  89:../Libraries/XMCLib/src/xmc_can.c **** 
  90:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  91:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
  92:../Libraries/XMCLib/src/xmc_can.c **** 
  93:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  94:../Libraries/XMCLib/src/xmc_can.c **** {
 207              	 .loc 2 94 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	 
 212 0000 80B4     	 push {r7}
 213              	 .cfi_def_cfa_offset 4
 214              	 .cfi_offset 7,-4
 215 0002 83B0     	 sub sp,sp,#12
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	 .cfi_def_cfa_register 7
 219 0006 7860     	 str r0,[r7,#4]
 220 0008 3960     	 str r1,[r7]
  95:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 221              	 .loc 2 95 0
 222 000a 3A68     	 ldr r2,[r7]
 223 000c 7B68     	 ldr r3,[r7,#4]
 224 000e 9342     	 cmp r3,r2
 225 0010 38BF     	 it cc
 226 0012 1346     	 movcc r3,r2
  96:../Libraries/XMCLib/src/xmc_can.c **** }
 227              	 .loc 2 96 0
 228 0014 1846     	 mov r0,r3
 229 0016 0C37     	 adds r7,r7,#12
 230              	 .cfi_def_cfa_offset 4
 231 0018 BD46     	 mov sp,r7
 232              	 .cfi_def_cfa_register 13
 233              	 
 234 001a 5DF8047B 	 ldr r7,[sp],#4
 235              	 .cfi_restore 7
 236              	 .cfi_def_cfa_offset 0
 237 001e 7047     	 bx lr
 238              	 .cfi_endproc
 239              	.LFE233:
 241              	 .section .text.min,"ax",%progbits
 242              	 .align 2
 243              	 .thumb
 244              	 .thumb_func
 246              	min:
 247              	.LFB234:
  97:../Libraries/XMCLib/src/xmc_can.c **** 
  98:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  99:../Libraries/XMCLib/src/xmc_can.c **** {
 248              	 .loc 2 99 0
 249              	 .cfi_startproc
 250              	 
 251              	 
 252              	 
 253 0000 80B4     	 push {r7}
 254              	 .cfi_def_cfa_offset 4
 255              	 .cfi_offset 7,-4
 256 0002 83B0     	 sub sp,sp,#12
 257              	 .cfi_def_cfa_offset 16
 258 0004 00AF     	 add r7,sp,#0
 259              	 .cfi_def_cfa_register 7
 260 0006 7860     	 str r0,[r7,#4]
 261 0008 3960     	 str r1,[r7]
 100:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 262              	 .loc 2 100 0
 263 000a 3A68     	 ldr r2,[r7]
 264 000c 7B68     	 ldr r3,[r7,#4]
 265 000e 9342     	 cmp r3,r2
 266 0010 28BF     	 it cs
 267 0012 1346     	 movcs r3,r2
 101:../Libraries/XMCLib/src/xmc_can.c **** }
 268              	 .loc 2 101 0
 269 0014 1846     	 mov r0,r3
 270 0016 0C37     	 adds r7,r7,#12
 271              	 .cfi_def_cfa_offset 4
 272 0018 BD46     	 mov sp,r7
 273              	 .cfi_def_cfa_register 13
 274              	 
 275 001a 5DF8047B 	 ldr r7,[sp],#4
 276              	 .cfi_restore 7
 277              	 .cfi_def_cfa_offset 0
 278 001e 7047     	 bx lr
 279              	 .cfi_endproc
 280              	.LFE234:
 282              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
 283              	 .align 2
 284              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
 285              	 .thumb
 286              	 .thumb_func
 288              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
 289              	.LFB235:
 102:../Libraries/XMCLib/src/xmc_can.c **** 
 103:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
 104:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
 105:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
 106:../Libraries/XMCLib/src/xmc_can.c **** 
 107:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
 108:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
 109:../Libraries/XMCLib/src/xmc_can.c **** 
 110:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 111:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 112:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 113:../Libraries/XMCLib/src/xmc_can.c **** 
 114:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 115:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 116:../Libraries/XMCLib/src/xmc_can.c **** 
 117:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 118:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 119:../Libraries/XMCLib/src/xmc_can.c **** 
 120:../Libraries/XMCLib/src/xmc_can.c **** 
 121:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 122:../Libraries/XMCLib/src/xmc_can.c ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 123:../Libraries/XMCLib/src/xmc_can.c **** {
 290              	 .loc 2 123 0
 291              	 .cfi_startproc
 292              	 
 293              	 
 294 0000 80B5     	 push {r7,lr}
 295              	 .cfi_def_cfa_offset 8
 296              	 .cfi_offset 7,-8
 297              	 .cfi_offset 14,-4
 298 0002 88B0     	 sub sp,sp,#32
 299              	 .cfi_def_cfa_offset 40
 300 0004 00AF     	 add r7,sp,#0
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 303 0008 3960     	 str r1,[r7]
 124:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 125:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
 304              	 .loc 2 125 0
 305 000a 3B68     	 ldr r3,[r7]
 306 000c 1B68     	 ldr r3,[r3]
 307 000e 3A68     	 ldr r2,[r7]
 308 0010 5268     	 ldr r2,[r2,#4]
 309 0012 B3FBF2F1 	 udiv r1,r3,r2
 310 0016 02FB01F2 	 mul r2,r2,r1
 311 001a 9B1A     	 subs r3,r3,r2
 312 001c 002B     	 cmp r3,#0
 313 001e 40F08E80 	 bne .L11
 314              	.LBB2:
 126:../Libraries/XMCLib/src/xmc_can.c ****   {
 127:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t prescaler;
 128:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t div8 = 0;
 315              	 .loc 2 128 0
 316 0022 0023     	 movs r3,#0
 317 0024 BB61     	 str r3,[r7,#24]
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c ****     /* Calculate the factor between can frequency and required baudrate, this is equal to (prescale
 131:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 318              	 .loc 2 131 0
 319 0026 3B68     	 ldr r3,[r7]
 320 0028 1A68     	 ldr r2,[r3]
 321 002a 3B68     	 ldr r3,[r7]
 322 002c 5B68     	 ldr r3,[r3,#4]
 323 002e B2FBF3F3 	 udiv r3,r2,r3
 324 0032 BB60     	 str r3,[r7,#8]
 132:../Libraries/XMCLib/src/xmc_can.c **** 
 133:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 134:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 325              	 .loc 2 134 0
 326 0034 1923     	 movs r3,#25
 327 0036 7B61     	 str r3,[r7,#20]
 135:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 328              	 .loc 2 135 0
 329 0038 0023     	 movs r3,#0
 330 003a 3B61     	 str r3,[r7,#16]
 136:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 331              	 .loc 2 136 0
 332 003c 0023     	 movs r3,#0
 333 003e FB60     	 str r3,[r7,#12]
 137:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 334              	 .loc 2 137 0
 335 0040 4BE0     	 b .L12
 336              	.L17:
 138:../Libraries/XMCLib/src/xmc_can.c ****     {
 139:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 140:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 337              	 .loc 2 140 0
 338 0042 BB68     	 ldr r3,[r7,#8]
 339 0044 7A69     	 ldr r2,[r7,#20]
 340 0046 B3FBF2F2 	 udiv r2,r3,r2
 341 004a 7969     	 ldr r1,[r7,#20]
 342 004c 01FB02F2 	 mul r2,r1,r2
 343 0050 9B1A     	 subs r3,r3,r2
 344 0052 002B     	 cmp r3,#0
 345 0054 3ED1     	 bne .L13
 141:../Libraries/XMCLib/src/xmc_can.c ****       {
 142:../Libraries/XMCLib/src/xmc_can.c ****     	  div8 = 0;
 346              	 .loc 2 142 0
 347 0056 0023     	 movs r3,#0
 348 0058 BB61     	 str r3,[r7,#24]
 143:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 349              	 .loc 2 143 0
 350 005a BA68     	 ldr r2,[r7,#8]
 351 005c 7B69     	 ldr r3,[r7,#20]
 352 005e B2FBF3F3 	 udiv r3,r2,r3
 353 0062 FB61     	 str r3,[r7,#28]
 144:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 354              	 .loc 2 144 0
 355 0064 FB69     	 ldr r3,[r7,#28]
 356 0066 002B     	 cmp r3,#0
 357 0068 34D0     	 beq .L13
 358              	 .loc 2 144 0 is_stmt 0 discriminator 1
 359 006a FB69     	 ldr r3,[r7,#28]
 360 006c B3F5007F 	 cmp r3,#512
 361 0070 30D8     	 bhi .L13
 145:../Libraries/XMCLib/src/xmc_can.c ****         {
 146:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 362              	 .loc 2 146 0 is_stmt 1
 363 0072 FB69     	 ldr r3,[r7,#28]
 364 0074 3F2B     	 cmp r3,#63
 365 0076 0AD9     	 bls .L14
 147:../Libraries/XMCLib/src/xmc_can.c ****           {
 148:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 149:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 366              	 .loc 2 149 0
 367 0078 FB69     	 ldr r3,[r7,#28]
 368 007a 03F00703 	 and r3,r3,#7
 369 007e 002B     	 cmp r3,#0
 370 0080 03D0     	 beq .L15
 150:../Libraries/XMCLib/src/xmc_can.c ****             {
 151:../Libraries/XMCLib/src/xmc_can.c ****               --ntq;
 371              	 .loc 2 151 0
 372 0082 7B69     	 ldr r3,[r7,#20]
 373 0084 013B     	 subs r3,r3,#1
 374 0086 7B61     	 str r3,[r7,#20]
 152:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 375              	 .loc 2 152 0
 376 0088 27E0     	 b .L12
 377              	.L15:
 153:../Libraries/XMCLib/src/xmc_can.c ****             }
 154:../Libraries/XMCLib/src/xmc_can.c ****             else
 155:../Libraries/XMCLib/src/xmc_can.c ****             {
 156:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 378              	 .loc 2 156 0
 379 008a 0123     	 movs r3,#1
 380 008c BB61     	 str r3,[r7,#24]
 381              	.L14:
 157:../Libraries/XMCLib/src/xmc_can.c ****             }
 158:../Libraries/XMCLib/src/xmc_can.c ****           }
 159:../Libraries/XMCLib/src/xmc_can.c **** 
 160:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 382              	 .loc 2 160 0
 383 008e 7B69     	 ldr r3,[r7,#20]
 384 0090 013B     	 subs r3,r3,#1
 385 0092 3A68     	 ldr r2,[r7]
 386 0094 1289     	 ldrh r2,[r2,#8]
 387 0096 02FB03F3 	 mul r3,r2,r3
 388 009a 2B4A     	 ldr r2,.L19
 389 009c A2FB0323 	 umull r2,r3,r2,r3
 390 00a0 5B0B     	 lsrs r3,r3,#13
 391 00a2 3B61     	 str r3,[r7,#16]
 161:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 392              	 .loc 2 161 0
 393 00a4 7A69     	 ldr r2,[r7,#20]
 394 00a6 3B69     	 ldr r3,[r7,#16]
 395 00a8 D31A     	 subs r3,r2,r3
 396 00aa 013B     	 subs r3,r3,#1
 397 00ac FB60     	 str r3,[r7,#12]
 162:../Libraries/XMCLib/src/xmc_can.c **** 
 163:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 398              	 .loc 2 163 0
 399 00ae 3B69     	 ldr r3,[r7,#16]
 400 00b0 022B     	 cmp r3,#2
 401 00b2 0FD9     	 bls .L13
 402              	 .loc 2 163 0 is_stmt 0 discriminator 1
 403 00b4 3B69     	 ldr r3,[r7,#16]
 404 00b6 0F2B     	 cmp r3,#15
 405 00b8 0CD8     	 bhi .L13
 406              	 .loc 2 163 0 discriminator 2
 407 00ba FB68     	 ldr r3,[r7,#12]
 408 00bc 012B     	 cmp r3,#1
 409 00be 09D9     	 bls .L13
 164:../Libraries/XMCLib/src/xmc_can.c ****         		  (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bit_
 410              	 .loc 2 164 0 is_stmt 1
 411 00c0 FB68     	 ldr r3,[r7,#12]
 412 00c2 062B     	 cmp r3,#6
 413 00c4 06D8     	 bhi .L13
 414              	 .loc 2 164 0 is_stmt 0 discriminator 1
 415 00c6 3B68     	 ldr r3,[r7]
 416 00c8 5B89     	 ldrh r3,[r3,#10]
 417 00ca 1A46     	 mov r2,r3
 418 00cc FB68     	 ldr r3,[r7,#12]
 419 00ce 9A42     	 cmp r2,r3
 420 00d0 00D8     	 bhi .L13
 165:../Libraries/XMCLib/src/xmc_can.c ****           {
 166:../Libraries/XMCLib/src/xmc_can.c ****             break;
 421              	 .loc 2 166 0 is_stmt 1
 422 00d2 05E0     	 b .L16
 423              	.L13:
 167:../Libraries/XMCLib/src/xmc_can.c ****           }
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c **** 
 170:../Libraries/XMCLib/src/xmc_can.c ****         }
 171:../Libraries/XMCLib/src/xmc_can.c ****       }
 172:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 424              	 .loc 2 172 0
 425 00d4 7B69     	 ldr r3,[r7,#20]
 426 00d6 013B     	 subs r3,r3,#1
 427 00d8 7B61     	 str r3,[r7,#20]
 428              	.L12:
 137:../Libraries/XMCLib/src/xmc_can.c ****     {
 429              	 .loc 2 137 0
 430 00da 7B69     	 ldr r3,[r7,#20]
 431 00dc 072B     	 cmp r3,#7
 432 00de B0D8     	 bhi .L17
 433              	.L16:
 173:../Libraries/XMCLib/src/xmc_can.c ****     }
 174:../Libraries/XMCLib/src/xmc_can.c **** 
 175:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 434              	 .loc 2 175 0
 435 00e0 7B69     	 ldr r3,[r7,#20]
 436 00e2 072B     	 cmp r3,#7
 437 00e4 2BD9     	 bls .L11
 176:../Libraries/XMCLib/src/xmc_can.c ****     {
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c **** 
 179:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 438              	 .loc 2 179 0
 439 00e6 7868     	 ldr r0,[r7,#4]
 440 00e8 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 180:../Libraries/XMCLib/src/xmc_can.c **** 
 181:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 182:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 441              	 .loc 2 182 0
 442 00ec FB68     	 ldr r3,[r7,#12]
 443 00ee 013B     	 subs r3,r3,#1
 444 00f0 1B03     	 lsls r3,r3,#12
 445 00f2 03F4E042 	 and r2,r3,#28672
 183:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 446              	 .loc 2 183 0
 447 00f6 3B68     	 ldr r3,[r7]
 448 00f8 5B89     	 ldrh r3,[r3,#10]
 449 00fa 013B     	 subs r3,r3,#1
 450 00fc 9B01     	 lsls r3,r3,#6
 451 00fe DBB2     	 uxtb r3,r3
 182:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 452              	 .loc 2 182 0
 453 0100 1A43     	 orrs r2,r2,r3
 184:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 454              	 .loc 2 184 0
 455 0102 3B69     	 ldr r3,[r7,#16]
 456 0104 013B     	 subs r3,r3,#1
 457 0106 1B02     	 lsls r3,r3,#8
 458 0108 03F47063 	 and r3,r3,#3840
 183:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 459              	 .loc 2 183 0
 460 010c 42EA0301 	 orr r1,r2,r3
 185:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 461              	 .loc 2 185 0
 462 0110 BA69     	 ldr r2,[r7,#24]
 463 0112 1346     	 mov r3,r2
 464 0114 5B00     	 lsls r3,r3,#1
 465 0116 1344     	 add r3,r3,r2
 466 0118 1A46     	 mov r2,r3
 467 011a FB69     	 ldr r3,[r7,#28]
 468 011c D340     	 lsrs r3,r3,r2
 469 011e 013B     	 subs r3,r3,#1
 470 0120 03F03F03 	 and r3,r3,#63
 184:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 471              	 .loc 2 184 0
 472 0124 41EA0302 	 orr r2,r1,r3
 186:../Libraries/XMCLib/src/xmc_can.c ****                         ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 473              	 .loc 2 186 0
 474 0128 BB69     	 ldr r3,[r7,#24]
 475 012a DB03     	 lsls r3,r3,#15
 476 012c 9BB2     	 uxth r3,r3
 185:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 477              	 .loc 2 185 0
 478 012e 1A43     	 orrs r2,r2,r3
 182:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 479              	 .loc 2 182 0
 480 0130 7B68     	 ldr r3,[r7,#4]
 481 0132 1A61     	 str r2,[r3,#16]
 187:../Libraries/XMCLib/src/xmc_can.c **** 
 188:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 482              	 .loc 2 188 0
 483 0134 7868     	 ldr r0,[r7,#4]
 484 0136 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 189:../Libraries/XMCLib/src/xmc_can.c **** 
 190:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 485              	 .loc 2 190 0
 486 013a 0023     	 movs r3,#0
 487 013c 00E0     	 b .L18
 488              	.L11:
 489              	.LBE2:
 191:../Libraries/XMCLib/src/xmc_can.c ****     }
 192:../Libraries/XMCLib/src/xmc_can.c ****   }
 193:../Libraries/XMCLib/src/xmc_can.c **** 
 194:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
 490              	 .loc 2 194 0
 491 013e 0123     	 movs r3,#1
 492              	.L18:
 195:../Libraries/XMCLib/src/xmc_can.c **** }
 493              	 .loc 2 195 0
 494 0140 1846     	 mov r0,r3
 495 0142 2037     	 adds r7,r7,#32
 496              	 .cfi_def_cfa_offset 8
 497 0144 BD46     	 mov sp,r7
 498              	 .cfi_def_cfa_register 13
 499              	 
 500 0146 80BD     	 pop {r7,pc}
 501              	.L20:
 502              	 .align 2
 503              	.L19:
 504 0148 5917B7D1 	 .word -776530087
 505              	 .cfi_endproc
 506              	.LFE235:
 508              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 509              	 .align 2
 510              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 511              	 .thumb
 512              	 .thumb_func
 514              	XMC_CAN_NODE_NominalBitTimeConfigure:
 515              	.LFB236:
 196:../Libraries/XMCLib/src/xmc_can.c **** 
 197:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 198:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 199:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 200:../Libraries/XMCLib/src/xmc_can.c **** {
 516              	 .loc 2 200 0
 517              	 .cfi_startproc
 518              	 
 519              	 
 520 0000 80B5     	 push {r7,lr}
 521              	 .cfi_def_cfa_offset 8
 522              	 .cfi_offset 7,-8
 523              	 .cfi_offset 14,-4
 524 0002 90B0     	 sub sp,sp,#64
 525              	 .cfi_def_cfa_offset 72
 526 0004 00AF     	 add r7,sp,#0
 527              	 .cfi_def_cfa_register 7
 528 0006 7860     	 str r0,[r7,#4]
 529 0008 3960     	 str r1,[r7]
 201:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 530              	 .loc 2 201 0
 531 000a 0C23     	 movs r3,#12
 532 000c FB63     	 str r3,[r7,#60]
 202:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 533              	 .loc 2 202 0
 534 000e 0C23     	 movs r3,#12
 535 0010 BB63     	 str r3,[r7,#56]
 203:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 536              	 .loc 2 203 0
 537 0012 0023     	 movs r3,#0
 538 0014 7B63     	 str r3,[r7,#52]
 204:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 539              	 .loc 2 204 0
 540 0016 0123     	 movs r3,#1
 541 0018 3B63     	 str r3,[r7,#48]
 205:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 542              	 .loc 2 205 0
 543 001a 0023     	 movs r3,#0
 544 001c 7B61     	 str r3,[r7,#20]
 206:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 545              	 .loc 2 206 0
 546 001e 0023     	 movs r3,#0
 547 0020 FB62     	 str r3,[r7,#44]
 207:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 548              	 .loc 2 207 0
 549 0022 42F21073 	 movw r3,#10000
 550 0026 BB62     	 str r3,[r7,#40]
 208:../Libraries/XMCLib/src/xmc_can.c **** 
 209:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 210:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 211:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 212:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 213:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 214:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 215:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 216:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 217:../Libraries/XMCLib/src/xmc_can.c ****        
 218:../Libraries/XMCLib/src/xmc_can.c ****   /*
 219:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 220:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 221:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 222:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 223:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 224:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 225:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 226:../Libraries/XMCLib/src/xmc_can.c ****    *
 227:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 228:../Libraries/XMCLib/src/xmc_can.c ****    *
 229:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 230:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 231:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 232:../Libraries/XMCLib/src/xmc_can.c ****    */
 233:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 234:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 551              	 .loc 2 234 0
 552 0028 0123     	 movs r3,#1
 553 002a FB63     	 str r3,[r7,#60]
 554 002c 67E0     	 b .L22
 555              	.L31:
 556              	.LBB3:
 235:../Libraries/XMCLib/src/xmc_can.c ****   {
 236:../Libraries/XMCLib/src/xmc_can.c **** 
 237:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 557              	 .loc 2 237 0
 558 002e 3B68     	 ldr r3,[r7]
 559 0030 1A68     	 ldr r2,[r3]
 560 0032 1346     	 mov r3,r2
 561 0034 9B00     	 lsls r3,r3,#2
 562 0036 1344     	 add r3,r3,r2
 563 0038 5B00     	 lsls r3,r3,#1
 564 003a 1A46     	 mov r2,r3
 565 003c FB6B     	 ldr r3,[r7,#60]
 566 003e B2FBF3F3 	 udiv r3,r2,r3
 567 0042 3B61     	 str r3,[r7,#16]
 238:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 568              	 .loc 2 238 0
 569 0044 3B68     	 ldr r3,[r7]
 570 0046 5B68     	 ldr r3,[r3,#4]
 571 0048 3A69     	 ldr r2,[r7,#16]
 572 004a B2FBF3F3 	 udiv r3,r2,r3
 573 004e 7B62     	 str r3,[r7,#36]
 239:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 240:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 241:../Libraries/XMCLib/src/xmc_can.c **** 
 242:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
 574              	 .loc 2 242 0
 575 0050 796A     	 ldr r1,[r7,#36]
 576 0052 5B4B     	 ldr r3,.L39
 577 0054 A3FB0123 	 umull r2,r3,r3,r1
 578 0058 DA08     	 lsrs r2,r3,#3
 579 005a 1346     	 mov r3,r2
 580 005c 9B00     	 lsls r3,r3,#2
 581 005e 1344     	 add r3,r3,r2
 582 0060 5B00     	 lsls r3,r3,#1
 583 0062 CA1A     	 subs r2,r1,r3
 584 0064 052A     	 cmp r2,#5
 585 0066 09D9     	 bls .L23
 243:../Libraries/XMCLib/src/xmc_can.c ****   {
 244:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 586              	 .loc 2 244 0
 587 0068 7B6A     	 ldr r3,[r7,#36]
 588 006a 554A     	 ldr r2,.L39
 589 006c A2FB0323 	 umull r2,r3,r2,r3
 590 0070 DB08     	 lsrs r3,r3,#3
 591 0072 7B62     	 str r3,[r7,#36]
 245:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud++;
 592              	 .loc 2 245 0
 593 0074 7B6A     	 ldr r3,[r7,#36]
 594 0076 0133     	 adds r3,r3,#1
 595 0078 7B62     	 str r3,[r7,#36]
 596 007a 05E0     	 b .L24
 597              	.L23:
 246:../Libraries/XMCLib/src/xmc_can.c ****   }
 247:../Libraries/XMCLib/src/xmc_can.c ****   else
 248:../Libraries/XMCLib/src/xmc_can.c ****   {
 249:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 598              	 .loc 2 249 0
 599 007c 7B6A     	 ldr r3,[r7,#36]
 600 007e 504A     	 ldr r2,.L39
 601 0080 A2FB0323 	 umull r2,r3,r2,r3
 602 0084 DB08     	 lsrs r3,r3,#3
 603 0086 7B62     	 str r3,[r7,#36]
 604              	.L24:
 250:../Libraries/XMCLib/src/xmc_can.c ****   }
 251:../Libraries/XMCLib/src/xmc_can.c **** 
 252:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 605              	 .loc 2 252 0
 606 0088 7B6A     	 ldr r3,[r7,#36]
 607 008a 002B     	 cmp r3,#0
 608 008c 0AD0     	 beq .L25
 253:../Libraries/XMCLib/src/xmc_can.c ****   {
 254:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 609              	 .loc 2 254 0
 610 008e 7A6A     	 ldr r2,[r7,#36]
 611 0090 1346     	 mov r3,r2
 612 0092 9B00     	 lsls r3,r3,#2
 613 0094 1344     	 add r3,r3,r2
 614 0096 5B00     	 lsls r3,r3,#1
 615 0098 1A46     	 mov r2,r3
 616 009a 3B69     	 ldr r3,[r7,#16]
 617 009c B3FBF2F3 	 udiv r3,r3,r2
 618 00a0 3B62     	 str r3,[r7,#32]
 619 00a2 07E0     	 b .L26
 620              	.L25:
 255:../Libraries/XMCLib/src/xmc_can.c ****   }
 256:../Libraries/XMCLib/src/xmc_can.c ****   else
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 258:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 621              	 .loc 2 258 0
 622 00a4 3B69     	 ldr r3,[r7,#16]
 623 00a6 464A     	 ldr r2,.L39
 624 00a8 A2FB0323 	 umull r2,r3,r2,r3
 625 00ac DB08     	 lsrs r3,r3,#3
 626 00ae 3B62     	 str r3,[r7,#32]
 259:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = 1;
 627              	 .loc 2 259 0
 628 00b0 0123     	 movs r3,#1
 629 00b2 7B62     	 str r3,[r7,#36]
 630              	.L26:
 260:../Libraries/XMCLib/src/xmc_can.c ****   }
 261:../Libraries/XMCLib/src/xmc_can.c **** 
 262:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
 631              	 .loc 2 262 0
 632 00b4 3B68     	 ldr r3,[r7]
 633 00b6 5A68     	 ldr r2,[r3,#4]
 634 00b8 3B6A     	 ldr r3,[r7,#32]
 635 00ba 9A42     	 cmp r2,r3
 636 00bc 05D8     	 bhi .L27
 263:../Libraries/XMCLib/src/xmc_can.c ****   {
 264:../Libraries/XMCLib/src/xmc_can.c ****   error = temp_baudrate - can_bit_time->baudrate;
 637              	 .loc 2 264 0
 638 00be 3B68     	 ldr r3,[r7]
 639 00c0 5B68     	 ldr r3,[r3,#4]
 640 00c2 3A6A     	 ldr r2,[r7,#32]
 641 00c4 D31A     	 subs r3,r2,r3
 642 00c6 FB61     	 str r3,[r7,#28]
 643 00c8 04E0     	 b .L28
 644              	.L27:
 265:../Libraries/XMCLib/src/xmc_can.c ****   }
 266:../Libraries/XMCLib/src/xmc_can.c ****   else
 267:../Libraries/XMCLib/src/xmc_can.c ****   {
 268:../Libraries/XMCLib/src/xmc_can.c ****   error = can_bit_time->baudrate - temp_baudrate;
 645              	 .loc 2 268 0
 646 00ca 3B68     	 ldr r3,[r7]
 647 00cc 5A68     	 ldr r2,[r3,#4]
 648 00ce 3B6A     	 ldr r3,[r7,#32]
 649 00d0 D31A     	 subs r3,r2,r3
 650 00d2 FB61     	 str r3,[r7,#28]
 651              	.L28:
 269:../Libraries/XMCLib/src/xmc_can.c ****   }
 270:../Libraries/XMCLib/src/xmc_can.c **** 
 271:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
 652              	 .loc 2 271 0
 653 00d4 7B6A     	 ldr r3,[r7,#36]
 654 00d6 142B     	 cmp r3,#20
 655 00d8 0ED8     	 bhi .L29
 656              	 .loc 2 271 0 is_stmt 0 discriminator 1
 657 00da BA6A     	 ldr r2,[r7,#40]
 658 00dc FB69     	 ldr r3,[r7,#28]
 659 00de 9A42     	 cmp r2,r3
 660 00e0 0AD9     	 bls .L29
 272:../Libraries/XMCLib/src/xmc_can.c ****   {
 273:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 661              	 .loc 2 273 0 is_stmt 1
 662 00e2 FB6B     	 ldr r3,[r7,#60]
 663 00e4 7B63     	 str r3,[r7,#52]
 274:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 664              	 .loc 2 274 0
 665 00e6 7B6A     	 ldr r3,[r7,#36]
 666 00e8 FB62     	 str r3,[r7,#44]
 275:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 667              	 .loc 2 275 0
 668 00ea FB69     	 ldr r3,[r7,#28]
 669 00ec BB62     	 str r3,[r7,#40]
 276:../Libraries/XMCLib/src/xmc_can.c **** 
 277:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
 670              	 .loc 2 277 0
 671 00ee FB69     	 ldr r3,[r7,#28]
 672 00f0 B3F57A7F 	 cmp r3,#1000
 673 00f4 00D2     	 bcs .L29
 278:../Libraries/XMCLib/src/xmc_can.c ****     {
 279:../Libraries/XMCLib/src/xmc_can.c ****       break;
 674              	 .loc 2 279 0
 675 00f6 05E0     	 b .L30
 676              	.L29:
 677              	.LBE3:
 234:../Libraries/XMCLib/src/xmc_can.c ****   {
 678              	 .loc 2 234 0 discriminator 2
 679 00f8 FB6B     	 ldr r3,[r7,#60]
 680 00fa 0133     	 adds r3,r3,#1
 681 00fc FB63     	 str r3,[r7,#60]
 682              	.L22:
 234:../Libraries/XMCLib/src/xmc_can.c ****   {
 683              	 .loc 2 234 0 is_stmt 0 discriminator 1
 684 00fe FB6B     	 ldr r3,[r7,#60]
 685 0100 402B     	 cmp r3,#64
 686 0102 94D9     	 bls .L31
 687              	.L30:
 280:../Libraries/XMCLib/src/xmc_can.c ****     }
 281:../Libraries/XMCLib/src/xmc_can.c ****    }
 282:../Libraries/XMCLib/src/xmc_can.c ****   }
 283:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 284:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 688              	 .loc 2 284 0 is_stmt 1
 689 0104 42F21073 	 movw r3,#10000
 690 0108 BB62     	 str r3,[r7,#40]
 285:../Libraries/XMCLib/src/xmc_can.c **** 
 286:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 691              	 .loc 2 286 0
 692 010a 4023     	 movs r3,#64
 693 010c BB63     	 str r3,[r7,#56]
 694 010e 2EE0     	 b .L32
 695              	.L38:
 696              	.LBB4:
 287:../Libraries/XMCLib/src/xmc_can.c ****   {
 288:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 697              	 .loc 2 288 0
 698 0110 BB6B     	 ldr r3,[r7,#56]
 699 0112 0133     	 adds r3,r3,#1
 700 0114 42F21072 	 movw r2,#10000
 701 0118 02FB03F2 	 mul r2,r2,r3
 702 011c FB6A     	 ldr r3,[r7,#44]
 703 011e B2FBF3F3 	 udiv r3,r2,r3
 704 0122 FB60     	 str r3,[r7,#12]
 289:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t error;
 290:../Libraries/XMCLib/src/xmc_can.c ****   if (tempSamplePoint >= can_bit_time->sample_point)
 705              	 .loc 2 290 0
 706 0124 3B68     	 ldr r3,[r7]
 707 0126 1B89     	 ldrh r3,[r3,#8]
 708 0128 1A46     	 mov r2,r3
 709 012a FB68     	 ldr r3,[r7,#12]
 710 012c 9A42     	 cmp r2,r3
 711 012e 06D8     	 bhi .L33
 291:../Libraries/XMCLib/src/xmc_can.c ****   {
 292:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 712              	 .loc 2 292 0
 713 0130 3B68     	 ldr r3,[r7]
 714 0132 1B89     	 ldrh r3,[r3,#8]
 715 0134 1A46     	 mov r2,r3
 716 0136 FB68     	 ldr r3,[r7,#12]
 717 0138 9B1A     	 subs r3,r3,r2
 718 013a BB61     	 str r3,[r7,#24]
 719 013c 05E0     	 b .L34
 720              	.L33:
 293:../Libraries/XMCLib/src/xmc_can.c ****   }
 294:../Libraries/XMCLib/src/xmc_can.c ****   else
 295:../Libraries/XMCLib/src/xmc_can.c ****   {
 296:../Libraries/XMCLib/src/xmc_can.c ****     error = can_bit_time->sample_point  - tempSamplePoint;
 721              	 .loc 2 296 0
 722 013e 3B68     	 ldr r3,[r7]
 723 0140 1B89     	 ldrh r3,[r3,#8]
 724 0142 1A46     	 mov r2,r3
 725 0144 FB68     	 ldr r3,[r7,#12]
 726 0146 D31A     	 subs r3,r2,r3
 727 0148 BB61     	 str r3,[r7,#24]
 728              	.L34:
 297:../Libraries/XMCLib/src/xmc_can.c ****   }
 298:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 729              	 .loc 2 298 0
 730 014a BA6A     	 ldr r2,[r7,#40]
 731 014c BB69     	 ldr r3,[r7,#24]
 732 014e 9A42     	 cmp r2,r3
 733 0150 03D9     	 bls .L35
 299:../Libraries/XMCLib/src/xmc_can.c ****     {
 300:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 734              	 .loc 2 300 0
 735 0152 BB6B     	 ldr r3,[r7,#56]
 736 0154 3B63     	 str r3,[r7,#48]
 301:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 737              	 .loc 2 301 0
 738 0156 BB69     	 ldr r3,[r7,#24]
 739 0158 BB62     	 str r3,[r7,#40]
 740              	.L35:
 302:../Libraries/XMCLib/src/xmc_can.c ****     }
 303:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 741              	 .loc 2 303 0
 742 015a 3B68     	 ldr r3,[r7]
 743 015c 1B89     	 ldrh r3,[r3,#8]
 744 015e 1A46     	 mov r2,r3
 745 0160 FB68     	 ldr r3,[r7,#12]
 746 0162 9A42     	 cmp r2,r3
 747 0164 00D9     	 bls .L36
 304:../Libraries/XMCLib/src/xmc_can.c ****     {
 305:../Libraries/XMCLib/src/xmc_can.c ****       break;
 748              	 .loc 2 305 0
 749 0166 05E0     	 b .L37
 750              	.L36:
 751              	.LBE4:
 286:../Libraries/XMCLib/src/xmc_can.c ****   {
 752              	 .loc 2 286 0 discriminator 2
 753 0168 BB6B     	 ldr r3,[r7,#56]
 754 016a 013B     	 subs r3,r3,#1
 755 016c BB63     	 str r3,[r7,#56]
 756              	.L32:
 286:../Libraries/XMCLib/src/xmc_can.c ****   {
 757              	 .loc 2 286 0 is_stmt 0 discriminator 1
 758 016e BB6B     	 ldr r3,[r7,#56]
 759 0170 022B     	 cmp r3,#2
 760 0172 CDD8     	 bhi .L38
 761              	.L37:
 306:../Libraries/XMCLib/src/xmc_can.c ****     }
 307:../Libraries/XMCLib/src/xmc_can.c ****   }
 308:../Libraries/XMCLib/src/xmc_can.c **** 
 309:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 762              	 .loc 2 309 0 is_stmt 1
 763 0174 FA6A     	 ldr r2,[r7,#44]
 764 0176 3B6B     	 ldr r3,[r7,#48]
 765 0178 D31A     	 subs r3,r2,r3
 766 017a 013B     	 subs r3,r3,#1
 767 017c 7B61     	 str r3,[r7,#20]
 310:../Libraries/XMCLib/src/xmc_can.c **** 
 311:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 768              	 .loc 2 311 0
 769 017e 7868     	 ldr r0,[r7,#4]
 770 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 312:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 313:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 771              	 .loc 2 313 0
 772 0184 7B69     	 ldr r3,[r7,#20]
 773 0186 013B     	 subs r3,r3,#1
 774 0188 1B03     	 lsls r3,r3,#12
 775 018a 03F4E042 	 and r2,r3,#28672
 314:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 776              	 .loc 2 314 0
 777 018e 3B68     	 ldr r3,[r7]
 778 0190 5B89     	 ldrh r3,[r3,#10]
 779 0192 013B     	 subs r3,r3,#1
 780 0194 9B01     	 lsls r3,r3,#6
 781 0196 DBB2     	 uxtb r3,r3
 313:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 782              	 .loc 2 313 0
 783 0198 1A43     	 orrs r2,r2,r3
 315:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 784              	 .loc 2 315 0
 785 019a 3B6B     	 ldr r3,[r7,#48]
 786 019c 013B     	 subs r3,r3,#1
 787 019e 1B02     	 lsls r3,r3,#8
 788 01a0 03F47063 	 and r3,r3,#3840
 314:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 789              	 .loc 2 314 0
 790 01a4 1A43     	 orrs r2,r2,r3
 316:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 791              	 .loc 2 316 0
 792 01a6 7B6B     	 ldr r3,[r7,#52]
 793 01a8 013B     	 subs r3,r3,#1
 794 01aa 03F03F03 	 and r3,r3,#63
 795 01ae 1A43     	 orrs r2,r2,r3
 313:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 796              	 .loc 2 313 0
 797 01b0 7B68     	 ldr r3,[r7,#4]
 798 01b2 1A61     	 str r2,[r3,#16]
 317:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 318:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 799              	 .loc 2 318 0
 800 01b4 7868     	 ldr r0,[r7,#4]
 801 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 319:../Libraries/XMCLib/src/xmc_can.c **** }
 802              	 .loc 2 319 0
 803 01ba 4037     	 adds r7,r7,#64
 804              	 .cfi_def_cfa_offset 8
 805 01bc BD46     	 mov sp,r7
 806              	 .cfi_def_cfa_register 13
 807              	 
 808 01be 80BD     	 pop {r7,pc}
 809              	.L40:
 810              	 .align 2
 811              	.L39:
 812 01c0 CDCCCCCC 	 .word -858993459
 813              	 .cfi_endproc
 814              	.LFE236:
 816              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 817              	 .align 2
 818              	 .global XMC_CAN_AllocateMOtoNodeList
 819              	 .thumb
 820              	 .thumb_func
 822              	XMC_CAN_AllocateMOtoNodeList:
 823              	.LFB237:
 320:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 321:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 322:../Libraries/XMCLib/src/xmc_can.c **** {
 824              	 .loc 2 322 0
 825              	 .cfi_startproc
 826              	 
 827              	 
 828 0000 80B5     	 push {r7,lr}
 829              	 .cfi_def_cfa_offset 8
 830              	 .cfi_offset 7,-8
 831              	 .cfi_offset 14,-4
 832 0002 82B0     	 sub sp,sp,#8
 833              	 .cfi_def_cfa_offset 16
 834 0004 00AF     	 add r7,sp,#0
 835              	 .cfi_def_cfa_register 7
 836 0006 7860     	 str r0,[r7,#4]
 837 0008 0B46     	 mov r3,r1
 838 000a FB70     	 strb r3,[r7,#3]
 839 000c 1346     	 mov r3,r2
 840 000e BB70     	 strb r3,[r7,#2]
 323:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 324:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 841              	 .loc 2 324 0
 842 0010 00BF     	 nop
 843              	.L42:
 844              	 .loc 2 324 0 is_stmt 0 discriminator 1
 845 0012 7868     	 ldr r0,[r7,#4]
 846 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 847 0018 0346     	 mov r3,r0
 848 001a 83F00103 	 eor r3,r3,#1
 849 001e DBB2     	 uxtb r3,r3
 850 0020 002B     	 cmp r3,#0
 851 0022 F6D1     	 bne .L42
 325:../Libraries/XMCLib/src/xmc_can.c ****   {
 326:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 327:../Libraries/XMCLib/src/xmc_can.c ****   };
 328:../Libraries/XMCLib/src/xmc_can.c **** 
 329:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 852              	 .loc 2 330 0 is_stmt 1
 853 0024 FB78     	 ldrb r3,[r7,#3]
 854 0026 0133     	 adds r3,r3,#1
 855 0028 DBB2     	 uxtb r3,r3
 856 002a BA78     	 ldrb r2,[r7,#2]
 857 002c 7868     	 ldr r0,[r7,#4]
 858 002e 0221     	 movs r1,#2
 859 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 331:../Libraries/XMCLib/src/xmc_can.c **** }
 860              	 .loc 2 331 0
 861 0034 0837     	 adds r7,r7,#8
 862              	 .cfi_def_cfa_offset 8
 863 0036 BD46     	 mov sp,r7
 864              	 .cfi_def_cfa_register 13
 865              	 
 866 0038 80BD     	 pop {r7,pc}
 867              	 .cfi_endproc
 868              	.LFE237:
 870 003a 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 871              	 .align 2
 872              	 .global XMC_CAN_Disable
 873              	 .thumb
 874              	 .thumb_func
 876              	XMC_CAN_Disable:
 877              	.LFB238:
 332:../Libraries/XMCLib/src/xmc_can.c **** 
 333:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 334:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 335:../Libraries/XMCLib/src/xmc_can.c **** {
 878              	 .loc 2 335 0
 879              	 .cfi_startproc
 880              	 
 881              	 
 882 0000 80B5     	 push {r7,lr}
 883              	 .cfi_def_cfa_offset 8
 884              	 .cfi_offset 7,-8
 885              	 .cfi_offset 14,-4
 886 0002 82B0     	 sub sp,sp,#8
 887              	 .cfi_def_cfa_offset 16
 888 0004 00AF     	 add r7,sp,#0
 889              	 .cfi_def_cfa_register 7
 890 0006 7860     	 str r0,[r7,#4]
 336:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 337:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 891              	 .loc 2 337 0
 892 0008 7B68     	 ldr r3,[r7,#4]
 893 000a 0122     	 movs r2,#1
 894 000c 1A60     	 str r2,[r3]
 338:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 339:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 895              	 .loc 2 339 0
 896 000e 0348     	 ldr r0,.L44
 897 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 340:../Libraries/XMCLib/src/xmc_can.c **** #endif
 341:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 343:../Libraries/XMCLib/src/xmc_can.c **** #endif
 344:../Libraries/XMCLib/src/xmc_can.c **** }
 898              	 .loc 2 344 0
 899 0014 0837     	 adds r7,r7,#8
 900              	 .cfi_def_cfa_offset 8
 901 0016 BD46     	 mov sp,r7
 902              	 .cfi_def_cfa_register 13
 903              	 
 904 0018 80BD     	 pop {r7,pc}
 905              	.L45:
 906 001a 00BF     	 .align 2
 907              	.L44:
 908 001c 10000010 	 .word 268435472
 909              	 .cfi_endproc
 910              	.LFE238:
 912              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 913              	 .align 2
 914              	 .global XMC_CAN_Enable
 915              	 .thumb
 916              	 .thumb_func
 918              	XMC_CAN_Enable:
 919              	.LFB239:
 345:../Libraries/XMCLib/src/xmc_can.c **** 
 346:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 347:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 348:../Libraries/XMCLib/src/xmc_can.c **** {
 920              	 .loc 2 348 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924 0000 80B5     	 push {r7,lr}
 925              	 .cfi_def_cfa_offset 8
 926              	 .cfi_offset 7,-8
 927              	 .cfi_offset 14,-4
 928 0002 82B0     	 sub sp,sp,#8
 929              	 .cfi_def_cfa_offset 16
 930 0004 00AF     	 add r7,sp,#0
 931              	 .cfi_def_cfa_register 7
 932 0006 7860     	 str r0,[r7,#4]
 349:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 350:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 351:../Libraries/XMCLib/src/xmc_can.c **** #endif
 352:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 353:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 933              	 .loc 2 353 0
 934 0008 0948     	 ldr r0,.L48
 935 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 354:../Libraries/XMCLib/src/xmc_can.c **** #endif
 355:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 356:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 936              	 .loc 2 356 0
 937 000e 7B68     	 ldr r3,[r7,#4]
 938 0010 1B68     	 ldr r3,[r3]
 939 0012 23F00102 	 bic r2,r3,#1
 940 0016 7B68     	 ldr r3,[r7,#4]
 941 0018 1A60     	 str r2,[r3]
 357:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 942              	 .loc 2 357 0
 943 001a 00BF     	 nop
 944              	.L47:
 945              	 .loc 2 357 0 is_stmt 0 discriminator 1
 946 001c 7B68     	 ldr r3,[r7,#4]
 947 001e 1B68     	 ldr r3,[r3]
 948 0020 03F00203 	 and r3,r3,#2
 949 0024 002B     	 cmp r3,#0
 950 0026 F9D1     	 bne .L47
 358:../Libraries/XMCLib/src/xmc_can.c ****   {
 359:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 360:../Libraries/XMCLib/src/xmc_can.c ****   };
 361:../Libraries/XMCLib/src/xmc_can.c **** }
 951              	 .loc 2 361 0 is_stmt 1
 952 0028 0837     	 adds r7,r7,#8
 953              	 .cfi_def_cfa_offset 8
 954 002a BD46     	 mov sp,r7
 955              	 .cfi_def_cfa_register 13
 956              	 
 957 002c 80BD     	 pop {r7,pc}
 958              	.L49:
 959 002e 00BF     	 .align 2
 960              	.L48:
 961 0030 10000010 	 .word 268435472
 962              	 .cfi_endproc
 963              	.LFE239:
 965              	 .section .text.XMC_CAN_Init,"ax",%progbits
 966              	 .align 2
 967              	 .global XMC_CAN_Init
 968              	 .thumb
 969              	 .thumb_func
 971              	XMC_CAN_Init:
 972              	.LFB240:
 362:../Libraries/XMCLib/src/xmc_can.c **** 
 363:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 364:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 365:../Libraries/XMCLib/src/xmc_can.c **** {
 366:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 367:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 368:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 369:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 370:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 371:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 372:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 373:../Libraries/XMCLib/src/xmc_can.c **** 
 374:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 375:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 376:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 377:../Libraries/XMCLib/src/xmc_can.c **** 
 378:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 379:../Libraries/XMCLib/src/xmc_can.c **** 
 380:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 381:../Libraries/XMCLib/src/xmc_can.c **** 
 382:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 383:../Libraries/XMCLib/src/xmc_can.c **** 
 384:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 385:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 386:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 387:../Libraries/XMCLib/src/xmc_can.c **** 
 388:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 389:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 390:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 394:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 395:../Libraries/XMCLib/src/xmc_can.c **** 
 396:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 397:../Libraries/XMCLib/src/xmc_can.c **** 
 398:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 399:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 400:../Libraries/XMCLib/src/xmc_can.c **** 
 401:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 402:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 403:../Libraries/XMCLib/src/xmc_can.c **** 
 404:../Libraries/XMCLib/src/xmc_can.c **** }
 405:../Libraries/XMCLib/src/xmc_can.c **** 
 406:../Libraries/XMCLib/src/xmc_can.c **** #else
 407:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 408:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 409:../Libraries/XMCLib/src/xmc_can.c **** {
 973              	 .loc 2 409 0
 974              	 .cfi_startproc
 975              	 
 976              	 
 977 0000 80B5     	 push {r7,lr}
 978              	 .cfi_def_cfa_offset 8
 979              	 .cfi_offset 7,-8
 980              	 .cfi_offset 14,-4
 981 0002 8CB0     	 sub sp,sp,#48
 982              	 .cfi_def_cfa_offset 56
 983 0004 00AF     	 add r7,sp,#0
 984              	 .cfi_def_cfa_register 7
 985 0006 7860     	 str r0,[r7,#4]
 986 0008 3960     	 str r1,[r7]
 410:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 411:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 412:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 413:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 414:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 415:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 416:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 417:../Libraries/XMCLib/src/xmc_can.c **** 
 418:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 987              	 .loc 2 418 0
 988 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 989 000e F862     	 str r0,[r7,#44]
 419:../Libraries/XMCLib/src/xmc_can.c **** 
 420:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 421:../Libraries/XMCLib/src/xmc_can.c **** 
 422:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 423:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 990              	 .loc 2 423 0
 991 0010 7868     	 ldr r0,[r7,#4]
 992 0012 FFF7FEFF 	 bl XMC_CAN_Enable
 424:../Libraries/XMCLib/src/xmc_can.c **** 
 425:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 426:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 993              	 .loc 2 426 0
 994 0016 FA6A     	 ldr r2,[r7,#44]
 995 0018 3B68     	 ldr r3,[r7]
 996 001a B2FBF3F3 	 udiv r3,r2,r3
 997 001e C3F58063 	 rsb r3,r3,#1024
 998 0022 0020     	 movs r0,#0
 999 0024 1946     	 mov r1,r3
 1000 0026 FFF7FEFF 	 bl max
 1001 002a 0346     	 mov r3,r0
 1002 002c 1846     	 mov r0,r3
 1003 002e 40F2FF31 	 movw r1,#1023
 1004 0032 FFF7FEFF 	 bl min
 1005 0036 B862     	 str r0,[r7,#40]
 427:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 1006              	 .loc 2 427 0
 1007 0038 BB6A     	 ldr r3,[r7,#40]
 1008 003a C3F58063 	 rsb r3,r3,#1024
 1009 003e FA6A     	 ldr r2,[r7,#44]
 1010 0040 B2FBF3F3 	 udiv r3,r2,r3
 1011 0044 7B62     	 str r3,[r7,#36]
 428:../Libraries/XMCLib/src/xmc_can.c **** 
 429:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 430:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 1012              	 .loc 2 430 0
 1013 0046 3B68     	 ldr r3,[r7]
 1014 0048 9B09     	 lsrs r3,r3,#6
 1015 004a 3B62     	 str r3,[r7,#32]
 431:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 1016              	 .loc 2 431 0
 1017 004c FB6A     	 ldr r3,[r7,#44]
 1018 004e 9B09     	 lsrs r3,r3,#6
 1019 0050 FB61     	 str r3,[r7,#28]
 432:../Libraries/XMCLib/src/xmc_can.c **** 
 433:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 1020              	 .loc 2 433 0
 1021 0052 3B6A     	 ldr r3,[r7,#32]
 1022 0054 9A02     	 lsls r2,r3,#10
 1023 0056 FB69     	 ldr r3,[r7,#28]
 1024 0058 B2FBF3F3 	 udiv r3,r2,r3
 1025 005c 1846     	 mov r0,r3
 1026 005e 40F2FF31 	 movw r1,#1023
 1027 0062 FFF7FEFF 	 bl min
 1028 0066 B861     	 str r0,[r7,#24]
 434:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 1029              	 .loc 2 434 0
 1030 0068 FB69     	 ldr r3,[r7,#28]
 1031 006a BA69     	 ldr r2,[r7,#24]
 1032 006c 02FB03F3 	 mul r3,r2,r3
 1033 0070 9B0A     	 lsrs r3,r3,#10
 1034 0072 7B61     	 str r3,[r7,#20]
 435:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 1035              	 .loc 2 435 0
 1036 0074 7B69     	 ldr r3,[r7,#20]
 1037 0076 9B01     	 lsls r3,r3,#6
 1038 0078 7B61     	 str r3,[r7,#20]
 436:../Libraries/XMCLib/src/xmc_can.c **** 
 437:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 1039              	 .loc 2 437 0
 1040 007a 3A68     	 ldr r2,[r7]
 1041 007c 7B6A     	 ldr r3,[r7,#36]
 1042 007e D21A     	 subs r2,r2,r3
 1043 0080 3968     	 ldr r1,[r7]
 1044 0082 7B69     	 ldr r3,[r7,#20]
 1045 0084 CB1A     	 subs r3,r1,r3
 1046 0086 9A42     	 cmp r2,r3
 1047 0088 94BF     	 ite ls
 1048 008a 0123     	 movls r3,#1
 1049 008c 0023     	 movhi r3,#0
 1050 008e FB74     	 strb r3,[r7,#19]
 438:../Libraries/XMCLib/src/xmc_can.c **** 
 439:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 1051              	 .loc 2 439 0
 1052 0090 FB7C     	 ldrb r3,[r7,#19]
 1053 0092 002B     	 cmp r3,#0
 1054 0094 01D0     	 beq .L51
 1055              	 .loc 2 439 0 is_stmt 0 discriminator 1
 1056 0096 BB6A     	 ldr r3,[r7,#40]
 1057 0098 00E0     	 b .L52
 1058              	.L51:
 1059              	 .loc 2 439 0 discriminator 2
 1060 009a BB69     	 ldr r3,[r7,#24]
 1061              	.L52:
 1062              	 .loc 2 439 0 discriminator 4
 1063 009c FB60     	 str r3,[r7,#12]
 440:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 1064              	 .loc 2 440 0 is_stmt 1 discriminator 4
 1065 009e FB7C     	 ldrb r3,[r7,#19]
 1066 00a0 002B     	 cmp r3,#0
 1067 00a2 01D0     	 beq .L53
 1068              	 .loc 2 440 0 is_stmt 0 discriminator 1
 1069 00a4 0123     	 movs r3,#1
 1070 00a6 00E0     	 b .L54
 1071              	.L53:
 1072              	 .loc 2 440 0 discriminator 2
 1073 00a8 0223     	 movs r3,#2
 1074              	.L54:
 1075              	 .loc 2 440 0 discriminator 4
 1076 00aa FB72     	 strb r3,[r7,#11]
 441:../Libraries/XMCLib/src/xmc_can.c **** 
 442:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1077              	 .loc 2 442 0 is_stmt 1 discriminator 4
 1078 00ac 7B68     	 ldr r3,[r7,#4]
 1079 00ae DB68     	 ldr r3,[r3,#12]
 1080 00b0 23F44343 	 bic r3,r3,#49920
 1081 00b4 23F0FF03 	 bic r3,r3,#255
 1082 00b8 7A68     	 ldr r2,[r7,#4]
 1083 00ba D360     	 str r3,[r2,#12]
 443:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 1084              	 .loc 2 443 0 discriminator 4
 1085 00bc 7B68     	 ldr r3,[r7,#4]
 1086 00be DA68     	 ldr r2,[r3,#12]
 1087 00c0 FB7A     	 ldrb r3,[r7,#11]
 1088 00c2 9903     	 lsls r1,r3,#14
 1089 00c4 FB68     	 ldr r3,[r7,#12]
 1090 00c6 0B43     	 orrs r3,r3,r1
 1091 00c8 1A43     	 orrs r2,r2,r3
 1092 00ca 7B68     	 ldr r3,[r7,#4]
 1093 00cc DA60     	 str r2,[r3,#12]
 444:../Libraries/XMCLib/src/xmc_can.c **** }
 1094              	 .loc 2 444 0 discriminator 4
 1095 00ce 3037     	 adds r7,r7,#48
 1096              	 .cfi_def_cfa_offset 8
 1097 00d0 BD46     	 mov sp,r7
 1098              	 .cfi_def_cfa_register 13
 1099              	 
 1100 00d2 80BD     	 pop {r7,pc}
 1101              	 .cfi_endproc
 1102              	.LFE240:
 1104              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1105              	 .align 2
 1106              	 .global XMC_CAN_SetBaudrateClockSource
 1107              	 .thumb
 1108              	 .thumb_func
 1110              	XMC_CAN_SetBaudrateClockSource:
 1111              	.LFB241:
 445:../Libraries/XMCLib/src/xmc_can.c **** #endif
 446:../Libraries/XMCLib/src/xmc_can.c **** 
 447:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source)
 448:../Libraries/XMCLib/src/xmc_can.c **** {
 1112              	 .loc 2 448 0
 1113              	 .cfi_startproc
 1114              	 
 1115              	 
 1116              	 
 1117 0000 80B4     	 push {r7}
 1118              	 .cfi_def_cfa_offset 4
 1119              	 .cfi_offset 7,-4
 1120 0002 83B0     	 sub sp,sp,#12
 1121              	 .cfi_def_cfa_offset 16
 1122 0004 00AF     	 add r7,sp,#0
 1123              	 .cfi_def_cfa_register 7
 1124 0006 7860     	 str r0,[r7,#4]
 1125 0008 0B46     	 mov r3,r1
 1126 000a FB70     	 strb r3,[r7,#3]
 449:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 450:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 451:../Libraries/XMCLib/src/xmc_can.c **** #else
 452:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 453:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(source);
 454:../Libraries/XMCLib/src/xmc_can.c **** #endif
 455:../Libraries/XMCLib/src/xmc_can.c **** }
 1127              	 .loc 2 455 0
 1128 000c 0C37     	 adds r7,r7,#12
 1129              	 .cfi_def_cfa_offset 4
 1130 000e BD46     	 mov sp,r7
 1131              	 .cfi_def_cfa_register 13
 1132              	 
 1133 0010 5DF8047B 	 ldr r7,[sp],#4
 1134              	 .cfi_restore 7
 1135              	 .cfi_def_cfa_offset 0
 1136 0014 7047     	 bx lr
 1137              	 .cfi_endproc
 1138              	.LFE241:
 1140 0016 00BF     	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1141              	 .align 2
 1142              	 .global XMC_CAN_GetBaudrateClockSource
 1143              	 .thumb
 1144              	 .thumb_func
 1146              	XMC_CAN_GetBaudrateClockSource:
 1147              	.LFB242:
 456:../Libraries/XMCLib/src/xmc_can.c **** 
 457:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 458:../Libraries/XMCLib/src/xmc_can.c **** {
 1148              	 .loc 2 458 0
 1149              	 .cfi_startproc
 1150              	 
 1151              	 
 1152              	 
 1153 0000 80B4     	 push {r7}
 1154              	 .cfi_def_cfa_offset 4
 1155              	 .cfi_offset 7,-4
 1156 0002 83B0     	 sub sp,sp,#12
 1157              	 .cfi_def_cfa_offset 16
 1158 0004 00AF     	 add r7,sp,#0
 1159              	 .cfi_def_cfa_register 7
 1160 0006 7860     	 str r0,[r7,#4]
 459:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 460:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 461:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4) 
 462:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 463:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 1161              	 .loc 2 463 0
 1162 0008 0123     	 movs r3,#1
 464:../Libraries/XMCLib/src/xmc_can.c **** #endif    
 465:../Libraries/XMCLib/src/xmc_can.c **** }
 1163              	 .loc 2 465 0
 1164 000a 1846     	 mov r0,r3
 1165 000c 0C37     	 adds r7,r7,#12
 1166              	 .cfi_def_cfa_offset 4
 1167 000e BD46     	 mov sp,r7
 1168              	 .cfi_def_cfa_register 13
 1169              	 
 1170 0010 5DF8047B 	 ldr r7,[sp],#4
 1171              	 .cfi_restore 7
 1172              	 .cfi_def_cfa_offset 0
 1173 0014 7047     	 bx lr
 1174              	 .cfi_endproc
 1175              	.LFE242:
 1177 0016 00BF     	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 1178              	 .align 2
 1179              	 .global XMC_CAN_GetBaudrateClockFrequency
 1180              	 .thumb
 1181              	 .thumb_func
 1183              	XMC_CAN_GetBaudrateClockFrequency:
 1184              	.LFB243:
 466:../Libraries/XMCLib/src/xmc_can.c **** 
 467:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 468:../Libraries/XMCLib/src/xmc_can.c **** {
 1185              	 .loc 2 468 0
 1186              	 .cfi_startproc
 1187              	 
 1188              	 
 1189 0000 80B5     	 push {r7,lr}
 1190              	 .cfi_def_cfa_offset 8
 1191              	 .cfi_offset 7,-8
 1192              	 .cfi_offset 14,-4
 1193 0002 84B0     	 sub sp,sp,#16
 1194              	 .cfi_def_cfa_offset 24
 1195 0004 00AF     	 add r7,sp,#0
 1196              	 .cfi_def_cfa_register 7
 1197 0006 7860     	 str r0,[r7,#4]
 469:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency;
 470:../Libraries/XMCLib/src/xmc_can.c **** 
 471:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 472:../Libraries/XMCLib/src/xmc_can.c ****   switch(XMC_CAN_GetBaudrateClockSource(obj))
 473:../Libraries/XMCLib/src/xmc_can.c ****   {
 474:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 475:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 476:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 477:../Libraries/XMCLib/src/xmc_can.c ****       break;
 478:../Libraries/XMCLib/src/xmc_can.c **** #else
 479:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 480:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 481:../Libraries/XMCLib/src/xmc_can.c ****       break;
 482:../Libraries/XMCLib/src/xmc_can.c **** #endif
 483:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 484:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 485:../Libraries/XMCLib/src/xmc_can.c ****       break;
 486:../Libraries/XMCLib/src/xmc_can.c **** 
 487:../Libraries/XMCLib/src/xmc_can.c ****     default:
 488:../Libraries/XMCLib/src/xmc_can.c ****       frequency = 0;
 489:../Libraries/XMCLib/src/xmc_can.c ****       break;
 490:../Libraries/XMCLib/src/xmc_can.c ****   }
 491:../Libraries/XMCLib/src/xmc_can.c **** #else
 492:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 493:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1198              	 .loc 2 493 0
 1199 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1200 000c F860     	 str r0,[r7,#12]
 494:../Libraries/XMCLib/src/xmc_can.c **** #endif  
 495:../Libraries/XMCLib/src/xmc_can.c **** 
 496:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 1201              	 .loc 2 496 0
 1202 000e FB68     	 ldr r3,[r7,#12]
 497:../Libraries/XMCLib/src/xmc_can.c **** }
 1203              	 .loc 2 497 0
 1204 0010 1846     	 mov r0,r3
 1205 0012 1037     	 adds r7,r7,#16
 1206              	 .cfi_def_cfa_offset 8
 1207 0014 BD46     	 mov sp,r7
 1208              	 .cfi_def_cfa_register 13
 1209              	 
 1210 0016 80BD     	 pop {r7,pc}
 1211              	 .cfi_endproc
 1212              	.LFE243:
 1214              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 1215              	 .align 2
 1216              	 .global XMC_CAN_InitEx
 1217              	 .thumb
 1218              	 .thumb_func
 1220              	XMC_CAN_InitEx:
 1221              	.LFB244:
 498:../Libraries/XMCLib/src/xmc_can.c **** 
 499:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 500:../Libraries/XMCLib/src/xmc_can.c **** {
 1222              	 .loc 2 500 0
 1223              	 .cfi_startproc
 1224              	 
 1225              	 
 1226 0000 80B5     	 push {r7,lr}
 1227              	 .cfi_def_cfa_offset 8
 1228              	 .cfi_offset 7,-8
 1229              	 .cfi_offset 14,-4
 1230 0002 88B0     	 sub sp,sp,#32
 1231              	 .cfi_def_cfa_offset 40
 1232 0004 00AF     	 add r7,sp,#0
 1233              	 .cfi_def_cfa_register 7
 1234 0006 F860     	 str r0,[r7,#12]
 1235 0008 0B46     	 mov r3,r1
 1236 000a 7A60     	 str r2,[r7,#4]
 1237 000c FB72     	 strb r3,[r7,#11]
 501:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 502:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 503:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 504:../Libraries/XMCLib/src/xmc_can.c **** 
 505:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 506:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1238              	 .loc 2 506 0
 1239 000e F868     	 ldr r0,[r7,#12]
 1240 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 507:../Libraries/XMCLib/src/xmc_can.c **** 
 508:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1241              	 .loc 2 508 0
 1242 0014 FB7A     	 ldrb r3,[r7,#11]
 1243 0016 F868     	 ldr r0,[r7,#12]
 1244 0018 1946     	 mov r1,r3
 1245 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 509:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1246              	 .loc 2 509 0
 1247 001e F868     	 ldr r0,[r7,#12]
 1248 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1249 0024 F861     	 str r0,[r7,#28]
 510:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 511:../Libraries/XMCLib/src/xmc_can.c **** 
 512:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 513:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1250              	 .loc 2 513 0
 1251 0026 FA69     	 ldr r2,[r7,#28]
 1252 0028 7B68     	 ldr r3,[r7,#4]
 1253 002a B2FBF3F3 	 udiv r3,r2,r3
 1254 002e C3F58063 	 rsb r3,r3,#1024
 1255 0032 0020     	 movs r0,#0
 1256 0034 1946     	 mov r1,r3
 1257 0036 FFF7FEFF 	 bl max
 1258 003a 0346     	 mov r3,r0
 1259 003c 1846     	 mov r0,r3
 1260 003e 40F2FF31 	 movw r1,#1023
 1261 0042 FFF7FEFF 	 bl min
 1262 0046 B861     	 str r0,[r7,#24]
 514:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1263              	 .loc 2 514 0
 1264 0048 BB69     	 ldr r3,[r7,#24]
 1265 004a C3F58063 	 rsb r3,r3,#1024
 1266 004e FA69     	 ldr r2,[r7,#28]
 1267 0050 B2FBF3F3 	 udiv r3,r2,r3
 1268 0054 7B61     	 str r3,[r7,#20]
 515:../Libraries/XMCLib/src/xmc_can.c **** 
 516:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1269              	 .loc 2 516 0
 1270 0056 FB68     	 ldr r3,[r7,#12]
 1271 0058 DB68     	 ldr r3,[r3,#12]
 1272 005a 23F44343 	 bic r3,r3,#49920
 1273 005e 23F0FF03 	 bic r3,r3,#255
 1274 0062 FA68     	 ldr r2,[r7,#12]
 1275 0064 D360     	 str r3,[r2,#12]
 517:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1276              	 .loc 2 517 0
 1277 0066 FB68     	 ldr r3,[r7,#12]
 1278 0068 DA68     	 ldr r2,[r3,#12]
 1279 006a BB69     	 ldr r3,[r7,#24]
 1280 006c 1343     	 orrs r3,r3,r2
 1281 006e 43F48042 	 orr r2,r3,#16384
 1282 0072 FB68     	 ldr r3,[r7,#12]
 1283 0074 DA60     	 str r2,[r3,#12]
 518:../Libraries/XMCLib/src/xmc_can.c **** 
 519:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 1284              	 .loc 2 519 0
 1285 0076 7B69     	 ldr r3,[r7,#20]
 520:../Libraries/XMCLib/src/xmc_can.c **** }
 1286              	 .loc 2 520 0
 1287 0078 1846     	 mov r0,r3
 1288 007a 2037     	 adds r7,r7,#32
 1289              	 .cfi_def_cfa_offset 8
 1290 007c BD46     	 mov sp,r7
 1291              	 .cfi_def_cfa_register 13
 1292              	 
 1293 007e 80BD     	 pop {r7,pc}
 1294              	 .cfi_endproc
 1295              	.LFE244:
 1297              	 .section .text.XMC_CAN_GetClockFrequency,"ax",%progbits
 1298              	 .align 2
 1299              	 .global XMC_CAN_GetClockFrequency
 1300              	 .thumb
 1301              	 .thumb_func
 1303              	XMC_CAN_GetClockFrequency:
 1304              	.LFB245:
 521:../Libraries/XMCLib/src/xmc_can.c **** 
 522:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj)
 523:../Libraries/XMCLib/src/xmc_can.c **** {
 1305              	 .loc 2 523 0
 1306              	 .cfi_startproc
 1307              	 
 1308              	 
 1309 0000 80B5     	 push {r7,lr}
 1310              	 .cfi_def_cfa_offset 8
 1311              	 .cfi_offset 7,-8
 1312              	 .cfi_offset 14,-4
 1313 0002 84B0     	 sub sp,sp,#16
 1314              	 .cfi_def_cfa_offset 24
 1315 0004 00AF     	 add r7,sp,#0
 1316              	 .cfi_def_cfa_register 7
 1317 0006 7860     	 str r0,[r7,#4]
 524:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1318              	 .loc 2 524 0
 1319 0008 7B68     	 ldr r3,[r7,#4]
 1320 000a DB68     	 ldr r3,[r3,#12]
 1321 000c C3F30903 	 ubfx r3,r3,#0,#10
 1322 0010 FB60     	 str r3,[r7,#12]
 525:../Libraries/XMCLib/src/xmc_can.c ****   return (XMC_CAN_GetBaudrateClockFrequency(obj) * (1024U - step_n));
 1323              	 .loc 2 525 0
 1324 0012 7868     	 ldr r0,[r7,#4]
 1325 0014 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1326 0018 0246     	 mov r2,r0
 1327 001a FB68     	 ldr r3,[r7,#12]
 1328 001c C3F58063 	 rsb r3,r3,#1024
 1329 0020 03FB02F3 	 mul r3,r3,r2
 526:../Libraries/XMCLib/src/xmc_can.c **** }
 1330              	 .loc 2 526 0
 1331 0024 1846     	 mov r0,r3
 1332 0026 1037     	 adds r7,r7,#16
 1333              	 .cfi_def_cfa_offset 8
 1334 0028 BD46     	 mov sp,r7
 1335              	 .cfi_def_cfa_register 13
 1336              	 
 1337 002a 80BD     	 pop {r7,pc}
 1338              	 .cfi_endproc
 1339              	.LFE245:
 1341              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1342              	 .align 2
 1343              	 .global XMC_CAN_MO_SetIdentifier
 1344              	 .thumb
 1345              	 .thumb_func
 1347              	XMC_CAN_MO_SetIdentifier:
 1348              	.LFB246:
 527:../Libraries/XMCLib/src/xmc_can.c **** 
 528:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 529:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 530:../Libraries/XMCLib/src/xmc_can.c **** {
 1349              	 .loc 2 530 0
 1350              	 .cfi_startproc
 1351              	 
 1352              	 
 1353              	 
 1354 0000 80B4     	 push {r7}
 1355              	 .cfi_def_cfa_offset 4
 1356              	 .cfi_offset 7,-4
 1357 0002 83B0     	 sub sp,sp,#12
 1358              	 .cfi_def_cfa_offset 16
 1359 0004 00AF     	 add r7,sp,#0
 1360              	 .cfi_def_cfa_register 7
 1361 0006 7860     	 str r0,[r7,#4]
 1362 0008 3960     	 str r1,[r7]
 531:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1363              	 .loc 2 531 0
 1364 000a 7B68     	 ldr r3,[r7,#4]
 1365 000c 1B68     	 ldr r3,[r3]
 1366 000e 9B69     	 ldr r3,[r3,#24]
 1367 0010 03F00053 	 and r3,r3,#536870912
 1368 0014 002B     	 cmp r3,#0
 1369 0016 0DD1     	 bne .L65
 532:../Libraries/XMCLib/src/xmc_can.c ****   {
 533:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1370              	 .loc 2 533 0
 1371 0018 7B68     	 ldr r3,[r7,#4]
 1372 001a 1B68     	 ldr r3,[r3]
 1373 001c 7A68     	 ldr r2,[r7,#4]
 1374 001e 1268     	 ldr r2,[r2]
 1375 0020 9269     	 ldr r2,[r2,#24]
 1376 0022 02F06041 	 and r1,r2,#-536870912
 534:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1377              	 .loc 2 534 0
 1378 0026 3A68     	 ldr r2,[r7]
 1379 0028 9204     	 lsls r2,r2,#18
 1380 002a 22F06042 	 bic r2,r2,#-536870912
 533:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1381              	 .loc 2 533 0
 1382 002e 0A43     	 orrs r2,r2,r1
 1383 0030 9A61     	 str r2,[r3,#24]
 1384 0032 0BE0     	 b .L66
 1385              	.L65:
 535:../Libraries/XMCLib/src/xmc_can.c ****   }
 536:../Libraries/XMCLib/src/xmc_can.c ****   else
 537:../Libraries/XMCLib/src/xmc_can.c ****   {
 538:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1386              	 .loc 2 538 0
 1387 0034 7B68     	 ldr r3,[r7,#4]
 1388 0036 1B68     	 ldr r3,[r3]
 1389 0038 7A68     	 ldr r2,[r7,#4]
 1390 003a 1268     	 ldr r2,[r2]
 1391 003c 9269     	 ldr r2,[r2,#24]
 1392 003e 02F06041 	 and r1,r2,#-536870912
 539:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1393              	 .loc 2 539 0
 1394 0042 3A68     	 ldr r2,[r7]
 1395 0044 22F06042 	 bic r2,r2,#-536870912
 538:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1396              	 .loc 2 538 0
 1397 0048 0A43     	 orrs r2,r2,r1
 1398 004a 9A61     	 str r2,[r3,#24]
 1399              	.L66:
 540:../Libraries/XMCLib/src/xmc_can.c ****   }
 541:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1400              	 .loc 2 541 0
 1401 004c 3B68     	 ldr r3,[r7]
 1402 004e 23F06041 	 bic r1,r3,#-536870912
 1403 0052 7A68     	 ldr r2,[r7,#4]
 1404 0054 5368     	 ldr r3,[r2,#4]
 1405 0056 61F31C03 	 bfi r3,r1,#0,#29
 1406 005a 5360     	 str r3,[r2,#4]
 542:../Libraries/XMCLib/src/xmc_can.c **** }
 1407              	 .loc 2 542 0
 1408 005c 0C37     	 adds r7,r7,#12
 1409              	 .cfi_def_cfa_offset 4
 1410 005e BD46     	 mov sp,r7
 1411              	 .cfi_def_cfa_register 13
 1412              	 
 1413 0060 5DF8047B 	 ldr r7,[sp],#4
 1414              	 .cfi_restore 7
 1415              	 .cfi_def_cfa_offset 0
 1416 0064 7047     	 bx lr
 1417              	 .cfi_endproc
 1418              	.LFE246:
 1420 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1421              	 .align 2
 1422              	 .global XMC_CAN_MO_GetIdentifier
 1423              	 .thumb
 1424              	 .thumb_func
 1426              	XMC_CAN_MO_GetIdentifier:
 1427              	.LFB247:
 543:../Libraries/XMCLib/src/xmc_can.c **** 
 544:../Libraries/XMCLib/src/xmc_can.c **** 
 545:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 546:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 547:../Libraries/XMCLib/src/xmc_can.c **** {
 1428              	 .loc 2 547 0
 1429              	 .cfi_startproc
 1430              	 
 1431              	 
 1432              	 
 1433 0000 80B4     	 push {r7}
 1434              	 .cfi_def_cfa_offset 4
 1435              	 .cfi_offset 7,-4
 1436 0002 85B0     	 sub sp,sp,#20
 1437              	 .cfi_def_cfa_offset 24
 1438 0004 00AF     	 add r7,sp,#0
 1439              	 .cfi_def_cfa_register 7
 1440 0006 7860     	 str r0,[r7,#4]
 548:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 549:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1441              	 .loc 2 549 0
 1442 0008 7B68     	 ldr r3,[r7,#4]
 1443 000a 1B68     	 ldr r3,[r3]
 1444 000c 9B69     	 ldr r3,[r3,#24]
 1445 000e 03F00053 	 and r3,r3,#536870912
 1446 0012 002B     	 cmp r3,#0
 1447 0014 07D1     	 bne .L68
 550:../Libraries/XMCLib/src/xmc_can.c ****   {
 551:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STD
 1448              	 .loc 2 551 0
 1449 0016 7B68     	 ldr r3,[r7,#4]
 1450 0018 1B68     	 ldr r3,[r3]
 1451 001a 9B69     	 ldr r3,[r3,#24]
 1452 001c 23F06043 	 bic r3,r3,#-536870912
 1453 0020 9B0C     	 lsrs r3,r3,#18
 1454 0022 FB60     	 str r3,[r7,#12]
 1455 0024 05E0     	 b .L69
 1456              	.L68:
 552:../Libraries/XMCLib/src/xmc_can.c ****   }
 553:../Libraries/XMCLib/src/xmc_can.c ****   else
 554:../Libraries/XMCLib/src/xmc_can.c ****   {
 555:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1457              	 .loc 2 555 0
 1458 0026 7B68     	 ldr r3,[r7,#4]
 1459 0028 1B68     	 ldr r3,[r3]
 1460 002a 9B69     	 ldr r3,[r3,#24]
 1461 002c 23F06043 	 bic r3,r3,#-536870912
 1462 0030 FB60     	 str r3,[r7,#12]
 1463              	.L69:
 556:../Libraries/XMCLib/src/xmc_can.c ****   }
 557:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1464              	 .loc 2 557 0
 1465 0032 FB68     	 ldr r3,[r7,#12]
 558:../Libraries/XMCLib/src/xmc_can.c **** }
 1466              	 .loc 2 558 0
 1467 0034 1846     	 mov r0,r3
 1468 0036 1437     	 adds r7,r7,#20
 1469              	 .cfi_def_cfa_offset 4
 1470 0038 BD46     	 mov sp,r7
 1471              	 .cfi_def_cfa_register 13
 1472              	 
 1473 003a 5DF8047B 	 ldr r7,[sp],#4
 1474              	 .cfi_restore 7
 1475              	 .cfi_def_cfa_offset 0
 1476 003e 7047     	 bx lr
 1477              	 .cfi_endproc
 1478              	.LFE247:
 1480              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1481              	 .align 2
 1482              	 .global XMC_CAN_MO_GetAcceptanceMask
 1483              	 .thumb
 1484              	 .thumb_func
 1486              	XMC_CAN_MO_GetAcceptanceMask:
 1487              	.LFB248:
 559:../Libraries/XMCLib/src/xmc_can.c **** 
 560:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 561:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 562:../Libraries/XMCLib/src/xmc_can.c **** {
 1488              	 .loc 2 562 0
 1489              	 .cfi_startproc
 1490              	 
 1491              	 
 1492              	 
 1493 0000 80B4     	 push {r7}
 1494              	 .cfi_def_cfa_offset 4
 1495              	 .cfi_offset 7,-4
 1496 0002 85B0     	 sub sp,sp,#20
 1497              	 .cfi_def_cfa_offset 24
 1498 0004 00AF     	 add r7,sp,#0
 1499              	 .cfi_def_cfa_register 7
 1500 0006 7860     	 str r0,[r7,#4]
 563:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 564:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1501              	 .loc 2 564 0
 1502 0008 7B68     	 ldr r3,[r7,#4]
 1503 000a 1B68     	 ldr r3,[r3]
 1504 000c DB68     	 ldr r3,[r3,#12]
 1505 000e 03F00053 	 and r3,r3,#536870912
 1506 0012 002B     	 cmp r3,#0
 1507 0014 0ED1     	 bne .L72
 565:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1508              	 .loc 2 565 0
 1509 0016 7B68     	 ldr r3,[r7,#4]
 1510 0018 1B68     	 ldr r3,[r3]
 1511 001a 9B69     	 ldr r3,[r3,#24]
 1512 001c 03F00053 	 and r3,r3,#536870912
 1513 0020 002B     	 cmp r3,#0
 1514 0022 07D1     	 bne .L72
 566:../Libraries/XMCLib/src/xmc_can.c ****   {
 567:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1515              	 .loc 2 567 0
 1516 0024 7B68     	 ldr r3,[r7,#4]
 1517 0026 1B68     	 ldr r3,[r3]
 1518 0028 DB68     	 ldr r3,[r3,#12]
 1519 002a 23F06043 	 bic r3,r3,#-536870912
 1520 002e 9B0C     	 lsrs r3,r3,#18
 1521 0030 FB60     	 str r3,[r7,#12]
 1522 0032 05E0     	 b .L73
 1523              	.L72:
 568:../Libraries/XMCLib/src/xmc_can.c ****   }
 569:../Libraries/XMCLib/src/xmc_can.c ****   else
 570:../Libraries/XMCLib/src/xmc_can.c ****   {
 571:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1524              	 .loc 2 571 0
 1525 0034 7B68     	 ldr r3,[r7,#4]
 1526 0036 1B68     	 ldr r3,[r3]
 1527 0038 DB68     	 ldr r3,[r3,#12]
 1528 003a 23F06043 	 bic r3,r3,#-536870912
 1529 003e FB60     	 str r3,[r7,#12]
 1530              	.L73:
 572:../Libraries/XMCLib/src/xmc_can.c ****   }
 573:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1531              	 .loc 2 573 0
 1532 0040 FB68     	 ldr r3,[r7,#12]
 574:../Libraries/XMCLib/src/xmc_can.c **** }
 1533              	 .loc 2 574 0
 1534 0042 1846     	 mov r0,r3
 1535 0044 1437     	 adds r7,r7,#20
 1536              	 .cfi_def_cfa_offset 4
 1537 0046 BD46     	 mov sp,r7
 1538              	 .cfi_def_cfa_register 13
 1539              	 
 1540 0048 5DF8047B 	 ldr r7,[sp],#4
 1541              	 .cfi_restore 7
 1542              	 .cfi_def_cfa_offset 0
 1543 004c 7047     	 bx lr
 1544              	 .cfi_endproc
 1545              	.LFE248:
 1547 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1548              	 .align 2
 1549              	 .global XMC_CAN_MO_SetAcceptanceMask
 1550              	 .thumb
 1551              	 .thumb_func
 1553              	XMC_CAN_MO_SetAcceptanceMask:
 1554              	.LFB249:
 575:../Libraries/XMCLib/src/xmc_can.c **** 
 576:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 577:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 578:../Libraries/XMCLib/src/xmc_can.c **** {
 1555              	 .loc 2 578 0
 1556              	 .cfi_startproc
 1557              	 
 1558              	 
 1559              	 
 1560 0000 80B4     	 push {r7}
 1561              	 .cfi_def_cfa_offset 4
 1562              	 .cfi_offset 7,-4
 1563 0002 83B0     	 sub sp,sp,#12
 1564              	 .cfi_def_cfa_offset 16
 1565 0004 00AF     	 add r7,sp,#0
 1566              	 .cfi_def_cfa_register 7
 1567 0006 7860     	 str r0,[r7,#4]
 1568 0008 3960     	 str r1,[r7]
 579:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1569              	 .loc 2 579 0
 1570 000a 7B68     	 ldr r3,[r7,#4]
 1571 000c 1B68     	 ldr r3,[r3]
 1572 000e DB68     	 ldr r3,[r3,#12]
 1573 0010 03F00053 	 and r3,r3,#536870912
 1574 0014 002B     	 cmp r3,#0
 1575 0016 12D1     	 bne .L76
 580:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1576              	 .loc 2 580 0
 1577 0018 7B68     	 ldr r3,[r7,#4]
 1578 001a 1B68     	 ldr r3,[r3]
 1579 001c 9B69     	 ldr r3,[r3,#24]
 1580 001e 03F00053 	 and r3,r3,#536870912
 1581 0022 002B     	 cmp r3,#0
 1582 0024 0BD1     	 bne .L76
 581:../Libraries/XMCLib/src/xmc_can.c ****   {
 582:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1583              	 .loc 2 582 0
 1584 0026 7B68     	 ldr r3,[r7,#4]
 1585 0028 1B68     	 ldr r3,[r3]
 1586 002a 7A68     	 ldr r2,[r7,#4]
 1587 002c 1268     	 ldr r2,[r2]
 1588 002e D268     	 ldr r2,[r2,#12]
 1589 0030 02F06041 	 and r1,r2,#-536870912
 583:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1590              	 .loc 2 583 0
 1591 0034 3A68     	 ldr r2,[r7]
 1592 0036 9204     	 lsls r2,r2,#18
 582:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1593              	 .loc 2 582 0
 1594 0038 0A43     	 orrs r2,r2,r1
 1595 003a DA60     	 str r2,[r3,#12]
 1596 003c 0BE0     	 b .L77
 1597              	.L76:
 584:../Libraries/XMCLib/src/xmc_can.c ****   }
 585:../Libraries/XMCLib/src/xmc_can.c ****   else
 586:../Libraries/XMCLib/src/xmc_can.c ****   {
 587:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1598              	 .loc 2 587 0
 1599 003e 7B68     	 ldr r3,[r7,#4]
 1600 0040 1B68     	 ldr r3,[r3]
 1601 0042 7A68     	 ldr r2,[r7,#4]
 1602 0044 1268     	 ldr r2,[r2]
 1603 0046 D268     	 ldr r2,[r2,#12]
 1604 0048 02F06041 	 and r1,r2,#-536870912
 588:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1605              	 .loc 2 588 0
 1606 004c 3A68     	 ldr r2,[r7]
 1607 004e 22F06042 	 bic r2,r2,#-536870912
 587:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1608              	 .loc 2 587 0
 1609 0052 0A43     	 orrs r2,r2,r1
 1610 0054 DA60     	 str r2,[r3,#12]
 1611              	.L77:
 589:../Libraries/XMCLib/src/xmc_can.c ****   }
 590:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1612              	 .loc 2 590 0
 1613 0056 3B68     	 ldr r3,[r7]
 1614 0058 23F06041 	 bic r1,r3,#-536870912
 1615 005c 7A68     	 ldr r2,[r7,#4]
 1616 005e 9368     	 ldr r3,[r2,#8]
 1617 0060 61F31C03 	 bfi r3,r1,#0,#29
 1618 0064 9360     	 str r3,[r2,#8]
 591:../Libraries/XMCLib/src/xmc_can.c **** }
 1619              	 .loc 2 591 0
 1620 0066 0C37     	 adds r7,r7,#12
 1621              	 .cfi_def_cfa_offset 4
 1622 0068 BD46     	 mov sp,r7
 1623              	 .cfi_def_cfa_register 13
 1624              	 
 1625 006a 5DF8047B 	 ldr r7,[sp],#4
 1626              	 .cfi_restore 7
 1627              	 .cfi_def_cfa_offset 0
 1628 006e 7047     	 bx lr
 1629              	 .cfi_endproc
 1630              	.LFE249:
 1632              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1633              	 .align 2
 1634              	 .global XMC_CAN_MO_Config
 1635              	 .thumb
 1636              	 .thumb_func
 1638              	XMC_CAN_MO_Config:
 1639              	.LFB250:
 592:../Libraries/XMCLib/src/xmc_can.c **** 
 593:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 594:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 595:../Libraries/XMCLib/src/xmc_can.c **** {
 1640              	 .loc 2 595 0
 1641              	 .cfi_startproc
 1642              	 
 1643              	 
 1644 0000 80B5     	 push {r7,lr}
 1645              	 .cfi_def_cfa_offset 8
 1646              	 .cfi_offset 7,-8
 1647              	 .cfi_offset 14,-4
 1648 0002 86B0     	 sub sp,sp,#24
 1649              	 .cfi_def_cfa_offset 32
 1650 0004 00AF     	 add r7,sp,#0
 1651              	 .cfi_def_cfa_register 7
 1652 0006 7860     	 str r0,[r7,#4]
 596:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 597:../Libraries/XMCLib/src/xmc_can.c ****   
 598:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 599:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 1653              	 .loc 2 599 0
 1654 0008 7B68     	 ldr r3,[r7,#4]
 1655 000a 1B68     	 ldr r3,[r3]
 1656 000c 03F13843 	 add r3,r3,#-1207959552
 1657 0010 A3F5A833 	 sub r3,r3,#86016
 1658 0014 5B09     	 lsrs r3,r3,#5
 1659 0016 7B61     	 str r3,[r7,#20]
 600:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 1660              	 .loc 2 600 0
 1661 0018 7B69     	 ldr r3,[r7,#20]
 1662 001a 5B09     	 lsrs r3,r3,#5
 1663 001c 5A03     	 lsls r2,r3,#13
 1664 001e 7B69     	 ldr r3,[r7,#20]
 1665 0020 03F01F03 	 and r3,r3,#31
 1666 0024 1B02     	 lsls r3,r3,#8
 1667 0026 1343     	 orrs r3,r3,r2
 1668 0028 3B61     	 str r3,[r7,#16]
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1669              	 .loc 2 601 0
 1670 002a 7B68     	 ldr r3,[r7,#4]
 1671 002c 1B68     	 ldr r3,[r3]
 1672 002e 7A68     	 ldr r2,[r7,#4]
 1673 0030 1268     	 ldr r2,[r2]
 1674 0032 9268     	 ldr r2,[r2,#8]
 1675 0034 22F47F42 	 bic r2,r2,#65280
 1676 0038 9A60     	 str r2,[r3,#8]
 602:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1677              	 .loc 2 602 0
 1678 003a 7B68     	 ldr r3,[r7,#4]
 1679 003c 1B68     	 ldr r3,[r3]
 1680 003e 7A68     	 ldr r2,[r7,#4]
 1681 0040 1268     	 ldr r2,[r2]
 1682 0042 9168     	 ldr r1,[r2,#8]
 1683 0044 3A69     	 ldr r2,[r7,#16]
 1684 0046 0A43     	 orrs r2,r2,r1
 1685 0048 9A60     	 str r2,[r3,#8]
 603:../Libraries/XMCLib/src/xmc_can.c ****   
 604:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1686              	 .loc 2 604 0
 1687 004a 7B68     	 ldr r3,[r7,#4]
 1688 004c DB79     	 ldrb r3,[r3,#7]
 1689 004e 03F02003 	 and r3,r3,#32
 1690 0052 DBB2     	 uxtb r3,r3
 1691 0054 002B     	 cmp r3,#0
 1692 0056 07D0     	 beq .L79
 605:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1693              	 .loc 2 605 0 discriminator 1
 1694 0058 7B68     	 ldr r3,[r7,#4]
 1695 005a DB79     	 ldrb r3,[r3,#7]
 1696 005c 03F02003 	 and r3,r3,#32
 1697 0060 DBB2     	 uxtb r3,r3
 604:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1698              	 .loc 2 604 0 discriminator 1
 1699 0062 002B     	 cmp r3,#0
 1700 0064 00D1     	 bne .L79
 604:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1701              	 .loc 2 604 0 is_stmt 0
 1702 0066 60E0     	 b .L78
 1703              	.L79:
 606:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1704              	 .loc 2 606 0 is_stmt 1
 1705 0068 7B68     	 ldr r3,[r7,#4]
 1706 006a 1B7E     	 ldrb r3,[r3,#24]
 605:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1707              	 .loc 2 605 0
 1708 006c 002B     	 cmp r3,#0
 1709 006e 04D0     	 beq .L81
 607:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1710              	 .loc 2 607 0
 1711 0070 7B68     	 ldr r3,[r7,#4]
 1712 0072 1B7E     	 ldrb r3,[r3,#24]
 606:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1713              	 .loc 2 606 0
 1714 0074 012B     	 cmp r3,#1
 1715 0076 00D0     	 beq .L81
 1716 0078 57E0     	 b .L78
 1717              	.L81:
 608:../Libraries/XMCLib/src/xmc_can.c ****   {
 609:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 610:../Libraries/XMCLib/src/xmc_can.c ****   }
 611:../Libraries/XMCLib/src/xmc_can.c ****   else
 612:../Libraries/XMCLib/src/xmc_can.c ****   {
 613:../Libraries/XMCLib/src/xmc_can.c **** 
 614:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 615:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1718              	 .loc 2 615 0
 1719 007a 7B68     	 ldr r3,[r7,#4]
 1720 007c 1B68     	 ldr r3,[r3]
 1721 007e 2022     	 movs r2,#32
 1722 0080 DA61     	 str r2,[r3,#28]
 616:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1723              	 .loc 2 616 0
 1724 0082 7B68     	 ldr r3,[r7,#4]
 1725 0084 DB79     	 ldrb r3,[r3,#7]
 1726 0086 03F02003 	 and r3,r3,#32
 1727 008a DBB2     	 uxtb r3,r3
 1728 008c 002B     	 cmp r3,#0
 1729 008e 28D1     	 bne .L82
 617:../Libraries/XMCLib/src/xmc_can.c ****     {
 618:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1730              	 .loc 2 618 0
 1731 0090 7B68     	 ldr r3,[r7,#4]
 1732 0092 5B68     	 ldr r3,[r3,#4]
 1733 0094 FB60     	 str r3,[r7,#12]
 619:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1734              	 .loc 2 619 0
 1735 0096 FB68     	 ldr r3,[r7,#12]
 1736 0098 03F06043 	 and r3,r3,#-536870912
 1737 009c FB60     	 str r3,[r7,#12]
 620:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1738              	 .loc 2 620 0
 1739 009e 7B68     	 ldr r3,[r7,#4]
 1740 00a0 5B68     	 ldr r3,[r3,#4]
 1741 00a2 C3F31C03 	 ubfx r3,r3,#0,#29
 1742 00a6 9B04     	 lsls r3,r3,#18
 1743 00a8 1A46     	 mov r2,r3
 1744 00aa FB68     	 ldr r3,[r7,#12]
 1745 00ac 1343     	 orrs r3,r3,r2
 1746 00ae FB60     	 str r3,[r7,#12]
 621:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1747              	 .loc 2 621 0
 1748 00b0 7B68     	 ldr r3,[r7,#4]
 1749 00b2 1B68     	 ldr r3,[r3]
 1750 00b4 FA68     	 ldr r2,[r7,#12]
 1751 00b6 9A61     	 str r2,[r3,#24]
 622:../Libraries/XMCLib/src/xmc_can.c **** 
 623:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1752              	 .loc 2 623 0
 1753 00b8 7B68     	 ldr r3,[r7,#4]
 1754 00ba 9B68     	 ldr r3,[r3,#8]
 1755 00bc FB60     	 str r3,[r7,#12]
 624:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1756              	 .loc 2 624 0
 1757 00be FB68     	 ldr r3,[r7,#12]
 1758 00c0 03F06043 	 and r3,r3,#-536870912
 1759 00c4 FB60     	 str r3,[r7,#12]
 625:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1760              	 .loc 2 625 0
 1761 00c6 7B68     	 ldr r3,[r7,#4]
 1762 00c8 9B68     	 ldr r3,[r3,#8]
 1763 00ca C3F31C03 	 ubfx r3,r3,#0,#29
 1764 00ce 9B04     	 lsls r3,r3,#18
 1765 00d0 1A46     	 mov r2,r3
 1766 00d2 FB68     	 ldr r3,[r7,#12]
 1767 00d4 1343     	 orrs r3,r3,r2
 1768 00d6 FB60     	 str r3,[r7,#12]
 626:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1769              	 .loc 2 626 0
 1770 00d8 7B68     	 ldr r3,[r7,#4]
 1771 00da 1B68     	 ldr r3,[r3]
 1772 00dc FA68     	 ldr r2,[r7,#12]
 1773 00de DA60     	 str r2,[r3,#12]
 1774 00e0 09E0     	 b .L83
 1775              	.L82:
 627:../Libraries/XMCLib/src/xmc_can.c ****     }
 628:../Libraries/XMCLib/src/xmc_can.c ****     else
 629:../Libraries/XMCLib/src/xmc_can.c ****     {
 630:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1776              	 .loc 2 630 0
 1777 00e2 7B68     	 ldr r3,[r7,#4]
 1778 00e4 1B68     	 ldr r3,[r3]
 1779 00e6 7A68     	 ldr r2,[r7,#4]
 1780 00e8 5268     	 ldr r2,[r2,#4]
 1781 00ea 9A61     	 str r2,[r3,#24]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1782              	 .loc 2 631 0
 1783 00ec 7B68     	 ldr r3,[r7,#4]
 1784 00ee 1B68     	 ldr r3,[r3]
 1785 00f0 7A68     	 ldr r2,[r7,#4]
 1786 00f2 9268     	 ldr r2,[r2,#8]
 1787 00f4 DA60     	 str r2,[r3,#12]
 1788              	.L83:
 632:../Libraries/XMCLib/src/xmc_can.c ****     }
 633:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 634:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1789              	 .loc 2 634 0
 1790 00f6 7B68     	 ldr r3,[r7,#4]
 1791 00f8 1B7E     	 ldrb r3,[r3,#24]
 1792 00fa 012B     	 cmp r3,#1
 1793 00fc 0CD1     	 bne .L84
 635:../Libraries/XMCLib/src/xmc_can.c ****     {
 636:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 637:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1794              	 .loc 2 637 0
 1795 00fe 7868     	 ldr r0,[r7,#4]
 1796 0100 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 638:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1797              	 .loc 2 638 0
 1798 0104 7B68     	 ldr r3,[r7,#4]
 1799 0106 1B68     	 ldr r3,[r3]
 1800 0108 4FF00062 	 mov r2,#134217728
 1801 010c DA61     	 str r2,[r3,#28]
 639:../Libraries/XMCLib/src/xmc_can.c **** 
 640:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 641:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 1802              	 .loc 2 641 0
 1803 010e 7B68     	 ldr r3,[r7,#4]
 1804 0110 1B68     	 ldr r3,[r3]
 1805 0112 074A     	 ldr r2,.L85
 1806 0114 DA61     	 str r2,[r3,#28]
 1807 0116 08E0     	 b .L78
 1808              	.L84:
 642:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 643:../Libraries/XMCLib/src/xmc_can.c ****     }
 644:../Libraries/XMCLib/src/xmc_can.c ****     else
 645:../Libraries/XMCLib/src/xmc_can.c ****     {
 646:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 647:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1809              	 .loc 2 647 0
 1810 0118 7B68     	 ldr r3,[r7,#4]
 1811 011a 1B68     	 ldr r3,[r3]
 1812 011c 4FF40062 	 mov r2,#2048
 1813 0120 DA61     	 str r2,[r3,#28]
 648:../Libraries/XMCLib/src/xmc_can.c **** 
 649:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 650:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 1814              	 .loc 2 650 0
 1815 0122 7B68     	 ldr r3,[r7,#4]
 1816 0124 1B68     	 ldr r3,[r3]
 1817 0126 034A     	 ldr r2,.L85+4
 1818 0128 DA61     	 str r2,[r3,#28]
 1819              	.L78:
 651:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 652:../Libraries/XMCLib/src/xmc_can.c ****     }
 653:../Libraries/XMCLib/src/xmc_can.c **** 
 654:../Libraries/XMCLib/src/xmc_can.c ****   }
 655:../Libraries/XMCLib/src/xmc_can.c **** }
 1820              	 .loc 2 655 0
 1821 012a 1837     	 adds r7,r7,#24
 1822              	 .cfi_def_cfa_offset 8
 1823 012c BD46     	 mov sp,r7
 1824              	 .cfi_def_cfa_register 13
 1825              	 
 1826 012e 80BD     	 pop {r7,pc}
 1827              	.L86:
 1828              	 .align 2
 1829              	.L85:
 1830 0130 C0002006 	 .word 102760640
 1831 0134 4006A000 	 .word 10487360
 1832              	 .cfi_endproc
 1833              	.LFE250:
 1835              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1836              	 .align 2
 1837              	 .global XMC_CAN_MO_UpdateData
 1838              	 .thumb
 1839              	 .thumb_func
 1841              	XMC_CAN_MO_UpdateData:
 1842              	.LFB251:
 656:../Libraries/XMCLib/src/xmc_can.c **** 
 657:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 658:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 659:../Libraries/XMCLib/src/xmc_can.c **** {
 1843              	 .loc 2 659 0
 1844              	 .cfi_startproc
 1845              	 
 1846              	 
 1847              	 
 1848 0000 80B4     	 push {r7}
 1849              	 .cfi_def_cfa_offset 4
 1850              	 .cfi_offset 7,-4
 1851 0002 85B0     	 sub sp,sp,#20
 1852              	 .cfi_def_cfa_offset 24
 1853 0004 00AF     	 add r7,sp,#0
 1854              	 .cfi_def_cfa_register 7
 1855 0006 7860     	 str r0,[r7,#4]
 660:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1856              	 .loc 2 660 0
 1857 0008 0323     	 movs r3,#3
 1858 000a FB73     	 strb r3,[r7,#15]
 661:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 662:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1859              	 .loc 2 662 0
 1860 000c 7B68     	 ldr r3,[r7,#4]
 1861 000e 1B7E     	 ldrb r3,[r3,#24]
 1862 0010 012B     	 cmp r3,#1
 1863 0012 22D1     	 bne .L88
 663:../Libraries/XMCLib/src/xmc_can.c ****   {
 664:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1864              	 .loc 2 664 0
 1865 0014 7B68     	 ldr r3,[r7,#4]
 1866 0016 1B68     	 ldr r3,[r3]
 1867 0018 2022     	 movs r2,#32
 1868 001a DA61     	 str r2,[r3,#28]
 665:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 666:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1869              	 .loc 2 666 0
 1870 001c 7B68     	 ldr r3,[r7,#4]
 1871 001e 1B68     	 ldr r3,[r3]
 1872 0020 7A68     	 ldr r2,[r7,#4]
 1873 0022 1268     	 ldr r2,[r2]
 1874 0024 1268     	 ldr r2,[r2]
 1875 0026 22F07061 	 bic r1,r2,#251658240
 667:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1876              	 .loc 2 667 0
 1877 002a 7A68     	 ldr r2,[r7,#4]
 1878 002c 127B     	 ldrb r2,[r2,#12]
 1879 002e 1206     	 lsls r2,r2,#24
 1880 0030 02F07062 	 and r2,r2,#251658240
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1881              	 .loc 2 666 0
 1882 0034 0A43     	 orrs r2,r2,r1
 1883 0036 1A60     	 str r2,[r3]
 668:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 669:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 1884              	 .loc 2 669 0
 1885 0038 7B68     	 ldr r3,[r7,#4]
 1886 003a 1B68     	 ldr r3,[r3]
 1887 003c 7A68     	 ldr r2,[r7,#4]
 1888 003e 1269     	 ldr r2,[r2,#16]
 1889 0040 1A61     	 str r2,[r3,#16]
 670:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1890              	 .loc 2 670 0
 1891 0042 7B68     	 ldr r3,[r7,#4]
 1892 0044 1B68     	 ldr r3,[r3]
 1893 0046 7A68     	 ldr r2,[r7,#4]
 1894 0048 5269     	 ldr r2,[r2,#20]
 1895 004a 5A61     	 str r2,[r3,#20]
 671:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 672:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 1896              	 .loc 2 672 0
 1897 004c 7B68     	 ldr r3,[r7,#4]
 1898 004e 1B68     	 ldr r3,[r3]
 1899 0050 064A     	 ldr r2,.L91
 1900 0052 DA61     	 str r2,[r3,#28]
 673:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1901              	 .loc 2 673 0
 1902 0054 0023     	 movs r3,#0
 1903 0056 FB73     	 strb r3,[r7,#15]
 1904 0058 01E0     	 b .L89
 1905              	.L88:
 674:../Libraries/XMCLib/src/xmc_can.c ****   }
 675:../Libraries/XMCLib/src/xmc_can.c ****   else
 676:../Libraries/XMCLib/src/xmc_can.c ****   {
 677:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1906              	 .loc 2 677 0
 1907 005a 0323     	 movs r3,#3
 1908 005c FB73     	 strb r3,[r7,#15]
 1909              	.L89:
 678:../Libraries/XMCLib/src/xmc_can.c ****   }
 679:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1910              	 .loc 2 679 0
 1911 005e FB7B     	 ldrb r3,[r7,#15]
 680:../Libraries/XMCLib/src/xmc_can.c **** }
 1912              	 .loc 2 680 0
 1913 0060 1846     	 mov r0,r3
 1914 0062 1437     	 adds r7,r7,#20
 1915              	 .cfi_def_cfa_offset 4
 1916 0064 BD46     	 mov sp,r7
 1917              	 .cfi_def_cfa_register 13
 1918              	 
 1919 0066 5DF8047B 	 ldr r7,[sp],#4
 1920              	 .cfi_restore 7
 1921              	 .cfi_def_cfa_offset 0
 1922 006a 7047     	 bx lr
 1923              	.L92:
 1924              	 .align 2
 1925              	.L91:
 1926 006c 40002800 	 .word 2621504
 1927              	 .cfi_endproc
 1928              	.LFE251:
 1930              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1931              	 .align 2
 1932              	 .global XMC_CAN_MO_Transmit
 1933              	 .thumb
 1934              	 .thumb_func
 1936              	XMC_CAN_MO_Transmit:
 1937              	.LFB252:
 681:../Libraries/XMCLib/src/xmc_can.c **** 
 682:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 683:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 684:../Libraries/XMCLib/src/xmc_can.c **** {
 1938              	 .loc 2 684 0
 1939              	 .cfi_startproc
 1940              	 
 1941              	 
 1942              	 
 1943 0000 80B4     	 push {r7}
 1944              	 .cfi_def_cfa_offset 4
 1945              	 .cfi_offset 7,-4
 1946 0002 87B0     	 sub sp,sp,#28
 1947              	 .cfi_def_cfa_offset 32
 1948 0004 00AF     	 add r7,sp,#0
 1949              	 .cfi_def_cfa_register 7
 1950 0006 7860     	 str r0,[r7,#4]
 685:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1951              	 .loc 2 685 0
 1952 0008 0123     	 movs r3,#1
 1953 000a FB75     	 strb r3,[r7,#23]
 686:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1954              	 .loc 2 686 0
 1955 000c 7B68     	 ldr r3,[r7,#4]
 1956 000e 1B68     	 ldr r3,[r3]
 1957 0010 DB69     	 ldr r3,[r3,#28]
 1958 0012 03F02003 	 and r3,r3,#32
 1959 0016 5B09     	 lsrs r3,r3,#5
 1960 0018 3B61     	 str r3,[r7,#16]
 687:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1961              	 .loc 2 687 0
 1962 001a 7B68     	 ldr r3,[r7,#4]
 1963 001c 1B68     	 ldr r3,[r3]
 1964 001e DB69     	 ldr r3,[r3,#28]
 1965 0020 03F48073 	 and r3,r3,#256
 1966 0024 1B0A     	 lsrs r3,r3,#8
 1967 0026 FB60     	 str r3,[r7,#12]
 688:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 689:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 1968              	 .loc 2 689 0
 1969 0028 3B69     	 ldr r3,[r7,#16]
 1970 002a 002B     	 cmp r3,#0
 1971 002c 02D1     	 bne .L94
 690:../Libraries/XMCLib/src/xmc_can.c ****   {
 691:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1972              	 .loc 2 691 0
 1973 002e 0423     	 movs r3,#4
 1974 0030 FB75     	 strb r3,[r7,#23]
 1975 0032 0CE0     	 b .L95
 1976              	.L94:
 692:../Libraries/XMCLib/src/xmc_can.c ****   }
 693:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 694:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 1977              	 .loc 2 694 0
 1978 0034 FB68     	 ldr r3,[r7,#12]
 1979 0036 012B     	 cmp r3,#1
 1980 0038 02D1     	 bne .L96
 695:../Libraries/XMCLib/src/xmc_can.c ****   {
 696:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1981              	 .loc 2 696 0
 1982 003a 0223     	 movs r3,#2
 1983 003c FB75     	 strb r3,[r7,#23]
 1984 003e 06E0     	 b .L95
 1985              	.L96:
 697:../Libraries/XMCLib/src/xmc_can.c ****   }
 698:../Libraries/XMCLib/src/xmc_can.c ****   else
 699:../Libraries/XMCLib/src/xmc_can.c ****   {
 700:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 701:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 1986              	 .loc 2 701 0
 1987 0040 7B68     	 ldr r3,[r7,#4]
 1988 0042 1B68     	 ldr r3,[r3]
 1989 0044 4FF0E062 	 mov r2,#117440512
 1990 0048 DA61     	 str r2,[r3,#28]
 702:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1991              	 .loc 2 702 0
 1992 004a 0023     	 movs r3,#0
 1993 004c FB75     	 strb r3,[r7,#23]
 1994              	.L95:
 703:../Libraries/XMCLib/src/xmc_can.c ****   }
 704:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1995              	 .loc 2 704 0
 1996 004e FB7D     	 ldrb r3,[r7,#23]
 705:../Libraries/XMCLib/src/xmc_can.c **** }
 1997              	 .loc 2 705 0
 1998 0050 1846     	 mov r0,r3
 1999 0052 1C37     	 adds r7,r7,#28
 2000              	 .cfi_def_cfa_offset 4
 2001 0054 BD46     	 mov sp,r7
 2002              	 .cfi_def_cfa_register 13
 2003              	 
 2004 0056 5DF8047B 	 ldr r7,[sp],#4
 2005              	 .cfi_restore 7
 2006              	 .cfi_def_cfa_offset 0
 2007 005a 7047     	 bx lr
 2008              	 .cfi_endproc
 2009              	.LFE252:
 2011              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 2012              	 .align 2
 2013              	 .global XMC_CAN_MO_ReceiveData
 2014              	 .thumb
 2015              	 .thumb_func
 2017              	XMC_CAN_MO_ReceiveData:
 2018              	.LFB253:
 706:../Libraries/XMCLib/src/xmc_can.c **** 
 707:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 708:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 709:../Libraries/XMCLib/src/xmc_can.c **** {
 2019              	 .loc 2 709 0
 2020              	 .cfi_startproc
 2021              	 
 2022              	 
 2023              	 
 2024 0000 80B4     	 push {r7}
 2025              	 .cfi_def_cfa_offset 4
 2026              	 .cfi_offset 7,-4
 2027 0002 87B0     	 sub sp,sp,#28
 2028              	 .cfi_def_cfa_offset 32
 2029 0004 00AF     	 add r7,sp,#0
 2030              	 .cfi_def_cfa_register 7
 2031 0006 7860     	 str r0,[r7,#4]
 710:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2032              	 .loc 2 710 0
 2033 0008 0123     	 movs r3,#1
 2034 000a FB75     	 strb r3,[r7,#23]
 711:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2035              	 .loc 2 711 0
 2036 000c 0023     	 movs r3,#0
 2037 000e BB75     	 strb r3,[r7,#22]
 712:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2038              	 .loc 2 712 0
 2039 0010 0023     	 movs r3,#0
 2040 0012 7B75     	 strb r3,[r7,#21]
 713:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2041              	 .loc 2 713 0
 2042 0014 7B68     	 ldr r3,[r7,#4]
 2043 0016 1B68     	 ldr r3,[r3]
 2044 0018 DB69     	 ldr r3,[r3,#28]
 2045 001a 03F40063 	 and r3,r3,#2048
 2046 001e DB0A     	 lsrs r3,r3,#11
 2047 0020 3B61     	 str r3,[r7,#16]
 714:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2048              	 .loc 2 714 0
 2049 0022 7B68     	 ldr r3,[r7,#4]
 2050 0024 1B68     	 ldr r3,[r3]
 2051 0026 DB69     	 ldr r3,[r3,#28]
 2052 0028 03F00403 	 and r3,r3,#4
 2053 002c 9B08     	 lsrs r3,r3,#2
 2054 002e FB60     	 str r3,[r7,#12]
 715:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 716:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2055              	 .loc 2 716 0
 2056 0030 3B69     	 ldr r3,[r7,#16]
 2057 0032 002B     	 cmp r3,#0
 2058 0034 02D0     	 beq .L99
 717:../Libraries/XMCLib/src/xmc_can.c ****   {
 718:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2059              	 .loc 2 718 0
 2060 0036 0323     	 movs r3,#3
 2061 0038 FB75     	 strb r3,[r7,#23]
 2062 003a 25E0     	 b .L100
 2063              	.L99:
 719:../Libraries/XMCLib/src/xmc_can.c ****   }
 720:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 721:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2064              	 .loc 2 721 0
 2065 003c FB68     	 ldr r3,[r7,#12]
 2066 003e 012B     	 cmp r3,#1
 2067 0040 02D1     	 bne .L101
 722:../Libraries/XMCLib/src/xmc_can.c ****   {
 723:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2068              	 .loc 2 723 0
 2069 0042 0223     	 movs r3,#2
 2070 0044 FB75     	 strb r3,[r7,#23]
 2071 0046 1FE0     	 b .L100
 2072              	.L101:
 724:../Libraries/XMCLib/src/xmc_can.c ****   }
 725:../Libraries/XMCLib/src/xmc_can.c ****   else
 726:../Libraries/XMCLib/src/xmc_can.c ****   {
 727:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 728:../Libraries/XMCLib/src/xmc_can.c ****     do
 729:../Libraries/XMCLib/src/xmc_can.c ****     {
 730:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2073              	 .loc 2 730 0 discriminator 2
 2074 0048 7B68     	 ldr r3,[r7,#4]
 2075 004a 1B68     	 ldr r3,[r3]
 2076 004c 1A69     	 ldr r2,[r3,#16]
 2077 004e 7B68     	 ldr r3,[r7,#4]
 2078 0050 1A61     	 str r2,[r3,#16]
 731:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2079              	 .loc 2 731 0 discriminator 2
 2080 0052 7B68     	 ldr r3,[r7,#4]
 2081 0054 1B68     	 ldr r3,[r3]
 2082 0056 5A69     	 ldr r2,[r3,#20]
 2083 0058 7B68     	 ldr r3,[r7,#4]
 2084 005a 5A61     	 str r2,[r3,#20]
 732:../Libraries/XMCLib/src/xmc_can.c **** 
 733:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2085              	 .loc 2 733 0 discriminator 2
 2086 005c 7B68     	 ldr r3,[r7,#4]
 2087 005e 1B68     	 ldr r3,[r3]
 2088 0060 DB69     	 ldr r3,[r3,#28]
 2089 0062 03F00403 	 and r3,r3,#4
 2090 0066 9B08     	 lsrs r3,r3,#2
 2091 0068 BB75     	 strb r3,[r7,#22]
 734:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2092              	 .loc 2 734 0 discriminator 2
 2093 006a 7B68     	 ldr r3,[r7,#4]
 2094 006c 1B68     	 ldr r3,[r3]
 2095 006e DB69     	 ldr r3,[r3,#28]
 2096 0070 03F00803 	 and r3,r3,#8
 2097 0074 DB08     	 lsrs r3,r3,#3
 2098 0076 7B75     	 strb r3,[r7,#21]
 735:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 2099              	 .loc 2 735 0 discriminator 2
 2100 0078 BB7D     	 ldrb r3,[r7,#22]
 2101 007a 002B     	 cmp r3,#0
 2102 007c 02D0     	 beq .L102
 2103              	 .loc 2 735 0 is_stmt 0 discriminator 1
 2104 007e 7B7D     	 ldrb r3,[r7,#21]
 2105 0080 002B     	 cmp r3,#0
 2106 0082 E1D1     	 bne .L101
 2107              	.L102:
 736:../Libraries/XMCLib/src/xmc_can.c **** 
 737:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2108              	 .loc 2 737 0 is_stmt 1
 2109 0084 0023     	 movs r3,#0
 2110 0086 FB75     	 strb r3,[r7,#23]
 2111              	.L100:
 738:../Libraries/XMCLib/src/xmc_can.c ****   }
 739:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2112              	 .loc 2 739 0
 2113 0088 FB7D     	 ldrb r3,[r7,#23]
 740:../Libraries/XMCLib/src/xmc_can.c **** }
 2114              	 .loc 2 740 0
 2115 008a 1846     	 mov r0,r3
 2116 008c 1C37     	 adds r7,r7,#28
 2117              	 .cfi_def_cfa_offset 4
 2118 008e BD46     	 mov sp,r7
 2119              	 .cfi_def_cfa_register 13
 2120              	 
 2121 0090 5DF8047B 	 ldr r7,[sp],#4
 2122              	 .cfi_restore 7
 2123              	 .cfi_def_cfa_offset 0
 2124 0094 7047     	 bx lr
 2125              	 .cfi_endproc
 2126              	.LFE253:
 2128 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 2129              	 .align 2
 2130              	 .global XMC_CAN_MO_Receive
 2131              	 .thumb
 2132              	 .thumb_func
 2134              	XMC_CAN_MO_Receive:
 2135              	.LFB254:
 741:../Libraries/XMCLib/src/xmc_can.c **** 
 742:../Libraries/XMCLib/src/xmc_can.c **** 
 743:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 744:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 745:../Libraries/XMCLib/src/xmc_can.c **** {
 2136              	 .loc 2 745 0
 2137              	 .cfi_startproc
 2138              	 
 2139              	 
 2140              	 
 2141 0000 80B4     	 push {r7}
 2142              	 .cfi_def_cfa_offset 4
 2143              	 .cfi_offset 7,-4
 2144 0002 87B0     	 sub sp,sp,#28
 2145              	 .cfi_def_cfa_offset 32
 2146 0004 00AF     	 add r7,sp,#0
 2147              	 .cfi_def_cfa_register 7
 2148 0006 7860     	 str r0,[r7,#4]
 746:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2149              	 .loc 2 746 0
 2150 0008 0123     	 movs r3,#1
 2151 000a FB75     	 strb r3,[r7,#23]
 747:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2152              	 .loc 2 747 0
 2153 000c 0023     	 movs r3,#0
 2154 000e BB75     	 strb r3,[r7,#22]
 748:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2155              	 .loc 2 748 0
 2156 0010 0023     	 movs r3,#0
 2157 0012 7B75     	 strb r3,[r7,#21]
 749:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2158              	 .loc 2 749 0
 2159 0014 7B68     	 ldr r3,[r7,#4]
 2160 0016 1B68     	 ldr r3,[r3]
 2161 0018 DB69     	 ldr r3,[r3,#28]
 2162 001a 03F40063 	 and r3,r3,#2048
 2163 001e DB0A     	 lsrs r3,r3,#11
 2164 0020 3B61     	 str r3,[r7,#16]
 750:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2165              	 .loc 2 750 0
 2166 0022 7B68     	 ldr r3,[r7,#4]
 2167 0024 1B68     	 ldr r3,[r3]
 2168 0026 DB69     	 ldr r3,[r3,#28]
 2169 0028 03F00403 	 and r3,r3,#4
 2170 002c 9B08     	 lsrs r3,r3,#2
 2171 002e FB60     	 str r3,[r7,#12]
 751:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 752:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2172              	 .loc 2 752 0
 2173 0030 3B69     	 ldr r3,[r7,#16]
 2174 0032 002B     	 cmp r3,#0
 2175 0034 02D0     	 beq .L105
 753:../Libraries/XMCLib/src/xmc_can.c ****   {
 754:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2176              	 .loc 2 754 0
 2177 0036 0323     	 movs r3,#3
 2178 0038 FB75     	 strb r3,[r7,#23]
 2179 003a A7E0     	 b .L106
 2180              	.L105:
 755:../Libraries/XMCLib/src/xmc_can.c ****   }
 756:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 757:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2181              	 .loc 2 757 0
 2182 003c FB68     	 ldr r3,[r7,#12]
 2183 003e 012B     	 cmp r3,#1
 2184 0040 02D1     	 bne .L107
 758:../Libraries/XMCLib/src/xmc_can.c ****   {
 759:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2185              	 .loc 2 759 0
 2186 0042 0223     	 movs r3,#2
 2187 0044 FB75     	 strb r3,[r7,#23]
 2188 0046 A1E0     	 b .L106
 2189              	.L107:
 760:../Libraries/XMCLib/src/xmc_can.c ****   }
 761:../Libraries/XMCLib/src/xmc_can.c ****   else
 762:../Libraries/XMCLib/src/xmc_can.c ****   {
 763:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 764:../Libraries/XMCLib/src/xmc_can.c ****     do
 765:../Libraries/XMCLib/src/xmc_can.c ****     {
 766:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2190              	 .loc 2 766 0
 2191 0048 7B68     	 ldr r3,[r7,#4]
 2192 004a 1B68     	 ldr r3,[r3]
 2193 004c 0822     	 movs r2,#8
 2194 004e DA61     	 str r2,[r3,#28]
 767:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2195              	 .loc 2 767 0
 2196 0050 7B68     	 ldr r3,[r7,#4]
 2197 0052 1B68     	 ldr r3,[r3]
 2198 0054 9B69     	 ldr r3,[r3,#24]
 2199 0056 03F00053 	 and r3,r3,#536870912
 2200 005a 5B0F     	 lsrs r3,r3,#29
 2201 005c 002B     	 cmp r3,#0
 2202 005e 40D1     	 bne .L108
 768:../Libraries/XMCLib/src/xmc_can.c ****       {
 769:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2203              	 .loc 2 769 0
 2204 0060 7A68     	 ldr r2,[r7,#4]
 2205 0062 D379     	 ldrb r3,[r2,#7]
 2206 0064 6FF34513 	 bfc r3,#5,#1
 2207 0068 D371     	 strb r3,[r2,#7]
 770:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2208              	 .loc 2 770 0
 2209 006a 7B68     	 ldr r3,[r7,#4]
 2210 006c 1B68     	 ldr r3,[r3]
 2211 006e 9A69     	 ldr r2,[r3,#24]
 2212 0070 4A4B     	 ldr r3,.L114
 2213 0072 1340     	 ands r3,r3,r2
 2214 0074 9B0C     	 lsrs r3,r3,#18
 2215 0076 23F06041 	 bic r1,r3,#-536870912
 2216 007a 7A68     	 ldr r2,[r7,#4]
 2217 007c 5368     	 ldr r3,[r2,#4]
 2218 007e 61F31C03 	 bfi r3,r1,#0,#29
 2219 0082 5360     	 str r3,[r2,#4]
 771:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2220              	 .loc 2 771 0
 2221 0084 7B68     	 ldr r3,[r7,#4]
 2222 0086 1B68     	 ldr r3,[r3]
 2223 0088 DB68     	 ldr r3,[r3,#12]
 2224 008a 03F00053 	 and r3,r3,#536870912
 2225 008e 5B0F     	 lsrs r3,r3,#29
 2226 0090 DBB2     	 uxtb r3,r3
 2227 0092 03F00103 	 and r3,r3,#1
 2228 0096 D9B2     	 uxtb r1,r3
 2229 0098 7A68     	 ldr r2,[r7,#4]
 2230 009a D37A     	 ldrb r3,[r2,#11]
 2231 009c 61F34513 	 bfi r3,r1,#5,#1
 2232 00a0 D372     	 strb r3,[r2,#11]
 772:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 2233              	 .loc 2 772 0
 2234 00a2 7B68     	 ldr r3,[r7,#4]
 2235 00a4 DB7A     	 ldrb r3,[r3,#11]
 2236 00a6 03F02003 	 and r3,r3,#32
 2237 00aa DBB2     	 uxtb r3,r3
 2238 00ac 002B     	 cmp r3,#0
 2239 00ae 0DD0     	 beq .L109
 773:../Libraries/XMCLib/src/xmc_can.c ****         {
 774:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2240              	 .loc 2 774 0
 2241 00b0 7B68     	 ldr r3,[r7,#4]
 2242 00b2 1B68     	 ldr r3,[r3]
 2243 00b4 DA68     	 ldr r2,[r3,#12]
 2244 00b6 394B     	 ldr r3,.L114
 2245 00b8 1340     	 ands r3,r3,r2
 2246 00ba 9B0C     	 lsrs r3,r3,#18
 2247 00bc 23F06041 	 bic r1,r3,#-536870912
 2248 00c0 7A68     	 ldr r2,[r7,#4]
 2249 00c2 9368     	 ldr r3,[r2,#8]
 2250 00c4 61F31C03 	 bfi r3,r1,#0,#29
 2251 00c8 9360     	 str r3,[r2,#8]
 2252 00ca 32E0     	 b .L111
 2253              	.L109:
 775:../Libraries/XMCLib/src/xmc_can.c ****         }
 776:../Libraries/XMCLib/src/xmc_can.c ****         else
 777:../Libraries/XMCLib/src/xmc_can.c ****         {
 778:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2254              	 .loc 2 778 0
 2255 00cc 7B68     	 ldr r3,[r7,#4]
 2256 00ce 1B68     	 ldr r3,[r3]
 2257 00d0 DB68     	 ldr r3,[r3,#12]
 2258 00d2 23F06041 	 bic r1,r3,#-536870912
 2259 00d6 7A68     	 ldr r2,[r7,#4]
 2260 00d8 9368     	 ldr r3,[r2,#8]
 2261 00da 61F31C03 	 bfi r3,r1,#0,#29
 2262 00de 9360     	 str r3,[r2,#8]
 2263 00e0 27E0     	 b .L111
 2264              	.L108:
 779:../Libraries/XMCLib/src/xmc_can.c ****         }
 780:../Libraries/XMCLib/src/xmc_can.c ****       }
 781:../Libraries/XMCLib/src/xmc_can.c ****       else
 782:../Libraries/XMCLib/src/xmc_can.c ****       {
 783:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2265              	 .loc 2 783 0
 2266 00e2 7A68     	 ldr r2,[r7,#4]
 2267 00e4 D379     	 ldrb r3,[r2,#7]
 2268 00e6 43F02003 	 orr r3,r3,#32
 2269 00ea D371     	 strb r3,[r2,#7]
 784:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2270              	 .loc 2 784 0
 2271 00ec 7B68     	 ldr r3,[r7,#4]
 2272 00ee 1B68     	 ldr r3,[r3]
 2273 00f0 9B69     	 ldr r3,[r3,#24]
 2274 00f2 23F06041 	 bic r1,r3,#-536870912
 2275 00f6 7A68     	 ldr r2,[r7,#4]
 2276 00f8 5368     	 ldr r3,[r2,#4]
 2277 00fa 61F31C03 	 bfi r3,r1,#0,#29
 2278 00fe 5360     	 str r3,[r2,#4]
 785:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2279              	 .loc 2 785 0
 2280 0100 7B68     	 ldr r3,[r7,#4]
 2281 0102 1B68     	 ldr r3,[r3]
 2282 0104 DB68     	 ldr r3,[r3,#12]
 2283 0106 23F06041 	 bic r1,r3,#-536870912
 2284 010a 7A68     	 ldr r2,[r7,#4]
 2285 010c 9368     	 ldr r3,[r2,#8]
 2286 010e 61F31C03 	 bfi r3,r1,#0,#29
 2287 0112 9360     	 str r3,[r2,#8]
 786:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2288              	 .loc 2 786 0
 2289 0114 7B68     	 ldr r3,[r7,#4]
 2290 0116 1B68     	 ldr r3,[r3]
 2291 0118 DB68     	 ldr r3,[r3,#12]
 2292 011a 03F00053 	 and r3,r3,#536870912
 2293 011e 5B0F     	 lsrs r3,r3,#29
 2294 0120 DBB2     	 uxtb r3,r3
 2295 0122 03F00103 	 and r3,r3,#1
 2296 0126 D9B2     	 uxtb r1,r3
 2297 0128 7A68     	 ldr r2,[r7,#4]
 2298 012a D37A     	 ldrb r3,[r2,#11]
 2299 012c 61F34513 	 bfi r3,r1,#5,#1
 2300 0130 D372     	 strb r3,[r2,#11]
 2301              	.L111:
 787:../Libraries/XMCLib/src/xmc_can.c ****       }
 788:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2302              	 .loc 2 788 0
 2303 0132 7B68     	 ldr r3,[r7,#4]
 2304 0134 1B68     	 ldr r3,[r3]
 2305 0136 1B68     	 ldr r3,[r3]
 2306 0138 03F07063 	 and r3,r3,#251658240
 2307 013c 1B0E     	 lsrs r3,r3,#24
 2308 013e DAB2     	 uxtb r2,r3
 2309 0140 7B68     	 ldr r3,[r7,#4]
 2310 0142 1A73     	 strb r2,[r3,#12]
 789:../Libraries/XMCLib/src/xmc_can.c **** 
 790:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2311              	 .loc 2 790 0
 2312 0144 7B68     	 ldr r3,[r7,#4]
 2313 0146 1B68     	 ldr r3,[r3]
 2314 0148 1A69     	 ldr r2,[r3,#16]
 2315 014a 7B68     	 ldr r3,[r7,#4]
 2316 014c 1A61     	 str r2,[r3,#16]
 791:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2317              	 .loc 2 791 0
 2318 014e 7B68     	 ldr r3,[r7,#4]
 2319 0150 1B68     	 ldr r3,[r3]
 2320 0152 5A69     	 ldr r2,[r3,#20]
 2321 0154 7B68     	 ldr r3,[r7,#4]
 2322 0156 5A61     	 str r2,[r3,#20]
 792:../Libraries/XMCLib/src/xmc_can.c **** 
 793:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2323              	 .loc 2 793 0
 2324 0158 7B68     	 ldr r3,[r7,#4]
 2325 015a 1B68     	 ldr r3,[r3]
 2326 015c DB69     	 ldr r3,[r3,#28]
 2327 015e 03F00403 	 and r3,r3,#4
 2328 0162 9B08     	 lsrs r3,r3,#2
 2329 0164 BB75     	 strb r3,[r7,#22]
 794:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2330              	 .loc 2 794 0
 2331 0166 7B68     	 ldr r3,[r7,#4]
 2332 0168 1B68     	 ldr r3,[r3]
 2333 016a DB69     	 ldr r3,[r3,#28]
 2334 016c 03F00803 	 and r3,r3,#8
 2335 0170 DB08     	 lsrs r3,r3,#3
 2336 0172 7B75     	 strb r3,[r7,#21]
 795:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 2337              	 .loc 2 795 0
 2338 0174 BB7D     	 ldrb r3,[r7,#22]
 2339 0176 002B     	 cmp r3,#0
 2340 0178 03D0     	 beq .L112
 2341              	 .loc 2 795 0 is_stmt 0 discriminator 1
 2342 017a 7B7D     	 ldrb r3,[r7,#21]
 2343 017c 002B     	 cmp r3,#0
 2344 017e 7FF463AF 	 bne .L107
 2345              	.L112:
 796:../Libraries/XMCLib/src/xmc_can.c **** 
 797:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2346              	 .loc 2 797 0 is_stmt 1
 2347 0182 7B68     	 ldr r3,[r7,#4]
 2348 0184 0022     	 movs r2,#0
 2349 0186 1A76     	 strb r2,[r3,#24]
 798:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2350              	 .loc 2 798 0
 2351 0188 0023     	 movs r3,#0
 2352 018a FB75     	 strb r3,[r7,#23]
 2353              	.L106:
 799:../Libraries/XMCLib/src/xmc_can.c ****   }
 800:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2354              	 .loc 2 800 0
 2355 018c FB7D     	 ldrb r3,[r7,#23]
 801:../Libraries/XMCLib/src/xmc_can.c **** }
 2356              	 .loc 2 801 0
 2357 018e 1846     	 mov r0,r3
 2358 0190 1C37     	 adds r7,r7,#28
 2359              	 .cfi_def_cfa_offset 4
 2360 0192 BD46     	 mov sp,r7
 2361              	 .cfi_def_cfa_register 13
 2362              	 
 2363 0194 5DF8047B 	 ldr r7,[sp],#4
 2364              	 .cfi_restore 7
 2365              	 .cfi_def_cfa_offset 0
 2366 0198 7047     	 bx lr
 2367              	.L115:
 2368 019a 00BF     	 .align 2
 2369              	.L114:
 2370 019c 0000FC1F 	 .word 536608768
 2371              	 .cfi_endproc
 2372              	.LFE254:
 2374              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2375              	 .align 2
 2376              	 .global XMC_CAN_NODE_EnableEvent
 2377              	 .thumb
 2378              	 .thumb_func
 2380              	XMC_CAN_NODE_EnableEvent:
 2381              	.LFB255:
 802:../Libraries/XMCLib/src/xmc_can.c **** 
 803:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 804:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 805:../Libraries/XMCLib/src/xmc_can.c **** {
 2382              	 .loc 2 805 0
 2383              	 .cfi_startproc
 2384              	 
 2385              	 
 2386              	 
 2387 0000 80B4     	 push {r7}
 2388              	 .cfi_def_cfa_offset 4
 2389              	 .cfi_offset 7,-4
 2390 0002 83B0     	 sub sp,sp,#12
 2391              	 .cfi_def_cfa_offset 16
 2392 0004 00AF     	 add r7,sp,#0
 2393              	 .cfi_def_cfa_register 7
 2394 0006 7860     	 str r0,[r7,#4]
 2395 0008 3960     	 str r1,[r7]
 806:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2396              	 .loc 2 806 0
 2397 000a 3B68     	 ldr r3,[r7]
 2398 000c B3F5800F 	 cmp r3,#4194304
 2399 0010 06D0     	 beq .L117
 807:../Libraries/XMCLib/src/xmc_can.c ****   {
 808:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2400              	 .loc 2 808 0
 2401 0012 7B68     	 ldr r3,[r7,#4]
 2402 0014 1A68     	 ldr r2,[r3]
 2403 0016 3B68     	 ldr r3,[r7]
 2404 0018 1A43     	 orrs r2,r2,r3
 2405 001a 7B68     	 ldr r3,[r7,#4]
 2406 001c 1A60     	 str r2,[r3]
 2407 001e 05E0     	 b .L116
 2408              	.L117:
 809:../Libraries/XMCLib/src/xmc_can.c ****   }
 810:../Libraries/XMCLib/src/xmc_can.c ****   else
 811:../Libraries/XMCLib/src/xmc_can.c ****   {
 812:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 2409              	 .loc 2 812 0
 2410 0020 7B68     	 ldr r3,[r7,#4]
 2411 0022 9A69     	 ldr r2,[r3,#24]
 2412 0024 3B68     	 ldr r3,[r7]
 2413 0026 1A43     	 orrs r2,r2,r3
 2414 0028 7B68     	 ldr r3,[r7,#4]
 2415 002a 9A61     	 str r2,[r3,#24]
 2416              	.L116:
 813:../Libraries/XMCLib/src/xmc_can.c ****   }
 814:../Libraries/XMCLib/src/xmc_can.c **** }
 2417              	 .loc 2 814 0
 2418 002c 0C37     	 adds r7,r7,#12
 2419              	 .cfi_def_cfa_offset 4
 2420 002e BD46     	 mov sp,r7
 2421              	 .cfi_def_cfa_register 13
 2422              	 
 2423 0030 5DF8047B 	 ldr r7,[sp],#4
 2424              	 .cfi_restore 7
 2425              	 .cfi_def_cfa_offset 0
 2426 0034 7047     	 bx lr
 2427              	 .cfi_endproc
 2428              	.LFE255:
 2430 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2431              	 .align 2
 2432              	 .global XMC_CAN_NODE_DisableEvent
 2433              	 .thumb
 2434              	 .thumb_func
 2436              	XMC_CAN_NODE_DisableEvent:
 2437              	.LFB256:
 815:../Libraries/XMCLib/src/xmc_can.c **** 
 816:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 817:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 818:../Libraries/XMCLib/src/xmc_can.c **** {
 2438              	 .loc 2 818 0
 2439              	 .cfi_startproc
 2440              	 
 2441              	 
 2442              	 
 2443 0000 80B4     	 push {r7}
 2444              	 .cfi_def_cfa_offset 4
 2445              	 .cfi_offset 7,-4
 2446 0002 83B0     	 sub sp,sp,#12
 2447              	 .cfi_def_cfa_offset 16
 2448 0004 00AF     	 add r7,sp,#0
 2449              	 .cfi_def_cfa_register 7
 2450 0006 7860     	 str r0,[r7,#4]
 2451 0008 3960     	 str r1,[r7]
 819:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2452              	 .loc 2 819 0
 2453 000a 3B68     	 ldr r3,[r7]
 2454 000c B3F5800F 	 cmp r3,#4194304
 2455 0010 07D0     	 beq .L120
 820:../Libraries/XMCLib/src/xmc_can.c ****   {
 821:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2456              	 .loc 2 821 0
 2457 0012 7B68     	 ldr r3,[r7,#4]
 2458 0014 1A68     	 ldr r2,[r3]
 2459 0016 3B68     	 ldr r3,[r7]
 2460 0018 DB43     	 mvns r3,r3
 2461 001a 1A40     	 ands r2,r2,r3
 2462 001c 7B68     	 ldr r3,[r7,#4]
 2463 001e 1A60     	 str r2,[r3]
 2464 0020 06E0     	 b .L119
 2465              	.L120:
 822:../Libraries/XMCLib/src/xmc_can.c ****   }
 823:../Libraries/XMCLib/src/xmc_can.c ****   else
 824:../Libraries/XMCLib/src/xmc_can.c ****   {
 825:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2466              	 .loc 2 825 0
 2467 0022 7B68     	 ldr r3,[r7,#4]
 2468 0024 9A69     	 ldr r2,[r3,#24]
 2469 0026 3B68     	 ldr r3,[r7]
 2470 0028 DB43     	 mvns r3,r3
 2471 002a 1A40     	 ands r2,r2,r3
 2472 002c 7B68     	 ldr r3,[r7,#4]
 2473 002e 9A61     	 str r2,[r3,#24]
 2474              	.L119:
 826:../Libraries/XMCLib/src/xmc_can.c ****   }
 827:../Libraries/XMCLib/src/xmc_can.c **** }
 2475              	 .loc 2 827 0
 2476 0030 0C37     	 adds r7,r7,#12
 2477              	 .cfi_def_cfa_offset 4
 2478 0032 BD46     	 mov sp,r7
 2479              	 .cfi_def_cfa_register 13
 2480              	 
 2481 0034 5DF8047B 	 ldr r7,[sp],#4
 2482              	 .cfi_restore 7
 2483              	 .cfi_def_cfa_offset 0
 2484 0038 7047     	 bx lr
 2485              	 .cfi_endproc
 2486              	.LFE256:
 2488 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2489              	 .align 2
 2490              	 .global XMC_CAN_TXFIFO_Transmit
 2491              	 .thumb
 2492              	 .thumb_func
 2494              	XMC_CAN_TXFIFO_Transmit:
 2495              	.LFB257:
 828:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 829:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 830:../Libraries/XMCLib/src/xmc_can.c **** {
 2496              	 .loc 2 830 0
 2497              	 .cfi_startproc
 2498              	 
 2499              	 
 2500              	 
 2501 0000 80B4     	 push {r7}
 2502              	 .cfi_def_cfa_offset 4
 2503              	 .cfi_offset 7,-4
 2504 0002 89B0     	 sub sp,sp,#36
 2505              	 .cfi_def_cfa_offset 40
 2506 0004 00AF     	 add r7,sp,#0
 2507              	 .cfi_def_cfa_register 7
 2508 0006 7860     	 str r0,[r7,#4]
 831:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2509              	 .loc 2 831 0
 2510 0008 0123     	 movs r3,#1
 2511 000a FB77     	 strb r3,[r7,#31]
 832:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2512              	 .loc 2 832 0
 2513 000c 7B68     	 ldr r3,[r7,#4]
 2514 000e 1B68     	 ldr r3,[r3]
 2515 0010 DB69     	 ldr r3,[r3,#28]
 2516 0012 03F02003 	 and r3,r3,#32
 2517 0016 5B09     	 lsrs r3,r3,#5
 2518 0018 BB61     	 str r3,[r7,#24]
 833:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2519              	 .loc 2 833 0
 2520 001a 7B68     	 ldr r3,[r7,#4]
 2521 001c 1B68     	 ldr r3,[r3]
 2522 001e DB69     	 ldr r3,[r3,#28]
 2523 0020 03F48073 	 and r3,r3,#256
 2524 0024 1B0A     	 lsrs r3,r3,#8
 2525 0026 7B61     	 str r3,[r7,#20]
 834:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2526              	 .loc 2 834 0
 2527 0028 7B68     	 ldr r3,[r7,#4]
 2528 002a 1B68     	 ldr r3,[r3]
 2529 002c 5B68     	 ldr r3,[r3,#4]
 2530 002e 03F47F03 	 and r3,r3,#16711680
 2531 0032 1B0C     	 lsrs r3,r3,#16
 2532 0034 3B61     	 str r3,[r7,#16]
 835:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2533              	 .loc 2 835 0
 2534 0036 3B69     	 ldr r3,[r7,#16]
 2535 0038 03F11073 	 add r3,r3,#37748736
 2536 003c 03F52863 	 add r3,r3,#2688
 2537 0040 5B01     	 lsls r3,r3,#5
 2538 0042 FB60     	 str r3,[r7,#12]
 836:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 837:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2539              	 .loc 2 837 0
 2540 0044 BB69     	 ldr r3,[r7,#24]
 2541 0046 002B     	 cmp r3,#0
 2542 0048 02D1     	 bne .L123
 838:../Libraries/XMCLib/src/xmc_can.c ****   {
 839:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2543              	 .loc 2 839 0
 2544 004a 0423     	 movs r3,#4
 2545 004c FB77     	 strb r3,[r7,#31]
 2546 004e 0BE0     	 b .L124
 2547              	.L123:
 840:../Libraries/XMCLib/src/xmc_can.c ****   }
 841:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 842:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2548              	 .loc 2 842 0
 2549 0050 7B69     	 ldr r3,[r7,#20]
 2550 0052 012B     	 cmp r3,#1
 2551 0054 02D1     	 bne .L125
 843:../Libraries/XMCLib/src/xmc_can.c ****   {
 844:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2552              	 .loc 2 844 0
 2553 0056 0223     	 movs r3,#2
 2554 0058 FB77     	 strb r3,[r7,#31]
 2555 005a 05E0     	 b .L124
 2556              	.L125:
 845:../Libraries/XMCLib/src/xmc_can.c ****   }
 846:../Libraries/XMCLib/src/xmc_can.c ****   else
 847:../Libraries/XMCLib/src/xmc_can.c ****   {
 848:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2557              	 .loc 2 848 0
 2558 005c FB68     	 ldr r3,[r7,#12]
 2559 005e 4FF0E062 	 mov r2,#117440512
 2560 0062 DA61     	 str r2,[r3,#28]
 849:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2561              	 .loc 2 849 0
 2562 0064 0023     	 movs r3,#0
 2563 0066 FB77     	 strb r3,[r7,#31]
 2564              	.L124:
 850:../Libraries/XMCLib/src/xmc_can.c ****   }
 851:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2565              	 .loc 2 851 0
 2566 0068 FB7F     	 ldrb r3,[r7,#31]
 852:../Libraries/XMCLib/src/xmc_can.c **** }
 2567              	 .loc 2 852 0
 2568 006a 1846     	 mov r0,r3
 2569 006c 2437     	 adds r7,r7,#36
 2570              	 .cfi_def_cfa_offset 4
 2571 006e BD46     	 mov sp,r7
 2572              	 .cfi_def_cfa_register 13
 2573              	 
 2574 0070 5DF8047B 	 ldr r7,[sp],#4
 2575              	 .cfi_restore 7
 2576              	 .cfi_def_cfa_offset 0
 2577 0074 7047     	 bx lr
 2578              	 .cfi_endproc
 2579              	.LFE257:
 2581 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2582              	 .align 2
 2583              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2584              	 .thumb
 2585              	 .thumb_func
 2587              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2588              	.LFB258:
 853:../Libraries/XMCLib/src/xmc_can.c **** 
 854:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 855:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 856:../Libraries/XMCLib/src/xmc_can.c **** {
 2589              	 .loc 2 856 0
 2590              	 .cfi_startproc
 2591              	 
 2592              	 
 2593              	 
 2594 0000 80B4     	 push {r7}
 2595              	 .cfi_def_cfa_offset 4
 2596              	 .cfi_offset 7,-4
 2597 0002 83B0     	 sub sp,sp,#12
 2598              	 .cfi_def_cfa_offset 16
 2599 0004 00AF     	 add r7,sp,#0
 2600              	 .cfi_def_cfa_register 7
 2601 0006 7860     	 str r0,[r7,#4]
 2602 0008 3960     	 str r1,[r7]
 857:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2603              	 .loc 2 857 0
 2604 000a 7B68     	 ldr r3,[r7,#4]
 2605 000c 1B68     	 ldr r3,[r3]
 2606 000e 7A68     	 ldr r2,[r7,#4]
 2607 0010 1268     	 ldr r2,[r2]
 2608 0012 1268     	 ldr r2,[r2]
 2609 0014 22F00F02 	 bic r2,r2,#15
 2610 0018 42F00202 	 orr r2,r2,#2
 2611 001c 1A60     	 str r2,[r3]
 858:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 859:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2612              	 .loc 2 859 0
 2613 001e 7B68     	 ldr r3,[r7,#4]
 2614 0020 1B68     	 ldr r3,[r3]
 2615 0022 7A68     	 ldr r2,[r7,#4]
 2616 0024 1268     	 ldr r2,[r2]
 2617 0026 5268     	 ldr r2,[r2,#4]
 2618 0028 02F07F42 	 and r2,r2,#-16777216
 860:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 861:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 862:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2619              	 .loc 2 862 0
 2620 002c 3978     	 ldrb r1,[r7]
 861:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2621              	 .loc 2 861 0
 2622 002e 1143     	 orrs r1,r1,r2
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2623              	 .loc 2 863 0
 2624 0030 BA78     	 ldrb r2,[r7,#2]
 2625 0032 1204     	 lsls r2,r2,#16
 2626 0034 02F47F02 	 and r2,r2,#16711680
 862:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2627              	 .loc 2 862 0
 2628 0038 1143     	 orrs r1,r1,r2
 864:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2629              	 .loc 2 864 0
 2630 003a 7A78     	 ldrb r2,[r7,#1]
 2631 003c 1202     	 lsls r2,r2,#8
 2632 003e 92B2     	 uxth r2,r2
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2633              	 .loc 2 863 0
 2634 0040 0A43     	 orrs r2,r2,r1
 859:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2635              	 .loc 2 859 0
 2636 0042 5A60     	 str r2,[r3,#4]
 865:../Libraries/XMCLib/src/xmc_can.c **** }
 2637              	 .loc 2 865 0
 2638 0044 0C37     	 adds r7,r7,#12
 2639              	 .cfi_def_cfa_offset 4
 2640 0046 BD46     	 mov sp,r7
 2641              	 .cfi_def_cfa_register 13
 2642              	 
 2643 0048 5DF8047B 	 ldr r7,[sp],#4
 2644              	 .cfi_restore 7
 2645              	 .cfi_def_cfa_offset 0
 2646 004c 7047     	 bx lr
 2647              	 .cfi_endproc
 2648              	.LFE258:
 2650 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2651              	 .align 2
 2652              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2653              	 .thumb
 2654              	 .thumb_func
 2656              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2657              	.LFB259:
 866:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 867:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 868:../Libraries/XMCLib/src/xmc_can.c **** {
 2658              	 .loc 2 868 0
 2659              	 .cfi_startproc
 2660              	 
 2661              	 
 2662              	 
 2663 0000 80B4     	 push {r7}
 2664              	 .cfi_def_cfa_offset 4
 2665              	 .cfi_offset 7,-4
 2666 0002 83B0     	 sub sp,sp,#12
 2667              	 .cfi_def_cfa_offset 16
 2668 0004 00AF     	 add r7,sp,#0
 2669              	 .cfi_def_cfa_register 7
 2670 0006 7860     	 str r0,[r7,#4]
 2671 0008 3960     	 str r1,[r7]
 869:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2672              	 .loc 2 869 0
 2673 000a 7B68     	 ldr r3,[r7,#4]
 2674 000c 1B68     	 ldr r3,[r3]
 2675 000e 7A68     	 ldr r2,[r7,#4]
 2676 0010 1268     	 ldr r2,[r2]
 2677 0012 1268     	 ldr r2,[r2]
 2678 0014 22F00F02 	 bic r2,r2,#15
 2679 0018 42F00102 	 orr r2,r2,#1
 2680 001c 1A60     	 str r2,[r3]
 870:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 871:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2681              	 .loc 2 871 0
 2682 001e 7B68     	 ldr r3,[r7,#4]
 2683 0020 1B68     	 ldr r3,[r3]
 2684 0022 7A68     	 ldr r2,[r7,#4]
 2685 0024 1268     	 ldr r2,[r2]
 2686 0026 5268     	 ldr r2,[r2,#4]
 2687 0028 02F07F42 	 and r2,r2,#-16777216
 872:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 873:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2688              	 .loc 2 874 0
 2689 002c 3978     	 ldrb r1,[r7]
 873:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2690              	 .loc 2 873 0
 2691 002e 1143     	 orrs r1,r1,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2692              	 .loc 2 875 0
 2693 0030 BA78     	 ldrb r2,[r7,#2]
 2694 0032 1204     	 lsls r2,r2,#16
 2695 0034 02F47F02 	 and r2,r2,#16711680
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2696              	 .loc 2 874 0
 2697 0038 1143     	 orrs r1,r1,r2
 876:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2698              	 .loc 2 876 0
 2699 003a 7A78     	 ldrb r2,[r7,#1]
 2700 003c 1202     	 lsls r2,r2,#8
 2701 003e 92B2     	 uxth r2,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2702              	 .loc 2 875 0
 2703 0040 0A43     	 orrs r2,r2,r1
 871:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2704              	 .loc 2 871 0
 2705 0042 5A60     	 str r2,[r3,#4]
 877:../Libraries/XMCLib/src/xmc_can.c **** }
 2706              	 .loc 2 877 0
 2707 0044 0C37     	 adds r7,r7,#12
 2708              	 .cfi_def_cfa_offset 4
 2709 0046 BD46     	 mov sp,r7
 2710              	 .cfi_def_cfa_register 13
 2711              	 
 2712 0048 5DF8047B 	 ldr r7,[sp],#4
 2713              	 .cfi_restore 7
 2714              	 .cfi_def_cfa_offset 0
 2715 004c 7047     	 bx lr
 2716              	 .cfi_endproc
 2717              	.LFE259:
 2719 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2720              	 .align 2
 2721              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2722              	 .thumb
 2723              	 .thumb_func
 2725              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2726              	.LFB260:
 878:../Libraries/XMCLib/src/xmc_can.c **** 
 879:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 880:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 881:../Libraries/XMCLib/src/xmc_can.c **** {
 2727              	 .loc 2 881 0
 2728              	 .cfi_startproc
 2729              	 
 2730              	 
 2731              	 
 2732 0000 80B4     	 push {r7}
 2733              	 .cfi_def_cfa_offset 4
 2734              	 .cfi_offset 7,-4
 2735 0002 83B0     	 sub sp,sp,#12
 2736              	 .cfi_def_cfa_offset 16
 2737 0004 00AF     	 add r7,sp,#0
 2738              	 .cfi_def_cfa_register 7
 2739 0006 7860     	 str r0,[r7,#4]
 2740 0008 3960     	 str r1,[r7]
 882:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2741              	 .loc 2 882 0
 2742 000a 7B68     	 ldr r3,[r7,#4]
 2743 000c 1B68     	 ldr r3,[r3]
 2744 000e 7A68     	 ldr r2,[r7,#4]
 2745 0010 1268     	 ldr r2,[r2]
 2746 0012 1268     	 ldr r2,[r2]
 2747 0014 22F00F02 	 bic r2,r2,#15
 2748 0018 42F00302 	 orr r2,r2,#3
 2749 001c 1A60     	 str r2,[r3]
 883:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 884:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2750              	 .loc 2 884 0
 2751 001e 7B68     	 ldr r3,[r7,#4]
 2752 0020 1B68     	 ldr r3,[r3]
 2753 0022 7A68     	 ldr r2,[r7,#4]
 2754 0024 1268     	 ldr r2,[r2]
 2755 0026 5268     	 ldr r2,[r2,#4]
 2756 0028 22F47F01 	 bic r1,r2,#16711680
 885:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2757              	 .loc 2 885 0
 2758 002c BA78     	 ldrb r2,[r7,#2]
 2759 002e 1204     	 lsls r2,r2,#16
 2760 0030 02F47F02 	 and r2,r2,#16711680
 884:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2761              	 .loc 2 884 0
 2762 0034 0A43     	 orrs r2,r2,r1
 2763 0036 5A60     	 str r2,[r3,#4]
 886:../Libraries/XMCLib/src/xmc_can.c **** 
 887:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 2764              	 .loc 2 887 0
 2765 0038 7B68     	 ldr r3,[r7,#4]
 2766 003a 1B68     	 ldr r3,[r3]
 2767 003c 034A     	 ldr r2,.L130
 2768 003e DA61     	 str r2,[r3,#28]
 888:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 889:../Libraries/XMCLib/src/xmc_can.c **** }
 2769              	 .loc 2 889 0
 2770 0040 0C37     	 adds r7,r7,#12
 2771              	 .cfi_def_cfa_offset 4
 2772 0042 BD46     	 mov sp,r7
 2773              	 .cfi_def_cfa_register 13
 2774              	 
 2775 0044 5DF8047B 	 ldr r7,[sp],#4
 2776              	 .cfi_restore 7
 2777              	 .cfi_def_cfa_offset 0
 2778 0048 7047     	 bx lr
 2779              	.L131:
 2780 004a 00BF     	 .align 2
 2781              	.L130:
 2782 004c 00040002 	 .word 33555456
 2783              	 .cfi_endproc
 2784              	.LFE260:
 2786              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2787              	 .align 2
 2788              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2789              	 .thumb
 2790              	 .thumb_func
 2792              	XMC_CAN_GATEWAY_InitSourceObject:
 2793              	.LFB261:
 890:../Libraries/XMCLib/src/xmc_can.c **** 
 891:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 892:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 893:../Libraries/XMCLib/src/xmc_can.c **** {
 2794              	 .loc 2 893 0
 2795              	 .cfi_startproc
 2796              	 
 2797              	 
 2798              	 
 2799 0000 80B4     	 push {r7}
 2800              	 .cfi_def_cfa_offset 4
 2801              	 .cfi_offset 7,-4
 2802 0002 85B0     	 sub sp,sp,#20
 2803              	 .cfi_def_cfa_offset 24
 2804 0004 00AF     	 add r7,sp,#0
 2805              	 .cfi_def_cfa_register 7
 2806 0006 F860     	 str r0,[r7,#12]
 2807 0008 3B1D     	 adds r3,r7,#4
 2808 000a 83E80600 	 stmia r3,{r1,r2}
 894:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2809              	 .loc 2 894 0
 2810 000e FB68     	 ldr r3,[r7,#12]
 2811 0010 1B68     	 ldr r3,[r3]
 895:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2812              	 .loc 2 895 0
 2813 0012 FA79     	 ldrb r2,[r7,#7]
 2814 0014 1202     	 lsls r2,r2,#8
 2815 0016 02F48071 	 and r1,r2,#256
 896:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2816              	 .loc 2 896 0
 2817 001a 7A7A     	 ldrb r2,[r7,#9]
 2818 001c 9202     	 lsls r2,r2,#10
 2819 001e 02F48062 	 and r2,r2,#1024
 895:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2820              	 .loc 2 895 0
 2821 0022 1143     	 orrs r1,r1,r2
 897:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2822              	 .loc 2 897 0
 2823 0024 3A7A     	 ldrb r2,[r7,#8]
 2824 0026 5202     	 lsls r2,r2,#9
 2825 0028 02F40072 	 and r2,r2,#512
 896:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2826              	 .loc 2 896 0
 2827 002c 1143     	 orrs r1,r1,r2
 898:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2828              	 .loc 2 898 0
 2829 002e BA7A     	 ldrb r2,[r7,#10]
 2830 0030 D202     	 lsls r2,r2,#11
 2831 0032 02F40062 	 and r2,r2,#2048
 897:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2832              	 .loc 2 897 0
 2833 0036 0A43     	 orrs r2,r2,r1
 2834 0038 42F00402 	 orr r2,r2,#4
 894:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2835              	 .loc 2 894 0
 2836 003c 1A60     	 str r2,[r3]
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2837              	 .loc 2 899 0
 2838 003e FB68     	 ldr r3,[r7,#12]
 2839 0040 1B68     	 ldr r3,[r3]
 2840 0042 3A79     	 ldrb r2,[r7,#4]
 2841 0044 1146     	 mov r1,r2
 900:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2842              	 .loc 2 900 0
 2843 0046 BA79     	 ldrb r2,[r7,#6]
 2844 0048 1204     	 lsls r2,r2,#16
 2845 004a 02F47F02 	 and r2,r2,#16711680
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2846              	 .loc 2 899 0
 2847 004e 1143     	 orrs r1,r1,r2
 901:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2848              	 .loc 2 901 0
 2849 0050 7A79     	 ldrb r2,[r7,#5]
 2850 0052 1202     	 lsls r2,r2,#8
 2851 0054 92B2     	 uxth r2,r2
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2852              	 .loc 2 899 0
 2853 0056 0A43     	 orrs r2,r2,r1
 2854 0058 5A60     	 str r2,[r3,#4]
 902:../Libraries/XMCLib/src/xmc_can.c **** }
 2855              	 .loc 2 902 0
 2856 005a 1437     	 adds r7,r7,#20
 2857              	 .cfi_def_cfa_offset 4
 2858 005c BD46     	 mov sp,r7
 2859              	 .cfi_def_cfa_register 13
 2860              	 
 2861 005e 5DF8047B 	 ldr r7,[sp],#4
 2862              	 .cfi_restore 7
 2863              	 .cfi_def_cfa_offset 0
 2864 0062 7047     	 bx lr
 2865              	 .cfi_endproc
 2866              	.LFE261:
 2868              	 .text
 2869              	.Letext0:
 2870              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2871              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2872              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2873              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 2874              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 2875              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 2876              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:64     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:68     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:122    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:126    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:161    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:165    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:200    .text.max:00000000 $t
    {standard input}:204    .text.max:00000000 max
    {standard input}:242    .text.min:00000000 $t
    {standard input}:246    .text.min:00000000 min
    {standard input}:283    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:288    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:504    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000148 $d
    {standard input}:509    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:514    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:812    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:817    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:822    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:871    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:876    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:908    .text.XMC_CAN_Disable:0000001c $d
    {standard input}:913    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:918    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:961    .text.XMC_CAN_Enable:00000030 $d
    {standard input}:966    .text.XMC_CAN_Init:00000000 $t
    {standard input}:971    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1105   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1110   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1141   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1146   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:1178   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:1183   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1215   .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:1220   .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1298   .text.XMC_CAN_GetClockFrequency:00000000 $t
    {standard input}:1303   .text.XMC_CAN_GetClockFrequency:00000000 XMC_CAN_GetClockFrequency
    {standard input}:1342   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1347   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1421   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1426   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1481   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1486   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1548   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1553   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1633   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1638   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1841   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1830   .text.XMC_CAN_MO_Config:00000130 $d
    {standard input}:1836   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1926   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:1931   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1936   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:2012   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:2017   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:2129   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:2134   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2370   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:2375   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2380   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2431   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2436   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2489   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2494   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2582   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2587   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2651   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2656   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2720   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2725   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2782   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:2787   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2792   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
