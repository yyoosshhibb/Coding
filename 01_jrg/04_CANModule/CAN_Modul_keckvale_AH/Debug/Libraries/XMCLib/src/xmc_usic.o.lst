   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usic.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  25              	.LFB151:
  26              	 .file 1 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1014 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	 .cfi_def_cfa_offset 16
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 0B46     	 mov r3,r1
  41 000a FB70     	 strb r3,[r7,#3]
  42 000c 1346     	 mov r3,r2
  43 000e BB70     	 strb r3,[r7,#2]
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  44              	 .loc 1 1015 0
  45 0010 F878     	 ldrb r0,[r7,#3]
  46 0012 FB78     	 ldrb r3,[r7,#3]
  47 0014 7A68     	 ldr r2,[r7,#4]
  48 0016 0633     	 adds r3,r3,#6
  49 0018 9B00     	 lsls r3,r3,#2
  50 001a 1344     	 add r3,r3,r2
  51 001c 5B68     	 ldr r3,[r3,#4]
  52 001e 23F44062 	 bic r2,r3,#3072
1016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  53              	 .loc 1 1016 0
  54 0022 BB78     	 ldrb r3,[r7,#2]
  55 0024 9B02     	 lsls r3,r3,#10
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  56              	 .loc 1 1015 0
  57 0026 1A43     	 orrs r2,r2,r3
  58 0028 7968     	 ldr r1,[r7,#4]
  59 002a 831D     	 adds r3,r0,#6
  60 002c 9B00     	 lsls r3,r3,#2
  61 002e 0B44     	 add r3,r3,r1
  62 0030 5A60     	 str r2,[r3,#4]
1017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
  63              	 .loc 1 1017 0
  64 0032 0C37     	 adds r7,r7,#12
  65              	 .cfi_def_cfa_offset 4
  66 0034 BD46     	 mov sp,r7
  67              	 .cfi_def_cfa_register 13
  68              	 
  69 0036 5DF8047B 	 ldr r7,[sp],#4
  70              	 .cfi_restore 7
  71              	 .cfi_def_cfa_offset 0
  72 003a 7047     	 bx lr
  73              	 .cfi_endproc
  74              	.LFE151:
  76              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  77              	 .align 2
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_USIC_CH_SetBRGInputClockSource:
  82              	.LFB152:
1018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** {
  83              	 .loc 1 1032 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  88 0000 80B4     	 push {r7}
  89              	 .cfi_def_cfa_offset 4
  90              	 .cfi_offset 7,-4
  91 0002 83B0     	 sub sp,sp,#12
  92              	 .cfi_def_cfa_offset 16
  93 0004 00AF     	 add r7,sp,#0
  94              	 .cfi_def_cfa_register 7
  95 0006 7860     	 str r0,[r7,#4]
  96 0008 0B46     	 mov r3,r1
  97 000a FB70     	 strb r3,[r7,#3]
1033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
  98              	 .loc 1 1033 0
  99 000c 7B68     	 ldr r3,[r7,#4]
 100 000e 5B69     	 ldr r3,[r3,#20]
 101 0010 23F00302 	 bic r2,r3,#3
 102 0014 FB78     	 ldrb r3,[r7,#3]
 103 0016 1A43     	 orrs r2,r2,r3
 104 0018 7B68     	 ldr r3,[r7,#4]
 105 001a 5A61     	 str r2,[r3,#20]
1034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_usic.h **** }
 106              	 .loc 1 1034 0
 107 001c 0C37     	 adds r7,r7,#12
 108              	 .cfi_def_cfa_offset 4
 109 001e BD46     	 mov sp,r7
 110              	 .cfi_def_cfa_register 13
 111              	 
 112 0020 5DF8047B 	 ldr r7,[sp],#4
 113              	 .cfi_restore 7
 114              	 .cfi_def_cfa_offset 0
 115 0024 7047     	 bx lr
 116              	 .cfi_endproc
 117              	.LFE152:
 119 0026 00BF     	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 120              	 .align 2
 121              	 .global XMC_USIC_CH_Enable
 122              	 .thumb
 123              	 .thumb_func
 125              	XMC_USIC_CH_Enable:
 126              	.LFB236:
 127              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-07-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  69:../Libraries/XMCLib/src/xmc_usic.c ****  *
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  */
  73:../Libraries/XMCLib/src/xmc_usic.c **** 
  74:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  79:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  80:../Libraries/XMCLib/src/xmc_usic.c **** 
  81:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  85:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_usic.c **** 
  87:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  94:../Libraries/XMCLib/src/xmc_usic.c **** {
 128              	 .loc 2 94 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132 0000 80B5     	 push {r7,lr}
 133              	 .cfi_def_cfa_offset 8
 134              	 .cfi_offset 7,-8
 135              	 .cfi_offset 14,-4
 136 0002 82B0     	 sub sp,sp,#8
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
  95:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  96:../Libraries/XMCLib/src/xmc_usic.c **** 
  97:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 141              	 .loc 2 97 0
 142 0008 7B68     	 ldr r3,[r7,#4]
 143 000a 1A4A     	 ldr r2,.L11
 144 000c 9342     	 cmp r3,r2
 145 000e 03D0     	 beq .L4
 146              	 .loc 2 97 0 is_stmt 0 discriminator 1
 147 0010 7B68     	 ldr r3,[r7,#4]
 148 0012 194A     	 ldr r2,.L11+4
 149 0014 9342     	 cmp r3,r2
 150 0016 03D1     	 bne .L5
 151              	.L4:
  98:../Libraries/XMCLib/src/xmc_usic.c ****   {
  99:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 152              	 .loc 2 99 0 is_stmt 1
 153 0018 1848     	 ldr r0,.L11+8
 154 001a FFF7FEFF 	 bl XMC_USIC_Enable
 155 001e 16E0     	 b .L6
 156              	.L5:
 100:../Libraries/XMCLib/src/xmc_usic.c ****   }
 101:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 102:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 157              	 .loc 2 102 0
 158 0020 7B68     	 ldr r3,[r7,#4]
 159 0022 174A     	 ldr r2,.L11+12
 160 0024 9342     	 cmp r3,r2
 161 0026 03D0     	 beq .L7
 162              	 .loc 2 102 0 is_stmt 0 discriminator 1
 163 0028 7B68     	 ldr r3,[r7,#4]
 164 002a 164A     	 ldr r2,.L11+16
 165 002c 9342     	 cmp r3,r2
 166 002e 03D1     	 bne .L8
 167              	.L7:
 103:../Libraries/XMCLib/src/xmc_usic.c ****   {
 104:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 168              	 .loc 2 104 0 is_stmt 1
 169 0030 1548     	 ldr r0,.L11+20
 170 0032 FFF7FEFF 	 bl XMC_USIC_Enable
 171 0036 0AE0     	 b .L6
 172              	.L8:
 105:../Libraries/XMCLib/src/xmc_usic.c ****   }
 106:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 107:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 108:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 173              	 .loc 2 108 0
 174 0038 7B68     	 ldr r3,[r7,#4]
 175 003a 144A     	 ldr r2,.L11+24
 176 003c 9342     	 cmp r3,r2
 177 003e 03D0     	 beq .L9
 178              	 .loc 2 108 0 is_stmt 0 discriminator 1
 179 0040 7B68     	 ldr r3,[r7,#4]
 180 0042 134A     	 ldr r2,.L11+28
 181 0044 9342     	 cmp r3,r2
 182 0046 02D1     	 bne .L6
 183              	.L9:
 109:../Libraries/XMCLib/src/xmc_usic.c ****   {
 110:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 184              	 .loc 2 110 0 is_stmt 1
 185 0048 1248     	 ldr r0,.L11+32
 186 004a FFF7FEFF 	 bl XMC_USIC_Enable
 187              	.L6:
 111:../Libraries/XMCLib/src/xmc_usic.c ****   }
 112:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 113:../Libraries/XMCLib/src/xmc_usic.c ****   else
 114:../Libraries/XMCLib/src/xmc_usic.c ****   {
 115:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 116:../Libraries/XMCLib/src/xmc_usic.c ****   }
 117:../Libraries/XMCLib/src/xmc_usic.c **** 
 118:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 119:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 188              	 .loc 2 119 0
 189 004e 7B68     	 ldr r3,[r7,#4]
 190 0050 0322     	 movs r2,#3
 191 0052 DA60     	 str r2,[r3,#12]
 120:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 192              	 .loc 2 120 0
 193 0054 00BF     	 nop
 194              	.L10:
 195              	 .loc 2 120 0 is_stmt 0 discriminator 1
 196 0056 7B68     	 ldr r3,[r7,#4]
 197 0058 DB68     	 ldr r3,[r3,#12]
 198 005a 03F00103 	 and r3,r3,#1
 199 005e 002B     	 cmp r3,#0
 200 0060 F9D0     	 beq .L10
 121:../Libraries/XMCLib/src/xmc_usic.c ****   {
 122:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   }
 124:../Libraries/XMCLib/src/xmc_usic.c **** 
 125:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 126:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 201              	 .loc 2 126 0 is_stmt 1
 202 0062 7B68     	 ldr r3,[r7,#4]
 203 0064 1B6C     	 ldr r3,[r3,#64]
 204 0066 23F00F02 	 bic r2,r3,#15
 205 006a 7B68     	 ldr r3,[r7,#4]
 206 006c 1A64     	 str r2,[r3,#64]
 127:../Libraries/XMCLib/src/xmc_usic.c **** }
 207              	 .loc 2 127 0
 208 006e 0837     	 adds r7,r7,#8
 209              	 .cfi_def_cfa_offset 8
 210 0070 BD46     	 mov sp,r7
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 0072 80BD     	 pop {r7,pc}
 214              	.L12:
 215              	 .align 2
 216              	.L11:
 217 0074 00000340 	 .word 1073938432
 218 0078 00020340 	 .word 1073938944
 219 007c 08000340 	 .word 1073938440
 220 0080 00000248 	 .word 1208090624
 221 0084 00020248 	 .word 1208091136
 222 0088 08000248 	 .word 1208090632
 223 008c 00400248 	 .word 1208107008
 224 0090 00420248 	 .word 1208107520
 225 0094 08400248 	 .word 1208107016
 226              	 .cfi_endproc
 227              	.LFE236:
 229              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 230              	 .align 2
 231              	 .global XMC_USIC_CH_Disable
 232              	 .thumb
 233              	 .thumb_func
 235              	XMC_USIC_CH_Disable:
 236              	.LFB237:
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 130:../Libraries/XMCLib/src/xmc_usic.c **** {
 237              	 .loc 2 130 0
 238              	 .cfi_startproc
 239              	 
 240              	 
 241              	 
 242 0000 80B4     	 push {r7}
 243              	 .cfi_def_cfa_offset 4
 244              	 .cfi_offset 7,-4
 245 0002 83B0     	 sub sp,sp,#12
 246              	 .cfi_def_cfa_offset 16
 247 0004 00AF     	 add r7,sp,#0
 248              	 .cfi_def_cfa_register 7
 249 0006 7860     	 str r0,[r7,#4]
 131:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 250              	 .loc 2 131 0
 251 0008 7B68     	 ldr r3,[r7,#4]
 252 000a DB68     	 ldr r3,[r3,#12]
 253 000c 23F00303 	 bic r3,r3,#3
 254 0010 43F00202 	 orr r2,r3,#2
 255 0014 7B68     	 ldr r3,[r7,#4]
 256 0016 DA60     	 str r2,[r3,#12]
 132:../Libraries/XMCLib/src/xmc_usic.c **** }
 257              	 .loc 2 132 0
 258 0018 0C37     	 adds r7,r7,#12
 259              	 .cfi_def_cfa_offset 4
 260 001a BD46     	 mov sp,r7
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 001c 5DF8047B 	 ldr r7,[sp],#4
 264              	 .cfi_restore 7
 265              	 .cfi_def_cfa_offset 0
 266 0020 7047     	 bx lr
 267              	 .cfi_endproc
 268              	.LFE237:
 270 0022 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 271              	 .align 2
 272              	 .global XMC_USIC_CH_SetBaudrate
 273              	 .thumb
 274              	 .thumb_func
 276              	XMC_USIC_CH_SetBaudrate:
 277              	.LFB238:
 133:../Libraries/XMCLib/src/xmc_usic.c **** 
 134:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_usic.c **** {
 278              	 .loc 2 135 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282 0000 80B5     	 push {r7,lr}
 283              	 .cfi_def_cfa_offset 8
 284              	 .cfi_offset 7,-8
 285              	 .cfi_offset 14,-4
 286 0002 8EB0     	 sub sp,sp,#56
 287              	 .cfi_def_cfa_offset 64
 288 0004 00AF     	 add r7,sp,#0
 289              	 .cfi_def_cfa_register 7
 290 0006 F860     	 str r0,[r7,#12]
 291 0008 B960     	 str r1,[r7,#8]
 292 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_usic.c ****   
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 139:../Libraries/XMCLib/src/xmc_usic.c ****   
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 142:../Libraries/XMCLib/src/xmc_usic.c **** 
 143:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 146:../Libraries/XMCLib/src/xmc_usic.c ****   
 147:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 148:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 149:../Libraries/XMCLib/src/xmc_usic.c **** 
 150:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 151:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 293              	 .loc 2 151 0
 294 000c BB68     	 ldr r3,[r7,#8]
 295 000e 632B     	 cmp r3,#99
 296 0010 58D9     	 bls .L15
 297              	 .loc 2 151 0 is_stmt 0 discriminator 1
 298 0012 7B68     	 ldr r3,[r7,#4]
 299 0014 002B     	 cmp r3,#0
 300 0016 55D0     	 beq .L15
 152:../Libraries/XMCLib/src/xmc_usic.c ****   {
 153:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 301              	 .loc 2 153 0 is_stmt 1
 302 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 303 001c 0246     	 mov r2,r0
 304 001e 2E4B     	 ldr r3,.L21
 305 0020 A3FB0223 	 umull r2,r3,r3,r2
 306 0024 5B09     	 lsrs r3,r3,#5
 307 0026 3B62     	 str r3,[r7,#32]
 154:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 308              	 .loc 2 154 0
 309 0028 BB68     	 ldr r3,[r7,#8]
 310 002a 2B4A     	 ldr r2,.L21
 311 002c A2FB0323 	 umull r2,r3,r2,r3
 312 0030 5B09     	 lsrs r3,r3,#5
 313 0032 BB60     	 str r3,[r7,#8]
 155:../Libraries/XMCLib/src/xmc_usic.c **** 
 156:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 314              	 .loc 2 156 0
 315 0034 0123     	 movs r3,#1
 316 0036 FB62     	 str r3,[r7,#44]
 157:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 317              	 .loc 2 157 0
 318 0038 0123     	 movs r3,#1
 319 003a BB62     	 str r3,[r7,#40]
 158:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 320              	 .loc 2 158 0
 321 003c 40F2FF33 	 movw r3,#1023
 322 0040 7B62     	 str r3,[r7,#36]
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 323              	 .loc 2 160 0
 324 0042 40F2FF33 	 movw r3,#1023
 325 0046 3B63     	 str r3,[r7,#48]
 326 0048 22E0     	 b .L16
 327              	.L18:
 161:../Libraries/XMCLib/src/xmc_usic.c ****     {
 162:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 328              	 .loc 2 162 0
 329 004a 3B6A     	 ldr r3,[r7,#32]
 330 004c 3A6B     	 ldr r2,[r7,#48]
 331 004e 02FB03F2 	 mul r2,r2,r3
 332 0052 BB68     	 ldr r3,[r7,#8]
 333 0054 7968     	 ldr r1,[r7,#4]
 334 0056 01FB03F3 	 mul r3,r1,r3
 335 005a B2FBF3F3 	 udiv r3,r2,r3
 336 005e FB61     	 str r3,[r7,#28]
 163:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 337              	 .loc 2 163 0
 338 0060 FB69     	 ldr r3,[r7,#28]
 339 0062 9B0A     	 lsrs r3,r3,#10
 340 0064 BB61     	 str r3,[r7,#24]
 164:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 341              	 .loc 2 164 0
 342 0066 FB69     	 ldr r3,[r7,#28]
 343 0068 C3F30903 	 ubfx r3,r3,#0,#10
 344 006c 7B61     	 str r3,[r7,#20]
 165:../Libraries/XMCLib/src/xmc_usic.c **** 
 166:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 345              	 .loc 2 166 0
 346 006e BB69     	 ldr r3,[r7,#24]
 347 0070 B3F5806F 	 cmp r3,#1024
 348 0074 09D2     	 bcs .L17
 349              	 .loc 2 166 0 is_stmt 0 discriminator 1
 350 0076 7A69     	 ldr r2,[r7,#20]
 351 0078 7B6A     	 ldr r3,[r7,#36]
 352 007a 9A42     	 cmp r2,r3
 353 007c 05D2     	 bcs .L17
 167:../Libraries/XMCLib/src/xmc_usic.c ****       {
 168:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 354              	 .loc 2 168 0 is_stmt 1
 355 007e 7B69     	 ldr r3,[r7,#20]
 356 0080 7B62     	 str r3,[r7,#36]
 169:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 357              	 .loc 2 169 0
 358 0082 BB69     	 ldr r3,[r7,#24]
 359 0084 BB62     	 str r3,[r7,#40]
 170:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 360              	 .loc 2 170 0
 361 0086 3B6B     	 ldr r3,[r7,#48]
 362 0088 FB62     	 str r3,[r7,#44]
 363              	.L17:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 364              	 .loc 2 160 0 discriminator 2
 365 008a 3B6B     	 ldr r3,[r7,#48]
 366 008c 013B     	 subs r3,r3,#1
 367 008e 3B63     	 str r3,[r7,#48]
 368              	.L16:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 369              	 .loc 2 160 0 is_stmt 0 discriminator 1
 370 0090 3B6B     	 ldr r3,[r7,#48]
 371 0092 002B     	 cmp r3,#0
 372 0094 D9D1     	 bne .L18
 171:../Libraries/XMCLib/src/xmc_usic.c ****       }
 172:../Libraries/XMCLib/src/xmc_usic.c ****     }
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 373              	 .loc 2 174 0 is_stmt 1
 374 0096 FB6A     	 ldr r3,[r7,#44]
 375 0098 43F40042 	 orr r2,r3,#32768
 376 009c FB68     	 ldr r3,[r7,#12]
 377 009e 1A61     	 str r2,[r3,#16]
 175:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 176:../Libraries/XMCLib/src/xmc_usic.c **** 
 177:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 378              	 .loc 2 177 0
 379 00a0 FB68     	 ldr r3,[r7,#12]
 380 00a2 5A69     	 ldr r2,[r3,#20]
 381 00a4 0D4B     	 ldr r3,.L21+4
 382 00a6 1340     	 ands r3,r3,r2
 178:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 179:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 180:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 383              	 .loc 2 181 0
 384 00a8 7A68     	 ldr r2,[r7,#4]
 385 00aa 013A     	 subs r2,r2,#1
 386 00ac 9202     	 lsls r2,r2,#10
 180:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 387              	 .loc 2 180 0
 388 00ae 1A43     	 orrs r2,r2,r3
 182:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 389              	 .loc 2 182 0
 390 00b0 BB6A     	 ldr r3,[r7,#40]
 391 00b2 013B     	 subs r3,r3,#1
 392 00b4 1B04     	 lsls r3,r3,#16
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 393              	 .loc 2 181 0
 394 00b6 1A43     	 orrs r2,r2,r3
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 395              	 .loc 2 177 0
 396 00b8 FB68     	 ldr r3,[r7,#12]
 397 00ba 5A61     	 str r2,[r3,#20]
 183:../Libraries/XMCLib/src/xmc_usic.c ****                     
 184:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 398              	 .loc 2 184 0
 399 00bc 0023     	 movs r3,#0
 400 00be 87F83730 	 strb r3,[r7,#55]
 401 00c2 02E0     	 b .L19
 402              	.L15:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   }
 186:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 187:../Libraries/XMCLib/src/xmc_usic.c ****   {
 188:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 403              	 .loc 2 188 0
 404 00c4 0123     	 movs r3,#1
 405 00c6 87F83730 	 strb r3,[r7,#55]
 406              	.L19:
 189:../Libraries/XMCLib/src/xmc_usic.c ****   }
 190:../Libraries/XMCLib/src/xmc_usic.c ****   
 191:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 407              	 .loc 2 191 0
 408 00ca 97F83730 	 ldrb r3,[r7,#55]
 192:../Libraries/XMCLib/src/xmc_usic.c **** }
 409              	 .loc 2 192 0
 410 00ce 1846     	 mov r0,r3
 411 00d0 3837     	 adds r7,r7,#56
 412              	 .cfi_def_cfa_offset 8
 413 00d2 BD46     	 mov sp,r7
 414              	 .cfi_def_cfa_register 13
 415              	 
 416 00d4 80BD     	 pop {r7,pc}
 417              	.L22:
 418 00d6 00BF     	 .align 2
 419              	.L21:
 420 00d8 1F85EB51 	 .word 1374389535
 421 00dc EF8000FC 	 .word -67075857
 422              	 .cfi_endproc
 423              	.LFE238:
 425              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 426              	 .align 2
 427              	 .global XMC_USIC_CH_SetBaudrateEx
 428              	 .thumb
 429              	 .thumb_func
 431              	XMC_USIC_CH_SetBaudrateEx:
 432              	.LFB239:
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 195:../Libraries/XMCLib/src/xmc_usic.c **** {
 433              	 .loc 2 195 0
 434              	 .cfi_startproc
 435              	 
 436              	 
 437 0000 80B5     	 push {r7,lr}
 438              	 .cfi_def_cfa_offset 8
 439              	 .cfi_offset 7,-8
 440              	 .cfi_offset 14,-4
 441 0002 8CB0     	 sub sp,sp,#48
 442              	 .cfi_def_cfa_offset 56
 443 0004 00AF     	 add r7,sp,#0
 444              	 .cfi_def_cfa_register 7
 445 0006 F860     	 str r0,[r7,#12]
 446 0008 B960     	 str r1,[r7,#8]
 447 000a 7A60     	 str r2,[r7,#4]
 196:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 448              	 .loc 2 196 0
 449 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 450 0010 0346     	 mov r3,r0
 451 0012 3B62     	 str r3,[r7,#32]
 197:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 452              	 .loc 2 197 0
 453 0014 BB68     	 ldr r3,[r7,#8]
 454 0016 7A68     	 ldr r2,[r7,#4]
 455 0018 02FB03F3 	 mul r3,r2,r3
 456 001c FB61     	 str r3,[r7,#28]
 198:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 200:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 457              	 .loc 2 200 0
 458 001e 0123     	 movs r3,#1
 459 0020 FB62     	 str r3,[r7,#44]
 201:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 202:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 203:../Libraries/XMCLib/src/xmc_usic.c **** 
 204:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 460              	 .loc 2 204 0
 461 0022 3A6A     	 ldr r2,[r7,#32]
 462 0024 FB69     	 ldr r3,[r7,#28]
 463 0026 9A42     	 cmp r2,r3
 464 0028 5FDD     	 ble .L24
 205:../Libraries/XMCLib/src/xmc_usic.c ****   {
 206:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 465              	 .loc 2 206 0
 466 002a 3A6A     	 ldr r2,[r7,#32]
 467 002c FB69     	 ldr r3,[r7,#28]
 468 002e 92FBF3F3 	 sdiv r3,r2,r3
 469 0032 BB62     	 str r3,[r7,#40]
 207:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 470              	 .loc 2 207 0
 471 0034 10E0     	 b .L25
 472              	.L26:
 208:../Libraries/XMCLib/src/xmc_usic.c ****     {
 209:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 473              	 .loc 2 209 0
 474 0036 FB6A     	 ldr r3,[r7,#44]
 475 0038 0133     	 adds r3,r3,#1
 476 003a FB62     	 str r3,[r7,#44]
 210:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 477              	 .loc 2 210 0
 478 003c BB68     	 ldr r3,[r7,#8]
 479 003e 7A68     	 ldr r2,[r7,#4]
 480 0040 02FB03F3 	 mul r3,r2,r3
 481 0044 1A46     	 mov r2,r3
 482 0046 FB6A     	 ldr r3,[r7,#44]
 483 0048 03FB02F3 	 mul r3,r3,r2
 484 004c FB61     	 str r3,[r7,#28]
 211:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 485              	 .loc 2 211 0
 486 004e 3A6A     	 ldr r2,[r7,#32]
 487 0050 FB69     	 ldr r3,[r7,#28]
 488 0052 92FBF3F3 	 sdiv r3,r2,r3
 489 0056 BB62     	 str r3,[r7,#40]
 490              	.L25:
 207:../Libraries/XMCLib/src/xmc_usic.c ****     {
 491              	 .loc 2 207 0
 492 0058 BB6A     	 ldr r3,[r7,#40]
 493 005a 40F2FE32 	 movw r2,#1022
 494 005e 9342     	 cmp r3,r2
 495 0060 E9D8     	 bhi .L26
 212:../Libraries/XMCLib/src/xmc_usic.c ****     }
 213:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 496              	 .loc 2 213 0
 497 0062 3A6A     	 ldr r2,[r7,#32]
 498 0064 7B68     	 ldr r3,[r7,#4]
 499 0066 B96A     	 ldr r1,[r7,#40]
 500 0068 01FB03F3 	 mul r3,r1,r3
 501 006c F96A     	 ldr r1,[r7,#44]
 502 006e 01FB03F3 	 mul r3,r1,r3
 503 0072 B2FBF3F3 	 udiv r3,r2,r3
 504 0076 BB61     	 str r3,[r7,#24]
 214:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 505              	 .loc 2 214 0
 506 0078 3A6A     	 ldr r2,[r7,#32]
 507 007a BB6A     	 ldr r3,[r7,#40]
 508 007c 0133     	 adds r3,r3,#1
 509 007e 7968     	 ldr r1,[r7,#4]
 510 0080 01FB03F3 	 mul r3,r1,r3
 511 0084 F96A     	 ldr r1,[r7,#44]
 512 0086 01FB03F3 	 mul r3,r1,r3
 513 008a B2FBF3F3 	 udiv r3,r2,r3
 514 008e 7B61     	 str r3,[r7,#20]
 215:../Libraries/XMCLib/src/xmc_usic.c **** 
 216:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 217:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 515              	 .loc 2 217 0
 516 0090 BA68     	 ldr r2,[r7,#8]
 517 0092 7B69     	 ldr r3,[r7,#20]
 518 0094 D31A     	 subs r3,r2,r3
 519 0096 83EAE372 	 eor r2,r3,r3,asr#31
 520 009a A2EBE372 	 sub r2,r2,r3,asr#31
 521 009e B968     	 ldr r1,[r7,#8]
 522 00a0 BB69     	 ldr r3,[r7,#24]
 523 00a2 CB1A     	 subs r3,r1,r3
 524 00a4 002B     	 cmp r3,#0
 525 00a6 B8BF     	 it lt
 526 00a8 5B42     	 rsblt r3,r3,#0
 527 00aa 9A42     	 cmp r2,r3
 528 00ac 02DA     	 bge .L27
 218:../Libraries/XMCLib/src/xmc_usic.c ****     {
 219:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 529              	 .loc 2 219 0
 530 00ae BB6A     	 ldr r3,[r7,#40]
 531 00b0 0133     	 adds r3,r3,#1
 532 00b2 BB62     	 str r3,[r7,#40]
 533              	.L27:
 220:../Libraries/XMCLib/src/xmc_usic.c ****     }
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 534              	 .loc 2 222 0
 535 00b4 BB6A     	 ldr r3,[r7,#40]
 536 00b6 C3F58063 	 rsb r3,r3,#1024
 537 00ba BB62     	 str r3,[r7,#40]
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 538              	 .loc 2 225 0
 539 00bc BB6A     	 ldr r3,[r7,#40]
 540 00be 43F48042 	 orr r2,r3,#16384
 541 00c2 FB68     	 ldr r3,[r7,#12]
 542 00c4 1A61     	 str r2,[r3,#16]
 226:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 227:../Libraries/XMCLib/src/xmc_usic.c **** 
 228:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 543              	 .loc 2 228 0
 544 00c6 FB68     	 ldr r3,[r7,#12]
 545 00c8 5A69     	 ldr r2,[r3,#20]
 546 00ca 0C4B     	 ldr r3,.L30
 547 00cc 1340     	 ands r3,r3,r2
 229:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 230:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 231:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 232:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 548              	 .loc 2 232 0
 549 00ce 7A68     	 ldr r2,[r7,#4]
 550 00d0 013A     	 subs r2,r2,#1
 551 00d2 9202     	 lsls r2,r2,#10
 231:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 552              	 .loc 2 231 0
 553 00d4 1A43     	 orrs r2,r2,r3
 233:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 554              	 .loc 2 233 0
 555 00d6 FB6A     	 ldr r3,[r7,#44]
 556 00d8 013B     	 subs r3,r3,#1
 557 00da 1B04     	 lsls r3,r3,#16
 232:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 558              	 .loc 2 232 0
 559 00dc 1A43     	 orrs r2,r2,r3
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 560              	 .loc 2 228 0
 561 00de FB68     	 ldr r3,[r7,#12]
 562 00e0 5A61     	 str r2,[r3,#20]
 234:../Libraries/XMCLib/src/xmc_usic.c **** 
 235:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 563              	 .loc 2 235 0
 564 00e2 0023     	 movs r3,#0
 565 00e4 87F82730 	 strb r3,[r7,#39]
 566 00e8 02E0     	 b .L28
 567              	.L24:
 236:../Libraries/XMCLib/src/xmc_usic.c ****   }
 237:../Libraries/XMCLib/src/xmc_usic.c ****   else
 238:../Libraries/XMCLib/src/xmc_usic.c ****   {
 239:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 568              	 .loc 2 239 0
 569 00ea 0123     	 movs r3,#1
 570 00ec 87F82730 	 strb r3,[r7,#39]
 571              	.L28:
 240:../Libraries/XMCLib/src/xmc_usic.c ****   }
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 572              	 .loc 2 242 0
 573 00f0 97F82730 	 ldrb r3,[r7,#39]
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 574              	 .loc 2 243 0
 575 00f4 1846     	 mov r0,r3
 576 00f6 3037     	 adds r7,r7,#48
 577              	 .cfi_def_cfa_offset 8
 578 00f8 BD46     	 mov sp,r7
 579              	 .cfi_def_cfa_register 13
 580              	 
 581 00fa 80BD     	 pop {r7,pc}
 582              	.L31:
 583              	 .align 2
 584              	.L30:
 585 00fc EF8000FC 	 .word -67075857
 586              	 .cfi_endproc
 587              	.LFE239:
 589              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 590              	 .align 2
 591              	 .global XMC_USIC_CH_GetBaudrate
 592              	 .thumb
 593              	 .thumb_func
 595              	XMC_USIC_CH_GetBaudrate:
 596              	.LFB240:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 246:../Libraries/XMCLib/src/xmc_usic.c **** {
 597              	 .loc 2 246 0
 598              	 .cfi_startproc
 599              	 
 600              	 
 601 0000 80B5     	 push {r7,lr}
 602              	 .cfi_def_cfa_offset 8
 603              	 .cfi_offset 7,-8
 604              	 .cfi_offset 14,-4
 605 0002 86B0     	 sub sp,sp,#24
 606              	 .cfi_def_cfa_offset 32
 607 0004 00AF     	 add r7,sp,#0
 608              	 .cfi_def_cfa_register 7
 609 0006 7860     	 str r0,[r7,#4]
 247:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 248:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 610              	 .loc 2 248 0
 611 0008 7B68     	 ldr r3,[r7,#4]
 612 000a 5B69     	 ldr r3,[r3,#20]
 613 000c 03F0C003 	 and r3,r3,#192
 614 0010 C02B     	 cmp r3,#192
 615 0012 02D1     	 bne .L33
 249:../Libraries/XMCLib/src/xmc_usic.c ****   {
 250:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 251:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 616              	 .loc 2 251 0
 617 0014 0223     	 movs r3,#2
 618 0016 7B61     	 str r3,[r7,#20]
 619 0018 22E0     	 b .L34
 620              	.L33:
 252:../Libraries/XMCLib/src/xmc_usic.c ****   }
 253:../Libraries/XMCLib/src/xmc_usic.c ****   else
 254:../Libraries/XMCLib/src/xmc_usic.c ****   {
 255:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 256:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 621              	 .loc 2 256 0
 622 001a 7B68     	 ldr r3,[r7,#4]
 623 001c 5B69     	 ldr r3,[r3,#20]
 624 001e 03F01003 	 and r3,r3,#16
 625 0022 002B     	 cmp r3,#0
 626 0024 01D0     	 beq .L35
 627              	 .loc 2 256 0 is_stmt 0 discriminator 1
 628 0026 0223     	 movs r3,#2
 629 0028 00E0     	 b .L36
 630              	.L35:
 631              	 .loc 2 256 0 discriminator 2
 632 002a 0123     	 movs r3,#1
 633              	.L36:
 634              	 .loc 2 256 0 discriminator 4
 635 002c 7B61     	 str r3,[r7,#20]
 257:../Libraries/XMCLib/src/xmc_usic.c ****   
 258:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 636              	 .loc 2 258 0 is_stmt 1 discriminator 4
 637 002e 7B68     	 ldr r3,[r7,#4]
 638 0030 5B69     	 ldr r3,[r3,#20]
 639 0032 03F04003 	 and r3,r3,#64
 640 0036 002B     	 cmp r3,#0
 641 0038 12D1     	 bne .L34
 259:../Libraries/XMCLib/src/xmc_usic.c ****     {
 260:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 261:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 642              	 .loc 2 261 0
 643 003a 7B68     	 ldr r3,[r7,#4]
 644 003c 5A69     	 ldr r2,[r3,#20]
 645 003e 384B     	 ldr r3,.L40
 646 0040 1340     	 ands r3,r3,r2
 647 0042 1B0C     	 lsrs r3,r3,#16
 648 0044 5A1C     	 adds r2,r3,#1
 649 0046 7B69     	 ldr r3,[r7,#20]
 650 0048 02FB03F3 	 mul r3,r2,r3
 651 004c 7B61     	 str r3,[r7,#20]
 262:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 652              	 .loc 2 262 0
 653 004e 7B68     	 ldr r3,[r7,#4]
 654 0050 5B69     	 ldr r3,[r3,#20]
 655 0052 03F08003 	 and r3,r3,#128
 656 0056 002B     	 cmp r3,#0
 657 0058 02D0     	 beq .L34
 263:../Libraries/XMCLib/src/xmc_usic.c ****       {
 264:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 265:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 658              	 .loc 2 265 0
 659 005a 7B69     	 ldr r3,[r7,#20]
 660 005c 5B00     	 lsls r3,r3,#1
 661 005e 7B61     	 str r3,[r7,#20]
 662              	.L34:
 266:../Libraries/XMCLib/src/xmc_usic.c ****       }
 267:../Libraries/XMCLib/src/xmc_usic.c ****     }
 268:../Libraries/XMCLib/src/xmc_usic.c ****   }
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 663              	 .loc 2 270 0
 664 0060 7B68     	 ldr r3,[r7,#4]
 665 0062 5B69     	 ldr r3,[r3,#20]
 666 0064 03F44073 	 and r3,r3,#768
 667 0068 1B0A     	 lsrs r3,r3,#8
 668 006a 5A1C     	 adds r2,r3,#1
 669 006c 7B69     	 ldr r3,[r7,#20]
 670 006e 02FB03F3 	 mul r3,r2,r3
 671 0072 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 672              	 .loc 2 271 0
 673 0074 7B68     	 ldr r3,[r7,#4]
 674 0076 5B69     	 ldr r3,[r3,#20]
 675 0078 03F4F843 	 and r3,r3,#31744
 676 007c 9B0A     	 lsrs r3,r3,#10
 677 007e 5A1C     	 adds r2,r3,#1
 678 0080 7B69     	 ldr r3,[r7,#20]
 679 0082 02FB03F3 	 mul r3,r2,r3
 680 0086 7B61     	 str r3,[r7,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** 
 273:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 681              	 .loc 2 273 0
 682 0088 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 683 008c F860     	 str r0,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 275:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 684              	 .loc 2 275 0
 685 008e 7B68     	 ldr r3,[r7,#4]
 686 0090 1B69     	 ldr r3,[r3,#16]
 687 0092 03F44043 	 and r3,r3,#49152
 688 0096 B3F5004F 	 cmp r3,#32768
 689 009a 15D1     	 bne .L37
 276:../Libraries/XMCLib/src/xmc_usic.c ****   {
 277:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 690              	 .loc 2 277 0
 691 009c FB68     	 ldr r3,[r7,#12]
 692 009e 07EE903A 	 fmsr s15,r3
 693 00a2 B8EE677A 	 fuitos s14,s15
 694 00a6 7B68     	 ldr r3,[r7,#4]
 695 00a8 1B69     	 ldr r3,[r3,#16]
 696 00aa C3F30903 	 ubfx r3,r3,#0,#10
 697 00ae 07EE903A 	 fmsr s15,r3
 698 00b2 F8EE677A 	 fuitos s15,s15
 699 00b6 DFED1B6A 	 flds s13,.L40+4
 700 00ba C7EEA67A 	 fdivs s15,s15,s13
 701 00be 67EE277A 	 fmuls s15,s14,s15
 702 00c2 C7ED047A 	 fsts s15,[r7,#16]
 703 00c6 16E0     	 b .L38
 704              	.L37:
 278:../Libraries/XMCLib/src/xmc_usic.c ****   }
 279:../Libraries/XMCLib/src/xmc_usic.c ****   else
 280:../Libraries/XMCLib/src/xmc_usic.c ****   {
 281:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 282:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 705              	 .loc 2 282 0
 706 00c8 FB68     	 ldr r3,[r7,#12]
 707 00ca 07EE903A 	 fmsr s15,r3
 708 00ce B8EE677A 	 fuitos s14,s15
 709 00d2 7B68     	 ldr r3,[r7,#4]
 710 00d4 1B69     	 ldr r3,[r3,#16]
 711 00d6 C3F30903 	 ubfx r3,r3,#0,#10
 712 00da C3F58063 	 rsb r3,r3,#1024
 713 00de 07EE903A 	 fmsr s15,r3
 714 00e2 F8EE677A 	 fuitos s15,s15
 715 00e6 F7EE006A 	 fconsts s13,#112
 716 00ea C6EEA77A 	 fdivs s15,s13,s15
 717 00ee 67EE277A 	 fmuls s15,s14,s15
 718 00f2 C7ED047A 	 fsts s15,[r7,#16]
 719              	.L38:
 283:../Libraries/XMCLib/src/xmc_usic.c ****   }
 284:../Libraries/XMCLib/src/xmc_usic.c **** 
 285:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 720              	 .loc 2 285 0
 721 00f6 7B69     	 ldr r3,[r7,#20]
 722 00f8 07EE903A 	 fmsr s15,r3
 723 00fc F8EE677A 	 fuitos s15,s15
 724 0100 97ED047A 	 flds s14,[r7,#16]
 725 0104 C7EE277A 	 fdivs s15,s14,s15
 726 0108 C7ED047A 	 fsts s15,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 727              	 .loc 2 287 0
 728 010c D7ED047A 	 flds s15,[r7,#16]
 729 0110 FCEEE77A 	 ftouizs s15,s15
 730 0114 17EE903A 	 fmrs r3,s15
 288:../Libraries/XMCLib/src/xmc_usic.c **** }
 731              	 .loc 2 288 0
 732 0118 1846     	 mov r0,r3
 733 011a 1837     	 adds r7,r7,#24
 734              	 .cfi_def_cfa_offset 8
 735 011c BD46     	 mov sp,r7
 736              	 .cfi_def_cfa_register 13
 737              	 
 738 011e 80BD     	 pop {r7,pc}
 739              	.L41:
 740              	 .align 2
 741              	.L40:
 742 0120 0000FF03 	 .word 67043328
 743 0124 00008044 	 .word 1149239296
 744              	 .cfi_endproc
 745              	.LFE240:
 747              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 748              	 .align 2
 749              	 .global XMC_USIC_CH_GetSCLKFrequency
 750              	 .thumb
 751              	 .thumb_func
 753              	XMC_USIC_CH_GetSCLKFrequency:
 754              	.LFB241:
 289:../Libraries/XMCLib/src/xmc_usic.c **** 
 290:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 755              	 .loc 2 291 0
 756              	 .cfi_startproc
 757              	 
 758              	 
 759 0000 80B5     	 push {r7,lr}
 760              	 .cfi_def_cfa_offset 8
 761              	 .cfi_offset 7,-8
 762              	 .cfi_offset 14,-4
 763 0002 86B0     	 sub sp,sp,#24
 764              	 .cfi_def_cfa_offset 32
 765 0004 00AF     	 add r7,sp,#0
 766              	 .cfi_def_cfa_register 7
 767 0006 7860     	 str r0,[r7,#4]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 293:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 768              	 .loc 2 293 0
 769 0008 7B68     	 ldr r3,[r7,#4]
 770 000a 5B69     	 ldr r3,[r3,#20]
 771 000c 03F01003 	 and r3,r3,#16
 772 0010 002B     	 cmp r3,#0
 773 0012 01D0     	 beq .L43
 774              	 .loc 2 293 0 is_stmt 0 discriminator 1
 775 0014 0223     	 movs r3,#2
 776 0016 00E0     	 b .L44
 777              	.L43:
 778              	 .loc 2 293 0 discriminator 2
 779 0018 0123     	 movs r3,#1
 780              	.L44:
 781              	 .loc 2 293 0 discriminator 4
 782 001a 3B61     	 str r3,[r7,#16]
 294:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 783              	 .loc 2 294 0 is_stmt 1 discriminator 4
 784 001c 7B68     	 ldr r3,[r7,#4]
 785 001e 5A69     	 ldr r2,[r3,#20]
 786 0020 2B4B     	 ldr r3,.L48
 787 0022 1340     	 ands r3,r3,r2
 788 0024 1B0C     	 lsrs r3,r3,#16
 789 0026 5A1C     	 adds r2,r3,#1
 790 0028 3B69     	 ldr r3,[r7,#16]
 791 002a 02FB03F3 	 mul r3,r2,r3
 792 002e 3B61     	 str r3,[r7,#16]
 295:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 793              	 .loc 2 295 0 discriminator 4
 794 0030 3B69     	 ldr r3,[r7,#16]
 795 0032 5B00     	 lsls r3,r3,#1
 796 0034 3B61     	 str r3,[r7,#16]
 296:../Libraries/XMCLib/src/xmc_usic.c **** 
 297:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 797              	 .loc 2 297 0 discriminator 4
 798 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 799 003a F860     	 str r0,[r7,#12]
 298:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 299:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 800              	 .loc 2 299 0 discriminator 4
 801 003c 7B68     	 ldr r3,[r7,#4]
 802 003e 1B69     	 ldr r3,[r3,#16]
 803 0040 03F44043 	 and r3,r3,#49152
 804 0044 B3F5004F 	 cmp r3,#32768
 805 0048 15D1     	 bne .L45
 300:../Libraries/XMCLib/src/xmc_usic.c ****   {
 301:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 302:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 806              	 .loc 2 302 0
 807 004a FB68     	 ldr r3,[r7,#12]
 808 004c 07EE903A 	 fmsr s15,r3
 809 0050 B8EE677A 	 fuitos s14,s15
 810 0054 7B68     	 ldr r3,[r7,#4]
 811 0056 1B69     	 ldr r3,[r3,#16]
 812 0058 C3F30903 	 ubfx r3,r3,#0,#10
 813 005c 07EE903A 	 fmsr s15,r3
 814 0060 F8EE677A 	 fuitos s15,s15
 815 0064 DFED1B6A 	 flds s13,.L48+4
 816 0068 C7EEA67A 	 fdivs s15,s15,s13
 817 006c 67EE277A 	 fmuls s15,s14,s15
 818 0070 C7ED057A 	 fsts s15,[r7,#20]
 819 0074 16E0     	 b .L46
 820              	.L45:
 303:../Libraries/XMCLib/src/xmc_usic.c ****   }
 304:../Libraries/XMCLib/src/xmc_usic.c ****   else
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 307:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 821              	 .loc 2 307 0
 822 0076 FB68     	 ldr r3,[r7,#12]
 823 0078 07EE903A 	 fmsr s15,r3
 824 007c B8EE677A 	 fuitos s14,s15
 825 0080 7B68     	 ldr r3,[r7,#4]
 826 0082 1B69     	 ldr r3,[r3,#16]
 827 0084 C3F30903 	 ubfx r3,r3,#0,#10
 828 0088 C3F58063 	 rsb r3,r3,#1024
 829 008c 07EE903A 	 fmsr s15,r3
 830 0090 F8EE677A 	 fuitos s15,s15
 831 0094 F7EE006A 	 fconsts s13,#112
 832 0098 C6EEA77A 	 fdivs s15,s13,s15
 833 009c 67EE277A 	 fmuls s15,s14,s15
 834 00a0 C7ED057A 	 fsts s15,[r7,#20]
 835              	.L46:
 308:../Libraries/XMCLib/src/xmc_usic.c ****   }
 309:../Libraries/XMCLib/src/xmc_usic.c **** 
 310:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 836              	 .loc 2 310 0
 837 00a4 3B69     	 ldr r3,[r7,#16]
 838 00a6 07EE903A 	 fmsr s15,r3
 839 00aa F8EE677A 	 fuitos s15,s15
 840 00ae 97ED057A 	 flds s14,[r7,#20]
 841 00b2 C7EE277A 	 fdivs s15,s14,s15
 842 00b6 C7ED057A 	 fsts s15,[r7,#20]
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 843              	 .loc 2 312 0
 844 00ba D7ED057A 	 flds s15,[r7,#20]
 845 00be FCEEE77A 	 ftouizs s15,s15
 846 00c2 17EE903A 	 fmrs r3,s15
 313:../Libraries/XMCLib/src/xmc_usic.c **** }
 847              	 .loc 2 313 0
 848 00c6 1846     	 mov r0,r3
 849 00c8 1837     	 adds r7,r7,#24
 850              	 .cfi_def_cfa_offset 8
 851 00ca BD46     	 mov sp,r7
 852              	 .cfi_def_cfa_register 13
 853              	 
 854 00cc 80BD     	 pop {r7,pc}
 855              	.L49:
 856 00ce 00BF     	 .align 2
 857              	.L48:
 858 00d0 0000FF03 	 .word 67043328
 859 00d4 00008044 	 .word 1149239296
 860              	 .cfi_endproc
 861              	.LFE241:
 863              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 864              	 .align 2
 865              	 .global XMC_USIC_CH_GetMCLKFrequency
 866              	 .thumb
 867              	 .thumb_func
 869              	XMC_USIC_CH_GetMCLKFrequency:
 870              	.LFB242:
 314:../Libraries/XMCLib/src/xmc_usic.c **** 
 315:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 316:../Libraries/XMCLib/src/xmc_usic.c **** {
 871              	 .loc 2 316 0
 872              	 .cfi_startproc
 873              	 
 874              	 
 875 0000 80B5     	 push {r7,lr}
 876              	 .cfi_def_cfa_offset 8
 877              	 .cfi_offset 7,-8
 878              	 .cfi_offset 14,-4
 879 0002 84B0     	 sub sp,sp,#16
 880              	 .cfi_def_cfa_offset 24
 881 0004 00AF     	 add r7,sp,#0
 882              	 .cfi_def_cfa_register 7
 883 0006 7860     	 str r0,[r7,#4]
 317:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 884              	 .loc 2 317 0
 885 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 886 000c B860     	 str r0,[r7,#8]
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 320:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 887              	 .loc 2 320 0
 888 000e 7B68     	 ldr r3,[r7,#4]
 889 0010 1B69     	 ldr r3,[r3,#16]
 890 0012 03F44043 	 and r3,r3,#49152
 891 0016 B3F5004F 	 cmp r3,#32768
 892 001a 17D1     	 bne .L51
 321:../Libraries/XMCLib/src/xmc_usic.c ****   {
 322:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 323:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 893              	 .loc 2 323 0
 894 001c BB68     	 ldr r3,[r7,#8]
 895 001e 07EE903A 	 fmsr s15,r3
 896 0022 B8EE677A 	 fuitos s14,s15
 897 0026 7B68     	 ldr r3,[r7,#4]
 898 0028 1B69     	 ldr r3,[r3,#16]
 899 002a C3F30903 	 ubfx r3,r3,#0,#10
 900 002e C3F58063 	 rsb r3,r3,#1024
 901 0032 07EE903A 	 fmsr s15,r3
 902 0036 F8EE677A 	 fuitos s15,s15
 903 003a F7EE006A 	 fconsts s13,#112
 904 003e C6EEA77A 	 fdivs s15,s13,s15
 905 0042 67EE277A 	 fmuls s15,s14,s15
 906 0046 C7ED037A 	 fsts s15,[r7,#12]
 907 004a 14E0     	 b .L52
 908              	.L51:
 324:../Libraries/XMCLib/src/xmc_usic.c ****   }
 325:../Libraries/XMCLib/src/xmc_usic.c ****   else
 326:../Libraries/XMCLib/src/xmc_usic.c ****   {
 327:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 328:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 909              	 .loc 2 328 0
 910 004c BB68     	 ldr r3,[r7,#8]
 911 004e 07EE903A 	 fmsr s15,r3
 912 0052 B8EE677A 	 fuitos s14,s15
 913 0056 7B68     	 ldr r3,[r7,#4]
 914 0058 1B69     	 ldr r3,[r3,#16]
 915 005a C3F30903 	 ubfx r3,r3,#0,#10
 916 005e 07EE903A 	 fmsr s15,r3
 917 0062 F8EE677A 	 fuitos s15,s15
 918 0066 DFED0D6A 	 flds s13,.L54
 919 006a C7EEA67A 	 fdivs s15,s15,s13
 920 006e C7EE277A 	 fdivs s15,s14,s15
 921 0072 C7ED037A 	 fsts s15,[r7,#12]
 922              	.L52:
 329:../Libraries/XMCLib/src/xmc_usic.c ****   }
 330:../Libraries/XMCLib/src/xmc_usic.c **** 
 331:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 923              	 .loc 2 331 0
 924 0076 D7ED037A 	 flds s15,[r7,#12]
 925 007a B0EE007A 	 fconsts s14,#0
 926 007e C7EE877A 	 fdivs s15,s15,s14
 927 0082 C7ED037A 	 fsts s15,[r7,#12]
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 928              	 .loc 2 333 0
 929 0086 D7ED037A 	 flds s15,[r7,#12]
 930 008a FCEEE77A 	 ftouizs s15,s15
 931 008e 17EE903A 	 fmrs r3,s15
 334:../Libraries/XMCLib/src/xmc_usic.c **** }
 932              	 .loc 2 334 0
 933 0092 1846     	 mov r0,r3
 934 0094 1037     	 adds r7,r7,#16
 935              	 .cfi_def_cfa_offset 8
 936 0096 BD46     	 mov sp,r7
 937              	 .cfi_def_cfa_register 13
 938              	 
 939 0098 80BD     	 pop {r7,pc}
 940              	.L55:
 941 009a 00BF     	 .align 2
 942              	.L54:
 943 009c 00008044 	 .word 1149239296
 944              	 .cfi_endproc
 945              	.LFE242:
 947              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 948              	 .align 2
 949              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 950              	 .thumb
 951              	 .thumb_func
 953              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 954              	.LFB243:
 335:../Libraries/XMCLib/src/xmc_usic.c **** 
 336:../Libraries/XMCLib/src/xmc_usic.c **** 
 337:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 338:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 339:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 340:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 341:../Libraries/XMCLib/src/xmc_usic.c **** {
 955              	 .loc 2 341 0
 956              	 .cfi_startproc
 957              	 
 958              	 
 959 0000 80B5     	 push {r7,lr}
 960              	 .cfi_def_cfa_offset 8
 961              	 .cfi_offset 7,-8
 962              	 .cfi_offset 14,-4
 963 0002 84B0     	 sub sp,sp,#16
 964              	 .cfi_def_cfa_offset 24
 965 0004 00AF     	 add r7,sp,#0
 966              	 .cfi_def_cfa_register 7
 967 0006 F860     	 str r0,[r7,#12]
 968 0008 7A60     	 str r2,[r7,#4]
 969 000a 1A46     	 mov r2,r3
 970 000c 0B46     	 mov r3,r1
 971 000e 7B81     	 strh r3,[r7,#10]
 972 0010 1346     	 mov r3,r2
 973 0012 7B72     	 strb r3,[r7,#9]
 342:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 974              	 .loc 2 346 0
 975 0014 F868     	 ldr r0,[r7,#12]
 976 0016 0221     	 movs r1,#2
 977 0018 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 978              	 .loc 2 349 0
 979 001c 7B7A     	 ldrb r3,[r7,#9]
 980 001e F868     	 ldr r0,[r7,#12]
 981 0020 0121     	 movs r1,#1
 982 0022 1A46     	 mov r2,r3
 983 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 350:../Libraries/XMCLib/src/xmc_usic.c **** 
 351:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 352:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 984              	 .loc 2 352 0
 985 0028 FB68     	 ldr r3,[r7,#12]
 986 002a 5A69     	 ldr r2,[r3,#20]
 987 002c 074B     	 ldr r3,.L57
 988 002e 1340     	 ands r3,r3,r2
 353:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 354:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 355:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 989              	 .loc 2 356 0
 990 0030 7A68     	 ldr r2,[r7,#4]
 991 0032 013A     	 subs r2,r2,#1
 992 0034 9202     	 lsls r2,r2,#10
 355:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 993              	 .loc 2 355 0
 994 0036 1A43     	 orrs r2,r2,r3
 357:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 995              	 .loc 2 357 0
 996 0038 7B89     	 ldrh r3,[r7,#10]
 997 003a 013B     	 subs r3,r3,#1
 998 003c 1B04     	 lsls r3,r3,#16
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 999              	 .loc 2 356 0
 1000 003e 1A43     	 orrs r2,r2,r3
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1001              	 .loc 2 352 0
 1002 0040 FB68     	 ldr r3,[r7,#12]
 1003 0042 5A61     	 str r2,[r3,#20]
 358:../Libraries/XMCLib/src/xmc_usic.c **** }
 1004              	 .loc 2 358 0
 1005 0044 1037     	 adds r7,r7,#16
 1006              	 .cfi_def_cfa_offset 8
 1007 0046 BD46     	 mov sp,r7
 1008              	 .cfi_def_cfa_register 13
 1009              	 
 1010 0048 80BD     	 pop {r7,pc}
 1011              	.L58:
 1012 004a 00BF     	 .align 2
 1013              	.L57:
 1014 004c EF8000FC 	 .word -67075857
 1015              	 .cfi_endproc
 1016              	.LFE243:
 1018              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1019              	 .align 2
 1020              	 .global XMC_USIC_CH_TXFIFO_Configure
 1021              	 .thumb
 1022              	 .thumb_func
 1024              	XMC_USIC_CH_TXFIFO_Configure:
 1025              	.LFB244:
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 361:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 362:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 363:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 364:../Libraries/XMCLib/src/xmc_usic.c **** {
 1026              	 .loc 2 364 0
 1027              	 .cfi_startproc
 1028              	 
 1029              	 
 1030              	 
 1031 0000 80B4     	 push {r7}
 1032              	 .cfi_def_cfa_offset 4
 1033              	 .cfi_offset 7,-4
 1034 0002 85B0     	 sub sp,sp,#20
 1035              	 .cfi_def_cfa_offset 24
 1036 0004 00AF     	 add r7,sp,#0
 1037              	 .cfi_def_cfa_register 7
 1038 0006 F860     	 str r0,[r7,#12]
 1039 0008 B960     	 str r1,[r7,#8]
 1040 000a 3B60     	 str r3,[r7]
 1041 000c 1346     	 mov r3,r2
 1042 000e FB71     	 strb r3,[r7,#7]
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 366:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1043              	 .loc 2 366 0
 1044 0010 FB68     	 ldr r3,[r7,#12]
 1045 0012 D3F80831 	 ldr r3,[r3,#264]
 1046 0016 23F0E062 	 bic r2,r3,#117440512
 1047 001a FB68     	 ldr r3,[r7,#12]
 1048 001c C3F80821 	 str r2,[r3,#264]
 367:../Libraries/XMCLib/src/xmc_usic.c **** 
 368:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 369:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 370:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 371:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 372:../Libraries/XMCLib/src/xmc_usic.c ****    */
 373:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1049              	 .loc 2 373 0
 1050 0020 FB68     	 ldr r3,[r7,#12]
 1051 0022 D3F80821 	 ldr r2,[r3,#264]
 1052 0026 094B     	 ldr r3,.L60
 1053 0028 1340     	 ands r3,r3,r2
 374:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1054              	 .loc 2 376 0
 1055 002a 3A68     	 ldr r2,[r7]
 1056 002c 1102     	 lsls r1,r2,#8
 1057 002e BA68     	 ldr r2,[r7,#8]
 1058 0030 1143     	 orrs r1,r1,r2
 377:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 378:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1059              	 .loc 2 378 0
 1060 0032 FA79     	 ldrb r2,[r7,#7]
 1061 0034 1206     	 lsls r2,r2,#24
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1062              	 .loc 2 376 0
 1063 0036 0A43     	 orrs r2,r2,r1
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1064              	 .loc 2 375 0
 1065 0038 1A43     	 orrs r2,r2,r3
 373:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 1066              	 .loc 2 373 0
 1067 003a FB68     	 ldr r3,[r7,#12]
 1068 003c C3F80821 	 str r2,[r3,#264]
 379:../Libraries/XMCLib/src/xmc_usic.c **** }
 1069              	 .loc 2 379 0
 1070 0040 1437     	 adds r7,r7,#20
 1071              	 .cfi_def_cfa_offset 4
 1072 0042 BD46     	 mov sp,r7
 1073              	 .cfi_def_cfa_register 13
 1074              	 
 1075 0044 5DF8047B 	 ldr r7,[sp],#4
 1076              	 .cfi_restore 7
 1077              	 .cfi_def_cfa_offset 0
 1078 0048 7047     	 bx lr
 1079              	.L61:
 1080 004a 00BF     	 .align 2
 1081              	.L60:
 1082 004c C0C0FFF8 	 .word -117456704
 1083              	 .cfi_endproc
 1084              	.LFE244:
 1086              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1087              	 .align 2
 1088              	 .global XMC_USIC_CH_RXFIFO_Configure
 1089              	 .thumb
 1090              	 .thumb_func
 1092              	XMC_USIC_CH_RXFIFO_Configure:
 1093              	.LFB245:
 380:../Libraries/XMCLib/src/xmc_usic.c **** 
 381:../Libraries/XMCLib/src/xmc_usic.c **** 
 382:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 385:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 386:../Libraries/XMCLib/src/xmc_usic.c **** {
 1094              	 .loc 2 386 0
 1095              	 .cfi_startproc
 1096              	 
 1097              	 
 1098              	 
 1099 0000 80B4     	 push {r7}
 1100              	 .cfi_def_cfa_offset 4
 1101              	 .cfi_offset 7,-4
 1102 0002 85B0     	 sub sp,sp,#20
 1103              	 .cfi_def_cfa_offset 24
 1104 0004 00AF     	 add r7,sp,#0
 1105              	 .cfi_def_cfa_register 7
 1106 0006 F860     	 str r0,[r7,#12]
 1107 0008 B960     	 str r1,[r7,#8]
 1108 000a 3B60     	 str r3,[r7]
 1109 000c 1346     	 mov r3,r2
 1110 000e FB71     	 strb r3,[r7,#7]
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 388:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1111              	 .loc 2 388 0
 1112 0010 FB68     	 ldr r3,[r7,#12]
 1113 0012 D3F80C31 	 ldr r3,[r3,#268]
 1114 0016 23F0E062 	 bic r2,r3,#117440512
 1115 001a FB68     	 ldr r3,[r7,#12]
 1116 001c C3F80C21 	 str r2,[r3,#268]
 389:../Libraries/XMCLib/src/xmc_usic.c **** 
 390:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 391:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 392:../Libraries/XMCLib/src/xmc_usic.c ****    */
 393:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1117              	 .loc 2 393 0
 1118 0020 FB68     	 ldr r3,[r7,#12]
 1119 0022 D3F80C21 	 ldr r2,[r3,#268]
 1120 0026 0A4B     	 ldr r3,.L63
 1121 0028 1340     	 ands r3,r3,r2
 394:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1122              	 .loc 2 396 0
 1123 002a 3A68     	 ldr r2,[r7]
 1124 002c 1102     	 lsls r1,r2,#8
 1125 002e BA68     	 ldr r2,[r7,#8]
 1126 0030 1143     	 orrs r1,r1,r2
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 398:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1127              	 .loc 2 398 0
 1128 0032 FA79     	 ldrb r2,[r7,#7]
 1129 0034 1206     	 lsls r2,r2,#24
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1130              	 .loc 2 397 0
 1131 0036 0A43     	 orrs r2,r2,r1
 393:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 1132              	 .loc 2 393 0
 1133 0038 1343     	 orrs r3,r3,r2
 1134 003a 43F08052 	 orr r2,r3,#268435456
 1135 003e FB68     	 ldr r3,[r7,#12]
 1136 0040 C3F80C21 	 str r2,[r3,#268]
 399:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 400:../Libraries/XMCLib/src/xmc_usic.c **** }
 1137              	 .loc 2 400 0
 1138 0044 1437     	 adds r7,r7,#20
 1139              	 .cfi_def_cfa_offset 4
 1140 0046 BD46     	 mov sp,r7
 1141              	 .cfi_def_cfa_register 13
 1142              	 
 1143 0048 5DF8047B 	 ldr r7,[sp],#4
 1144              	 .cfi_restore 7
 1145              	 .cfi_def_cfa_offset 0
 1146 004c 7047     	 bx lr
 1147              	.L64:
 1148 004e 00BF     	 .align 2
 1149              	.L63:
 1150 0050 C0C0FFEF 	 .word -268451648
 1151              	 .cfi_endproc
 1152              	.LFE245:
 1154              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1155              	 .align 2
 1156              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1157              	 .thumb
 1158              	 .thumb_func
 1160              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1161              	.LFB246:
 401:../Libraries/XMCLib/src/xmc_usic.c **** 
 402:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 403:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 404:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 405:../Libraries/XMCLib/src/xmc_usic.c **** {
 1162              	 .loc 2 405 0
 1163              	 .cfi_startproc
 1164              	 
 1165              	 
 1166              	 
 1167 0000 80B4     	 push {r7}
 1168              	 .cfi_def_cfa_offset 4
 1169              	 .cfi_offset 7,-4
 1170 0002 85B0     	 sub sp,sp,#20
 1171              	 .cfi_def_cfa_offset 24
 1172 0004 00AF     	 add r7,sp,#0
 1173              	 .cfi_def_cfa_register 7
 1174 0006 F860     	 str r0,[r7,#12]
 1175 0008 0B46     	 mov r3,r1
 1176 000a 7A60     	 str r2,[r7,#4]
 1177 000c FB72     	 strb r3,[r7,#11]
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 407:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1178              	 .loc 2 407 0
 1179 000e FB68     	 ldr r3,[r7,#12]
 1180 0010 D3F80831 	 ldr r3,[r3,#264]
 1181 0014 23F0E062 	 bic r2,r3,#117440512
 1182 0018 FB68     	 ldr r3,[r7,#12]
 1183 001a C3F80821 	 str r2,[r3,#264]
 408:../Libraries/XMCLib/src/xmc_usic.c **** 
 409:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 410:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 411:../Libraries/XMCLib/src/xmc_usic.c ****    */
 412:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1184              	 .loc 2 412 0
 1185 001e FB68     	 ldr r3,[r7,#12]
 1186 0020 D3F80831 	 ldr r3,[r3,#264]
 1187 0024 23F47C52 	 bic r2,r3,#16128
 413:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1188              	 .loc 2 413 0
 1189 0028 7B68     	 ldr r3,[r7,#4]
 1190 002a 1B02     	 lsls r3,r3,#8
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1191              	 .loc 2 412 0
 1192 002c 1A43     	 orrs r2,r2,r3
 414:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1193              	 .loc 2 414 0
 1194 002e FB7A     	 ldrb r3,[r7,#11]
 1195 0030 1B06     	 lsls r3,r3,#24
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1196              	 .loc 2 412 0
 1197 0032 1A43     	 orrs r2,r2,r3
 1198 0034 FB68     	 ldr r3,[r7,#12]
 1199 0036 C3F80821 	 str r2,[r3,#264]
 415:../Libraries/XMCLib/src/xmc_usic.c **** }
 1200              	 .loc 2 415 0
 1201 003a 1437     	 adds r7,r7,#20
 1202              	 .cfi_def_cfa_offset 4
 1203 003c BD46     	 mov sp,r7
 1204              	 .cfi_def_cfa_register 13
 1205              	 
 1206 003e 5DF8047B 	 ldr r7,[sp],#4
 1207              	 .cfi_restore 7
 1208              	 .cfi_def_cfa_offset 0
 1209 0042 7047     	 bx lr
 1210              	 .cfi_endproc
 1211              	.LFE246:
 1213              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1214              	 .align 2
 1215              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1216              	 .thumb
 1217              	 .thumb_func
 1219              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1220              	.LFB247:
 416:../Libraries/XMCLib/src/xmc_usic.c **** 
 417:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 418:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 419:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 420:../Libraries/XMCLib/src/xmc_usic.c **** {
 1221              	 .loc 2 420 0
 1222              	 .cfi_startproc
 1223              	 
 1224              	 
 1225              	 
 1226 0000 80B4     	 push {r7}
 1227              	 .cfi_def_cfa_offset 4
 1228              	 .cfi_offset 7,-4
 1229 0002 85B0     	 sub sp,sp,#20
 1230              	 .cfi_def_cfa_offset 24
 1231 0004 00AF     	 add r7,sp,#0
 1232              	 .cfi_def_cfa_register 7
 1233 0006 F860     	 str r0,[r7,#12]
 1234 0008 0B46     	 mov r3,r1
 1235 000a 7A60     	 str r2,[r7,#4]
 1236 000c FB72     	 strb r3,[r7,#11]
 421:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1237              	 .loc 2 422 0
 1238 000e FB68     	 ldr r3,[r7,#12]
 1239 0010 D3F80C31 	 ldr r3,[r3,#268]
 1240 0014 23F0E062 	 bic r2,r3,#117440512
 1241 0018 FB68     	 ldr r3,[r7,#12]
 1242 001a C3F80C21 	 str r2,[r3,#268]
 423:../Libraries/XMCLib/src/xmc_usic.c **** 
 424:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1243              	 .loc 2 424 0
 1244 001e FB68     	 ldr r3,[r7,#12]
 1245 0020 D3F80C31 	 ldr r3,[r3,#268]
 1246 0024 23F47C52 	 bic r2,r3,#16128
 425:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1247              	 .loc 2 425 0
 1248 0028 7B68     	 ldr r3,[r7,#4]
 1249 002a 1B02     	 lsls r3,r3,#8
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1250              	 .loc 2 424 0
 1251 002c 1A43     	 orrs r2,r2,r3
 426:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 1252              	 .loc 2 426 0
 1253 002e FB7A     	 ldrb r3,[r7,#11]
 1254 0030 1B06     	 lsls r3,r3,#24
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1255              	 .loc 2 424 0
 1256 0032 1A43     	 orrs r2,r2,r3
 1257 0034 FB68     	 ldr r3,[r7,#12]
 1258 0036 C3F80C21 	 str r2,[r3,#268]
 427:../Libraries/XMCLib/src/xmc_usic.c **** }
 1259              	 .loc 2 427 0
 1260 003a 1437     	 adds r7,r7,#20
 1261              	 .cfi_def_cfa_offset 4
 1262 003c BD46     	 mov sp,r7
 1263              	 .cfi_def_cfa_register 13
 1264              	 
 1265 003e 5DF8047B 	 ldr r7,[sp],#4
 1266              	 .cfi_restore 7
 1267              	 .cfi_def_cfa_offset 0
 1268 0042 7047     	 bx lr
 1269              	 .cfi_endproc
 1270              	.LFE247:
 1272              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1273              	 .align 2
 1274              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1275              	 .thumb
 1276              	 .thumb_func
 1278              	XMC_USIC_CH_SetInterruptNodePointer:
 1279              	.LFB248:
 428:../Libraries/XMCLib/src/xmc_usic.c **** 
 429:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 430:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 431:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 432:../Libraries/XMCLib/src/xmc_usic.c **** {
 1280              	 .loc 2 432 0
 1281              	 .cfi_startproc
 1282              	 
 1283              	 
 1284              	 
 1285 0000 80B4     	 push {r7}
 1286              	 .cfi_def_cfa_offset 4
 1287              	 .cfi_offset 7,-4
 1288 0002 85B0     	 sub sp,sp,#20
 1289              	 .cfi_def_cfa_offset 24
 1290 0004 00AF     	 add r7,sp,#0
 1291              	 .cfi_def_cfa_register 7
 1292 0006 F860     	 str r0,[r7,#12]
 1293 0008 0B46     	 mov r3,r1
 1294 000a 7A60     	 str r2,[r7,#4]
 1295 000c FB72     	 strb r3,[r7,#11]
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1296              	 .loc 2 433 0
 1297 000e FB68     	 ldr r3,[r7,#12]
 1298 0010 9A69     	 ldr r2,[r3,#24]
 1299 0012 FB7A     	 ldrb r3,[r7,#11]
 1300 0014 0721     	 movs r1,#7
 1301 0016 01FA03F3 	 lsl r3,r1,r3
 1302 001a DB43     	 mvns r3,r3
 1303 001c 1A40     	 ands r2,r2,r3
 434:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 1304              	 .loc 2 434 0
 1305 001e FB7A     	 ldrb r3,[r7,#11]
 1306 0020 7968     	 ldr r1,[r7,#4]
 1307 0022 01FA03F3 	 lsl r3,r1,r3
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1308              	 .loc 2 433 0
 1309 0026 1A43     	 orrs r2,r2,r3
 1310 0028 FB68     	 ldr r3,[r7,#12]
 1311 002a 9A61     	 str r2,[r3,#24]
 435:../Libraries/XMCLib/src/xmc_usic.c **** }
 1312              	 .loc 2 435 0
 1313 002c 1437     	 adds r7,r7,#20
 1314              	 .cfi_def_cfa_offset 4
 1315 002e BD46     	 mov sp,r7
 1316              	 .cfi_def_cfa_register 13
 1317              	 
 1318 0030 5DF8047B 	 ldr r7,[sp],#4
 1319              	 .cfi_restore 7
 1320              	 .cfi_def_cfa_offset 0
 1321 0034 7047     	 bx lr
 1322              	 .cfi_endproc
 1323              	.LFE248:
 1325 0036 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1326              	 .align 2
 1327              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1328              	 .thumb
 1329              	 .thumb_func
 1331              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1332              	.LFB249:
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 438:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 439:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 440:../Libraries/XMCLib/src/xmc_usic.c **** {
 1333              	 .loc 2 440 0
 1334              	 .cfi_startproc
 1335              	 
 1336              	 
 1337              	 
 1338 0000 80B4     	 push {r7}
 1339              	 .cfi_def_cfa_offset 4
 1340              	 .cfi_offset 7,-4
 1341 0002 85B0     	 sub sp,sp,#20
 1342              	 .cfi_def_cfa_offset 24
 1343 0004 00AF     	 add r7,sp,#0
 1344              	 .cfi_def_cfa_register 7
 1345 0006 F860     	 str r0,[r7,#12]
 1346 0008 0B46     	 mov r3,r1
 1347 000a 7A60     	 str r2,[r7,#4]
 1348 000c FB72     	 strb r3,[r7,#11]
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1349              	 .loc 2 441 0
 1350 000e FB68     	 ldr r3,[r7,#12]
 1351 0010 D3F80821 	 ldr r2,[r3,#264]
 1352 0014 FB7A     	 ldrb r3,[r7,#11]
 1353 0016 0721     	 movs r1,#7
 1354 0018 01FA03F3 	 lsl r3,r1,r3
 1355 001c DB43     	 mvns r3,r3
 1356 001e 1A40     	 ands r2,r2,r3
 442:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1357              	 .loc 2 442 0
 1358 0020 FB7A     	 ldrb r3,[r7,#11]
 1359 0022 7968     	 ldr r1,[r7,#4]
 1360 0024 01FA03F3 	 lsl r3,r1,r3
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1361              	 .loc 2 441 0
 1362 0028 1A43     	 orrs r2,r2,r3
 1363 002a FB68     	 ldr r3,[r7,#12]
 1364 002c C3F80821 	 str r2,[r3,#264]
 443:../Libraries/XMCLib/src/xmc_usic.c **** }
 1365              	 .loc 2 443 0
 1366 0030 1437     	 adds r7,r7,#20
 1367              	 .cfi_def_cfa_offset 4
 1368 0032 BD46     	 mov sp,r7
 1369              	 .cfi_def_cfa_register 13
 1370              	 
 1371 0034 5DF8047B 	 ldr r7,[sp],#4
 1372              	 .cfi_restore 7
 1373              	 .cfi_def_cfa_offset 0
 1374 0038 7047     	 bx lr
 1375              	 .cfi_endproc
 1376              	.LFE249:
 1378 003a 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1379              	 .align 2
 1380              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1381              	 .thumb
 1382              	 .thumb_func
 1384              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1385              	.LFB250:
 444:../Libraries/XMCLib/src/xmc_usic.c **** 
 445:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 446:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 447:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 448:../Libraries/XMCLib/src/xmc_usic.c **** {
 1386              	 .loc 2 448 0
 1387              	 .cfi_startproc
 1388              	 
 1389              	 
 1390              	 
 1391 0000 80B4     	 push {r7}
 1392              	 .cfi_def_cfa_offset 4
 1393              	 .cfi_offset 7,-4
 1394 0002 85B0     	 sub sp,sp,#20
 1395              	 .cfi_def_cfa_offset 24
 1396 0004 00AF     	 add r7,sp,#0
 1397              	 .cfi_def_cfa_register 7
 1398 0006 F860     	 str r0,[r7,#12]
 1399 0008 0B46     	 mov r3,r1
 1400 000a 7A60     	 str r2,[r7,#4]
 1401 000c FB72     	 strb r3,[r7,#11]
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1402              	 .loc 2 449 0
 1403 000e FB68     	 ldr r3,[r7,#12]
 1404 0010 D3F80C21 	 ldr r2,[r3,#268]
 1405 0014 FB7A     	 ldrb r3,[r7,#11]
 1406 0016 0721     	 movs r1,#7
 1407 0018 01FA03F3 	 lsl r3,r1,r3
 1408 001c DB43     	 mvns r3,r3
 1409 001e 1A40     	 ands r2,r2,r3
 450:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1410              	 .loc 2 450 0
 1411 0020 FB7A     	 ldrb r3,[r7,#11]
 1412 0022 7968     	 ldr r1,[r7,#4]
 1413 0024 01FA03F3 	 lsl r3,r1,r3
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1414              	 .loc 2 449 0
 1415 0028 1A43     	 orrs r2,r2,r3
 1416 002a FB68     	 ldr r3,[r7,#12]
 1417 002c C3F80C21 	 str r2,[r3,#268]
 451:../Libraries/XMCLib/src/xmc_usic.c **** }
 1418              	 .loc 2 451 0
 1419 0030 1437     	 adds r7,r7,#20
 1420              	 .cfi_def_cfa_offset 4
 1421 0032 BD46     	 mov sp,r7
 1422              	 .cfi_def_cfa_register 13
 1423              	 
 1424 0034 5DF8047B 	 ldr r7,[sp],#4
 1425              	 .cfi_restore 7
 1426              	 .cfi_def_cfa_offset 0
 1427 0038 7047     	 bx lr
 1428              	 .cfi_endproc
 1429              	.LFE250:
 1431 003a 00BF     	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1432              	 .align 2
 1433              	 .global XMC_USIC_Enable
 1434              	 .thumb
 1435              	 .thumb_func
 1437              	XMC_USIC_Enable:
 1438              	.LFB251:
 452:../Libraries/XMCLib/src/xmc_usic.c **** 
 453:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 454:../Libraries/XMCLib/src/xmc_usic.c **** {
 1439              	 .loc 2 454 0
 1440              	 .cfi_startproc
 1441              	 
 1442              	 
 1443 0000 80B5     	 push {r7,lr}
 1444              	 .cfi_def_cfa_offset 8
 1445              	 .cfi_offset 7,-8
 1446              	 .cfi_offset 14,-4
 1447 0002 82B0     	 sub sp,sp,#8
 1448              	 .cfi_def_cfa_offset 16
 1449 0004 00AF     	 add r7,sp,#0
 1450              	 .cfi_def_cfa_register 7
 1451 0006 7860     	 str r0,[r7,#4]
 455:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1452              	 .loc 2 455 0
 1453 0008 7B68     	 ldr r3,[r7,#4]
 1454 000a 184A     	 ldr r2,.L77
 1455 000c 9342     	 cmp r3,r2
 1456 000e 0CD1     	 bne .L71
 456:../Libraries/XMCLib/src/xmc_usic.c ****   {
 457:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 458:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 459:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 460:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 461:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 462:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1457              	 .loc 2 462 0
 1458 0010 4FF40060 	 mov r0,#2048
 1459 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 463:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 1460              	 .loc 2 463 0
 1461 0018 00BF     	 nop
 1462              	.L72:
 1463              	 .loc 2 463 0 is_stmt 0 discriminator 1
 1464 001a 4FF40060 	 mov r0,#2048
 1465 001e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1466 0022 0346     	 mov r3,r0
 1467 0024 002B     	 cmp r3,#0
 1468 0026 F8D1     	 bne .L72
 1469 0028 1CE0     	 b .L70
 1470              	.L71:
 464:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 465:../Libraries/XMCLib/src/xmc_usic.c ****   }
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 467:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1471              	 .loc 2 467 0 is_stmt 1
 1472 002a 7B68     	 ldr r3,[r7,#4]
 1473 002c 104A     	 ldr r2,.L77+4
 1474 002e 9342     	 cmp r3,r2
 1475 0030 0AD1     	 bne .L74
 468:../Libraries/XMCLib/src/xmc_usic.c ****   {
 469:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 470:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 471:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 472:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 473:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 474:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1476              	 .loc 2 474 0
 1477 0032 1048     	 ldr r0,.L77+8
 1478 0034 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 475:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 1479              	 .loc 2 475 0
 1480 0038 00BF     	 nop
 1481              	.L75:
 1482              	 .loc 2 475 0 is_stmt 0 discriminator 1
 1483 003a 0E48     	 ldr r0,.L77+8
 1484 003c FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1485 0040 0346     	 mov r3,r0
 1486 0042 002B     	 cmp r3,#0
 1487 0044 F9D1     	 bne .L75
 1488 0046 0DE0     	 b .L70
 1489              	.L74:
 476:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 477:../Libraries/XMCLib/src/xmc_usic.c ****   }
 478:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 480:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 1490              	 .loc 2 480 0 is_stmt 1
 1491 0048 7B68     	 ldr r3,[r7,#4]
 1492 004a 0B4A     	 ldr r2,.L77+12
 1493 004c 9342     	 cmp r3,r2
 1494 004e 09D1     	 bne .L70
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1495              	 .loc 2 487 0
 1496 0050 0A48     	 ldr r0,.L77+16
 1497 0052 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 1498              	 .loc 2 488 0
 1499 0056 00BF     	 nop
 1500              	.L76:
 1501              	 .loc 2 488 0 is_stmt 0 discriminator 1
 1502 0058 0848     	 ldr r0,.L77+16
 1503 005a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 1504 005e 0346     	 mov r3,r0
 1505 0060 002B     	 cmp r3,#0
 1506 0062 F9D1     	 bne .L76
 1507              	.L70:
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 495:../Libraries/XMCLib/src/xmc_usic.c ****   }
 496:../Libraries/XMCLib/src/xmc_usic.c **** }
 1508              	 .loc 2 496 0 is_stmt 1
 1509 0064 0837     	 adds r7,r7,#8
 1510              	 .cfi_def_cfa_offset 8
 1511 0066 BD46     	 mov sp,r7
 1512              	 .cfi_def_cfa_register 13
 1513              	 
 1514 0068 80BD     	 pop {r7,pc}
 1515              	.L78:
 1516 006a 00BF     	 .align 2
 1517              	.L77:
 1518 006c 08000340 	 .word 1073938440
 1519 0070 08000248 	 .word 1208090632
 1520 0074 80000010 	 .word 268435584
 1521 0078 08400248 	 .word 1208107016
 1522 007c 00010010 	 .word 268435712
 1523              	 .cfi_endproc
 1524              	.LFE251:
 1526              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1527              	 .align 2
 1528              	 .global XMC_USIC_Disable
 1529              	 .thumb
 1530              	 .thumb_func
 1532              	XMC_USIC_Disable:
 1533              	.LFB252:
 497:../Libraries/XMCLib/src/xmc_usic.c **** 
 498:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 499:../Libraries/XMCLib/src/xmc_usic.c **** {
 1534              	 .loc 2 499 0
 1535              	 .cfi_startproc
 1536              	 
 1537              	 
 1538 0000 80B5     	 push {r7,lr}
 1539              	 .cfi_def_cfa_offset 8
 1540              	 .cfi_offset 7,-8
 1541              	 .cfi_offset 14,-4
 1542 0002 82B0     	 sub sp,sp,#8
 1543              	 .cfi_def_cfa_offset 16
 1544 0004 00AF     	 add r7,sp,#0
 1545              	 .cfi_def_cfa_register 7
 1546 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1547              	 .loc 2 500 0
 1548 0008 7B68     	 ldr r3,[r7,#4]
 1549 000a 0D4A     	 ldr r2,.L83
 1550 000c 9342     	 cmp r3,r2
 1551 000e 04D1     	 bne .L80
 501:../Libraries/XMCLib/src/xmc_usic.c ****   {
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 1552              	 .loc 2 503 0
 1553 0010 4FF40060 	 mov r0,#2048
 1554 0014 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1555 0018 0EE0     	 b .L79
 1556              	.L80:
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 505:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 506:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 507:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 508:../Libraries/XMCLib/src/xmc_usic.c ****   }
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1557              	 .loc 2 510 0
 1558 001a 7B68     	 ldr r3,[r7,#4]
 1559 001c 094A     	 ldr r2,.L83+4
 1560 001e 9342     	 cmp r3,r2
 1561 0020 03D1     	 bne .L82
 511:../Libraries/XMCLib/src/xmc_usic.c ****   {
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 1562              	 .loc 2 513 0
 1563 0022 0948     	 ldr r0,.L83+8
 1564 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1565 0028 06E0     	 b .L79
 1566              	.L82:
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 515:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 516:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 517:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 518:../Libraries/XMCLib/src/xmc_usic.c ****   }
 519:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 1567              	 .loc 2 521 0
 1568 002a 7B68     	 ldr r3,[r7,#4]
 1569 002c 074A     	 ldr r2,.L83+12
 1570 002e 9342     	 cmp r3,r2
 1571 0030 02D1     	 bne .L79
 522:../Libraries/XMCLib/src/xmc_usic.c ****   {
 523:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 524:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 1572              	 .loc 2 524 0
 1573 0032 0748     	 ldr r0,.L83+16
 1574 0034 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 1575              	.L79:
 525:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 526:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 527:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 528:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 529:../Libraries/XMCLib/src/xmc_usic.c ****   }
 530:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 531:../Libraries/XMCLib/src/xmc_usic.c ****   else
 532:../Libraries/XMCLib/src/xmc_usic.c ****   {
 533:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 534:../Libraries/XMCLib/src/xmc_usic.c ****   }
 535:../Libraries/XMCLib/src/xmc_usic.c ****   
 536:../Libraries/XMCLib/src/xmc_usic.c **** }
 1576              	 .loc 2 536 0
 1577 0038 0837     	 adds r7,r7,#8
 1578              	 .cfi_def_cfa_offset 8
 1579 003a BD46     	 mov sp,r7
 1580              	 .cfi_def_cfa_register 13
 1581              	 
 1582 003c 80BD     	 pop {r7,pc}
 1583              	.L84:
 1584 003e 00BF     	 .align 2
 1585              	.L83:
 1586 0040 08000340 	 .word 1073938440
 1587 0044 08000248 	 .word 1208090632
 1588 0048 80000010 	 .word 268435584
 1589 004c 08400248 	 .word 1208107016
 1590 0050 00010010 	 .word 268435712
 1591              	 .cfi_endproc
 1592              	.LFE252:
 1594              	 .text
 1595              	.Letext0:
 1596              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1597              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1598              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1599              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 1600              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 1601              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 1602              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:20     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:77     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:81     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:120    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:125    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1437   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:217    .text.XMC_USIC_CH_Enable:00000074 $d
    {standard input}:230    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:235    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:271    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:276    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:420    .text.XMC_USIC_CH_SetBaudrate:000000d8 $d
    {standard input}:426    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:431    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:585    .text.XMC_USIC_CH_SetBaudrateEx:000000fc $d
    {standard input}:590    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:595    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:742    .text.XMC_USIC_CH_GetBaudrate:00000120 $d
    {standard input}:748    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:753    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:858    .text.XMC_USIC_CH_GetSCLKFrequency:000000d0 $d
    {standard input}:864    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:869    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:943    .text.XMC_USIC_CH_GetMCLKFrequency:0000009c $d
    {standard input}:948    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:953    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1014   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:0000004c $d
    {standard input}:1019   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1024   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1082   .text.XMC_USIC_CH_TXFIFO_Configure:0000004c $d
    {standard input}:1087   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1092   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1150   .text.XMC_USIC_CH_RXFIFO_Configure:00000050 $d
    {standard input}:1155   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1160   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1214   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1219   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1273   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1278   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1326   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1331   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1379   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1384   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1432   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1518   .text.XMC_USIC_Enable:0000006c $d
    {standard input}:1527   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1532   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1586   .text.XMC_USIC_Disable:00000040 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
