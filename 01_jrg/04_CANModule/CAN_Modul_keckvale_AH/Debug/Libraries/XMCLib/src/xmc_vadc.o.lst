   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_vadc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_VADC_GROUP_ExternalMuxControlInit,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_VADC_GROUP_ExternalMuxControlInit:
  25              	.LFB191:
  26              	 .file 1 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2019-03-30
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                             
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *      
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed. 
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR. 
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-06-17:
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs added are:
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultRegPriority
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetResultRegPriority
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-02-06:
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new functions to remove channels from background request source, XMC_VADC_GLOBAL_Bac
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-06-24:
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new function XMC_VADC_GLOBAL_SHS_SetAnalogReference() for XMC1 family
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2017-08-14:
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GLOBAL_DETAILED_RESULT_t
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *       You can cast the return of XMC_VADC_GLOBAL_GetDetailedResult() to a varible of type XMC_VA
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() to update AREF bitfield correctly
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2019-03-30:
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Changed XMC_VADC_GROUP_SetChannelAlias() to inline function
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GROUP_GetChannelAlias()
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond 
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_common.h>
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_scu.h>
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE           (1U) /*  Defines the availability of group resource in a
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE           (1U) /*  Defines the availability of scan request resour
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE           (1U) /*  Defines the availability of queue request resou
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE            (1U) /*  Defines the availability of external multiplexe
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE        (1U) /*  Defines the availability of boundary check supp
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS      (1U) /*  Defines the availability of synchronous request
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS        (2U) /*  Defines the maximum number of groups available 
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT      (1U) /*  Defines the availability of boundary flags in a
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE         (1U) /*  Defines the external multiplexer channel select
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE             (0U) /* Defines the availability of sample and hold modu
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG          (0U) /* Defines the availability of sample and hold modu
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE    (1U) /* Define the availability of a source specific res
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (1U) /* Defines the availability of sample and hold module
 268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (1U) /* Define the availability of a priority for result
 270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   
 390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   
 417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
 565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION 
 644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** */
 703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
 720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_AREF
 722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_EXTERNAL_VDD_UPPER_RANGE = 0 << SHS_SHSCFG_AREF_Pos, /**< External refer
 724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_UPPER_RANGE = 2 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_LOWER_RANGE = 3 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_AREF_t;
 727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the ready signal selection
 780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SYNCTR_EVAL
 782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_1 = VADC_G_SYNCTR_EVALR1_Msk, /**<Mask to set the EVAL1 bits of SYNCTR */
 784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_2 = VADC_G_SYNCTR_EVALR2_Msk, /**<Mask to set the EVAL2 bits of SYNCTR */
 786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_3 = VADC_G_SYNCTR_EVALR3_Msk  /**<Mask to set the EVAL3 bits of SYNCTR */
 787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SYNCTR_EVAL_t;
 789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma push
 796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma anon_unions
 797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning 586
 799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asctrl;
 838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 2;
 844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 26;
 850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asmr;
 852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 2;
 871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 4;
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 6;
 886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t chctr;
 891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 8;
 897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 12;
 923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bfl;
 925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t                           : 16;
 940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bflc;
 942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 24;
 964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qinr0;
 967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
 970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
1000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
1001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
1002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qctrl0;
1004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 2;
1010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
1011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 29;
1012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qmr0;
1014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
1016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
1020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
1023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
1035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1040:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1041:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1042:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 16;
1043:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1044:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1045:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globiclass;
1046:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1047:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
1048:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1049:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1050:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1051:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
1052:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1053:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
1054:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1055:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1056:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1057:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1058:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1059:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1060:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
1061:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 2;
1062:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
1063:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
1064:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 5;
1065:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 17;
1066:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1067:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globcfg;
1068:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1069:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1070:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1071:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1072:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1073:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1074:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1075:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1076:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1077:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1078:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1079:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1080:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1081:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1082:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1083:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1084:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1085:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1086:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1087:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globbound;
1088:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1089:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1090:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1091:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1092:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1093:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1094:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1095:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1096:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1097:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1098:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1099:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 6;
1104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globrcr;
1107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 2;
1114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 28;
1116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t clc;
1118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_iclass0;
1146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 13;
1163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 5;
1168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 1;
1177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 2;
1179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_bound;
1205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 4;
1211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 1;
1213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 24;
1216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 2;
1238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_rcr;
1244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :6;
1300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :10;
1302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif      
1303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :20;
1305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed global result structure
1317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_DETAILED_RESULT
1319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t group_number             :4;   /**< Indicates the group to which the channel_number 
1326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_DETAILED_RESULT_t;
1336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed channel result structure
1339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_DETAILED_RESULT
1341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   :4;   /**< Results reduction counter value*/
1348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DETAILED_RESULT_t;
1358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
1359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma pop
1363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning restore
1365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  
1595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const uint16_t boundary_value); 
1732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @note You can cast the return to a varible of type XMC_VADC_GLOBAL_DETAILED_RESULT_t to easily a
1767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \a event_type.
1846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = event_type;
1858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
1877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = ((uint32_t)(event_type << (uint32_t)16));
1882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
1883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * corresponding \a sr line.
1911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param aref    Analog reference used for conversions. Refer @ref XMC_VADC_GLOBAL_SHS_AREF_t enum
1937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
1942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetAnalogReference(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                             const XMC_VADC_GLOBAL_SHS_AREF_t aref)
1948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  (shs_ptr->SHSCFG & (uint32_t)~SHS_SHSCFG_AREF_Msk) | (uint32_t)aref | SHS_SHS
1953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return None
1961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
1999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)((shs_ptr->SHSCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
2000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  }
2001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
2013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
2019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
2023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
2029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
2035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
2040:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
2041:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2042:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2043:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2044:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2045:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
2046:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2047:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
2048:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
2049:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2050:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2051:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2052:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2053:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2054:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
2055:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint8_t sst_value);
2056:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2057:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2058:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2059:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2060:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
2061:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
2062:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2063:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2064:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2065:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
2066:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
2067:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the Sample and hold converter.
2068:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2069:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2070:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2071:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2072:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
2073:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2074:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
2075:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2076:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
2077:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
2078:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2079:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
2080:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
2081:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2082:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2083:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2084:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2085:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_value gain value possible
2086:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
2087:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2088:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
2089:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2090:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2091:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2092:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
2093:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
2094:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2095:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2096:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2097:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2098:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2099:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t gain_value,
2100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
2101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t ch_num);
2102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
2107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
2108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
2112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
2113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
2114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
2115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
2121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
2123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
2126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
2127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
2137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
2138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
2141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
2144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
2152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
2153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
2159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
2168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
2169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
2170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
2173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                            uint8_t ch_num);
2218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes the group specified as part of the \a group_ptr. It initializes group conversion cla
2280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  program.
2283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter must be turned on.
2349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * in these channels.
2407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group waiting for ready signal
2416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_waiting_group  The VADC Group which expects a ready signal to start it's conversion.
2417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_origin_group  The VADC Group from which the eval_waiting_group will expect a ready s
2418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets the ready signal in the eval_waiting_group .<BR>\n
2422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion all the slaves participating need to configure the ready signal.
2423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A slave group will also need to configure the ready signals coming from the other slave groups.
2424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync.slave's EVAL Bits (GxSYNCTR.EVALy).
2425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
2430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_waiting_group,
2431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_origin_group);
2432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *         uint32_t EVAL bits for the group
2438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Get the Eval bits of the group.<BR>\n
2441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would return the Sync EVAL Bits (GxSYNCTR.EVALy) which can be used to set in 
2443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr)
2448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return( group_ptr->SYNCTR & eval_mask);
2458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param eval_mask  mask to configure the eval bits
2463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Use XMC_VADC_SYNCTR_EVAL_t to create the mask.
2464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the Eval bits of the group.<BR>\n
2468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync EVAL Bits (GxSYNCTR.EVALy).
2470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_SetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr, uint32_t 
2475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #else
2482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR &= ~(eval_mask);
2485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR |= mask;
2486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the slaves.
2501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sampling + converting.
2531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
2565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value Select the boundary value.
2566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundary with \a boundary_value for result comparison.\n\n This defines a range aga
2571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
2572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
2573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
2578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
2579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint16_t boundary_value); 
2580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
  27              	 .loc 1 2617 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 85B0     	 sub sp,sp,#20
  36              	 .cfi_def_cfa_offset 24
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 3960     	 str r1,[r7]
2618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t   emux_config;
2619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
  41              	 .loc 1 2622 0
  42 000a 3B78     	 ldrb r3,[r7]
  43 000c C3F30203 	 ubfx r3,r3,#0,#3
  44 0010 DBB2     	 uxtb r3,r3
  45 0012 1A46     	 mov r2,r3
2623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  46              	 .loc 1 2623 0
  47 0014 BB78     	 ldrb r3,[r7,#2]
  48 0016 C3F30403 	 ubfx r3,r3,#0,#5
  49 001a DBB2     	 uxtb r3,r3
  50 001c 1B04     	 lsls r3,r3,#16
2622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  51              	 .loc 1 2622 0
  52 001e 1343     	 orrs r3,r3,r2
  53 0020 FB60     	 str r3,[r7,#12]
2624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
  54              	 .loc 1 2625 0
  55 0022 7B68     	 ldr r3,[r7,#4]
  56 0024 FA68     	 ldr r2,[r7,#12]
  57 0026 C3F8F021 	 str r2,[r3,#496]
2626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  58              	 .loc 1 2626 0
  59 002a FB78     	 ldrb r3,[r7,#3]
  60 002c C3F30013 	 ubfx r3,r3,#4,#1
  61 0030 DBB2     	 uxtb r3,r3
  62 0032 1A07     	 lsls r2,r3,#28
2627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
  63              	 .loc 1 2627 0
  64 0034 FB78     	 ldrb r3,[r7,#3]
  65 0036 C3F38103 	 ubfx r3,r3,#2,#2
  66 003a DBB2     	 uxtb r3,r3
  67 003c 9B06     	 lsls r3,r3,#26
2626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  68              	 .loc 1 2626 0
  69 003e 1A43     	 orrs r2,r2,r3
2628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
  70              	 .loc 1 2628 0
  71 0040 FB78     	 ldrb r3,[r7,#3]
  72 0042 C3F34013 	 ubfx r3,r3,#5,#1
  73 0046 DBB2     	 uxtb r3,r3
  74 0048 5B07     	 lsls r3,r3,#29
2626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  75              	 .loc 1 2626 0
  76 004a 1343     	 orrs r3,r3,r2
  77 004c FB60     	 str r3,[r7,#12]
2629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
2632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
  78              	 .loc 1 2633 0
  79 004e 7B68     	 ldr r3,[r7,#4]
  80 0050 D3F8F021 	 ldr r2,[r3,#496]
  81 0054 FB68     	 ldr r3,[r7,#12]
  82 0056 1343     	 orrs r3,r3,r2
  83 0058 43F00042 	 orr r2,r3,#-2147483648
  84 005c 7B68     	 ldr r3,[r7,#4]
  85 005e C3F8F021 	 str r2,[r3,#496]
2634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
  86              	 .loc 1 2634 0
  87 0062 1437     	 adds r7,r7,#20
  88              	 .cfi_def_cfa_offset 4
  89 0064 BD46     	 mov sp,r7
  90              	 .cfi_def_cfa_register 13
  91              	 
  92 0066 5DF8047B 	 ldr r7,[sp],#4
  93              	 .cfi_restore 7
  94              	 .cfi_def_cfa_offset 0
  95 006a 7047     	 bx lr
  96              	 .cfi_endproc
  97              	.LFE191:
  99              	 .section .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot,"ax",%progbits
 100              	 .align 2
 101              	 .thumb
 102              	 .thumb_func
 104              	XMC_VADC_GROUP_ScanEnableArbitrationSlot:
 105              	.LFB194:
2635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param node    Service Request node Id
2643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t The complete GxALIAS register
2664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the ALIAS values.\n The ALIAS value that is configured for Channel-0 and channel-1 are r
2667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetAlias(XMC_VADC_GROUP_t *const group_ptr)
2672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetAliasWrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return (group_ptr->ALIAS);
2675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_class  conversion property to be extracted
2680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_CLASS_t The complete GxICLASSy register
2682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the input class configuration values.\n
2685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This returns the sampling time configuration and resolution configured in the appropriate group 
2686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b conv_class. A call to this API would return the register GxICLASSy.
2687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_GROUP_CLASS_t XMC_VADC_GROUP_GetInputClass(XMC_VADC_GROUP_t *const group_p
2692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const XMC_VADC_CHANNEL_CONV_t c
2693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t input_value;
2695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
2696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong conv_class selected", 
2697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              (XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLA
2698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   input_value.g_iclass0 = (uint32_t) 0xFFFFFFFF;
2700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   if ((XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLASS1 == 
2701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
2702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     input_value.g_iclass0 = group_ptr->ICLASS[(uint32_t)conv_class];
2703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   }
2704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return (input_value);
2706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 106              	 .loc 1 2746 0
 107              	 .cfi_startproc
 108              	 
 109              	 
 110              	 
 111 0000 80B4     	 push {r7}
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 83B0     	 sub sp,sp,#12
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	 .cfi_def_cfa_register 7
 118 0006 7860     	 str r0,[r7,#4]
2747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
 119              	 .loc 1 2748 0
 120 0008 7B68     	 ldr r3,[r7,#4]
 121 000a D3F88430 	 ldr r3,[r3,#132]
 122 000e 43F00072 	 orr r2,r3,#33554432
 123 0012 7B68     	 ldr r3,[r7,#4]
 124 0014 C3F88420 	 str r2,[r3,#132]
2749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 125              	 .loc 1 2749 0
 126 0018 0C37     	 adds r7,r7,#12
 127              	 .cfi_def_cfa_offset 4
 128 001a BD46     	 mov sp,r7
 129              	 .cfi_def_cfa_register 13
 130              	 
 131 001c 5DF8047B 	 ldr r7,[sp],#4
 132              	 .cfi_restore 7
 133              	 .cfi_def_cfa_offset 0
 134 0020 7047     	 bx lr
 135              	 .cfi_endproc
 136              	.LFE194:
 138 0022 00BF     	 .section .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot,"ax",%progbits
 139              	 .align 2
 140              	 .thumb
 141              	 .thumb_func
 143              	XMC_VADC_GROUP_ScanDisableArbitrationSlot:
 144              	.LFB195:
2750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 145              	 .loc 1 2767 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	 
 150 0000 80B4     	 push {r7}
 151              	 .cfi_def_cfa_offset 4
 152              	 .cfi_offset 7,-4
 153 0002 83B0     	 sub sp,sp,#12
 154              	 .cfi_def_cfa_offset 16
 155 0004 00AF     	 add r7,sp,#0
 156              	 .cfi_def_cfa_register 7
 157 0006 7860     	 str r0,[r7,#4]
2768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
 158              	 .loc 1 2769 0
 159 0008 7B68     	 ldr r3,[r7,#4]
 160 000a D3F88430 	 ldr r3,[r3,#132]
 161 000e 23F00072 	 bic r2,r3,#33554432
 162 0012 7B68     	 ldr r3,[r7,#4]
 163 0014 C3F88420 	 str r2,[r3,#132]
2770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 164              	 .loc 1 2770 0
 165 0018 0C37     	 adds r7,r7,#12
 166              	 .cfi_def_cfa_offset 4
 167 001a BD46     	 mov sp,r7
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 001c 5DF8047B 	 ldr r7,[sp],#4
 171              	 .cfi_restore 7
 172              	 .cfi_def_cfa_offset 0
 173 0020 7047     	 bx lr
 174              	 .cfi_endproc
 175              	.LFE195:
 177 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot,"ax",%progbits
 178              	 .align 2
 179              	 .thumb
 180              	 .thumb_func
 182              	XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:
 183              	.LFB211:
2771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
2776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the scan request source.<BR>\n
2779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. A call to this API would return the status of the arbitration slot of scan.
2782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
2783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR
2786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr)
2788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GROU
2790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN1_Msk) >> VADC_G_ARBPR_ASEN1_Pos);
2792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
2873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
2977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
2982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
2983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
3001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
3003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
3005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
3006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
3017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
3021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
3024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
3026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
3030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
3032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
3036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return  <BR>
3037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
3039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3040:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3041:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
3042:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3043:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3044:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3045:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
3046:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3047:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3048:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
3049:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3050:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
3051:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3052:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3053:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3054:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3055:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3056:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3057:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3058:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3059:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
3060:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3061:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3062:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3063:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3064:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3065:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3066:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3067:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3068:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3069:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
3070:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3071:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3072:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3073:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3074:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3075:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3076:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3077:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3078:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
3079:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3080:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3081:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3082:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3083:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
3084:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3085:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3086:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3087:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3088:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
3089:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3090:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3091:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3092:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3093:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3094:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3095:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3096:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3097:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3098:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3099:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
3100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
3101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
3106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
3108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
3109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr    Service Request Id
3114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
3119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
3120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
3121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
3122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
3127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
3135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
3136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
3137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
3138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
3141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
3145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
3147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
3156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
3157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
3158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
3159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
3160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
3163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
3169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param channel_num   channel number to be removed from the scan sequence.
3174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel from the scan sequence.<BR>
3179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the it is possible to remove a single channel from the conversion sequence.
3180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The remaining channels will continue however they are.
3181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxASSEL.
3182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
3187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the scan request source event .<BR>
3195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the scan request source.
3196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableEvent(XMC_VADC_GROUP_t *const group_ptr)
3203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
3205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= ((uint32_t)VADC_G_ASMR_ENSI_Msk);
3207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the scan request source event .<BR>
3216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the scan request source.
3217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableEvent(XMC_VADC_GROUP_t *const group_ptr)
3224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
3226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENSI_Msk);
3228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
3233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
3237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
3238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
3239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
3240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
3241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
3244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
3245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
3247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
3251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  conversion request from background request source
3252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
3258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
3261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
3262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
3265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
3267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 184              	 .loc 1 3267 0
 185              	 .cfi_startproc
 186              	 
 187              	 
 188              	 
 189 0000 80B4     	 push {r7}
 190              	 .cfi_def_cfa_offset 4
 191              	 .cfi_offset 7,-4
 192 0002 83B0     	 sub sp,sp,#12
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	 .cfi_def_cfa_register 7
 196 0006 7860     	 str r0,[r7,#4]
3268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
3269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
 197              	 .loc 1 3269 0
 198 0008 7B68     	 ldr r3,[r7,#4]
 199 000a D3F88430 	 ldr r3,[r3,#132]
 200 000e 43F08062 	 orr r2,r3,#67108864
 201 0012 7B68     	 ldr r3,[r7,#4]
 202 0014 C3F88420 	 str r2,[r3,#132]
3270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 203              	 .loc 1 3270 0
 204 0018 0C37     	 adds r7,r7,#12
 205              	 .cfi_def_cfa_offset 4
 206 001a BD46     	 mov sp,r7
 207              	 .cfi_def_cfa_register 13
 208              	 
 209 001c 5DF8047B 	 ldr r7,[sp],#4
 210              	 .cfi_restore 7
 211              	 .cfi_def_cfa_offset 0
 212 0020 7047     	 bx lr
 213              	 .cfi_endproc
 214              	.LFE211:
 216 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot,"ax",%progbits
 217              	 .align 2
 218              	 .thumb
 219              	 .thumb_func
 221              	XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:
 222              	.LFB212:
3271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
3274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     from background request source
3275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
3280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
3283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
3284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
3287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
3289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 223              	 .loc 1 3289 0
 224              	 .cfi_startproc
 225              	 
 226              	 
 227              	 
 228 0000 80B4     	 push {r7}
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 83B0     	 sub sp,sp,#12
 232              	 .cfi_def_cfa_offset 16
 233 0004 00AF     	 add r7,sp,#0
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
3290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
3291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
 236              	 .loc 1 3291 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a D3F88430 	 ldr r3,[r3,#132]
 239 000e 23F08062 	 bic r2,r3,#67108864
 240 0012 7B68     	 ldr r3,[r7,#4]
 241 0014 C3F88420 	 str r2,[r3,#132]
3292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 242              	 .loc 1 3292 0
 243 0018 0C37     	 adds r7,r7,#12
 244              	 .cfi_def_cfa_offset 4
 245 001a BD46     	 mov sp,r7
 246              	 .cfi_def_cfa_register 13
 247              	 
 248 001c 5DF8047B 	 ldr r7,[sp],#4
 249              	 .cfi_restore 7
 250              	 .cfi_def_cfa_offset 0
 251 0020 7047     	 bx lr
 252              	 .cfi_endproc
 253              	.LFE212:
 255 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot,"ax",%progbits
 256              	 .align 2
 257              	 .thumb
 258              	 .thumb_func
 260              	XMC_VADC_GROUP_QueueEnableArbitrationSlot:
 261              	.LFB229:
3293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
3299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
3304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
3309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
3314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
3319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
3324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
3326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
3328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
3333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
3337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
3338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
3343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
3345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
3346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
3347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
3350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
3352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
3356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
3361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
3365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
3368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
3370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
3371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
3373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
3374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
3377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure the new gating mode*/
3378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
3379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
3389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
3391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
3392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
3393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
3394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
3395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
3398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * current scan sequence.
3460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel to the background scan sequence.<BR>\n
3536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundRemoveChannelFromSequence(XMC_VADC_GLOBAL_t *const g
3544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t grp_num,
3545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t ch_num)
3546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~((uint32_t)1 << ch_num);
3553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes multiple channels to the scan sequence.<BR>\n
3568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndRemoveMultipleChannels(XMC_VADC_GLOBAL_t *const global_
3576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t grp_num,
3577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t ch_mask)
3578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~ch_mask;
3582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return  <BR>
3617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Module Pointer", (global_ptr ==
3709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Module Pointer", (global_ptr =
3731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the background scan request source event .<BR>
3742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the background scan request sou
3743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptN
3748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableEvent:Wrong Module Pointer", (global_ptr == VADC))
3752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= ((uint32_t)VADC_BRSMR_ENSI_Msk);
3754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr     Pointer to the VADC module
3758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the background scan request source event .<BR>
3763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the background scan request s
3764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNo
3769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableEvent:Wrong Module Pointer", (global_ptr == VADC))
3773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENSI_Msk);
3775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * source.
3793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 262              	 .loc 1 3816 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	 
 267 0000 80B4     	 push {r7}
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 83B0     	 sub sp,sp,#12
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	 .cfi_def_cfa_register 7
 274 0006 7860     	 str r0,[r7,#4]
3817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
 275              	 .loc 1 3818 0
 276 0008 7B68     	 ldr r3,[r7,#4]
 277 000a D3F88430 	 ldr r3,[r3,#132]
 278 000e 43F08072 	 orr r2,r3,#16777216
 279 0012 7B68     	 ldr r3,[r7,#4]
 280 0014 C3F88420 	 str r2,[r3,#132]
3819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 281              	 .loc 1 3819 0
 282 0018 0C37     	 adds r7,r7,#12
 283              	 .cfi_def_cfa_offset 4
 284 001a BD46     	 mov sp,r7
 285              	 .cfi_def_cfa_register 13
 286              	 
 287 001c 5DF8047B 	 ldr r7,[sp],#4
 288              	 .cfi_restore 7
 289              	 .cfi_def_cfa_offset 0
 290 0020 7047     	 bx lr
 291              	 .cfi_endproc
 292              	.LFE229:
 294 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot,"ax",%progbits
 295              	 .align 2
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_VADC_GROUP_QueueDisableArbitrationSlot:
 300              	.LFB230:
3820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 301              	 .loc 1 3837 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305              	 
 306 0000 80B4     	 push {r7}
 307              	 .cfi_def_cfa_offset 4
 308              	 .cfi_offset 7,-4
 309 0002 83B0     	 sub sp,sp,#12
 310              	 .cfi_def_cfa_offset 16
 311 0004 00AF     	 add r7,sp,#0
 312              	 .cfi_def_cfa_register 7
 313 0006 7860     	 str r0,[r7,#4]
3838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
 314              	 .loc 1 3839 0
 315 0008 7B68     	 ldr r3,[r7,#4]
 316 000a D3F88430 	 ldr r3,[r3,#132]
 317 000e 23F08072 	 bic r2,r3,#16777216
 318 0012 7B68     	 ldr r3,[r7,#4]
 319 0014 C3F88420 	 str r2,[r3,#132]
3840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 320              	 .loc 1 3840 0
 321 0018 0C37     	 adds r7,r7,#12
 322              	 .cfi_def_cfa_offset 4
 323 001a BD46     	 mov sp,r7
 324              	 .cfi_def_cfa_register 13
 325              	 
 326 001c 5DF8047B 	 ldr r7,[sp],#4
 327              	 .cfi_restore 7
 328              	 .cfi_def_cfa_offset 0
 329 0020 7047     	 bx lr
 330              	 .cfi_endproc
 331              	.LFE230:
 333 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueFlushEntries,"ax",%progbits
 334              	 .align 2
 335              	 .thumb
 336              	 .thumb_func
 338              	XMC_VADC_GROUP_QueueFlushEntries:
 339              	.LFB234:
3841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
3847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the queue request source.<BR>\n
3850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the queue request source must have its conversion request considered by the arbiter, it must 
3851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. A call to this API would return the status of the arbitration slot of queue.
3853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
3854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<
3857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr
3859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GRO
3861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN0_Msk) >> VADC_G_ARBPR_ASEN0_Pos);
3863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
3946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <ul>
3966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The H/W generates a trigger needed for the queue request source.
3967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The Conversion is triggered manually by calling this API.
3968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * </ul>
3969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
3975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
3978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * to determine the queue length.
3992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
3998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
4005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
4006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
4008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue sequence.
4009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
4012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
4014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
4015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** /**
4016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
4018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
4019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
4022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
4023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
4025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * all the entries are removed from the queue.
4026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *
4027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
4029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****  */
4030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
4031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** {
 340              	 .loc 1 4031 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344              	 
 345 0000 80B4     	 push {r7}
 346              	 .cfi_def_cfa_offset 4
 347              	 .cfi_offset 7,-4
 348 0002 83B0     	 sub sp,sp,#12
 349              	 .cfi_def_cfa_offset 16
 350 0004 00AF     	 add r7,sp,#0
 351              	 .cfi_def_cfa_register 7
 352 0006 7860     	 str r0,[r7,#4]
4032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
4033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 353              	 .loc 1 4033 0
 354 0008 7B68     	 ldr r3,[r7,#4]
 355 000a D3F80431 	 ldr r3,[r3,#260]
 356 000e 43F48062 	 orr r2,r3,#1024
 357 0012 7B68     	 ldr r3,[r7,#4]
 358 0014 C3F80421 	 str r2,[r3,#260]
4034:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** 
4035:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 359              	 .loc 1 4035 0
 360 0018 00BF     	 nop
 361              	.L9:
 362              	 .loc 1 4035 0 is_stmt 0 discriminator 1
 363 001a 7B68     	 ldr r3,[r7,#4]
 364 001c D3F80831 	 ldr r3,[r3,#264]
 365 0020 03F02003 	 and r3,r3,#32
 366 0024 002B     	 cmp r3,#0
 367 0026 F8D0     	 beq .L9
4036:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   {
4037:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
4038:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h ****   }
4039:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_vadc.h **** }
 368              	 .loc 1 4039 0 is_stmt 1
 369 0028 0C37     	 adds r7,r7,#12
 370              	 .cfi_def_cfa_offset 4
 371 002a BD46     	 mov sp,r7
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 002c 5DF8047B 	 ldr r7,[sp],#4
 375              	 .cfi_restore 7
 376              	 .cfi_def_cfa_offset 0
 377 0030 7047     	 bx lr
 378              	 .cfi_endproc
 379              	.LFE234:
 381 0032 00BF     	 .section .rodata.g_xmc_vadc_group_array,"a",%progbits
 382              	 .align 2
 385              	g_xmc_vadc_group_array:
 386 0000 00440040 	 .word 1073759232
 387 0004 00480040 	 .word 1073760256
 388 0008 004C0040 	 .word 1073761280
 389 000c 00500040 	 .word 1073762304
 390              	 .section .text.XMC_VADC_GLOBAL_EnableModule,"ax",%progbits
 391              	 .align 2
 392              	 .global XMC_VADC_GLOBAL_EnableModule
 393              	 .thumb
 394              	 .thumb_func
 396              	XMC_VADC_GLOBAL_EnableModule:
 397              	.LFB256:
 398              	 .file 2 "../Libraries/XMCLib/src/xmc_vadc.c"
   1:../Libraries/XMCLib/src/xmc_vadc.c **** /**
   2:../Libraries/XMCLib/src/xmc_vadc.c ****  * @file xmc_vadc.c
   3:../Libraries/XMCLib/src/xmc_vadc.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   5:../Libraries/XMCLib/src/xmc_vadc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_vadc.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   9:../Libraries/XMCLib/src/xmc_vadc.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_vadc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_vadc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_vadc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_vadc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_vadc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_vadc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_vadc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_vadc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_vadc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_vadc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_vadc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_vadc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_vadc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  36:../Libraries/XMCLib/src/xmc_vadc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_vadc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  39:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-15:
  40:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_vadc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-20:
  43:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised for XMC1201 device.<br>
  44:../Libraries/XMCLib/src/xmc_vadc.c ****  *   
  45:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-04-27:
  46:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for SHS.<br>
  47:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added New APIs for trigger edge selection.<BR>
  48:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  51:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  54:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-25:
  55:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - BFL configuration in channel initialization fixed.
  56:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  57:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-07-28:
  58:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  59:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  60:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  61:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New APIs Created.
  62:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  63:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  64:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAlias
  65:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetInputClass
  66:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  67:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  68:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  69:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  70:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  71:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-12-01:
  72:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  73:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  74:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  75:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2016-06-17:
  76:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE 
  77:../Libraries/XMCLib/src/xmc_vadc.c ****  *       and XMC_VADC_SYNCTR_START_LOCATION
  78:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  79:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the EVAL configuration in API XMC_VADC_GROUP_CheckSlaveReadiness and XMC_VADC_GROUP_
  80:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New APIs added are:
  81:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  82:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
  83:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
  84:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultRegPriority
  85:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
  86:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
  87:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetResultRegPriority
  88:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  89:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2017-01-11:
  90:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fix assertion in XMC_VADC_GROUP_CheckSlaveReadiness() and XMC_VADC_GROUP_IgnoreSlaveReadin
  91:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  92:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2018-06-26:
  93:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed XMC_VADC_GLOBAL_StartupCalibration(), added wait until calibration is started
  94:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  95:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-03-30:
  96:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Changed XMC_VADC_GROUP_SetChannelAlias() to inline function
  97:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  98:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2019-05-07:
  99:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fix compilation warnings
 100:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
 101:../Libraries/XMCLib/src/xmc_vadc.c ****  * @endcond 
 102:../Libraries/XMCLib/src/xmc_vadc.c ****  *
 103:../Libraries/XMCLib/src/xmc_vadc.c ****  */
 104:../Libraries/XMCLib/src/xmc_vadc.c **** 
 105:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 106:../Libraries/XMCLib/src/xmc_vadc.c ****  * HEADER FILES
 107:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 108:../Libraries/XMCLib/src/xmc_vadc.c **** #include <xmc_vadc.h>
 109:../Libraries/XMCLib/src/xmc_vadc.c **** 
 110:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 111:../Libraries/XMCLib/src/xmc_vadc.c ****  * MACROS
 112:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 113:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_MAX_ICLASS_SET          (2U)  /**< Defines the maximum number of conversion parame
 114:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_NUM_EMUX_INTERFACES     (2U)  /**< Defines the maximum number of external multiple
 115:../Libraries/XMCLib/src/xmc_vadc.c **** 
 116:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_RESULT_LEFT_ALIGN_10BIT (2U)  /**< Defines the 10 bit converted result register le
 117:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     is used in the XMC_VADC_GLOBAL_SetCompareValue(
 118:../Libraries/XMCLib/src/xmc_vadc.c **** 
 119:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_SYNCTR_START_LOCATION (3U)  /**< Defines the location in SYNCTR needed for calcula
 120:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 121:../Libraries/XMCLib/src/xmc_vadc.c ****  * ENUMS
 122:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 123:../Libraries/XMCLib/src/xmc_vadc.c **** 
 124:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 125:../Libraries/XMCLib/src/xmc_vadc.c ****  * DATA STRUCTURES
 126:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 127:../Libraries/XMCLib/src/xmc_vadc.c **** 
 128:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 129:../Libraries/XMCLib/src/xmc_vadc.c ****  * GLOBAL DATA
 130:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 131:../Libraries/XMCLib/src/xmc_vadc.c **** 
 132:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 133:../Libraries/XMCLib/src/xmc_vadc.c **** 
 134:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U) 
 135:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 136:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 137:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 138:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 139:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 140:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 141:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 142:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 143:../Libraries/XMCLib/src/xmc_vadc.c **** 
 144:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
 145:../Libraries/XMCLib/src/xmc_vadc.c **** 
 146:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 147:../Libraries/XMCLib/src/xmc_vadc.c ****  * LOCAL ROUTINES
 148:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 149:../Libraries/XMCLib/src/xmc_vadc.c **** 
 150:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 151:../Libraries/XMCLib/src/xmc_vadc.c ****  * API IMPLEMENTATION
 152:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 153:../Libraries/XMCLib/src/xmc_vadc.c **** 
 154:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to enable the VADC Module*/
 155:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_EnableModule(void)
 156:../Libraries/XMCLib/src/xmc_vadc.c **** {
 399              	 .loc 2 156 0
 400              	 .cfi_startproc
 401              	 
 402              	 
 403 0000 80B5     	 push {r7,lr}
 404              	 .cfi_def_cfa_offset 8
 405              	 .cfi_offset 7,-8
 406              	 .cfi_offset 14,-4
 407 0002 00AF     	 add r7,sp,#0
 408              	 .cfi_def_cfa_register 7
 157:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 158:../Libraries/XMCLib/src/xmc_vadc.c ****    * Enable Out of Range Comparator for ADC channels pins P2.2to P2.9. This hack is applicable only
 159:../Libraries/XMCLib/src/xmc_vadc.c ****    * and in particular the G11 step.
 160:../Libraries/XMCLib/src/xmc_vadc.c ****    *
 161:../Libraries/XMCLib/src/xmc_vadc.c ****    * Please refer to the XMC1000 Errata sheet V1.4 released 2014-06 Errata ID : ADC_AI.003 Additona
 162:../Libraries/XMCLib/src/xmc_vadc.c ****    * function
 163:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 164:../Libraries/XMCLib/src/xmc_vadc.c **** 
 165:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined (COMPARATOR)
 166:../Libraries/XMCLib/src/xmc_vadc.c ****   COMPARATOR->ORCCTRL = (uint32_t)0xFF;
 167:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 168:../Libraries/XMCLib/src/xmc_vadc.c **** 
 169:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 170:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 171:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 172:../Libraries/XMCLib/src/xmc_vadc.c **** 
 173:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 174:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 175:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC )
 409              	 .loc 2 175 0
 410 0004 0120     	 movs r0,#1
 411 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 176:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 177:../Libraries/XMCLib/src/xmc_vadc.c **** }
 412              	 .loc 2 177 0
 413 000a 80BD     	 pop {r7,pc}
 414              	 .cfi_endproc
 415              	.LFE256:
 417              	 .section .text.XMC_VADC_GLOBAL_DisableModule,"ax",%progbits
 418              	 .align 2
 419              	 .global XMC_VADC_GLOBAL_DisableModule
 420              	 .thumb
 421              	 .thumb_func
 423              	XMC_VADC_GLOBAL_DisableModule:
 424              	.LFB257:
 178:../Libraries/XMCLib/src/xmc_vadc.c **** 
 179:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to Disable the VADC Module*/
 180:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_DisableModule(void)
 181:../Libraries/XMCLib/src/xmc_vadc.c **** {
 425              	 .loc 2 181 0
 426              	 .cfi_startproc
 427              	 
 428              	 
 429 0000 80B5     	 push {r7,lr}
 430              	 .cfi_def_cfa_offset 8
 431              	 .cfi_offset 7,-8
 432              	 .cfi_offset 14,-4
 433 0002 00AF     	 add r7,sp,#0
 434              	 .cfi_def_cfa_register 7
 182:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 183:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 184:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_AssertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
 435              	 .loc 2 184 0
 436 0004 0120     	 movs r0,#1
 437 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 185:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 186:../Libraries/XMCLib/src/xmc_vadc.c **** 
 187:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 188:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 189:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 190:../Libraries/XMCLib/src/xmc_vadc.c **** 
 191:../Libraries/XMCLib/src/xmc_vadc.c **** }
 438              	 .loc 2 191 0
 439 000a 80BD     	 pop {r7,pc}
 440              	 .cfi_endproc
 441              	.LFE257:
 443              	 .section .text.XMC_VADC_GLOBAL_Init,"ax",%progbits
 444              	 .align 2
 445              	 .global XMC_VADC_GLOBAL_Init
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_VADC_GLOBAL_Init:
 450              	.LFB258:
 192:../Libraries/XMCLib/src/xmc_vadc.c **** 
 193:../Libraries/XMCLib/src/xmc_vadc.c **** 
 194:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize global resources */
 195:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
 196:../Libraries/XMCLib/src/xmc_vadc.c **** {
 451              	 .loc 2 196 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455 0000 80B5     	 push {r7,lr}
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 82B0     	 sub sp,sp,#8
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	 .cfi_def_cfa_register 7
 463 0006 7860     	 str r0,[r7,#4]
 464 0008 3960     	 str r1,[r7]
 197:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 198:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 199:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 200:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_Init:Wrong Module Pointer", (global_ptr == VADC))
 201:../Libraries/XMCLib/src/xmc_vadc.c **** 
 202:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the VADC module*/
 203:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GLOBAL_EnableModule();
 465              	 .loc 2 203 0
 466 000a FFF7FEFF 	 bl XMC_VADC_GLOBAL_EnableModule
 204:../Libraries/XMCLib/src/xmc_vadc.c **** 
 205:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->CLC = (uint32_t)(config->clc);
 467              	 .loc 2 205 0
 468 000e 3B68     	 ldr r3,[r7]
 469 0010 5A69     	 ldr r2,[r3,#20]
 470 0012 7B68     	 ldr r3,[r7,#4]
 471 0014 1A60     	 str r2,[r3]
 206:../Libraries/XMCLib/src/xmc_vadc.c **** 
 207:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Clock configuration */
 208:../Libraries/XMCLib/src/xmc_vadc.c **** 
 209:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 210:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Ms
 472              	 .loc 2 210 0
 473 0016 3B68     	 ldr r3,[r7]
 474 0018 5B68     	 ldr r3,[r3,#4]
 475 001a 43F40042 	 orr r2,r3,#32768
 476 001e 7B68     	 ldr r3,[r7,#4]
 477 0020 C3F88020 	 str r2,[r3,#128]
 211:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 212:../Libraries/XMCLib/src/xmc_vadc.c **** 
 213:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-0 configuration */
 214:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
 478              	 .loc 2 214 0
 479 0024 3B68     	 ldr r3,[r7]
 480 0026 9A68     	 ldr r2,[r3,#8]
 481 0028 7B68     	 ldr r3,[r7,#4]
 482 002a C3F8A020 	 str r2,[r3,#160]
 215:../Libraries/XMCLib/src/xmc_vadc.c **** 
 216:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-1 configuration */
 217:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
 483              	 .loc 2 217 0
 484 002e 3B68     	 ldr r3,[r7]
 485 0030 DA68     	 ldr r2,[r3,#12]
 486 0032 7B68     	 ldr r3,[r7,#4]
 487 0034 C3F8A420 	 str r2,[r3,#164]
 218:../Libraries/XMCLib/src/xmc_vadc.c **** 
 219:../Libraries/XMCLib/src/xmc_vadc.c **** 
 220:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Result generation related configuration */
 221:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
 488              	 .loc 2 221 0
 489 0038 3B68     	 ldr r3,[r7]
 490 003a 1A69     	 ldr r2,[r3,#16]
 491 003c 7B68     	 ldr r3,[r7,#4]
 492 003e C3F88022 	 str r2,[r3,#640]
 222:../Libraries/XMCLib/src/xmc_vadc.c **** 
 223:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 224:../Libraries/XMCLib/src/xmc_vadc.c **** 
 225:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Boundaries */
 226:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = (uint32_t)(config->globbound);
 493              	 .loc 2 226 0
 494 0042 3B68     	 ldr r3,[r7]
 495 0044 1A68     	 ldr r2,[r3]
 496 0046 7B68     	 ldr r3,[r7,#4]
 497 0048 C3F8B820 	 str r2,[r3,#184]
 227:../Libraries/XMCLib/src/xmc_vadc.c **** 
 228:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 229:../Libraries/XMCLib/src/xmc_vadc.c **** 
 230:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Configure the SHS register that are needed for XMC11xx devices*/
 231:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 232:../Libraries/XMCLib/src/xmc_vadc.c **** 
 233:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enabling the Analog part of the converter*/
 234:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
 235:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(SHS_SHSCFG_ANOFF_Msk);
 236:../Libraries/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG = reg;
 237:../Libraries/XMCLib/src/xmc_vadc.c **** 
 238:../Libraries/XMCLib/src/xmc_vadc.c ****   /* From the Errata sheet of XMC1100 V1.7*/
 239:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
 240:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 241:../Libraries/XMCLib/src/xmc_vadc.c **** 
 242:../Libraries/XMCLib/src/xmc_vadc.c **** }
 498              	 .loc 2 242 0
 499 004c 0837     	 adds r7,r7,#8
 500              	 .cfi_def_cfa_offset 8
 501 004e BD46     	 mov sp,r7
 502              	 .cfi_def_cfa_register 13
 503              	 
 504 0050 80BD     	 pop {r7,pc}
 505              	 .cfi_endproc
 506              	.LFE258:
 508 0052 00BF     	 .section .text.XMC_VADC_GLOBAL_InputClassInit,"ax",%progbits
 509              	 .align 2
 510              	 .global XMC_VADC_GLOBAL_InputClassInit
 511              	 .thumb
 512              	 .thumb_func
 514              	XMC_VADC_GLOBAL_InputClassInit:
 515              	.LFB259:
 243:../Libraries/XMCLib/src/xmc_vadc.c **** 
 244:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Set the Global IClass registers*/
 245:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
 246:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 247:../Libraries/XMCLib/src/xmc_vadc.c **** {
 516              	 .loc 2 247 0
 517              	 .cfi_startproc
 518              	 
 519              	 
 520              	 
 521 0000 80B4     	 push {r7}
 522              	 .cfi_def_cfa_offset 4
 523              	 .cfi_offset 7,-4
 524 0002 85B0     	 sub sp,sp,#20
 525              	 .cfi_def_cfa_offset 24
 526 0004 00AF     	 add r7,sp,#0
 527              	 .cfi_def_cfa_register 7
 528 0006 F860     	 str r0,[r7,#12]
 529 0008 B960     	 str r1,[r7,#8]
 530 000a 3B60     	 str r3,[r7]
 531 000c 1346     	 mov r3,r2
 532 000e FB71     	 strb r3,[r7,#7]
 248:../Libraries/XMCLib/src/xmc_vadc.c **** 
 249:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Module Pointer", (global_ptr == VADC))
 250:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP
 251:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLA
 252:../Libraries/XMCLib/src/xmc_vadc.c **** 
 253:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 254:../Libraries/XMCLib/src/xmc_vadc.c ****   if (conv_type == XMC_VADC_GROUP_CONV_STD )
 533              	 .loc 2 254 0
 534 0010 FB79     	 ldrb r3,[r7,#7]
 535 0012 002B     	 cmp r3,#0
 536 0014 09D1     	 bne .L14
 255:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 256:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 257:../Libraries/XMCLib/src/xmc_vadc.c **** 	XMC_UNUSED_ARG(conv_type);
 258:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass &
 537              	 .loc 2 258 0
 538 0016 BA68     	 ldr r2,[r7,#8]
 539 0018 40F21F73 	 movw r3,#1823
 540 001c 1340     	 ands r3,r3,r2
 541 001e FA68     	 ldr r2,[r7,#12]
 542 0020 3968     	 ldr r1,[r7]
 543 0022 2831     	 adds r1,r1,#40
 544 0024 42F82130 	 str r3,[r2,r1,lsl#2]
 545 0028 07E0     	 b .L13
 546              	.L14:
 259:../Libraries/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 260:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 261:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 262:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 263:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 264:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC
 547              	 .loc 2 264 0
 548 002a BA68     	 ldr r2,[r7,#8]
 549 002c 054B     	 ldr r3,.L16
 550 002e 1340     	 ands r3,r3,r2
 551 0030 FA68     	 ldr r2,[r7,#12]
 552 0032 3968     	 ldr r1,[r7]
 553 0034 2831     	 adds r1,r1,#40
 554 0036 42F82130 	 str r3,[r2,r1,lsl#2]
 555              	.L13:
 265:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 266:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 267:../Libraries/XMCLib/src/xmc_vadc.c **** }
 556              	 .loc 2 267 0
 557 003a 1437     	 adds r7,r7,#20
 558              	 .cfi_def_cfa_offset 4
 559 003c BD46     	 mov sp,r7
 560              	 .cfi_def_cfa_register 13
 561              	 
 562 003e 5DF8047B 	 ldr r7,[sp],#4
 563              	 .cfi_restore 7
 564              	 .cfi_def_cfa_offset 0
 565 0042 7047     	 bx lr
 566              	.L17:
 567              	 .align 2
 568              	.L16:
 569 0044 00001F07 	 .word 119472128
 570              	 .cfi_endproc
 571              	.LFE259:
 573              	 .section .text.XMC_VADC_GLOBAL_StartupCalibration,"ax",%progbits
 574              	 .align 2
 575              	 .global XMC_VADC_GLOBAL_StartupCalibration
 576              	 .thumb
 577              	 .thumb_func
 579              	XMC_VADC_GLOBAL_StartupCalibration:
 580              	.LFB260:
 268:../Libraries/XMCLib/src/xmc_vadc.c **** 
 269:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable startup calibration feature */
 270:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
 271:../Libraries/XMCLib/src/xmc_vadc.c **** {
 581              	 .loc 2 271 0
 582              	 .cfi_startproc
 583              	 
 584              	 
 585              	 
 586 0000 80B4     	 push {r7}
 587              	 .cfi_def_cfa_offset 4
 588              	 .cfi_offset 7,-4
 589 0002 85B0     	 sub sp,sp,#20
 590              	 .cfi_def_cfa_offset 24
 591 0004 00AF     	 add r7,sp,#0
 592              	 .cfi_def_cfa_register 7
 593 0006 7860     	 str r0,[r7,#4]
 272:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 273:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
 274:../Libraries/XMCLib/src/xmc_vadc.c ****   VADC_G_TypeDef *group_ptr;
 275:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 276:../Libraries/XMCLib/src/xmc_vadc.c ****   
 277:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))
 278:../Libraries/XMCLib/src/xmc_vadc.c **** 
 279:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
 594              	 .loc 2 279 0
 595 0008 7B68     	 ldr r3,[r7,#4]
 596 000a D3F88030 	 ldr r3,[r3,#128]
 597 000e 43F00042 	 orr r2,r3,#-2147483648
 598 0012 7B68     	 ldr r3,[r7,#4]
 599 0014 C3F88020 	 str r2,[r3,#128]
 280:../Libraries/XMCLib/src/xmc_vadc.c **** 
 281:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 282:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until all active groups finish calibration */
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 600              	 .loc 2 283 0
 601 0018 0023     	 movs r3,#0
 602 001a FB73     	 strb r3,[r7,#15]
 603 001c 17E0     	 b .L19
 604              	.L23:
 284:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 285:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr = g_xmc_vadc_group_array[i];
 605              	 .loc 2 285 0
 606 001e FB7B     	 ldrb r3,[r7,#15]
 607 0020 0F4A     	 ldr r2,.L24
 608 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 609 0026 BB60     	 str r3,[r7,#8]
 286:../Libraries/XMCLib/src/xmc_vadc.c ****     if ( (group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_ANONS_Msk)
 610              	 .loc 2 286 0
 611 0028 BB68     	 ldr r3,[r7,#8]
 612 002a D3F88030 	 ldr r3,[r3,#128]
 613 002e 03F44033 	 and r3,r3,#196608
 614 0032 002B     	 cmp r3,#0
 615 0034 08D0     	 beq .L20
 287:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 288:../Libraries/XMCLib/src/xmc_vadc.c ****       /* This group is active. Loop until it finishes calibration */
 289:../Libraries/XMCLib/src/xmc_vadc.c ****       while((group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_CAL_Msk)
 616              	 .loc 2 289 0
 617 0036 00E0     	 b .L21
 618              	.L22:
 290:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 291:../Libraries/XMCLib/src/xmc_vadc.c ****         __NOP();
 619              	 .loc 2 291 0
 620              	
 621 0038 00BF     	 nop
 622              	
 623              	 .thumb
 624              	.L21:
 289:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 625              	 .loc 2 289 0
 626 003a BB68     	 ldr r3,[r7,#8]
 627 003c D3F88030 	 ldr r3,[r3,#128]
 628 0040 03F08053 	 and r3,r3,#268435456
 629 0044 002B     	 cmp r3,#0
 630 0046 F7D1     	 bne .L22
 631              	.L20:
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 632              	 .loc 2 283 0 discriminator 2
 633 0048 FB7B     	 ldrb r3,[r7,#15]
 634 004a 0133     	 adds r3,r3,#1
 635 004c FB73     	 strb r3,[r7,#15]
 636              	.L19:
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 637              	 .loc 2 283 0 is_stmt 0 discriminator 1
 638 004e FB7B     	 ldrb r3,[r7,#15]
 639 0050 032B     	 cmp r3,#3
 640 0052 E4D9     	 bls .L23
 292:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 293:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 294:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 295:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 296:../Libraries/XMCLib/src/xmc_vadc.c **** 
 297:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until calibration is started */
 298:../Libraries/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) !=
 299:../Libraries/XMCLib/src/xmc_vadc.c **** 		  XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
 300:../Libraries/XMCLib/src/xmc_vadc.c ****    {
 301:../Libraries/XMCLib/src/xmc_vadc.c ****      __NOP();
 302:../Libraries/XMCLib/src/xmc_vadc.c ****    }
 303:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until it finishes calibration */
 304:../Libraries/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
 305:../Libraries/XMCLib/src/xmc_vadc.c ****          XMC_VADC_SHS_START_UP_CAL_ACTIVE )
 306:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 307:../Libraries/XMCLib/src/xmc_vadc.c ****     __NOP();
 308:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 309:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 310:../Libraries/XMCLib/src/xmc_vadc.c **** }
 641              	 .loc 2 310 0 is_stmt 1
 642 0054 1437     	 adds r7,r7,#20
 643              	 .cfi_def_cfa_offset 4
 644 0056 BD46     	 mov sp,r7
 645              	 .cfi_def_cfa_register 13
 646              	 
 647 0058 5DF8047B 	 ldr r7,[sp],#4
 648              	 .cfi_restore 7
 649              	 .cfi_def_cfa_offset 0
 650 005c 7047     	 bx lr
 651              	.L25:
 652 005e 00BF     	 .align 2
 653              	.L24:
 654 0060 00000000 	 .word g_xmc_vadc_group_array
 655              	 .cfi_endproc
 656              	.LFE260:
 658              	 .section .text.XMC_VADC_GLOBAL_SetBoundaries,"ax",%progbits
 659              	 .align 2
 660              	 .global XMC_VADC_GLOBAL_SetBoundaries
 661              	 .thumb
 662              	 .thumb_func
 664              	XMC_VADC_GLOBAL_SetBoundaries:
 665              	.LFB261:
 311:../Libraries/XMCLib/src/xmc_vadc.c **** 
 312:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boudaries for result of conversion. Should the boundaries be violated, interrupts are
 313:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 314:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr,
 315:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary0,
 316:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary1)
 317:../Libraries/XMCLib/src/xmc_vadc.c **** {
 666              	 .loc 2 317 0
 667              	 .cfi_startproc
 668              	 
 669              	 
 670              	 
 671 0000 80B4     	 push {r7}
 672              	 .cfi_def_cfa_offset 4
 673              	 .cfi_offset 7,-4
 674 0002 87B0     	 sub sp,sp,#28
 675              	 .cfi_def_cfa_offset 32
 676 0004 00AF     	 add r7,sp,#0
 677              	 .cfi_def_cfa_register 7
 678 0006 F860     	 str r0,[r7,#12]
 679 0008 B960     	 str r1,[r7,#8]
 680 000a 7A60     	 str r2,[r7,#4]
 318:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 319:../Libraries/XMCLib/src/xmc_vadc.c **** 
 320:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 321:../Libraries/XMCLib/src/xmc_vadc.c **** 
 322:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = 0U;
 681              	 .loc 2 322 0
 682 000c 0023     	 movs r3,#0
 683 000e 7B61     	 str r3,[r7,#20]
 323:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary0 << VADC_GLOBBOUND_BOUNDARY0_Pos);
 684              	 .loc 2 323 0
 685 0010 7A69     	 ldr r2,[r7,#20]
 686 0012 BB68     	 ldr r3,[r7,#8]
 687 0014 1343     	 orrs r3,r3,r2
 688 0016 7B61     	 str r3,[r7,#20]
 324:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary1 << VADC_GLOBBOUND_BOUNDARY1_Pos);
 689              	 .loc 2 324 0
 690 0018 7B68     	 ldr r3,[r7,#4]
 691 001a 1B04     	 lsls r3,r3,#16
 692 001c 7A69     	 ldr r2,[r7,#20]
 693 001e 1343     	 orrs r3,r3,r2
 694 0020 7B61     	 str r3,[r7,#20]
 325:../Libraries/XMCLib/src/xmc_vadc.c **** 
 326:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 695              	 .loc 2 326 0
 696 0022 FB68     	 ldr r3,[r7,#12]
 697 0024 7A69     	 ldr r2,[r7,#20]
 698 0026 C3F8B820 	 str r2,[r3,#184]
 327:../Libraries/XMCLib/src/xmc_vadc.c **** }
 699              	 .loc 2 327 0
 700 002a 1C37     	 adds r7,r7,#28
 701              	 .cfi_def_cfa_offset 4
 702 002c BD46     	 mov sp,r7
 703              	 .cfi_def_cfa_register 13
 704              	 
 705 002e 5DF8047B 	 ldr r7,[sp],#4
 706              	 .cfi_restore 7
 707              	 .cfi_def_cfa_offset 0
 708 0032 7047     	 bx lr
 709              	 .cfi_endproc
 710              	.LFE261:
 712              	 .section .text.XMC_VADC_GLOBAL_SetIndividualBoundary,"ax",%progbits
 713              	 .align 2
 714              	 .global XMC_VADC_GLOBAL_SetIndividualBoundary
 715              	 .thumb
 716              	 .thumb_func
 718              	XMC_VADC_GLOBAL_SetIndividualBoundary:
 719              	.LFB262:
 328:../Libraries/XMCLib/src/xmc_vadc.c **** 
 329:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 330:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
 331:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 332:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const uint16_t boundary_value)
 333:../Libraries/XMCLib/src/xmc_vadc.c **** {
 720              	 .loc 2 333 0
 721              	 .cfi_startproc
 722              	 
 723              	 
 724              	 
 725 0000 80B4     	 push {r7}
 726              	 .cfi_def_cfa_offset 4
 727              	 .cfi_offset 7,-4
 728 0002 85B0     	 sub sp,sp,#20
 729              	 .cfi_def_cfa_offset 24
 730 0004 00AF     	 add r7,sp,#0
 731              	 .cfi_def_cfa_register 7
 732 0006 7860     	 str r0,[r7,#4]
 733 0008 0B46     	 mov r3,r1
 734 000a FB70     	 strb r3,[r7,#3]
 735 000c 1346     	 mov r3,r2
 736 000e 3B80     	 strh r3,[r7]
 334:../Libraries/XMCLib/src/xmc_vadc.c **** 
 335:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 336:../Libraries/XMCLib/src/xmc_vadc.c **** 
 337:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 338:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Boundary Selection",
 339:../Libraries/XMCLib/src/xmc_vadc.c ****              ((XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection) ||
 340:../Libraries/XMCLib/src/xmc_vadc.c ****               (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)))
 341:../Libraries/XMCLib/src/xmc_vadc.c **** 
 342:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 343:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = global_ptr->GLOBBOUND;
 737              	 .loc 2 343 0
 738 0010 7B68     	 ldr r3,[r7,#4]
 739 0012 D3F8B830 	 ldr r3,[r3,#184]
 740 0016 FB60     	 str r3,[r7,#12]
 344:../Libraries/XMCLib/src/xmc_vadc.c **** 
 345:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection)
 741              	 .loc 2 345 0
 742 0018 FB78     	 ldrb r3,[r7,#3]
 743 001a 022B     	 cmp r3,#2
 744 001c 0AD1     	 bne .L28
 346:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 347:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY0_Msk);
 745              	 .loc 2 347 0
 746 001e FB68     	 ldr r3,[r7,#12]
 747 0020 23F47F63 	 bic r3,r3,#4080
 748 0024 23F00F03 	 bic r3,r3,#15
 749 0028 FB60     	 str r3,[r7,#12]
 348:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY0_Pos);
 750              	 .loc 2 348 0
 751 002a 3B88     	 ldrh r3,[r7]
 752 002c FA68     	 ldr r2,[r7,#12]
 753 002e 1343     	 orrs r3,r3,r2
 754 0030 FB60     	 str r3,[r7,#12]
 755 0032 0DE0     	 b .L29
 756              	.L28:
 349:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 350:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)
 757              	 .loc 2 350 0
 758 0034 FB78     	 ldrb r3,[r7,#3]
 759 0036 032B     	 cmp r3,#3
 760 0038 0AD1     	 bne .L29
 351:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 352:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY1_Msk);
 761              	 .loc 2 352 0
 762 003a FB68     	 ldr r3,[r7,#12]
 763 003c 23F07F63 	 bic r3,r3,#267386880
 764 0040 23F47023 	 bic r3,r3,#983040
 765 0044 FB60     	 str r3,[r7,#12]
 353:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 766              	 .loc 2 353 0
 767 0046 3B88     	 ldrh r3,[r7]
 768 0048 1B04     	 lsls r3,r3,#16
 769 004a FA68     	 ldr r2,[r7,#12]
 770 004c 1343     	 orrs r3,r3,r2
 771 004e FB60     	 str r3,[r7,#12]
 772              	.L29:
 354:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 355:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 356:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 357:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 358:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 359:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 773              	 .loc 2 359 0
 774 0050 7B68     	 ldr r3,[r7,#4]
 775 0052 FA68     	 ldr r2,[r7,#12]
 776 0054 C3F8B820 	 str r2,[r3,#184]
 360:../Libraries/XMCLib/src/xmc_vadc.c **** 
 361:../Libraries/XMCLib/src/xmc_vadc.c **** }
 777              	 .loc 2 361 0
 778 0058 1437     	 adds r7,r7,#20
 779              	 .cfi_def_cfa_offset 4
 780 005a BD46     	 mov sp,r7
 781              	 .cfi_def_cfa_register 13
 782              	 
 783 005c 5DF8047B 	 ldr r7,[sp],#4
 784              	 .cfi_restore 7
 785              	 .cfi_def_cfa_offset 0
 786 0060 7047     	 bx lr
 787              	 .cfi_endproc
 788              	.LFE262:
 790 0062 00BF     	 .section .text.XMC_VADC_GLOBAL_SetCompareValue,"ax",%progbits
 791              	 .align 2
 792              	 .global XMC_VADC_GLOBAL_SetCompareValue
 793              	 .thumb
 794              	 .thumb_func
 796              	XMC_VADC_GLOBAL_SetCompareValue:
 797              	.LFB263:
 362:../Libraries/XMCLib/src/xmc_vadc.c **** 
 363:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 364:../Libraries/XMCLib/src/xmc_vadc.c **** 
 365:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set compare value for the result register. Result of conversion is compared against this 
 366:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
 367:../Libraries/XMCLib/src/xmc_vadc.c **** {
 798              	 .loc 2 367 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803 0000 80B4     	 push {r7}
 804              	 .cfi_def_cfa_offset 4
 805              	 .cfi_offset 7,-4
 806 0002 83B0     	 sub sp,sp,#12
 807              	 .cfi_def_cfa_offset 16
 808 0004 00AF     	 add r7,sp,#0
 809              	 .cfi_def_cfa_register 7
 810 0006 7860     	 str r0,[r7,#4]
 811 0008 0B46     	 mov r3,r1
 812 000a 7B80     	 strh r3,[r7,#2]
 368:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetCompareValue:Wrong Module Pointer", (global_ptr == VADC))
 369:../Libraries/XMCLib/src/xmc_vadc.c **** 
 370:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES &= ~((uint32_t)VADC_GLOBRES_RESULT_Msk);
 813              	 .loc 2 370 0
 814 000c 7B68     	 ldr r3,[r7,#4]
 815 000e D3F80033 	 ldr r3,[r3,#768]
 816 0012 1B0C     	 lsrs r3,r3,#16
 817 0014 1B04     	 lsls r3,r3,#16
 818 0016 7A68     	 ldr r2,[r7,#4]
 819 0018 C2F80033 	 str r3,[r2,#768]
 371:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 820              	 .loc 2 371 0
 821 001c 7B68     	 ldr r3,[r7,#4]
 822 001e D3F80023 	 ldr r2,[r3,#768]
 823 0022 7B88     	 ldrh r3,[r7,#2]
 824 0024 9B00     	 lsls r3,r3,#2
 825 0026 1A43     	 orrs r2,r2,r3
 826 0028 7B68     	 ldr r3,[r7,#4]
 827 002a C3F80023 	 str r2,[r3,#768]
 372:../Libraries/XMCLib/src/xmc_vadc.c **** }
 828              	 .loc 2 372 0
 829 002e 0C37     	 adds r7,r7,#12
 830              	 .cfi_def_cfa_offset 4
 831 0030 BD46     	 mov sp,r7
 832              	 .cfi_def_cfa_register 13
 833              	 
 834 0032 5DF8047B 	 ldr r7,[sp],#4
 835              	 .cfi_restore 7
 836              	 .cfi_def_cfa_offset 0
 837 0036 7047     	 bx lr
 838              	 .cfi_endproc
 839              	.LFE263:
 841              	 .section .text.XMC_VADC_GLOBAL_GetCompareResult,"ax",%progbits
 842              	 .align 2
 843              	 .global XMC_VADC_GLOBAL_GetCompareResult
 844              	 .thumb
 845              	 .thumb_func
 847              	XMC_VADC_GLOBAL_GetCompareResult:
 848              	.LFB264:
 373:../Libraries/XMCLib/src/xmc_vadc.c **** 
 374:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of comparison */
 375:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr)
 376:../Libraries/XMCLib/src/xmc_vadc.c **** {
 849              	 .loc 2 376 0
 850              	 .cfi_startproc
 851              	 
 852              	 
 853              	 
 854 0000 80B4     	 push {r7}
 855              	 .cfi_def_cfa_offset 4
 856              	 .cfi_offset 7,-4
 857 0002 85B0     	 sub sp,sp,#20
 858              	 .cfi_def_cfa_offset 24
 859 0004 00AF     	 add r7,sp,#0
 860              	 .cfi_def_cfa_register 7
 861 0006 7860     	 str r0,[r7,#4]
 377:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
 378:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
 379:../Libraries/XMCLib/src/xmc_vadc.c **** 
 380:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetCompareResult:Wrong Module Pointer", (global_ptr == VADC))
 381:../Libraries/XMCLib/src/xmc_vadc.c **** 
 382:../Libraries/XMCLib/src/xmc_vadc.c ****   res = global_ptr->GLOBRES;
 862              	 .loc 2 382 0
 863 0008 7B68     	 ldr r3,[r7,#4]
 864 000a D3F80033 	 ldr r3,[r3,#768]
 865 000e BB60     	 str r3,[r7,#8]
 383:../Libraries/XMCLib/src/xmc_vadc.c **** 
 384:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_GLOBRES_VF_Msk)
 866              	 .loc 2 384 0
 867 0010 BB68     	 ldr r3,[r7,#8]
 868 0012 002B     	 cmp r3,#0
 869 0014 06DA     	 bge .L32
 385:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 386:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_GLOBRES_FCR_Pos) & (uint32_
 870              	 .loc 2 386 0
 871 0016 BB68     	 ldr r3,[r7,#8]
 872 0018 9B0F     	 lsrs r3,r3,#30
 873 001a DBB2     	 uxtb r3,r3
 874 001c 03F00103 	 and r3,r3,#1
 875 0020 FB73     	 strb r3,[r7,#15]
 876 0022 01E0     	 b .L33
 877              	.L32:
 387:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 388:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 389:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 390:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 878              	 .loc 2 390 0
 879 0024 0223     	 movs r3,#2
 880 0026 FB73     	 strb r3,[r7,#15]
 881              	.L33:
 391:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 392:../Libraries/XMCLib/src/xmc_vadc.c **** 
 393:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 882              	 .loc 2 393 0
 883 0028 FB7B     	 ldrb r3,[r7,#15]
 394:../Libraries/XMCLib/src/xmc_vadc.c **** }
 884              	 .loc 2 394 0
 885 002a 1846     	 mov r0,r3
 886 002c 1437     	 adds r7,r7,#20
 887              	 .cfi_def_cfa_offset 4
 888 002e BD46     	 mov sp,r7
 889              	 .cfi_def_cfa_register 13
 890              	 
 891 0030 5DF8047B 	 ldr r7,[sp],#4
 892              	 .cfi_restore 7
 893              	 .cfi_def_cfa_offset 0
 894 0034 7047     	 bx lr
 895              	 .cfi_endproc
 896              	.LFE264:
 898 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BindGroupToEMux,"ax",%progbits
 899              	 .align 2
 900              	 .global XMC_VADC_GLOBAL_BindGroupToEMux
 901              	 .thumb
 902              	 .thumb_func
 904              	XMC_VADC_GLOBAL_BindGroupToEMux:
 905              	.LFB265:
 395:../Libraries/XMCLib/src/xmc_vadc.c **** 
 396:../Libraries/XMCLib/src/xmc_vadc.c **** /* Bind one of the four groups to one of the two EMUX interfaces */
 397:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_EMUX_AVAILABLE == 1U)
 398:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
 399:../Libraries/XMCLib/src/xmc_vadc.c **** {
 906              	 .loc 2 399 0
 907              	 .cfi_startproc
 908              	 
 909              	 
 910              	 
 911 0000 80B4     	 push {r7}
 912              	 .cfi_def_cfa_offset 4
 913              	 .cfi_offset 7,-4
 914 0002 87B0     	 sub sp,sp,#28
 915              	 .cfi_def_cfa_offset 32
 916 0004 00AF     	 add r7,sp,#0
 917              	 .cfi_def_cfa_register 7
 918 0006 F860     	 str r0,[r7,#12]
 919 0008 B960     	 str r1,[r7,#8]
 920 000a 7A60     	 str r2,[r7,#4]
 400:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
 401:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
 402:../Libraries/XMCLib/src/xmc_vadc.c **** 
 403:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong Module Pointer", (global_ptr == VADC))
 404:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong EMUX Group", (emuxif < XMC_VADC_NUM_EMUX_INTERF
 405:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong VADC Group", (group < XMC_VADC_MAXIMUM_NUM_GROU
 406:../Libraries/XMCLib/src/xmc_vadc.c **** 
 407:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == emuxif)
 921              	 .loc 2 407 0
 922 000c BB68     	 ldr r3,[r7,#8]
 923 000e 002B     	 cmp r3,#0
 924 0010 04D1     	 bne .L36
 408:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 409:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Pos;
 925              	 .loc 2 409 0
 926 0012 0023     	 movs r3,#0
 927 0014 3B61     	 str r3,[r7,#16]
 410:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Msk;
 928              	 .loc 2 410 0
 929 0016 0F23     	 movs r3,#15
 930 0018 7B61     	 str r3,[r7,#20]
 931 001a 03E0     	 b .L37
 932              	.L36:
 411:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 412:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 413:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 414:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Pos;
 933              	 .loc 2 414 0
 934 001c 0423     	 movs r3,#4
 935 001e 3B61     	 str r3,[r7,#16]
 415:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Msk;
 936              	 .loc 2 415 0
 937 0020 F023     	 movs r3,#240
 938 0022 7B61     	 str r3,[r7,#20]
 939              	.L37:
 416:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 417:../Libraries/XMCLib/src/xmc_vadc.c **** 
 418:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL &= ~(mask);
 940              	 .loc 2 418 0
 941 0024 FB68     	 ldr r3,[r7,#12]
 942 0026 D3F8F023 	 ldr r2,[r3,#1008]
 943 002a 7B69     	 ldr r3,[r7,#20]
 944 002c DB43     	 mvns r3,r3
 945 002e 1A40     	 ands r2,r2,r3
 946 0030 FB68     	 ldr r3,[r7,#12]
 947 0032 C3F8F023 	 str r2,[r3,#1008]
 419:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 948              	 .loc 2 419 0
 949 0036 FB68     	 ldr r3,[r7,#12]
 950 0038 D3F8F023 	 ldr r2,[r3,#1008]
 951 003c 3B69     	 ldr r3,[r7,#16]
 952 003e 7968     	 ldr r1,[r7,#4]
 953 0040 01FA03F3 	 lsl r3,r1,r3
 954 0044 1A43     	 orrs r2,r2,r3
 955 0046 FB68     	 ldr r3,[r7,#12]
 956 0048 C3F8F023 	 str r2,[r3,#1008]
 420:../Libraries/XMCLib/src/xmc_vadc.c **** 
 421:../Libraries/XMCLib/src/xmc_vadc.c **** }
 957              	 .loc 2 421 0
 958 004c 1C37     	 adds r7,r7,#28
 959              	 .cfi_def_cfa_offset 4
 960 004e BD46     	 mov sp,r7
 961              	 .cfi_def_cfa_register 13
 962              	 
 963 0050 5DF8047B 	 ldr r7,[sp],#4
 964              	 .cfi_restore 7
 965              	 .cfi_def_cfa_offset 0
 966 0054 7047     	 bx lr
 967              	 .cfi_endproc
 968              	.LFE265:
 970 0056 00BF     	 .section .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode,"ax",%progbits
 971              	 .align 2
 972              	 .global XMC_VADC_GLOBAL_SetResultEventInterruptNode
 973              	 .thumb
 974              	 .thumb_func
 976              	XMC_VADC_GLOBAL_SetResultEventInterruptNode:
 977              	.LFB266:
 422:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
 423:../Libraries/XMCLib/src/xmc_vadc.c **** 
 424:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind result event with a service request line */
 425:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
 426:../Libraries/XMCLib/src/xmc_vadc.c **** {
 978              	 .loc 2 426 0
 979              	 .cfi_startproc
 980              	 
 981              	 
 982              	 
 983 0000 80B4     	 push {r7}
 984              	 .cfi_def_cfa_offset 4
 985              	 .cfi_offset 7,-4
 986 0002 85B0     	 sub sp,sp,#20
 987              	 .cfi_def_cfa_offset 24
 988 0004 00AF     	 add r7,sp,#0
 989              	 .cfi_def_cfa_register 7
 990 0006 7860     	 str r0,[r7,#4]
 991 0008 0B46     	 mov r3,r1
 992 000a FB70     	 strb r3,[r7,#3]
 427:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 428:../Libraries/XMCLib/src/xmc_vadc.c ****   
 429:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VAD
 430:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHAR
 431:../Libraries/XMCLib/src/xmc_vadc.c **** 
 432:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 993              	 .loc 2 432 0
 994 000c FB78     	 ldrb r3,[r7,#3]
 995 000e 032B     	 cmp r3,#3
 996 0010 03D9     	 bls .L39
 433:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 434:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 997              	 .loc 2 434 0
 998 0012 FB78     	 ldrb r3,[r7,#3]
 999 0014 043B     	 subs r3,r3,#4
 1000 0016 FB60     	 str r3,[r7,#12]
 1001 0018 01E0     	 b .L40
 1002              	.L39:
 435:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 436:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 437:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 438:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1003              	 .loc 2 438 0
 1004 001a FB78     	 ldrb r3,[r7,#3]
 1005 001c FB60     	 str r3,[r7,#12]
 1006              	.L40:
 439:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 440:../Libraries/XMCLib/src/xmc_vadc.c **** 
 441:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
 1007              	 .loc 2 441 0
 1008 001e 7B68     	 ldr r3,[r7,#4]
 1009 0020 D3F84031 	 ldr r3,[r3,#320]
 1010 0024 23F47022 	 bic r2,r3,#983040
 1011 0028 7B68     	 ldr r3,[r7,#4]
 1012 002a C3F84021 	 str r2,[r3,#320]
 442:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 1013              	 .loc 2 442 0
 1014 002e 7B68     	 ldr r3,[r7,#4]
 1015 0030 D3F84021 	 ldr r2,[r3,#320]
 1016 0034 FB68     	 ldr r3,[r7,#12]
 1017 0036 1B04     	 lsls r3,r3,#16
 1018 0038 1A43     	 orrs r2,r2,r3
 1019 003a 7B68     	 ldr r3,[r7,#4]
 1020 003c C3F84021 	 str r2,[r3,#320]
 443:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1021              	 .loc 2 443 0
 1022 0040 1437     	 adds r7,r7,#20
 1023              	 .cfi_def_cfa_offset 4
 1024 0042 BD46     	 mov sp,r7
 1025              	 .cfi_def_cfa_register 13
 1026              	 
 1027 0044 5DF8047B 	 ldr r7,[sp],#4
 1028              	 .cfi_restore 7
 1029              	 .cfi_def_cfa_offset 0
 1030 0048 7047     	 bx lr
 1031              	 .cfi_endproc
 1032              	.LFE266:
 1034 004a 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode,"ax",%progbits
 1035              	 .align 2
 1036              	 .global XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
 1037              	 .thumb
 1038              	 .thumb_func
 1040              	XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:
 1041              	.LFB267:
 444:../Libraries/XMCLib/src/xmc_vadc.c **** 
 445:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind request source event with a service request line */
 446:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
 447:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1042              	 .loc 2 447 0
 1043              	 .cfi_startproc
 1044              	 
 1045              	 
 1046              	 
 1047 0000 80B4     	 push {r7}
 1048              	 .cfi_def_cfa_offset 4
 1049              	 .cfi_offset 7,-4
 1050 0002 85B0     	 sub sp,sp,#20
 1051              	 .cfi_def_cfa_offset 24
 1052 0004 00AF     	 add r7,sp,#0
 1053              	 .cfi_def_cfa_register 7
 1054 0006 7860     	 str r0,[r7,#4]
 1055 0008 0B46     	 mov r3,r1
 1056 000a FB70     	 strb r3,[r7,#3]
 448:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 449:../Libraries/XMCLib/src/xmc_vadc.c ****   
 450:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:Wrong Module Pointer", (global_
 451:../Libraries/XMCLib/src/xmc_vadc.c **** 
 452:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1057              	 .loc 2 452 0
 1058 000c FB78     	 ldrb r3,[r7,#3]
 1059 000e 032B     	 cmp r3,#3
 1060 0010 03D9     	 bls .L42
 453:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 454:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1061              	 .loc 2 454 0
 1062 0012 FB78     	 ldrb r3,[r7,#3]
 1063 0014 043B     	 subs r3,r3,#4
 1064 0016 FB60     	 str r3,[r7,#12]
 1065 0018 01E0     	 b .L43
 1066              	.L42:
 455:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 456:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 457:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 458:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1067              	 .loc 2 458 0
 1068 001a FB78     	 ldrb r3,[r7,#3]
 1069 001c FB60     	 str r3,[r7,#12]
 1070              	.L43:
 459:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 460:../Libraries/XMCLib/src/xmc_vadc.c **** 
 461:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_SEV0NP_Msk);
 1071              	 .loc 2 461 0
 1072 001e 7B68     	 ldr r3,[r7,#4]
 1073 0020 D3F84031 	 ldr r3,[r3,#320]
 1074 0024 23F00F02 	 bic r2,r3,#15
 1075 0028 7B68     	 ldr r3,[r7,#4]
 1076 002a C3F84021 	 str r2,[r3,#320]
 462:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 1077              	 .loc 2 462 0
 1078 002e 7B68     	 ldr r3,[r7,#4]
 1079 0030 D3F84021 	 ldr r2,[r3,#320]
 1080 0034 FB68     	 ldr r3,[r7,#12]
 1081 0036 1A43     	 orrs r2,r2,r3
 1082 0038 7B68     	 ldr r3,[r7,#4]
 1083 003a C3F84021 	 str r2,[r3,#320]
 463:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1084              	 .loc 2 463 0
 1085 003e 1437     	 adds r7,r7,#20
 1086              	 .cfi_def_cfa_offset 4
 1087 0040 BD46     	 mov sp,r7
 1088              	 .cfi_def_cfa_register 13
 1089              	 
 1090 0042 5DF8047B 	 ldr r7,[sp],#4
 1091              	 .cfi_restore 7
 1092              	 .cfi_def_cfa_offset 0
 1093 0046 7047     	 bx lr
 1094              	 .cfi_endproc
 1095              	.LFE267:
 1097              	 .section .text.XMC_VADC_GROUP_Init,"ax",%progbits
 1098              	 .align 2
 1099              	 .global XMC_VADC_GROUP_Init
 1100              	 .thumb
 1101              	 .thumb_func
 1103              	XMC_VADC_GROUP_Init:
 1104              	.LFB268:
 464:../Libraries/XMCLib/src/xmc_vadc.c **** 
 465:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize an instance of group of VADC hardware */
 466:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)  
 467:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_Init( XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config)
 468:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1105              	 .loc 2 468 0
 1106              	 .cfi_startproc
 1107              	 
 1108              	 
 1109 0000 80B5     	 push {r7,lr}
 1110              	 .cfi_def_cfa_offset 8
 1111              	 .cfi_offset 7,-8
 1112              	 .cfi_offset 14,-4
 1113 0002 82B0     	 sub sp,sp,#8
 1114              	 .cfi_def_cfa_offset 16
 1115 0004 00AF     	 add r7,sp,#0
 1116              	 .cfi_def_cfa_register 7
 1117 0006 7860     	 str r0,[r7,#4]
 1118 0008 3960     	 str r1,[r7]
 469:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 470:../Libraries/XMCLib/src/xmc_vadc.c **** 
 471:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the input classes */
 472:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_STD, 0U);
 1119              	 .loc 2 472 0
 1120 000a 3B68     	 ldr r3,[r7]
 1121 000c 7868     	 ldr r0,[r7,#4]
 1122 000e 5968     	 ldr r1,[r3,#4]
 1123 0010 0022     	 movs r2,#0
 1124 0012 0023     	 movs r3,#0
 1125 0014 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 473:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_EMUX, 0U);
 1126              	 .loc 2 473 0
 1127 0018 3B68     	 ldr r3,[r7]
 1128 001a 7868     	 ldr r0,[r7,#4]
 1129 001c 5968     	 ldr r1,[r3,#4]
 1130 001e 0122     	 movs r2,#1
 1131 0020 0023     	 movs r3,#0
 1132 0022 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 474:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_STD, 1U);
 1133              	 .loc 2 474 0
 1134 0026 3B68     	 ldr r3,[r7]
 1135 0028 7868     	 ldr r0,[r7,#4]
 1136 002a 9968     	 ldr r1,[r3,#8]
 1137 002c 0022     	 movs r2,#0
 1138 002e 0123     	 movs r3,#1
 1139 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 475:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_EMUX, 1U);
 1140              	 .loc 2 475 0
 1141 0034 3B68     	 ldr r3,[r7]
 1142 0036 7868     	 ldr r0,[r7,#4]
 1143 0038 9968     	 ldr r1,[r3,#8]
 1144 003a 0122     	 movs r2,#1
 1145 003c 0123     	 movs r3,#1
 1146 003e FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 476:../Libraries/XMCLib/src/xmc_vadc.c **** 
 477:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = config->g_arbcfg;
 1147              	 .loc 2 477 0
 1148 0042 3B68     	 ldr r3,[r7]
 1149 0044 1A69     	 ldr r2,[r3,#16]
 1150 0046 7B68     	 ldr r3,[r7,#4]
 1151 0048 C3F88020 	 str r2,[r3,#128]
 478:../Libraries/XMCLib/src/xmc_vadc.c **** 
 479:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = config->g_bound;
 1152              	 .loc 2 479 0
 1153 004c 3B68     	 ldr r3,[r7]
 1154 004e DA68     	 ldr r2,[r3,#12]
 1155 0050 7B68     	 ldr r3,[r7,#4]
 1156 0052 C3F8B820 	 str r2,[r3,#184]
 480:../Libraries/XMCLib/src/xmc_vadc.c **** 
 481:../Libraries/XMCLib/src/xmc_vadc.c ****   /* External mux configuration */
 482:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ExternalMuxControlInit(group_ptr,config->emux_config);
 1157              	 .loc 2 482 0
 1158 0056 3B68     	 ldr r3,[r7]
 1159 0058 7868     	 ldr r0,[r7,#4]
 1160 005a 1968     	 ldr r1,[r3]
 1161 005c FFF7FEFF 	 bl XMC_VADC_GROUP_ExternalMuxControlInit
 483:../Libraries/XMCLib/src/xmc_vadc.c **** 
 484:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1162              	 .loc 2 484 0
 1163 0060 0837     	 adds r7,r7,#8
 1164              	 .cfi_def_cfa_offset 8
 1165 0062 BD46     	 mov sp,r7
 1166              	 .cfi_def_cfa_register 13
 1167              	 
 1168 0064 80BD     	 pop {r7,pc}
 1169              	 .cfi_endproc
 1170              	.LFE268:
 1172 0066 00BF     	 .section .text.XMC_VADC_GROUP_InputClassInit,"ax",%progbits
 1173              	 .align 2
 1174              	 .global XMC_VADC_GROUP_InputClassInit
 1175              	 .thumb
 1176              	 .thumb_func
 1178              	XMC_VADC_GROUP_InputClassInit:
 1179              	.LFB269:
 485:../Libraries/XMCLib/src/xmc_vadc.c **** 
 486:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to program conversion characteristics */
 487:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
 488:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 489:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1180              	 .loc 2 489 0
 1181              	 .cfi_startproc
 1182              	 
 1183              	 
 1184              	 
 1185 0000 80B4     	 push {r7}
 1186              	 .cfi_def_cfa_offset 4
 1187              	 .cfi_offset 7,-4
 1188 0002 8DB0     	 sub sp,sp,#52
 1189              	 .cfi_def_cfa_offset 56
 1190 0004 00AF     	 add r7,sp,#0
 1191              	 .cfi_def_cfa_register 7
 1192 0006 F860     	 str r0,[r7,#12]
 1193 0008 B960     	 str r1,[r7,#8]
 1194 000a 3B60     	 str r3,[r7]
 1195 000c 1346     	 mov r3,r2
 1196 000e FB71     	 strb r3,[r7,#7]
 490:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 491:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_pos;
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_pos;
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_mask;
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_mask;
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time;
 496:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONVMODE_t conv_mode;
 497:../Libraries/XMCLib/src/xmc_vadc.c **** 
 498:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
 499:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP_
 500:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLAS
 501:../Libraries/XMCLib/src/xmc_vadc.c **** 
 502:../Libraries/XMCLib/src/xmc_vadc.c ****   /* 
 503:../Libraries/XMCLib/src/xmc_vadc.c ****    * Obtain the mask and position macros of the parameters based on what is being requested - Stand
 504:../Libraries/XMCLib/src/xmc_vadc.c ****    * external mux channels.
 505:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 506:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_CONV_STD == conv_type)
 1197              	 .loc 2 506 0
 1198 0010 FB79     	 ldrb r3,[r7,#7]
 1199 0012 002B     	 cmp r3,#0
 1200 0014 13D1     	 bne .L46
 507:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 508:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CMS_Pos;
 1201              	 .loc 2 508 0
 1202 0016 0823     	 movs r3,#8
 1203 0018 FB62     	 str r3,[r7,#44]
 509:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CMS_Msk;
 1204              	 .loc 2 509 0
 1205 001a 4FF4E063 	 mov r3,#1792
 1206 001e 7B62     	 str r3,[r7,#36]
 510:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCS_Pos;
 1207              	 .loc 2 510 0
 1208 0020 0023     	 movs r3,#0
 1209 0022 BB62     	 str r3,[r7,#40]
 511:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCS_Msk;
 1210              	 .loc 2 511 0
 1211 0024 1F23     	 movs r3,#31
 1212 0026 3B62     	 str r3,[r7,#32]
 512:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sample_time_std_conv;
 1213              	 .loc 2 512 0
 1214 0028 3B7A     	 ldrb r3,[r7,#8]
 1215 002a C3F30403 	 ubfx r3,r3,#0,#5
 1216 002e DBB2     	 uxtb r3,r3
 1217 0030 FB61     	 str r3,[r7,#28]
 513:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 1218              	 .loc 2 513 0
 1219 0032 7B7A     	 ldrb r3,[r7,#9]
 1220 0034 C3F30203 	 ubfx r3,r3,#0,#3
 1221 0038 DBB2     	 uxtb r3,r3
 1222 003a FB76     	 strb r3,[r7,#27]
 1223 003c 13E0     	 b .L47
 1224              	.L46:
 514:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 515:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 516:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 517:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CME_Pos;
 1225              	 .loc 2 517 0
 1226 003e 1823     	 movs r3,#24
 1227 0040 FB62     	 str r3,[r7,#44]
 518:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CME_Msk;
 1228              	 .loc 2 518 0
 1229 0042 4FF0E063 	 mov r3,#117440512
 1230 0046 7B62     	 str r3,[r7,#36]
 519:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCE_Pos;
 1231              	 .loc 2 519 0
 1232 0048 1023     	 movs r3,#16
 1233 004a BB62     	 str r3,[r7,#40]
 520:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCE_Msk;
 1234              	 .loc 2 520 0
 1235 004c 4FF4F813 	 mov r3,#2031616
 1236 0050 3B62     	 str r3,[r7,#32]
 521:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sampling_phase_emux_channel;
 1237              	 .loc 2 521 0
 1238 0052 BB7A     	 ldrb r3,[r7,#10]
 1239 0054 C3F30403 	 ubfx r3,r3,#0,#5
 1240 0058 DBB2     	 uxtb r3,r3
 1241 005a FB61     	 str r3,[r7,#28]
 522:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 1242              	 .loc 2 522 0
 1243 005c FB7A     	 ldrb r3,[r7,#11]
 1244 005e C3F30203 	 ubfx r3,r3,#0,#3
 1245 0062 DBB2     	 uxtb r3,r3
 1246 0064 FB76     	 strb r3,[r7,#27]
 1247              	.L47:
 523:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 524:../Libraries/XMCLib/src/xmc_vadc.c **** 
 525:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the class */
 526:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class  = group_ptr->ICLASS[set_num];
 1248              	 .loc 2 526 0
 1249 0066 FB68     	 ldr r3,[r7,#12]
 1250 0068 3A68     	 ldr r2,[r7]
 1251 006a 2832     	 adds r2,r2,#40
 1252 006c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1253 0070 7B61     	 str r3,[r7,#20]
 527:../Libraries/XMCLib/src/xmc_vadc.c **** 
 528:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the class register */
 529:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(conv_mode_mask);
 1254              	 .loc 2 529 0
 1255 0072 7B6A     	 ldr r3,[r7,#36]
 1256 0074 DB43     	 mvns r3,r3
 1257 0076 7A69     	 ldr r2,[r7,#20]
 1258 0078 1340     	 ands r3,r3,r2
 1259 007a 7B61     	 str r3,[r7,#20]
 530:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 1260              	 .loc 2 530 0
 1261 007c FA7E     	 ldrb r2,[r7,#27]
 1262 007e FB6A     	 ldr r3,[r7,#44]
 1263 0080 02FA03F3 	 lsl r3,r2,r3
 1264 0084 7A69     	 ldr r2,[r7,#20]
 1265 0086 1343     	 orrs r3,r3,r2
 1266 0088 7B61     	 str r3,[r7,#20]
 531:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 1267              	 .loc 2 531 0
 1268 008a 3B6A     	 ldr r3,[r7,#32]
 1269 008c DB43     	 mvns r3,r3
 1270 008e 7A69     	 ldr r2,[r7,#20]
 1271 0090 1340     	 ands r3,r3,r2
 1272 0092 7B61     	 str r3,[r7,#20]
 532:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 1273              	 .loc 2 532 0
 1274 0094 BB6A     	 ldr r3,[r7,#40]
 1275 0096 FA69     	 ldr r2,[r7,#28]
 1276 0098 02FA03F3 	 lsl r3,r2,r3
 1277 009c 7A69     	 ldr r2,[r7,#20]
 1278 009e 1343     	 orrs r3,r3,r2
 1279 00a0 7B61     	 str r3,[r7,#20]
 533:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 1280              	 .loc 2 533 0
 1281 00a2 FB68     	 ldr r3,[r7,#12]
 1282 00a4 3A68     	 ldr r2,[r7]
 1283 00a6 2832     	 adds r2,r2,#40
 1284 00a8 7969     	 ldr r1,[r7,#20]
 1285 00aa 43F82210 	 str r1,[r3,r2,lsl#2]
 534:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1286              	 .loc 2 534 0
 1287 00ae 3437     	 adds r7,r7,#52
 1288              	 .cfi_def_cfa_offset 4
 1289 00b0 BD46     	 mov sp,r7
 1290              	 .cfi_def_cfa_register 13
 1291              	 
 1292 00b2 5DF8047B 	 ldr r7,[sp],#4
 1293              	 .cfi_restore 7
 1294              	 .cfi_def_cfa_offset 0
 1295 00b6 7047     	 bx lr
 1296              	 .cfi_endproc
 1297              	.LFE269:
 1299              	 .section .text.XMC_VADC_GROUP_SetPowerMode,"ax",%progbits
 1300              	 .align 2
 1301              	 .global XMC_VADC_GROUP_SetPowerMode
 1302              	 .thumb
 1303              	 .thumb_func
 1305              	XMC_VADC_GROUP_SetPowerMode:
 1306              	.LFB270:
 535:../Libraries/XMCLib/src/xmc_vadc.c **** 
 536:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which sets the power mode of analog converter of a VADC group */
 537:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
 538:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1307              	 .loc 2 538 0
 1308              	 .cfi_startproc
 1309              	 
 1310              	 
 1311              	 
 1312 0000 80B4     	 push {r7}
 1313              	 .cfi_def_cfa_offset 4
 1314              	 .cfi_offset 7,-4
 1315 0002 85B0     	 sub sp,sp,#20
 1316              	 .cfi_def_cfa_offset 24
 1317 0004 00AF     	 add r7,sp,#0
 1318              	 .cfi_def_cfa_register 7
 1319 0006 7860     	 str r0,[r7,#4]
 1320 0008 0B46     	 mov r3,r1
 1321 000a FB70     	 strb r3,[r7,#3]
 539:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 540:../Libraries/XMCLib/src/xmc_vadc.c **** 
 541:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 542:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Power Mode", (power_mode <= XMC_VADC_GROUP_POWERMOD
 543:../Libraries/XMCLib/src/xmc_vadc.c **** 
 544:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = group_ptr->ARBCFG;
 1322              	 .loc 2 544 0
 1323 000c 7B68     	 ldr r3,[r7,#4]
 1324 000e D3F88030 	 ldr r3,[r3,#128]
 1325 0012 FB60     	 str r3,[r7,#12]
 545:../Libraries/XMCLib/src/xmc_vadc.c **** 
 546:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= ~((uint32_t)VADC_G_ARBCFG_ANONC_Msk);
 1326              	 .loc 2 546 0
 1327 0014 FB68     	 ldr r3,[r7,#12]
 1328 0016 23F00303 	 bic r3,r3,#3
 1329 001a FB60     	 str r3,[r7,#12]
 547:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 1330              	 .loc 2 547 0
 1331 001c FB78     	 ldrb r3,[r7,#3]
 1332 001e FA68     	 ldr r2,[r7,#12]
 1333 0020 1343     	 orrs r3,r3,r2
 1334 0022 FB60     	 str r3,[r7,#12]
 548:../Libraries/XMCLib/src/xmc_vadc.c **** 
 549:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = arbcfg;
 1335              	 .loc 2 549 0
 1336 0024 7B68     	 ldr r3,[r7,#4]
 1337 0026 FA68     	 ldr r2,[r7,#12]
 1338 0028 C3F88020 	 str r2,[r3,#128]
 550:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1339              	 .loc 2 550 0
 1340 002c 1437     	 adds r7,r7,#20
 1341              	 .cfi_def_cfa_offset 4
 1342 002e BD46     	 mov sp,r7
 1343              	 .cfi_def_cfa_register 13
 1344              	 
 1345 0030 5DF8047B 	 ldr r7,[sp],#4
 1346              	 .cfi_restore 7
 1347              	 .cfi_def_cfa_offset 0
 1348 0034 7047     	 bx lr
 1349              	 .cfi_endproc
 1350              	.LFE270:
 1352 0036 00BF     	 .section .text.XMC_VADC_GROUP_SetSyncSlave,"ax",%progbits
 1353              	 .align 2
 1354              	 .global XMC_VADC_GROUP_SetSyncSlave
 1355              	 .thumb
 1356              	 .thumb_func
 1358              	XMC_VADC_GROUP_SetSyncSlave:
 1359              	.LFB271:
 551:../Libraries/XMCLib/src/xmc_vadc.c **** 
 552:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a slave group during sync conversions */
 553:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
 554:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1360              	 .loc 2 554 0
 1361              	 .cfi_startproc
 1362              	 
 1363              	 
 1364              	 
 1365 0000 80B4     	 push {r7}
 1366              	 .cfi_def_cfa_offset 4
 1367              	 .cfi_offset 7,-4
 1368 0002 87B0     	 sub sp,sp,#28
 1369              	 .cfi_def_cfa_offset 32
 1370 0004 00AF     	 add r7,sp,#0
 1371              	 .cfi_def_cfa_register 7
 1372 0006 F860     	 str r0,[r7,#12]
 1373 0008 B960     	 str r1,[r7,#8]
 1374 000a 7A60     	 str r2,[r7,#4]
 555:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 556:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 557:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 558:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlave:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 559:../Libraries/XMCLib/src/xmc_vadc.c ****   
 560:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 561:../Libraries/XMCLib/src/xmc_vadc.c **** 
 562:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the coding of SYNCTR */
 563:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_grp > master_grp)
 1375              	 .loc 2 563 0
 1376 000c 7A68     	 ldr r2,[r7,#4]
 1377 000e BB68     	 ldr r3,[r7,#8]
 1378 0010 9A42     	 cmp r2,r3
 1379 0012 02D9     	 bls .L50
 564:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 565:../Libraries/XMCLib/src/xmc_vadc.c ****     master_grp = master_grp + 1U;
 1380              	 .loc 2 565 0
 1381 0014 BB68     	 ldr r3,[r7,#8]
 1382 0016 0133     	 adds r3,r3,#1
 1383 0018 BB60     	 str r3,[r7,#8]
 1384              	.L50:
 566:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 567:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 568:../Libraries/XMCLib/src/xmc_vadc.c ****   
 569:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program SYNCTR */
 570:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1385              	 .loc 2 570 0
 1386 001a FB68     	 ldr r3,[r7,#12]
 1387 001c D3F8C030 	 ldr r3,[r3,#192]
 1388 0020 7B61     	 str r3,[r7,#20]
 571:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1389              	 .loc 2 571 0
 1390 0022 7B69     	 ldr r3,[r7,#20]
 1391 0024 23F00303 	 bic r3,r3,#3
 1392 0028 7B61     	 str r3,[r7,#20]
 572:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1393              	 .loc 2 572 0
 1394 002a 7A69     	 ldr r2,[r7,#20]
 1395 002c BB68     	 ldr r3,[r7,#8]
 1396 002e 1343     	 orrs r3,r3,r2
 1397 0030 7B61     	 str r3,[r7,#20]
 573:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1398              	 .loc 2 573 0
 1399 0032 FB68     	 ldr r3,[r7,#12]
 1400 0034 7A69     	 ldr r2,[r7,#20]
 1401 0036 C3F8C020 	 str r2,[r3,#192]
 574:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1402              	 .loc 2 574 0
 1403 003a 1C37     	 adds r7,r7,#28
 1404              	 .cfi_def_cfa_offset 4
 1405 003c BD46     	 mov sp,r7
 1406              	 .cfi_def_cfa_register 13
 1407              	 
 1408 003e 5DF8047B 	 ldr r7,[sp],#4
 1409              	 .cfi_restore 7
 1410              	 .cfi_def_cfa_offset 0
 1411 0042 7047     	 bx lr
 1412              	 .cfi_endproc
 1413              	.LFE271:
 1415              	 .section .text.XMC_VADC_GROUP_SetSyncMaster,"ax",%progbits
 1416              	 .align 2
 1417              	 .global XMC_VADC_GROUP_SetSyncMaster
 1418              	 .thumb
 1419              	 .thumb_func
 1421              	XMC_VADC_GROUP_SetSyncMaster:
 1422              	.LFB272:
 575:../Libraries/XMCLib/src/xmc_vadc.c **** 
 576:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a master group during sync conversions */
 577:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr)
 578:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1423              	 .loc 2 578 0
 1424              	 .cfi_startproc
 1425              	 
 1426              	 
 1427              	 
 1428 0000 80B4     	 push {r7}
 1429              	 .cfi_def_cfa_offset 4
 1430              	 .cfi_offset 7,-4
 1431 0002 85B0     	 sub sp,sp,#20
 1432              	 .cfi_def_cfa_offset 24
 1433 0004 00AF     	 add r7,sp,#0
 1434              	 .cfi_def_cfa_register 7
 1435 0006 7860     	 str r0,[r7,#4]
 579:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 580:../Libraries/XMCLib/src/xmc_vadc.c **** 
 581:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncMaster:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 582:../Libraries/XMCLib/src/xmc_vadc.c **** 
 583:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1436              	 .loc 2 583 0
 1437 0008 7B68     	 ldr r3,[r7,#4]
 1438 000a D3F8C030 	 ldr r3,[r3,#192]
 1439 000e FB60     	 str r3,[r7,#12]
 584:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1440              	 .loc 2 584 0
 1441 0010 FB68     	 ldr r3,[r7,#12]
 1442 0012 23F00303 	 bic r3,r3,#3
 1443 0016 FB60     	 str r3,[r7,#12]
 585:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1444              	 .loc 2 585 0
 1445 0018 7B68     	 ldr r3,[r7,#4]
 1446 001a FA68     	 ldr r2,[r7,#12]
 1447 001c C3F8C020 	 str r2,[r3,#192]
 586:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1448              	 .loc 2 586 0
 1449 0020 1437     	 adds r7,r7,#20
 1450              	 .cfi_def_cfa_offset 4
 1451 0022 BD46     	 mov sp,r7
 1452              	 .cfi_def_cfa_register 13
 1453              	 
 1454 0024 5DF8047B 	 ldr r7,[sp],#4
 1455              	 .cfi_restore 7
 1456              	 .cfi_def_cfa_offset 0
 1457 0028 7047     	 bx lr
 1458              	 .cfi_endproc
 1459              	.LFE272:
 1461 002a 00BF     	 .section .text.XMC_VADC_GROUP_CheckSlaveReadiness,"ax",%progbits
 1462              	 .align 2
 1463              	 .global XMC_VADC_GROUP_CheckSlaveReadiness
 1464              	 .thumb
 1465              	 .thumb_func
 1467              	XMC_VADC_GROUP_CheckSlaveReadiness:
 1468              	.LFB273:
 587:../Libraries/XMCLib/src/xmc_vadc.c **** 
 588:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable checking of readiness of slaves before a synchronous conversion request is issued 
 589:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 590:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1469              	 .loc 2 590 0
 1470              	 .cfi_startproc
 1471              	 
 1472              	 
 1473              	 
 1474 0000 80B4     	 push {r7}
 1475              	 .cfi_def_cfa_offset 4
 1476              	 .cfi_offset 7,-4
 1477 0002 85B0     	 sub sp,sp,#20
 1478              	 .cfi_def_cfa_offset 24
 1479 0004 00AF     	 add r7,sp,#0
 1480              	 .cfi_def_cfa_register 7
 1481 0006 7860     	 str r0,[r7,#4]
 1482 0008 3960     	 str r1,[r7]
 591:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i,master_grp_num;
 592:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
 593:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Slave group", (slave_group <= (XMC_VADC_MAXI
 594:../Libraries/XMCLib/src/xmc_vadc.c **** 
 595:../Libraries/XMCLib/src/xmc_vadc.c ****   master_grp_num =0;
 1483              	 .loc 2 595 0
 1484 000a 0023     	 movs r3,#0
 1485 000c BB60     	 str r3,[r7,#8]
 596:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1486              	 .loc 2 596 0
 1487 000e 0023     	 movs r3,#0
 1488 0010 FB60     	 str r3,[r7,#12]
 1489 0012 0BE0     	 b .L53
 1490              	.L55:
 597:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 598:../Libraries/XMCLib/src/xmc_vadc.c ****     if(g_xmc_vadc_group_array[i] == group_ptr)
 1491              	 .loc 2 598 0
 1492 0014 134A     	 ldr r2,.L57
 1493 0016 FB68     	 ldr r3,[r7,#12]
 1494 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1495 001c 7B68     	 ldr r3,[r7,#4]
 1496 001e 9A42     	 cmp r2,r3
 1497 0020 01D1     	 bne .L54
 599:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 600:../Libraries/XMCLib/src/xmc_vadc.c ****       master_grp_num = i;
 1498              	 .loc 2 600 0
 1499 0022 FB68     	 ldr r3,[r7,#12]
 1500 0024 BB60     	 str r3,[r7,#8]
 1501              	.L54:
 596:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1502              	 .loc 2 596 0 discriminator 2
 1503 0026 FB68     	 ldr r3,[r7,#12]
 1504 0028 0133     	 adds r3,r3,#1
 1505 002a FB60     	 str r3,[r7,#12]
 1506              	.L53:
 596:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1507              	 .loc 2 596 0 is_stmt 0 discriminator 1
 1508 002c FB68     	 ldr r3,[r7,#12]
 1509 002e 032B     	 cmp r3,#3
 1510 0030 F0D9     	 bls .L55
 601:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 602:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 603:../Libraries/XMCLib/src/xmc_vadc.c **** 
 604:../Libraries/XMCLib/src/xmc_vadc.c **** 
 605:../Libraries/XMCLib/src/xmc_vadc.c ****   if(slave_group < master_grp_num)
 1511              	 .loc 2 605 0 is_stmt 1
 1512 0032 3A68     	 ldr r2,[r7]
 1513 0034 BB68     	 ldr r3,[r7,#8]
 1514 0036 9A42     	 cmp r2,r3
 1515 0038 02D2     	 bcs .L56
 606:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 607:../Libraries/XMCLib/src/xmc_vadc.c ****     slave_group++;
 1516              	 .loc 2 607 0
 1517 003a 3B68     	 ldr r3,[r7]
 1518 003c 0133     	 adds r3,r3,#1
 1519 003e 3B60     	 str r3,[r7]
 1520              	.L56:
 608:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 609:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1521              	 .loc 2 609 0
 1522 0040 7B68     	 ldr r3,[r7,#4]
 1523 0042 D3F8C020 	 ldr r2,[r3,#192]
 1524 0046 3B68     	 ldr r3,[r7]
 1525 0048 0333     	 adds r3,r3,#3
 1526 004a 1946     	 mov r1,r3
 1527 004c 0123     	 movs r3,#1
 1528 004e 8B40     	 lsls r3,r3,r1
 1529 0050 1A43     	 orrs r2,r2,r3
 1530 0052 7B68     	 ldr r3,[r7,#4]
 1531 0054 C3F8C020 	 str r2,[r3,#192]
 610:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1532              	 .loc 2 610 0
 1533 0058 1437     	 adds r7,r7,#20
 1534              	 .cfi_def_cfa_offset 4
 1535 005a BD46     	 mov sp,r7
 1536              	 .cfi_def_cfa_register 13
 1537              	 
 1538 005c 5DF8047B 	 ldr r7,[sp],#4
 1539              	 .cfi_restore 7
 1540              	 .cfi_def_cfa_offset 0
 1541 0060 7047     	 bx lr
 1542              	.L58:
 1543 0062 00BF     	 .align 2
 1544              	.L57:
 1545 0064 00000000 	 .word g_xmc_vadc_group_array
 1546              	 .cfi_endproc
 1547              	.LFE273:
 1549              	 .section .text.XMC_VADC_GROUP_IgnoreSlaveReadiness,"ax",%progbits
 1550              	 .align 2
 1551              	 .global XMC_VADC_GROUP_IgnoreSlaveReadiness
 1552              	 .thumb
 1553              	 .thumb_func
 1555              	XMC_VADC_GROUP_IgnoreSlaveReadiness:
 1556              	.LFB274:
 611:../Libraries/XMCLib/src/xmc_vadc.c **** 
 612:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable checking of readiness of slaves during synchronous conversions */
 613:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 614:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1557              	 .loc 2 614 0
 1558              	 .cfi_startproc
 1559              	 
 1560              	 
 1561              	 
 1562 0000 80B4     	 push {r7}
 1563              	 .cfi_def_cfa_offset 4
 1564              	 .cfi_offset 7,-4
 1565 0002 85B0     	 sub sp,sp,#20
 1566              	 .cfi_def_cfa_offset 24
 1567 0004 00AF     	 add r7,sp,#0
 1568              	 .cfi_def_cfa_register 7
 1569 0006 7860     	 str r0,[r7,#4]
 1570 0008 3960     	 str r1,[r7]
 615:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i,master_grp_num;
 616:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
 617:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Slave group", (slave_group <= (XMC_VADC_MAX
 618:../Libraries/XMCLib/src/xmc_vadc.c **** 
 619:../Libraries/XMCLib/src/xmc_vadc.c ****   master_grp_num =0;
 1571              	 .loc 2 619 0
 1572 000a 0023     	 movs r3,#0
 1573 000c BB60     	 str r3,[r7,#8]
 620:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1574              	 .loc 2 620 0
 1575 000e 0023     	 movs r3,#0
 1576 0010 FB60     	 str r3,[r7,#12]
 1577 0012 0BE0     	 b .L60
 1578              	.L62:
 621:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 622:../Libraries/XMCLib/src/xmc_vadc.c **** 	  if(g_xmc_vadc_group_array[i] == group_ptr)
 1579              	 .loc 2 622 0
 1580 0014 134A     	 ldr r2,.L64
 1581 0016 FB68     	 ldr r3,[r7,#12]
 1582 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1583 001c 7B68     	 ldr r3,[r7,#4]
 1584 001e 9A42     	 cmp r2,r3
 1585 0020 01D1     	 bne .L61
 623:../Libraries/XMCLib/src/xmc_vadc.c **** 	  {
 624:../Libraries/XMCLib/src/xmc_vadc.c **** 	    master_grp_num = i;
 1586              	 .loc 2 624 0
 1587 0022 FB68     	 ldr r3,[r7,#12]
 1588 0024 BB60     	 str r3,[r7,#8]
 1589              	.L61:
 620:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1590              	 .loc 2 620 0 discriminator 2
 1591 0026 FB68     	 ldr r3,[r7,#12]
 1592 0028 0133     	 adds r3,r3,#1
 1593 002a FB60     	 str r3,[r7,#12]
 1594              	.L60:
 620:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1595              	 .loc 2 620 0 is_stmt 0 discriminator 1
 1596 002c FB68     	 ldr r3,[r7,#12]
 1597 002e 032B     	 cmp r3,#3
 1598 0030 F0D9     	 bls .L62
 625:../Libraries/XMCLib/src/xmc_vadc.c **** 	  }
 626:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 627:../Libraries/XMCLib/src/xmc_vadc.c **** 
 628:../Libraries/XMCLib/src/xmc_vadc.c ****   if(slave_group < master_grp_num)
 1599              	 .loc 2 628 0 is_stmt 1
 1600 0032 3A68     	 ldr r2,[r7]
 1601 0034 BB68     	 ldr r3,[r7,#8]
 1602 0036 9A42     	 cmp r2,r3
 1603 0038 02D2     	 bcs .L63
 629:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 630:../Libraries/XMCLib/src/xmc_vadc.c **** 	  slave_group++;
 1604              	 .loc 2 630 0
 1605 003a 3B68     	 ldr r3,[r7]
 1606 003c 0133     	 adds r3,r3,#1
 1607 003e 3B60     	 str r3,[r7]
 1608              	.L63:
 631:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 632:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~(1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1609              	 .loc 2 632 0
 1610 0040 7B68     	 ldr r3,[r7,#4]
 1611 0042 D3F8C020 	 ldr r2,[r3,#192]
 1612 0046 3B68     	 ldr r3,[r7]
 1613 0048 0333     	 adds r3,r3,#3
 1614 004a 1946     	 mov r1,r3
 1615 004c 0123     	 movs r3,#1
 1616 004e 8B40     	 lsls r3,r3,r1
 1617 0050 DB43     	 mvns r3,r3
 1618 0052 1A40     	 ands r2,r2,r3
 1619 0054 7B68     	 ldr r3,[r7,#4]
 1620 0056 C3F8C020 	 str r2,[r3,#192]
 633:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1621              	 .loc 2 633 0
 1622 005a 1437     	 adds r7,r7,#20
 1623              	 .cfi_def_cfa_offset 4
 1624 005c BD46     	 mov sp,r7
 1625              	 .cfi_def_cfa_register 13
 1626              	 
 1627 005e 5DF8047B 	 ldr r7,[sp],#4
 1628              	 .cfi_restore 7
 1629              	 .cfi_def_cfa_offset 0
 1630 0062 7047     	 bx lr
 1631              	.L65:
 1632              	 .align 2
 1633              	.L64:
 1634 0064 00000000 	 .word g_xmc_vadc_group_array
 1635              	 .cfi_endproc
 1636              	.LFE274:
 1638              	 .section .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal,"ax",%progbits
 1639              	 .align 2
 1640              	 .global XMC_VADC_GROUP_SetSyncSlaveReadySignal
 1641              	 .thumb
 1642              	 .thumb_func
 1644              	XMC_VADC_GROUP_SetSyncSlaveReadySignal:
 1645              	.LFB275:
 634:../Libraries/XMCLib/src/xmc_vadc.c **** 
 635:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure EVAL bit in the slave groups*/
 636:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
 637:../Libraries/XMCLib/src/xmc_vadc.c ****                                             uint32_t eval_waiting_group,
 638:../Libraries/XMCLib/src/xmc_vadc.c ****                                             uint32_t eval_origin_group)
 639:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1646              	 .loc 2 639 0
 1647              	 .cfi_startproc
 1648              	 
 1649              	 
 1650              	 
 1651 0000 80B4     	 push {r7}
 1652              	 .cfi_def_cfa_offset 4
 1653              	 .cfi_offset 7,-4
 1654 0002 85B0     	 sub sp,sp,#20
 1655              	 .cfi_def_cfa_offset 24
 1656 0004 00AF     	 add r7,sp,#0
 1657              	 .cfi_def_cfa_register 7
 1658 0006 F860     	 str r0,[r7,#12]
 1659 0008 B960     	 str r1,[r7,#8]
 1660 000a 7A60     	 str r2,[r7,#4]
 640:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
 641:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group numbers", (eval_waiting_group != e
 642:../Libraries/XMCLib/src/xmc_vadc.c **** 
 643:../Libraries/XMCLib/src/xmc_vadc.c ****   if(eval_origin_group < eval_waiting_group)
 1661              	 .loc 2 643 0
 1662 000c 7A68     	 ldr r2,[r7,#4]
 1663 000e BB68     	 ldr r3,[r7,#8]
 1664 0010 9A42     	 cmp r2,r3
 1665 0012 02D2     	 bcs .L67
 644:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 645:../Libraries/XMCLib/src/xmc_vadc.c **** 	  eval_origin_group++;
 1666              	 .loc 2 645 0
 1667 0014 7B68     	 ldr r3,[r7,#4]
 1668 0016 0133     	 adds r3,r3,#1
 1669 0018 7B60     	 str r3,[r7,#4]
 1670              	.L67:
 646:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 647:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (eval_origin_group + XMC_VADC_SYNCTR_START_LOCATION));
 1671              	 .loc 2 647 0
 1672 001a FB68     	 ldr r3,[r7,#12]
 1673 001c D3F8C020 	 ldr r2,[r3,#192]
 1674 0020 7B68     	 ldr r3,[r7,#4]
 1675 0022 0333     	 adds r3,r3,#3
 1676 0024 1946     	 mov r1,r3
 1677 0026 0123     	 movs r3,#1
 1678 0028 8B40     	 lsls r3,r3,r1
 1679 002a 1A43     	 orrs r2,r2,r3
 1680 002c FB68     	 ldr r3,[r7,#12]
 1681 002e C3F8C020 	 str r2,[r3,#192]
 648:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1682              	 .loc 2 648 0
 1683 0032 1437     	 adds r7,r7,#20
 1684              	 .cfi_def_cfa_offset 4
 1685 0034 BD46     	 mov sp,r7
 1686              	 .cfi_def_cfa_register 13
 1687              	 
 1688 0036 5DF8047B 	 ldr r7,[sp],#4
 1689              	 .cfi_restore 7
 1690              	 .cfi_def_cfa_offset 0
 1691 003a 7047     	 bx lr
 1692              	 .cfi_endproc
 1693              	.LFE275:
 1695              	 .section .text.XMC_VADC_GROUP_EnableChannelSyncRequest,"ax",%progbits
 1696              	 .align 2
 1697              	 .global XMC_VADC_GROUP_EnableChannelSyncRequest
 1698              	 .thumb
 1699              	 .thumb_func
 1701              	XMC_VADC_GROUP_EnableChannelSyncRequest:
 1702              	.LFB276:
 649:../Libraries/XMCLib/src/xmc_vadc.c **** 
 650:../Libraries/XMCLib/src/xmc_vadc.c **** 
 651:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the synchronous conversion feature - Applicable only to kernel configured as maste
 652:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
 653:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1703              	 .loc 2 653 0
 1704              	 .cfi_startproc
 1705              	 
 1706              	 
 1707              	 
 1708 0000 80B4     	 push {r7}
 1709              	 .cfi_def_cfa_offset 4
 1710              	 .cfi_offset 7,-4
 1711 0002 85B0     	 sub sp,sp,#20
 1712              	 .cfi_def_cfa_offset 24
 1713 0004 00AF     	 add r7,sp,#0
 1714              	 .cfi_def_cfa_register 7
 1715 0006 7860     	 str r0,[r7,#4]
 1716 0008 3960     	 str r1,[r7]
 654:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 655:../Libraries/XMCLib/src/xmc_vadc.c **** 
 656:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
 657:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Channel Number",
 658:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 659:../Libraries/XMCLib/src/xmc_vadc.c **** 
 660:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1717              	 .loc 2 660 0
 1718 000a 7B68     	 ldr r3,[r7,#4]
 1719 000c D3F8C030 	 ldr r3,[r3,#192]
 1720 0010 FB60     	 str r3,[r7,#12]
 661:../Libraries/XMCLib/src/xmc_vadc.c **** 
 662:../Libraries/XMCLib/src/xmc_vadc.c ****   if (!(synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk))
 1721              	 .loc 2 662 0
 1722 0012 FB68     	 ldr r3,[r7,#12]
 1723 0014 03F00303 	 and r3,r3,#3
 1724 0018 002B     	 cmp r3,#0
 1725 001a 0BD1     	 bne .L68
 663:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 664:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] |= (uint32_t)((uint32_t)1 << VADC_G_CHCTR_SYNC_Pos);
 1726              	 .loc 2 664 0
 1727 001c 7B68     	 ldr r3,[r7,#4]
 1728 001e 3A68     	 ldr r2,[r7]
 1729 0020 8032     	 adds r2,r2,#128
 1730 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1731 0026 43F48061 	 orr r1,r3,#1024
 1732 002a 7B68     	 ldr r3,[r7,#4]
 1733 002c 3A68     	 ldr r2,[r7]
 1734 002e 8032     	 adds r2,r2,#128
 1735 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1736              	.L68:
 665:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 666:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1737              	 .loc 2 666 0
 1738 0034 1437     	 adds r7,r7,#20
 1739              	 .cfi_def_cfa_offset 4
 1740 0036 BD46     	 mov sp,r7
 1741              	 .cfi_def_cfa_register 13
 1742              	 
 1743 0038 5DF8047B 	 ldr r7,[sp],#4
 1744              	 .cfi_restore 7
 1745              	 .cfi_def_cfa_offset 0
 1746 003c 7047     	 bx lr
 1747              	 .cfi_endproc
 1748              	.LFE276:
 1750 003e 00BF     	 .section .text.XMC_VADC_GROUP_DisableChannelSyncRequest,"ax",%progbits
 1751              	 .align 2
 1752              	 .global XMC_VADC_GROUP_DisableChannelSyncRequest
 1753              	 .thumb
 1754              	 .thumb_func
 1756              	XMC_VADC_GROUP_DisableChannelSyncRequest:
 1757              	.LFB277:
 667:../Libraries/XMCLib/src/xmc_vadc.c **** 
 668:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable synchronous conversion feature */
 669:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
 670:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1758              	 .loc 2 670 0
 1759              	 .cfi_startproc
 1760              	 
 1761              	 
 1762              	 
 1763 0000 80B4     	 push {r7}
 1764              	 .cfi_def_cfa_offset 4
 1765              	 .cfi_offset 7,-4
 1766 0002 85B0     	 sub sp,sp,#20
 1767              	 .cfi_def_cfa_offset 24
 1768 0004 00AF     	 add r7,sp,#0
 1769              	 .cfi_def_cfa_register 7
 1770 0006 7860     	 str r0,[r7,#4]
 1771 0008 3960     	 str r1,[r7]
 671:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    synctr;
 672:../Libraries/XMCLib/src/xmc_vadc.c **** 
 673:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
 674:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Channel Number",
 675:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 676:../Libraries/XMCLib/src/xmc_vadc.c **** 
 677:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1772              	 .loc 2 677 0
 1773 000a 7B68     	 ldr r3,[r7,#4]
 1774 000c D3F8C030 	 ldr r3,[r3,#192]
 1775 0010 FB60     	 str r3,[r7,#12]
 678:../Libraries/XMCLib/src/xmc_vadc.c **** 
 679:../Libraries/XMCLib/src/xmc_vadc.c ****   if (synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk)
 1776              	 .loc 2 679 0
 1777 0012 FB68     	 ldr r3,[r7,#12]
 1778 0014 03F00303 	 and r3,r3,#3
 1779 0018 002B     	 cmp r3,#0
 1780 001a 0BD0     	 beq .L70
 680:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 681:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_SYNC_Msk);
 1781              	 .loc 2 681 0
 1782 001c 7B68     	 ldr r3,[r7,#4]
 1783 001e 3A68     	 ldr r2,[r7]
 1784 0020 8032     	 adds r2,r2,#128
 1785 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1786 0026 23F48061 	 bic r1,r3,#1024
 1787 002a 7B68     	 ldr r3,[r7,#4]
 1788 002c 3A68     	 ldr r2,[r7]
 1789 002e 8032     	 adds r2,r2,#128
 1790 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1791              	.L70:
 682:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 683:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1792              	 .loc 2 683 0
 1793 0034 1437     	 adds r7,r7,#20
 1794              	 .cfi_def_cfa_offset 4
 1795 0036 BD46     	 mov sp,r7
 1796              	 .cfi_def_cfa_register 13
 1797              	 
 1798 0038 5DF8047B 	 ldr r7,[sp],#4
 1799              	 .cfi_restore 7
 1800              	 .cfi_def_cfa_offset 0
 1801 003c 7047     	 bx lr
 1802              	 .cfi_endproc
 1803              	.LFE277:
 1805 003e 00BF     	 .section .text.XMC_VADC_GROUP_IsConverterBusy,"ax",%progbits
 1806              	 .align 2
 1807              	 .global XMC_VADC_GROUP_IsConverterBusy
 1808              	 .thumb
 1809              	 .thumb_func
 1811              	XMC_VADC_GROUP_IsConverterBusy:
 1812              	.LFB278:
 684:../Libraries/XMCLib/src/xmc_vadc.c **** 
 685:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the converter state - Idle vs Busy */ 
 686:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr)
 687:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1813              	 .loc 2 687 0
 1814              	 .cfi_startproc
 1815              	 
 1816              	 
 1817              	 
 1818 0000 80B4     	 push {r7}
 1819              	 .cfi_def_cfa_offset 4
 1820              	 .cfi_offset 7,-4
 1821 0002 85B0     	 sub sp,sp,#20
 1822              	 .cfi_def_cfa_offset 24
 1823 0004 00AF     	 add r7,sp,#0
 1824              	 .cfi_def_cfa_register 7
 1825 0006 7860     	 str r0,[r7,#4]
 688:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      arbcfg;
 689:../Libraries/XMCLib/src/xmc_vadc.c **** 
 690:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsConverterBusy:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
 691:../Libraries/XMCLib/src/xmc_vadc.c **** 
 692:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg  = group_ptr->ARBCFG;
 1826              	 .loc 2 692 0
 1827 0008 7B68     	 ldr r3,[r7,#4]
 1828 000a D3F88030 	 ldr r3,[r3,#128]
 1829 000e FB60     	 str r3,[r7,#12]
 693:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 1830              	 .loc 2 693 0
 1831 0010 FB68     	 ldr r3,[r7,#12]
 1832 0012 03F08043 	 and r3,r3,#1073741824
 1833 0016 FB60     	 str r3,[r7,#12]
 694:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = arbcfg >> VADC_G_ARBCFG_BUSY_Pos;
 1834              	 .loc 2 694 0
 1835 0018 FB68     	 ldr r3,[r7,#12]
 1836 001a 9B0F     	 lsrs r3,r3,#30
 1837 001c FB60     	 str r3,[r7,#12]
 695:../Libraries/XMCLib/src/xmc_vadc.c **** 
 696:../Libraries/XMCLib/src/xmc_vadc.c ****   return( (XMC_VADC_GROUP_STATE_t)arbcfg);
 1838              	 .loc 2 696 0
 1839 001e FB68     	 ldr r3,[r7,#12]
 1840 0020 DBB2     	 uxtb r3,r3
 697:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1841              	 .loc 2 697 0
 1842 0022 1846     	 mov r0,r3
 1843 0024 1437     	 adds r7,r7,#20
 1844              	 .cfi_def_cfa_offset 4
 1845 0026 BD46     	 mov sp,r7
 1846              	 .cfi_def_cfa_register 13
 1847              	 
 1848 0028 5DF8047B 	 ldr r7,[sp],#4
 1849              	 .cfi_restore 7
 1850              	 .cfi_def_cfa_offset 0
 1851 002c 7047     	 bx lr
 1852              	 .cfi_endproc
 1853              	.LFE278:
 1855 002e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaries,"ax",%progbits
 1856              	 .align 2
 1857              	 .global XMC_VADC_GROUP_SetBoundaries
 1858              	 .thumb
 1859              	 .thumb_func
 1861              	XMC_VADC_GROUP_SetBoundaries:
 1862              	.LFB279:
 698:../Libraries/XMCLib/src/xmc_vadc.c **** 
 699:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boundaries for conversion results */
 700:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, const uint32_t boundary0, cons
 701:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1863              	 .loc 2 701 0
 1864              	 .cfi_startproc
 1865              	 
 1866              	 
 1867              	 
 1868 0000 80B4     	 push {r7}
 1869              	 .cfi_def_cfa_offset 4
 1870              	 .cfi_offset 7,-4
 1871 0002 87B0     	 sub sp,sp,#28
 1872              	 .cfi_def_cfa_offset 32
 1873 0004 00AF     	 add r7,sp,#0
 1874              	 .cfi_def_cfa_register 7
 1875 0006 F860     	 str r0,[r7,#12]
 1876 0008 B960     	 str r1,[r7,#8]
 1877 000a 7A60     	 str r2,[r7,#4]
 702:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 703:../Libraries/XMCLib/src/xmc_vadc.c **** 
 704:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaries:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 705:../Libraries/XMCLib/src/xmc_vadc.c **** 
 706:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 707:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1878              	 .loc 2 707 0
 1879 000c FB68     	 ldr r3,[r7,#12]
 1880 000e D3F8B830 	 ldr r3,[r3,#184]
 1881 0012 7B61     	 str r3,[r7,#20]
 708:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1882              	 .loc 2 708 0
 1883 0014 7B69     	 ldr r3,[r7,#20]
 1884 0016 23F47F63 	 bic r3,r3,#4080
 1885 001a 23F00F03 	 bic r3,r3,#15
 1886 001e 7B61     	 str r3,[r7,#20]
 709:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1887              	 .loc 2 709 0
 1888 0020 7B69     	 ldr r3,[r7,#20]
 1889 0022 23F07F63 	 bic r3,r3,#267386880
 1890 0026 23F47023 	 bic r3,r3,#983040
 1891 002a 7B61     	 str r3,[r7,#20]
 710:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 1892              	 .loc 2 710 0
 1893 002c 7A69     	 ldr r2,[r7,#20]
 1894 002e BB68     	 ldr r3,[r7,#8]
 1895 0030 1343     	 orrs r3,r3,r2
 1896 0032 7B61     	 str r3,[r7,#20]
 711:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary1 << VADC_G_BOUND_BOUNDARY1_Pos);
 1897              	 .loc 2 711 0
 1898 0034 7B68     	 ldr r3,[r7,#4]
 1899 0036 1B04     	 lsls r3,r3,#16
 1900 0038 7A69     	 ldr r2,[r7,#20]
 1901 003a 1343     	 orrs r3,r3,r2
 1902 003c 7B61     	 str r3,[r7,#20]
 712:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1903              	 .loc 2 712 0
 1904 003e FB68     	 ldr r3,[r7,#12]
 1905 0040 7A69     	 ldr r2,[r7,#20]
 1906 0042 C3F8B820 	 str r2,[r3,#184]
 713:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1907              	 .loc 2 713 0
 1908 0046 1C37     	 adds r7,r7,#28
 1909              	 .cfi_def_cfa_offset 4
 1910 0048 BD46     	 mov sp,r7
 1911              	 .cfi_def_cfa_register 13
 1912              	 
 1913 004a 5DF8047B 	 ldr r7,[sp],#4
 1914              	 .cfi_restore 7
 1915              	 .cfi_def_cfa_offset 0
 1916 004e 7047     	 bx lr
 1917              	 .cfi_endproc
 1918              	.LFE279:
 1920              	 .section .text.XMC_VADC_GROUP_SetIndividualBoundary,"ax",%progbits
 1921              	 .align 2
 1922              	 .global XMC_VADC_GROUP_SetIndividualBoundary
 1923              	 .thumb
 1924              	 .thumb_func
 1926              	XMC_VADC_GROUP_SetIndividualBoundary:
 1927              	.LFB280:
 714:../Libraries/XMCLib/src/xmc_vadc.c **** 
 715:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 716:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
 717:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 718:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const uint16_t boundary_value)
 719:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1928              	 .loc 2 719 0
 1929              	 .cfi_startproc
 1930              	 
 1931              	 
 1932              	 
 1933 0000 80B4     	 push {r7}
 1934              	 .cfi_def_cfa_offset 4
 1935              	 .cfi_offset 7,-4
 1936 0002 85B0     	 sub sp,sp,#20
 1937              	 .cfi_def_cfa_offset 24
 1938 0004 00AF     	 add r7,sp,#0
 1939              	 .cfi_def_cfa_register 7
 1940 0006 7860     	 str r0,[r7,#4]
 1941 0008 0B46     	 mov r3,r1
 1942 000a FB70     	 strb r3,[r7,#3]
 1943 000c 1346     	 mov r3,r2
 1944 000e 3B80     	 strh r3,[r7]
 720:../Libraries/XMCLib/src/xmc_vadc.c **** 
 721:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 722:../Libraries/XMCLib/src/xmc_vadc.c **** 
 723:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 724:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Boundary Selection",
 725:../Libraries/XMCLib/src/xmc_vadc.c ****                ((XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection) ||
 726:../Libraries/XMCLib/src/xmc_vadc.c ****                 (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)))
 727:../Libraries/XMCLib/src/xmc_vadc.c **** 
 728:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 729:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1945              	 .loc 2 729 0
 1946 0010 7B68     	 ldr r3,[r7,#4]
 1947 0012 D3F8B830 	 ldr r3,[r3,#184]
 1948 0016 FB60     	 str r3,[r7,#12]
 730:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection)
 1949              	 .loc 2 730 0
 1950 0018 FB78     	 ldrb r3,[r7,#3]
 1951 001a 002B     	 cmp r3,#0
 1952 001c 0AD1     	 bne .L76
 731:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 732:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1953              	 .loc 2 732 0
 1954 001e FB68     	 ldr r3,[r7,#12]
 1955 0020 23F47F63 	 bic r3,r3,#4080
 1956 0024 23F00F03 	 bic r3,r3,#15
 1957 0028 FB60     	 str r3,[r7,#12]
 733:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY0_Pos);
 1958              	 .loc 2 733 0
 1959 002a 3B88     	 ldrh r3,[r7]
 1960 002c FA68     	 ldr r2,[r7,#12]
 1961 002e 1343     	 orrs r3,r3,r2
 1962 0030 FB60     	 str r3,[r7,#12]
 1963 0032 0DE0     	 b .L77
 1964              	.L76:
 734:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 735:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)
 1965              	 .loc 2 735 0
 1966 0034 FB78     	 ldrb r3,[r7,#3]
 1967 0036 012B     	 cmp r3,#1
 1968 0038 0AD1     	 bne .L77
 736:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 737:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1969              	 .loc 2 737 0
 1970 003a FB68     	 ldr r3,[r7,#12]
 1971 003c 23F07F63 	 bic r3,r3,#267386880
 1972 0040 23F47023 	 bic r3,r3,#983040
 1973 0044 FB60     	 str r3,[r7,#12]
 738:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 1974              	 .loc 2 738 0
 1975 0046 3B88     	 ldrh r3,[r7]
 1976 0048 1B04     	 lsls r3,r3,#16
 1977 004a FA68     	 ldr r2,[r7,#12]
 1978 004c 1343     	 orrs r3,r3,r2
 1979 004e FB60     	 str r3,[r7,#12]
 1980              	.L77:
 739:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 740:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 741:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 742:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 743:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 744:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1981              	 .loc 2 744 0
 1982 0050 7B68     	 ldr r3,[r7,#4]
 1983 0052 FA68     	 ldr r2,[r7,#12]
 1984 0054 C3F8B820 	 str r2,[r3,#184]
 745:../Libraries/XMCLib/src/xmc_vadc.c **** 
 746:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1985              	 .loc 2 746 0
 1986 0058 1437     	 adds r7,r7,#20
 1987              	 .cfi_def_cfa_offset 4
 1988 005a BD46     	 mov sp,r7
 1989              	 .cfi_def_cfa_register 13
 1990              	 
 1991 005c 5DF8047B 	 ldr r7,[sp],#4
 1992              	 .cfi_restore 7
 1993              	 .cfi_def_cfa_offset 0
 1994 0060 7047     	 bx lr
 1995              	 .cfi_endproc
 1996              	.LFE280:
 1998 0062 00BF     	 .section .text.XMC_VADC_GROUP_TriggerServiceRequest,"ax",%progbits
 1999              	 .align 2
 2000              	 .global XMC_VADC_GROUP_TriggerServiceRequest
 2001              	 .thumb
 2002              	 .thumb_func
 2004              	XMC_VADC_GROUP_TriggerServiceRequest:
 2005              	.LFB281:
 747:../Libraries/XMCLib/src/xmc_vadc.c **** 
 748:../Libraries/XMCLib/src/xmc_vadc.c **** /* Manually assert service request (Interrupt) to NVIC */
 749:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
 750:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const uint32_t sr_num,
 751:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_IRQ_t type)
 752:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2006              	 .loc 2 752 0
 2007              	 .cfi_startproc
 2008              	 
 2009              	 
 2010              	 
 2011 0000 80B4     	 push {r7}
 2012              	 .cfi_def_cfa_offset 4
 2013              	 .cfi_offset 7,-4
 2014 0002 87B0     	 sub sp,sp,#28
 2015              	 .cfi_def_cfa_offset 32
 2016 0004 00AF     	 add r7,sp,#0
 2017              	 .cfi_def_cfa_register 7
 2018 0006 F860     	 str r0,[r7,#12]
 2019 0008 B960     	 str r1,[r7,#8]
 2020 000a 1346     	 mov r3,r2
 2021 000c FB71     	 strb r3,[r7,#7]
 753:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sract;
 754:../Libraries/XMCLib/src/xmc_vadc.c **** 
 755:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 756:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR number", (sr_num <= XMC_VADC_SR_SHARED_
 757:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR type", ((type)<= XMC_VADC_GROUP_IRQ_SHA
 758:../Libraries/XMCLib/src/xmc_vadc.c **** 
 759:../Libraries/XMCLib/src/xmc_vadc.c ****   sract = group_ptr->SRACT;
 2022              	 .loc 2 759 0
 2023 000e FB68     	 ldr r3,[r7,#12]
 2024 0010 D3F8C831 	 ldr r3,[r3,#456]
 2025 0014 7B61     	 str r3,[r7,#20]
 760:../Libraries/XMCLib/src/xmc_vadc.c **** 
 761:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_IRQ_KERNEL == type)
 2026              	 .loc 2 761 0
 2027 0016 FB79     	 ldrb r3,[r7,#7]
 2028 0018 002B     	 cmp r3,#0
 2029 001a 07D1     	 bne .L79
 762:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 763:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << sr_num);
 2030              	 .loc 2 763 0
 2031 001c BB68     	 ldr r3,[r7,#8]
 2032 001e 0122     	 movs r2,#1
 2033 0020 02FA03F3 	 lsl r3,r2,r3
 2034 0024 7A69     	 ldr r2,[r7,#20]
 2035 0026 1343     	 orrs r3,r3,r2
 2036 0028 7B61     	 str r3,[r7,#20]
 2037 002a 07E0     	 b .L80
 2038              	.L79:
 764:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 765:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 766:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 767:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << (sr_num + (uint32_t)8));
 2039              	 .loc 2 767 0
 2040 002c BB68     	 ldr r3,[r7,#8]
 2041 002e 0833     	 adds r3,r3,#8
 2042 0030 1A46     	 mov r2,r3
 2043 0032 0123     	 movs r3,#1
 2044 0034 9340     	 lsls r3,r3,r2
 2045 0036 7A69     	 ldr r2,[r7,#20]
 2046 0038 1343     	 orrs r3,r3,r2
 2047 003a 7B61     	 str r3,[r7,#20]
 2048              	.L80:
 768:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 769:../Libraries/XMCLib/src/xmc_vadc.c **** 
 770:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SRACT = sract;
 2049              	 .loc 2 770 0
 2050 003c FB68     	 ldr r3,[r7,#12]
 2051 003e 7A69     	 ldr r2,[r7,#20]
 2052 0040 C3F8C821 	 str r2,[r3,#456]
 771:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2053              	 .loc 2 771 0
 2054 0044 1C37     	 adds r7,r7,#28
 2055              	 .cfi_def_cfa_offset 4
 2056 0046 BD46     	 mov sp,r7
 2057              	 .cfi_def_cfa_register 13
 2058              	 
 2059 0048 5DF8047B 	 ldr r7,[sp],#4
 2060              	 .cfi_restore 7
 2061              	 .cfi_def_cfa_offset 0
 2062 004c 7047     	 bx lr
 2063              	 .cfi_endproc
 2064              	.LFE281:
 2066 004e 00BF     	 .section .text.XMC_VADC_GROUP_ScanInit,"ax",%progbits
 2067              	 .align 2
 2068              	 .global XMC_VADC_GROUP_ScanInit
 2069              	 .thumb
 2070              	 .thumb_func
 2072              	XMC_VADC_GROUP_ScanInit:
 2073              	.LFB282:
 772:../Libraries/XMCLib/src/xmc_vadc.c **** 
 773:../Libraries/XMCLib/src/xmc_vadc.c **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
 774:../Libraries/XMCLib/src/xmc_vadc.c **** 
 775:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the SR line for the Boundary flag node pointer*/
 776:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
 777:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const uint8_t boundary_flag_num,
 778:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const XMC_VADC_BOUNDARY_NODE_t sr
 779:../Libraries/XMCLib/src/xmc_vadc.c **** {
 780:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t flag_pos;
 781:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaryEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GRO
 782:../Libraries/XMCLib/src/xmc_vadc.c **** 
 783:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the GxBFLNP */
 784:../Libraries/XMCLib/src/xmc_vadc.c ****   flag_pos = (uint32_t)boundary_flag_num << (uint32_t)2;
 785:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 786:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 787:../Libraries/XMCLib/src/xmc_vadc.c **** }
 788:../Libraries/XMCLib/src/xmc_vadc.c **** 
 789:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 790:../Libraries/XMCLib/src/xmc_vadc.c **** 
 791:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 792:../Libraries/XMCLib/src/xmc_vadc.c **** 
 793:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 794:../Libraries/XMCLib/src/xmc_vadc.c **** 
 795:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Initialize the Sample and hold features*/
 796:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
 797:../Libraries/XMCLib/src/xmc_vadc.c **** {
 798:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(voi
 799:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong Index number",(config == (XMC_VADC_GLOBAL_SHS_CONFIG_t
 800:../Libraries/XMCLib/src/xmc_vadc.c **** 
 801:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Initialize the SHS Configuration register*/
 802:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->SHSCFG = (uint32_t)((uint32_t)config->shscfg | (uint32_t)SHS_SHSCFG_SCWC_Msk);
 803:../Libraries/XMCLib/src/xmc_vadc.c **** 
 804:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 805:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Select the Calibration order*/
 806:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALORD_Msk);
 807:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 808:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 809:../Libraries/XMCLib/src/xmc_vadc.c **** }
 810:../Libraries/XMCLib/src/xmc_vadc.c **** 
 811:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 812:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the accelerated mode of conversion */
 813:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
 814:../Libraries/XMCLib/src/xmc_vadc.c **** {
 815:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong SHS Pointer",
 816:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 817:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC_
 818:../Libraries/XMCLib/src/xmc_vadc.c **** 
 819:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 820:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 821:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 822:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)SHS_TIMCFG0_AT_Msk;
 823:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 824:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 825:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 826:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)SHS_TIMCFG1_AT_Msk;
 827:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 828:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 829:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 830:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 831:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 832:../Libraries/XMCLib/src/xmc_vadc.c **** }
 833:../Libraries/XMCLib/src/xmc_vadc.c **** 
 834:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable the accelerated mode of conversion */
 835:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
 836:../Libraries/XMCLib/src/xmc_vadc.c **** {
 837:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong SHS Pointer",
 838:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 839:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC
 840:../Libraries/XMCLib/src/xmc_vadc.c **** 
 841:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 842:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 843:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 844:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~(uint32_t)SHS_TIMCFG0_AT_Msk;
 845:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 846:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 847:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 848:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~(uint32_t)SHS_TIMCFG1_AT_Msk;
 849:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 850:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 851:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 852:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 853:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 854:../Libraries/XMCLib/src/xmc_vadc.c **** }
 855:../Libraries/XMCLib/src/xmc_vadc.c **** 
 856:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the Short sample time of the Sample and hold module*/
 857:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 858:../Libraries/XMCLib/src/xmc_vadc.c ****                                             XMC_VADC_GROUP_INDEX_t group_num,
 859:../Libraries/XMCLib/src/xmc_vadc.c ****                                             uint8_t sst_value)
 860:../Libraries/XMCLib/src/xmc_vadc.c **** {
 861:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SHS Pointer",
 862:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 863:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong Index number",(group_num <= XMC_VADC_GRO
 864:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SST value",(sst_value < 64U))
 865:../Libraries/XMCLib/src/xmc_vadc.c **** 
 866:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the short sample time for the Accelerated mode of operation*/
 867:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 868:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 869:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~((uint32_t)SHS_TIMCFG0_SST_Msk);
 870:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG0_SST_Pos );
 871:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 872:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 873:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 874:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~((uint32_t)SHS_TIMCFG1_SST_Msk);
 875:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 876:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 877:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 878:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 879:../Libraries/XMCLib/src/xmc_vadc.c ****   /* for MISRA*/
 880:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 881:../Libraries/XMCLib/src/xmc_vadc.c **** }
 882:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 883:../Libraries/XMCLib/src/xmc_vadc.c **** 
 884:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the gain factor of the Sample and hold module*/
 885:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 886:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t gain_value,
 887:../Libraries/XMCLib/src/xmc_vadc.c ****                                        XMC_VADC_GROUP_INDEX_t group_num,
 888:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t ch_num)
 889:../Libraries/XMCLib/src/xmc_vadc.c **** {
 890:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_mask;
 891:../Libraries/XMCLib/src/xmc_vadc.c **** 
 892:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SH
 893:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong Index number",(group_num <= XMC_VADC_GROUP_IN
 894:../Libraries/XMCLib/src/xmc_vadc.c **** 
 895:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Calculate location of channel bit-field*/
 896:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_mask = ((uint32_t)ch_num << (uint32_t)2);
 897:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 898:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 899:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 &= ~((uint32_t)SHS_GNCTR00_GAIN0_Msk << ch_mask) ;
 900:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 901:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 902:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 903:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 904:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 &= ~((uint32_t)SHS_GNCTR10_GAIN0_Msk << ch_mask);
 905:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 906:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 907:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 908:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 909:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 910:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 911:../Libraries/XMCLib/src/xmc_vadc.c **** }
 912:../Libraries/XMCLib/src/xmc_vadc.c **** 
 913:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 914:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 915:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 916:../Libraries/XMCLib/src/xmc_vadc.c ****                                                          XMC_VADC_GROUP_INDEX_t group_num)
 917:../Libraries/XMCLib/src/xmc_vadc.c **** {
 918:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong SHS Pointer",
 919:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 920:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong group selected",
 921:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 922:../Libraries/XMCLib/src/xmc_vadc.c **** 
 923:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable gain and offset calibration*/
 924:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 925:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 926:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 &= ~((uint32_t)SHS_CALOC0_DISCAL_Msk);
 927:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 928:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 929:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 930:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 &= ~((uint32_t)SHS_CALOC1_DISCAL_Msk);
 931:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 932:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 933:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 934:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 935:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 936:../Libraries/XMCLib/src/xmc_vadc.c **** }
 937:../Libraries/XMCLib/src/xmc_vadc.c **** 
 938:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 939:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 940:../Libraries/XMCLib/src/xmc_vadc.c ****                                                           XMC_VADC_GROUP_INDEX_t group_num)
 941:../Libraries/XMCLib/src/xmc_vadc.c **** {
 942:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong SHS Pointer",
 943:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 944:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong group selected",
 945:../Libraries/XMCLib/src/xmc_vadc.c ****             (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 946:../Libraries/XMCLib/src/xmc_vadc.c **** 
 947:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 948:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 949:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |= (uint32_t)SHS_CALOC0_DISCAL_Msk;
 950:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 951:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 952:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 953:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |= (uint32_t)SHS_CALOC1_DISCAL_Msk;
 954:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 955:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 956:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 957:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 958:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 959:../Libraries/XMCLib/src/xmc_vadc.c **** }
 960:../Libraries/XMCLib/src/xmc_vadc.c **** 
 961:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to get the offset calibration value of the Sample and hold module*/
 962:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 963:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
 964:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level)
 965:../Libraries/XMCLib/src/xmc_vadc.c **** {
 966:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t calibration_value;
 967:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong SHS Pointer",
 968:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 969:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong Group number selected",
 970:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 971:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong gain level selected",
 972:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 973:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 974:../Libraries/XMCLib/src/xmc_vadc.c **** 
 975:../Libraries/XMCLib/src/xmc_vadc.c ****   calibration_value = 0U;
 976:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 977:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 978:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC0 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC0_CALOFFVAL0
 979:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 980:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 981:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 982:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC1 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC1_CALOFFVAL0
 983:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 984:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 985:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 986:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 987:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 988:../Libraries/XMCLib/src/xmc_vadc.c ****   return ((uint8_t)calibration_value);
 989:../Libraries/XMCLib/src/xmc_vadc.c **** }
 990:../Libraries/XMCLib/src/xmc_vadc.c **** 
 991:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the offset calibration value of the Sample and hold module*/
 992:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 993:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
 994:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
 995:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    uint8_t offset_calibration_value)
 996:../Libraries/XMCLib/src/xmc_vadc.c **** {
 997:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong SHS Pointer",
 998:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 999:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong Group number selected",
1000:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
1001:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong gain level selected",
1002:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
1003:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
1004:../Libraries/XMCLib/src/xmc_vadc.c **** 
1005:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
1006:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1007:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 = (shs_ptr->CALOC0  & ~((uint32_t)SHS_CALOC0_CALOFFVAL0_Msk << (uint32_t)gain_l
1008:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC0_OFFWC_Msk;
1009:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1010:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1011:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
1012:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1013:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 = (shs_ptr->CALOC1 & ~((uint32_t)SHS_CALOC1_CALOFFVAL0_Msk << (uint32_t)gain_le
1014:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
1015:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1016:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1017:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1018:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1019:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
1020:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1021:../Libraries/XMCLib/src/xmc_vadc.c **** }
1022:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1023:../Libraries/XMCLib/src/xmc_vadc.c **** 
1024:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the values of sigma delta loop of the Sample and hold module*/
1025:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1026:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_GROUP_INDEX_t group_num,
1027:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
1028:../Libraries/XMCLib/src/xmc_vadc.c ****                                            uint8_t ch_num)
1029:../Libraries/XMCLib/src/xmc_vadc.c **** {
1030:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong SHS Pointer",
1031:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1032:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Group number selected",
1033:../Libraries/XMCLib/src/xmc_vadc.c ****                (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
1034:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Delta sigma loop selected",
1035:../Libraries/XMCLib/src/xmc_vadc.c ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
1036:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Channel Number",
1037:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1038:../Libraries/XMCLib/src/xmc_vadc.c **** 
1039:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP &= ~(((uint32_t)SHS_LOOP_LPCH0_Msk | (uint32_t)SHS_LOOP_LPSH0_Msk | (uint32_t)SHS_L
1040:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
1041:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
1042:../Libraries/XMCLib/src/xmc_vadc.c **** 
1043:../Libraries/XMCLib/src/xmc_vadc.c **** }
1044:../Libraries/XMCLib/src/xmc_vadc.c **** 
1045:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1046:../Libraries/XMCLib/src/xmc_vadc.c **** 
1047:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)   
1048:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize the group scan hardware of a kernel */
1049:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
1050:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2074              	 .loc 2 1050 0
 2075              	 .cfi_startproc
 2076              	 
 2077              	 
 2078 0000 80B5     	 push {r7,lr}
 2079              	 .cfi_def_cfa_offset 8
 2080              	 .cfi_offset 7,-8
 2081              	 .cfi_offset 14,-4
 2082 0002 84B0     	 sub sp,sp,#16
 2083              	 .cfi_def_cfa_offset 24
 2084 0004 00AF     	 add r7,sp,#0
 2085              	 .cfi_def_cfa_register 7
 2086 0006 7860     	 str r0,[r7,#4]
 2087 0008 3960     	 str r1,[r7]
1051:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      reg;
1052:../Libraries/XMCLib/src/xmc_vadc.c **** 
1053:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1054:../Libraries/XMCLib/src/xmc_vadc.c **** 
1055:../Libraries/XMCLib/src/xmc_vadc.c ****   /* All configurations have to be performed with the arbitration slot disabled */
1056:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2088              	 .loc 2 1056 0
 2089 000a 7868     	 ldr r0,[r7,#4]
 2090 000c FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1057:../Libraries/XMCLib/src/xmc_vadc.c ****   
1058:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Read in the existing contents of arbitration priority register */
1059:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 2091              	 .loc 2 1059 0
 2092 0010 7B68     	 ldr r3,[r7,#4]
 2093 0012 D3F88430 	 ldr r3,[r3,#132]
 2094 0016 FB60     	 str r3,[r7,#12]
1060:../Libraries/XMCLib/src/xmc_vadc.c **** 
1061:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the priority of the request source */
1062:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(uint32_t)VADC_G_ARBPR_PRIO1_Msk;
 2095              	 .loc 2 1062 0
 2096 0018 FB68     	 ldr r3,[r7,#12]
 2097 001a 23F03003 	 bic r3,r3,#48
 2098 001e FB60     	 str r3,[r7,#12]
1063:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 2099              	 .loc 2 1063 0
 2100 0020 3B68     	 ldr r3,[r7]
 2101 0022 1B78     	 ldrb r3,[r3]
 2102 0024 C3F38103 	 ubfx r3,r3,#2,#2
 2103 0028 DBB2     	 uxtb r3,r3
 2104 002a 1B01     	 lsls r3,r3,#4
 2105 002c FA68     	 ldr r2,[r7,#12]
 2106 002e 1343     	 orrs r3,r3,r2
 2107 0030 FB60     	 str r3,[r7,#12]
1064:../Libraries/XMCLib/src/xmc_vadc.c ****   
1065:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the start mode */
1066:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2108              	 .loc 2 1066 0
 2109 0032 3B68     	 ldr r3,[r7]
 2110 0034 1B78     	 ldrb r3,[r3]
 2111 0036 03F00303 	 and r3,r3,#3
 2112 003a DBB2     	 uxtb r3,r3
 2113 003c 002B     	 cmp r3,#0
 2114 003e 03D0     	 beq .L82
1067:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1068:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM1_Msk);
 2115              	 .loc 2 1068 0
 2116 0040 FB68     	 ldr r3,[r7,#12]
 2117 0042 43F08003 	 orr r3,r3,#128
 2118 0046 FB60     	 str r3,[r7,#12]
 2119              	.L82:
1069:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1070:../Libraries/XMCLib/src/xmc_vadc.c **** 
1071:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 2120              	 .loc 2 1071 0
 2121 0048 7B68     	 ldr r3,[r7,#4]
 2122 004a FA68     	 ldr r2,[r7,#12]
 2123 004c C3F88420 	 str r2,[r3,#132]
1072:../Libraries/XMCLib/src/xmc_vadc.c **** 
1073:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (uint32_t)(config->asctrl |(VADC_G_ASCTRL_XTWC_Msk) |(VADC_G_ASCTRL_GTWC_Msk)
 2124              	 .loc 2 1073 0
 2125 0050 3B68     	 ldr r3,[r7]
 2126 0052 5B68     	 ldr r3,[r3,#4]
 2127 0054 43F08023 	 orr r3,r3,#-2147450880
 2128 0058 43F40003 	 orr r3,r3,#8388608
 2129 005c 7A68     	 ldr r2,[r7,#4]
 2130 005e C2F82031 	 str r3,[r2,#288]
1074:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  (VADC_G_ASCTRL_TMWC_Msk));
1075:../Libraries/XMCLib/src/xmc_vadc.c **** 
1076:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR  = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 2131              	 .loc 2 1076 0
 2132 0062 3B68     	 ldr r3,[r7]
 2133 0064 9B68     	 ldr r3,[r3,#8]
 2134 0066 43F00102 	 orr r2,r3,#1
 2135 006a 7B68     	 ldr r3,[r7,#4]
 2136 006c C3F82421 	 str r2,[r3,#292]
1077:../Libraries/XMCLib/src/xmc_vadc.c ****   
1078:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2137              	 .loc 2 1078 0
 2138 0070 3B68     	 ldr r3,[r7]
 2139 0072 1B78     	 ldrb r3,[r3]
 2140 0074 03F00303 	 and r3,r3,#3
 2141 0078 DBB2     	 uxtb r3,r3
 2142 007a 022B     	 cmp r3,#2
 2143 007c 07D1     	 bne .L83
1079:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1080:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_RPTDIS_Msk;
 2144              	 .loc 2 1080 0
 2145 007e 7B68     	 ldr r3,[r7,#4]
 2146 0080 D3F82431 	 ldr r3,[r3,#292]
 2147 0084 43F48032 	 orr r2,r3,#65536
 2148 0088 7B68     	 ldr r3,[r7,#4]
 2149 008a C3F82421 	 str r2,[r3,#292]
 2150              	.L83:
1081:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1082:../Libraries/XMCLib/src/xmc_vadc.c ****   
1083:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot now */
1084:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanEnableArbitrationSlot(group_ptr);
 2151              	 .loc 2 1084 0
 2152 008e 7868     	 ldr r0,[r7,#4]
 2153 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanEnableArbitrationSlot
1085:../Libraries/XMCLib/src/xmc_vadc.c ****   
1086:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2154              	 .loc 2 1086 0
 2155 0094 1037     	 adds r7,r7,#16
 2156              	 .cfi_def_cfa_offset 8
 2157 0096 BD46     	 mov sp,r7
 2158              	 .cfi_def_cfa_register 13
 2159              	 
 2160 0098 80BD     	 pop {r7,pc}
 2161              	 .cfi_endproc
 2162              	.LFE282:
 2164 009a 00BF     	 .section .text.XMC_VADC_GROUP_ScanSelectTrigger,"ax",%progbits
 2165              	 .align 2
 2166              	 .global XMC_VADC_GROUP_ScanSelectTrigger
 2167              	 .thumb
 2168              	 .thumb_func
 2170              	XMC_VADC_GROUP_ScanSelectTrigger:
 2171              	.LFB283:
1087:../Libraries/XMCLib/src/xmc_vadc.c **** 
1088:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger input for Group Scan request source */
1089:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
1090:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2172              	 .loc 2 1090 0
 2173              	 .cfi_startproc
 2174              	 
 2175              	 
 2176              	 
 2177 0000 80B4     	 push {r7}
 2178              	 .cfi_def_cfa_offset 4
 2179              	 .cfi_offset 7,-4
 2180 0002 85B0     	 sub sp,sp,#20
 2181              	 .cfi_def_cfa_offset 24
 2182 0004 00AF     	 add r7,sp,#0
 2183              	 .cfi_def_cfa_register 7
 2184 0006 7860     	 str r0,[r7,#4]
 2185 0008 0B46     	 mov r3,r1
 2186 000a FB70     	 strb r3,[r7,#3]
1091:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1092:../Libraries/XMCLib/src/xmc_vadc.c **** 
1093:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1094:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Trigger Port", ((trigger_input)< XMC_VADC_NUM_
1095:../Libraries/XMCLib/src/xmc_vadc.c **** 
1096:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2187              	 .loc 2 1096 0
 2188 000c 7B68     	 ldr r3,[r7,#4]
 2189 000e D3F82031 	 ldr r3,[r3,#288]
 2190 0012 FB60     	 str r3,[r7,#12]
1097:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2191              	 .loc 2 1097 0
 2192 0014 FB68     	 ldr r3,[r7,#12]
 2193 0016 43F40043 	 orr r3,r3,#32768
 2194 001a FB60     	 str r3,[r7,#12]
1098:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTSEL_Msk);
 2195              	 .loc 2 1098 0
 2196 001c FB68     	 ldr r3,[r7,#12]
 2197 001e 23F47063 	 bic r3,r3,#3840
 2198 0022 FB60     	 str r3,[r7,#12]
1099:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2199              	 .loc 2 1099 0
 2200 0024 FB78     	 ldrb r3,[r7,#3]
 2201 0026 1B02     	 lsls r3,r3,#8
 2202 0028 FA68     	 ldr r2,[r7,#12]
 2203 002a 1343     	 orrs r3,r3,r2
 2204 002c FB60     	 str r3,[r7,#12]
1100:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2205              	 .loc 2 1100 0
 2206 002e 7B68     	 ldr r3,[r7,#4]
 2207 0030 FA68     	 ldr r2,[r7,#12]
 2208 0032 C3F82021 	 str r2,[r3,#288]
1101:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2209              	 .loc 2 1101 0
 2210 0036 1437     	 adds r7,r7,#20
 2211              	 .cfi_def_cfa_offset 4
 2212 0038 BD46     	 mov sp,r7
 2213              	 .cfi_def_cfa_register 13
 2214              	 
 2215 003a 5DF8047B 	 ldr r7,[sp],#4
 2216              	 .cfi_restore 7
 2217              	 .cfi_def_cfa_offset 0
 2218 003e 7047     	 bx lr
 2219              	 .cfi_endproc
 2220              	.LFE283:
 2222              	 .section .text.XMC_VADC_GROUP_ScanSelectTriggerEdge,"ax",%progbits
 2223              	 .align 2
 2224              	 .global XMC_VADC_GROUP_ScanSelectTriggerEdge
 2225              	 .thumb
 2226              	 .thumb_func
 2228              	XMC_VADC_GROUP_ScanSelectTriggerEdge:
 2229              	.LFB284:
1102:../Libraries/XMCLib/src/xmc_vadc.c **** 
1103:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1104:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
1105:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2230              	 .loc 2 1105 0
 2231              	 .cfi_startproc
 2232              	 
 2233              	 
 2234              	 
 2235 0000 80B4     	 push {r7}
 2236              	 .cfi_def_cfa_offset 4
 2237              	 .cfi_offset 7,-4
 2238 0002 85B0     	 sub sp,sp,#20
 2239              	 .cfi_def_cfa_offset 24
 2240 0004 00AF     	 add r7,sp,#0
 2241              	 .cfi_def_cfa_register 7
 2242 0006 7860     	 str r0,[r7,#4]
 2243 0008 0B46     	 mov r3,r1
 2244 000a FB70     	 strb r3,[r7,#3]
1106:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1107:../Libraries/XMCLib/src/xmc_vadc.c **** 
1108:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
1109:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Trigger Port", ((trigger_edge)<= XMC_VADC_
1110:../Libraries/XMCLib/src/xmc_vadc.c **** 
1111:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2245              	 .loc 2 1111 0
 2246 000c 7B68     	 ldr r3,[r7,#4]
 2247 000e D3F82031 	 ldr r3,[r3,#288]
 2248 0012 FB60     	 str r3,[r7,#12]
1112:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2249              	 .loc 2 1112 0
 2250 0014 FB68     	 ldr r3,[r7,#12]
 2251 0016 43F40043 	 orr r3,r3,#32768
 2252 001a FB60     	 str r3,[r7,#12]
1113:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTMODE_Msk);
 2253              	 .loc 2 1113 0
 2254 001c FB68     	 ldr r3,[r7,#12]
 2255 001e 23F4C043 	 bic r3,r3,#24576
 2256 0022 FB60     	 str r3,[r7,#12]
1114:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2257              	 .loc 2 1114 0
 2258 0024 FB78     	 ldrb r3,[r7,#3]
 2259 0026 5B03     	 lsls r3,r3,#13
 2260 0028 FA68     	 ldr r2,[r7,#12]
 2261 002a 1343     	 orrs r3,r3,r2
 2262 002c FB60     	 str r3,[r7,#12]
1115:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2263              	 .loc 2 1115 0
 2264 002e 7B68     	 ldr r3,[r7,#4]
 2265 0030 FA68     	 ldr r2,[r7,#12]
 2266 0032 C3F82021 	 str r2,[r3,#288]
1116:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2267              	 .loc 2 1116 0
 2268 0036 1437     	 adds r7,r7,#20
 2269              	 .cfi_def_cfa_offset 4
 2270 0038 BD46     	 mov sp,r7
 2271              	 .cfi_def_cfa_register 13
 2272              	 
 2273 003a 5DF8047B 	 ldr r7,[sp],#4
 2274              	 .cfi_restore 7
 2275              	 .cfi_def_cfa_offset 0
 2276 003e 7047     	 bx lr
 2277              	 .cfi_endproc
 2278              	.LFE284:
 2280              	 .section .text.XMC_VADC_GROUP_ScanSelectGating,"ax",%progbits
 2281              	 .align 2
 2282              	 .global XMC_VADC_GROUP_ScanSelectGating
 2283              	 .thumb
 2284              	 .thumb_func
 2286              	XMC_VADC_GROUP_ScanSelectGating:
 2287              	.LFB285:
1117:../Libraries/XMCLib/src/xmc_vadc.c **** 
1118:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gating input for Group Scan request source */
1119:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
1120:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2288              	 .loc 2 1120 0
 2289              	 .cfi_startproc
 2290              	 
 2291              	 
 2292              	 
 2293 0000 80B4     	 push {r7}
 2294              	 .cfi_def_cfa_offset 4
 2295              	 .cfi_offset 7,-4
 2296 0002 85B0     	 sub sp,sp,#20
 2297              	 .cfi_def_cfa_offset 24
 2298 0004 00AF     	 add r7,sp,#0
 2299              	 .cfi_def_cfa_register 7
 2300 0006 7860     	 str r0,[r7,#4]
 2301 0008 0B46     	 mov r3,r1
 2302 000a FB70     	 strb r3,[r7,#3]
1121:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1122:../Libraries/XMCLib/src/xmc_vadc.c **** 
1123:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1124:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Gating Port", ((gating_input)< XMC_VADC_NUM_POR
1125:../Libraries/XMCLib/src/xmc_vadc.c **** 
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2303              	 .loc 2 1126 0
 2304 000c 7B68     	 ldr r3,[r7,#4]
 2305 000e D3F82031 	 ldr r3,[r3,#288]
 2306 0012 FB60     	 str r3,[r7,#12]
1127:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
 2307              	 .loc 2 1127 0
 2308 0014 FB68     	 ldr r3,[r7,#12]
 2309 0016 43F40003 	 orr r3,r3,#8388608
 2310 001a FB60     	 str r3,[r7,#12]
1128:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_GTSEL_Msk);
 2311              	 .loc 2 1128 0
 2312 001c FB68     	 ldr r3,[r7,#12]
 2313 001e 23F47023 	 bic r3,r3,#983040
 2314 0022 FB60     	 str r3,[r7,#12]
1129:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2315              	 .loc 2 1129 0
 2316 0024 FB78     	 ldrb r3,[r7,#3]
 2317 0026 1B04     	 lsls r3,r3,#16
 2318 0028 FA68     	 ldr r2,[r7,#12]
 2319 002a 1343     	 orrs r3,r3,r2
 2320 002c FB60     	 str r3,[r7,#12]
1130:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2321              	 .loc 2 1130 0
 2322 002e 7B68     	 ldr r3,[r7,#4]
 2323 0030 FA68     	 ldr r2,[r7,#12]
 2324 0032 C3F82021 	 str r2,[r3,#288]
1131:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2325              	 .loc 2 1131 0
 2326 0036 1437     	 adds r7,r7,#20
 2327              	 .cfi_def_cfa_offset 4
 2328 0038 BD46     	 mov sp,r7
 2329              	 .cfi_def_cfa_register 13
 2330              	 
 2331 003a 5DF8047B 	 ldr r7,[sp],#4
 2332              	 .cfi_restore 7
 2333              	 .cfi_def_cfa_offset 0
 2334 003e 7047     	 bx lr
 2335              	 .cfi_endproc
 2336              	.LFE285:
 2338              	 .section .text.XMC_VADC_GROUP_ScanSequenceAbort,"ax",%progbits
 2339              	 .align 2
 2340              	 .global XMC_VADC_GROUP_ScanSequenceAbort
 2341              	 .thumb
 2342              	 .thumb_func
 2344              	XMC_VADC_GROUP_ScanSequenceAbort:
 2345              	.LFB286:
1132:../Libraries/XMCLib/src/xmc_vadc.c **** 
1133:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to stop an ongoing conversion of a sequence */
1134:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr)
1135:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2346              	 .loc 2 1135 0
 2347              	 .cfi_startproc
 2348              	 
 2349              	 
 2350 0000 80B5     	 push {r7,lr}
 2351              	 .cfi_def_cfa_offset 8
 2352              	 .cfi_offset 7,-8
 2353              	 .cfi_offset 14,-4
 2354 0002 84B0     	 sub sp,sp,#16
 2355              	 .cfi_def_cfa_offset 24
 2356 0004 00AF     	 add r7,sp,#0
 2357              	 .cfi_def_cfa_register 7
 2358 0006 7860     	 str r0,[r7,#4]
1136:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
1137:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1138:../Libraries/XMCLib/src/xmc_vadc.c **** 
1139:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSequenceAbort:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1140:../Libraries/XMCLib/src/xmc_vadc.c **** 
1141:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1142:../Libraries/XMCLib/src/xmc_vadc.c ****   asctrl = group_ptr->ASCTRL;
 2359              	 .loc 2 1142 0
 2360 0008 7B68     	 ldr r3,[r7,#4]
 2361 000a D3F82031 	 ldr r3,[r3,#288]
 2362 000e FB60     	 str r3,[r7,#12]
1143:../Libraries/XMCLib/src/xmc_vadc.c **** 
1144:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(0U | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
 2363              	 .loc 2 1144 0
 2364 0010 7B68     	 ldr r3,[r7,#4]
 2365 0012 1A4A     	 ldr r2,.L88
 2366 0014 C3F82021 	 str r2,[r3,#288]
1145:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
1146:../Libraries/XMCLib/src/xmc_vadc.c **** 
1147:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable Arbitration before abort*/
1148:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN1_Pos) & 1U);
 2367              	 .loc 2 1148 0
 2368 0018 7B68     	 ldr r3,[r7,#4]
 2369 001a D3F88430 	 ldr r3,[r3,#132]
 2370 001e 5B0E     	 lsrs r3,r3,#25
 2371 0020 03F00103 	 and r3,r3,#1
 2372 0024 002B     	 cmp r3,#0
 2373 0026 14BF     	 ite ne
 2374 0028 0123     	 movne r3,#1
 2375 002a 0023     	 moveq r3,#0
 2376 002c FB72     	 strb r3,[r7,#11]
1149:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2377              	 .loc 2 1149 0
 2378 002e 7868     	 ldr r0,[r7,#4]
 2379 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1150:../Libraries/XMCLib/src/xmc_vadc.c **** 
1151:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENGT_Msk);
 2380              	 .loc 2 1151 0
 2381 0034 7B68     	 ldr r3,[r7,#4]
 2382 0036 D3F82431 	 ldr r3,[r3,#292]
 2383 003a 23F00302 	 bic r2,r3,#3
 2384 003e 7B68     	 ldr r3,[r7,#4]
 2385 0040 C3F82421 	 str r2,[r3,#292]
1152:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2386              	 .loc 2 1152 0
 2387 0044 7B68     	 ldr r3,[r7,#4]
 2388 0046 D3F82431 	 ldr r3,[r3,#292]
 2389 004a 43F48072 	 orr r2,r3,#256
 2390 004e 7B68     	 ldr r3,[r7,#4]
 2391 0050 C3F82421 	 str r2,[r3,#292]
1153:../Libraries/XMCLib/src/xmc_vadc.c **** 
1154:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Enable the arbitration slot 1*/
1155:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN1_Pos);
 2392              	 .loc 2 1155 0
 2393 0054 7B68     	 ldr r3,[r7,#4]
 2394 0056 D3F88420 	 ldr r2,[r3,#132]
 2395 005a FB7A     	 ldrb r3,[r7,#11]
 2396 005c 5B06     	 lsls r3,r3,#25
 2397 005e 1A43     	 orrs r2,r2,r3
 2398 0060 7B68     	 ldr r3,[r7,#4]
 2399 0062 C3F88420 	 str r2,[r3,#132]
1156:../Libraries/XMCLib/src/xmc_vadc.c **** 
1157:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1158:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(asctrl | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1159:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2400              	 .loc 2 1159 0
 2401 0066 FB68     	 ldr r3,[r7,#12]
 2402 0068 43F08023 	 orr r3,r3,#-2147450880
 2403 006c 43F40003 	 orr r3,r3,#8388608
1158:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2404              	 .loc 2 1158 0
 2405 0070 7A68     	 ldr r2,[r7,#4]
 2406 0072 C2F82031 	 str r3,[r2,#288]
1160:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2407              	 .loc 2 1160 0
 2408 0076 1037     	 adds r7,r7,#16
 2409              	 .cfi_def_cfa_offset 8
 2410 0078 BD46     	 mov sp,r7
 2411              	 .cfi_def_cfa_register 13
 2412              	 
 2413 007a 80BD     	 pop {r7,pc}
 2414              	.L89:
 2415              	 .align 2
 2416              	.L88:
 2417 007c 00808080 	 .word -2139062272
 2418              	 .cfi_endproc
 2419              	.LFE286:
 2421              	 .section .text.XMC_VADC_GROUP_ScanGetNumChannelsPending,"ax",%progbits
 2422              	 .align 2
 2423              	 .global XMC_VADC_GROUP_ScanGetNumChannelsPending
 2424              	 .thumb
 2425              	 .thumb_func
 2427              	XMC_VADC_GROUP_ScanGetNumChannelsPending:
 2428              	.LFB287:
1161:../Libraries/XMCLib/src/xmc_vadc.c **** 
1162:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to find out number of channels awaiting conversion */
1163:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr)
1164:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2429              	 .loc 2 1164 0
 2430              	 .cfi_startproc
 2431              	 
 2432              	 
 2433              	 
 2434 0000 80B4     	 push {r7}
 2435              	 .cfi_def_cfa_offset 4
 2436              	 .cfi_offset 7,-4
 2437 0002 87B0     	 sub sp,sp,#28
 2438              	 .cfi_def_cfa_offset 32
 2439 0004 00AF     	 add r7,sp,#0
 2440              	 .cfi_def_cfa_register 7
 2441 0006 7860     	 str r0,[r7,#4]
1165:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1166:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1167:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1168:../Libraries/XMCLib/src/xmc_vadc.c **** 
1169:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanGetNumChannelsPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1170:../Libraries/XMCLib/src/xmc_vadc.c **** 
1171:../Libraries/XMCLib/src/xmc_vadc.c **** 
1172:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 2442              	 .loc 2 1172 0
 2443 0008 0023     	 movs r3,#0
 2444 000a FB60     	 str r3,[r7,#12]
1173:../Libraries/XMCLib/src/xmc_vadc.c **** 
1174:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_ptr->ASPND)
 2445              	 .loc 2 1174 0
 2446 000c 7B68     	 ldr r3,[r7,#4]
 2447 000e D3F82C31 	 ldr r3,[r3,#300]
 2448 0012 002B     	 cmp r3,#0
 2449 0014 17D0     	 beq .L91
1175:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1176:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = group_ptr->ASPND;
 2450              	 .loc 2 1176 0
 2451 0016 7B68     	 ldr r3,[r7,#4]
 2452 0018 D3F82C31 	 ldr r3,[r3,#300]
 2453 001c 7B61     	 str r3,[r7,#20]
1177:../Libraries/XMCLib/src/xmc_vadc.c **** 
1178:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i=0U;i<XMC_VADC_NUM_CHANNELS_PER_GROUP;i++)
 2454              	 .loc 2 1178 0
 2455 001e 0023     	 movs r3,#0
 2456 0020 3B61     	 str r3,[r7,#16]
 2457 0022 0DE0     	 b .L92
 2458              	.L94:
1179:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1180:../Libraries/XMCLib/src/xmc_vadc.c ****       if (reg & 1U)
 2459              	 .loc 2 1180 0
 2460 0024 7B69     	 ldr r3,[r7,#20]
 2461 0026 03F00103 	 and r3,r3,#1
 2462 002a 002B     	 cmp r3,#0
 2463 002c 02D0     	 beq .L93
1181:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1182:../Libraries/XMCLib/src/xmc_vadc.c ****         count++;
 2464              	 .loc 2 1182 0
 2465 002e FB68     	 ldr r3,[r7,#12]
 2466 0030 0133     	 adds r3,r3,#1
 2467 0032 FB60     	 str r3,[r7,#12]
 2468              	.L93:
1183:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1184:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = (uint32_t)(reg >> (uint32_t)1);
 2469              	 .loc 2 1184 0 discriminator 2
 2470 0034 7B69     	 ldr r3,[r7,#20]
 2471 0036 5B08     	 lsrs r3,r3,#1
 2472 0038 7B61     	 str r3,[r7,#20]
1178:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2473              	 .loc 2 1178 0 discriminator 2
 2474 003a 3B69     	 ldr r3,[r7,#16]
 2475 003c 0133     	 adds r3,r3,#1
 2476 003e 3B61     	 str r3,[r7,#16]
 2477              	.L92:
1178:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2478              	 .loc 2 1178 0 is_stmt 0 discriminator 1
 2479 0040 3B69     	 ldr r3,[r7,#16]
 2480 0042 072B     	 cmp r3,#7
 2481 0044 EED9     	 bls .L94
 2482              	.L91:
1185:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1186:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1187:../Libraries/XMCLib/src/xmc_vadc.c **** 
1188:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 2483              	 .loc 2 1188 0 is_stmt 1
 2484 0046 FB68     	 ldr r3,[r7,#12]
1189:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2485              	 .loc 2 1189 0
 2486 0048 1846     	 mov r0,r3
 2487 004a 1C37     	 adds r7,r7,#28
 2488              	 .cfi_def_cfa_offset 4
 2489 004c BD46     	 mov sp,r7
 2490              	 .cfi_def_cfa_register 13
 2491              	 
 2492 004e 5DF8047B 	 ldr r7,[sp],#4
 2493              	 .cfi_restore 7
 2494              	 .cfi_def_cfa_offset 0
 2495 0052 7047     	 bx lr
 2496              	 .cfi_endproc
 2497              	.LFE287:
 2499              	 .section .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode,"ax",%progbits
 2500              	 .align 2
 2501              	 .global XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
 2502              	 .thumb
 2503              	 .thumb_func
 2505              	XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:
 2506              	.LFB288:
1190:../Libraries/XMCLib/src/xmc_vadc.c **** 
1191:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for request source event */
1192:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
1193:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2507              	 .loc 2 1193 0
 2508              	 .cfi_startproc
 2509              	 
 2510              	 
 2511              	 
 2512 0000 80B4     	 push {r7}
 2513              	 .cfi_def_cfa_offset 4
 2514              	 .cfi_offset 7,-4
 2515 0002 85B0     	 sub sp,sp,#20
 2516              	 .cfi_def_cfa_offset 24
 2517 0004 00AF     	 add r7,sp,#0
 2518              	 .cfi_def_cfa_register 7
 2519 0006 7860     	 str r0,[r7,#4]
 2520 0008 0B46     	 mov r3,r1
 2521 000a FB70     	 strb r3,[r7,#3]
1194:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1195:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 2522              	 .loc 2 1195 0
 2523 000c 7B68     	 ldr r3,[r7,#4]
 2524 000e D3F8C031 	 ldr r3,[r3,#448]
 2525 0012 FB60     	 str r3,[r7,#12]
1196:../Libraries/XMCLib/src/xmc_vadc.c **** 
1197:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_G
1198:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_
1199:../Libraries/XMCLib/src/xmc_vadc.c **** 
1200:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV1NP_Msk);
 2526              	 .loc 2 1200 0
 2527 0014 FB68     	 ldr r3,[r7,#12]
 2528 0016 23F0F003 	 bic r3,r3,#240
 2529 001a FB60     	 str r3,[r7,#12]
1201:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 2530              	 .loc 2 1201 0
 2531 001c FB78     	 ldrb r3,[r7,#3]
 2532 001e 1B01     	 lsls r3,r3,#4
 2533 0020 FA68     	 ldr r2,[r7,#12]
 2534 0022 1343     	 orrs r3,r3,r2
 2535 0024 FB60     	 str r3,[r7,#12]
1202:../Libraries/XMCLib/src/xmc_vadc.c **** 
1203:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 2536              	 .loc 2 1203 0
 2537 0026 7B68     	 ldr r3,[r7,#4]
 2538 0028 FA68     	 ldr r2,[r7,#12]
 2539 002a C3F8C021 	 str r2,[r3,#448]
1204:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2540              	 .loc 2 1204 0
 2541 002e 1437     	 adds r7,r7,#20
 2542              	 .cfi_def_cfa_offset 4
 2543 0030 BD46     	 mov sp,r7
 2544              	 .cfi_def_cfa_register 13
 2545              	 
 2546 0032 5DF8047B 	 ldr r7,[sp],#4
 2547              	 .cfi_restore 7
 2548              	 .cfi_def_cfa_offset 0
 2549 0036 7047     	 bx lr
 2550              	 .cfi_endproc
 2551              	.LFE288:
 2553              	 .section .text.XMC_VADC_GROUP_ScanRemoveChannel,"ax",%progbits
 2554              	 .align 2
 2555              	 .global XMC_VADC_GROUP_ScanRemoveChannel
 2556              	 .thumb
 2557              	 .thumb_func
 2559              	XMC_VADC_GROUP_ScanRemoveChannel:
 2560              	.LFB289:
1205:../Libraries/XMCLib/src/xmc_vadc.c **** 
1206:../Libraries/XMCLib/src/xmc_vadc.c **** /* Removes the selected channel from conversion*/
1207:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
1208:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2561              	 .loc 2 1208 0
 2562              	 .cfi_startproc
 2563              	 
 2564              	 
 2565              	 
 2566 0000 80B4     	 push {r7}
 2567              	 .cfi_def_cfa_offset 4
 2568              	 .cfi_offset 7,-4
 2569 0002 85B0     	 sub sp,sp,#20
 2570              	 .cfi_def_cfa_offset 24
 2571 0004 00AF     	 add r7,sp,#0
 2572              	 .cfi_def_cfa_register 7
 2573 0006 7860     	 str r0,[r7,#4]
 2574 0008 3960     	 str r1,[r7]
1209:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t assel;
1210:../Libraries/XMCLib/src/xmc_vadc.c **** 
1211:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1212:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong channel number", ((channel_num)< XMC_VADC_NUM_
1213:../Libraries/XMCLib/src/xmc_vadc.c **** 
1214:../Libraries/XMCLib/src/xmc_vadc.c ****   assel = group_ptr->ASSEL; 
 2575              	 .loc 2 1214 0
 2576 000a 7B68     	 ldr r3,[r7,#4]
 2577 000c D3F82831 	 ldr r3,[r3,#296]
 2578 0010 FB60     	 str r3,[r7,#12]
1215:../Libraries/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 2579              	 .loc 2 1215 0
 2580 0012 3B68     	 ldr r3,[r7]
 2581 0014 0122     	 movs r2,#1
 2582 0016 02FA03F3 	 lsl r3,r2,r3
 2583 001a DB43     	 mvns r3,r3
 2584 001c 1A46     	 mov r2,r3
 2585 001e FB68     	 ldr r3,[r7,#12]
 2586 0020 1340     	 ands r3,r3,r2
 2587 0022 FB60     	 str r3,[r7,#12]
1216:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
 2588              	 .loc 2 1216 0
 2589 0024 7B68     	 ldr r3,[r7,#4]
 2590 0026 FA68     	 ldr r2,[r7,#12]
 2591 0028 C3F82821 	 str r2,[r3,#296]
1217:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2592              	 .loc 2 1217 0
 2593 002c 1437     	 adds r7,r7,#20
 2594              	 .cfi_def_cfa_offset 4
 2595 002e BD46     	 mov sp,r7
 2596              	 .cfi_def_cfa_register 13
 2597              	 
 2598 0030 5DF8047B 	 ldr r7,[sp],#4
 2599              	 .cfi_restore 7
 2600              	 .cfi_def_cfa_offset 0
 2601 0034 7047     	 bx lr
 2602              	 .cfi_endproc
 2603              	.LFE289:
 2605 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundInit,"ax",%progbits
 2606              	 .align 2
 2607              	 .global XMC_VADC_GLOBAL_BackgroundInit
 2608              	 .thumb
 2609              	 .thumb_func
 2611              	XMC_VADC_GLOBAL_BackgroundInit:
 2612              	.LFB290:
1218:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1219:../Libraries/XMCLib/src/xmc_vadc.c **** 
1220:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize background scan request source hardware */
1221:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
1222:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2613              	 .loc 2 1222 0
 2614              	 .cfi_startproc
 2615              	 
 2616              	 
 2617 0000 80B5     	 push {r7,lr}
 2618              	 .cfi_def_cfa_offset 8
 2619              	 .cfi_offset 7,-8
 2620              	 .cfi_offset 14,-4
 2621 0002 86B0     	 sub sp,sp,#24
 2622              	 .cfi_def_cfa_offset 32
 2623 0004 00AF     	 add r7,sp,#0
 2624              	 .cfi_def_cfa_register 7
 2625 0006 7860     	 str r0,[r7,#4]
 2626 0008 3960     	 str r1,[r7]
1223:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1224:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
1225:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1226:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t conv_start_mask;
1227:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1228:../Libraries/XMCLib/src/xmc_vadc.c ****   
1229:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundInit:Wrong Module Pointer", (global_ptr == VADC))
1230:../Libraries/XMCLib/src/xmc_vadc.c **** 
1231:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1232:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2627              	 .loc 2 1232 0
 2628 000a 0023     	 movs r3,#0
 2629 000c FB75     	 strb r3,[r7,#23]
 2630 000e 09E0     	 b .L99
 2631              	.L100:
1233:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1234:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2632              	 .loc 2 1234 0 discriminator 3
 2633 0010 FB7D     	 ldrb r3,[r7,#23]
 2634 0012 394A     	 ldr r2,.L107
 2635 0014 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2636 0018 1846     	 mov r0,r3
 2637 001a FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1232:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2638              	 .loc 2 1232 0 discriminator 3
 2639 001e FB7D     	 ldrb r3,[r7,#23]
 2640 0020 0133     	 adds r3,r3,#1
 2641 0022 FB75     	 strb r3,[r7,#23]
 2642              	.L99:
1232:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2643              	 .loc 2 1232 0 is_stmt 0 discriminator 1
 2644 0024 FB7D     	 ldrb r3,[r7,#23]
 2645 0026 032B     	 cmp r3,#3
 2646 0028 F2D9     	 bls .L100
1235:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1236:../Libraries/XMCLib/src/xmc_vadc.c ****   
1237:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_start_mask = (uint32_t) 0;
 2647              	 .loc 2 1237 0 is_stmt 1
 2648 002a 0023     	 movs r3,#0
 2649 002c 3B61     	 str r3,[r7,#16]
1238:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 2650              	 .loc 2 1238 0
 2651 002e 3B68     	 ldr r3,[r7]
 2652 0030 1B78     	 ldrb r3,[r3]
 2653 0032 03F00303 	 and r3,r3,#3
 2654 0036 DBB2     	 uxtb r3,r3
 2655 0038 002B     	 cmp r3,#0
 2656 003a 02D0     	 beq .L101
1239:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1240:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_start_mask = (uint32_t)VADC_G_ARBPR_CSM2_Msk;
 2657              	 .loc 2 1240 0
 2658 003c 4FF40063 	 mov r3,#2048
 2659 0040 3B61     	 str r3,[r7,#16]
 2660              	.L101:
1241:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2661              	 .loc 2 1243 0
 2662 0042 0023     	 movs r3,#0
 2663 0044 FB75     	 strb r3,[r7,#23]
 2664 0046 21E0     	 b .L102
 2665              	.L103:
1244:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1245:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = g_xmc_vadc_group_array[i]->ARBPR;
 2666              	 .loc 2 1245 0 discriminator 3
 2667 0048 FB7D     	 ldrb r3,[r7,#23]
 2668 004a 2B4A     	 ldr r2,.L107
 2669 004c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2670 0050 D3F88430 	 ldr r3,[r3,#132]
 2671 0054 FB60     	 str r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_vadc.c **** 
1247:../Libraries/XMCLib/src/xmc_vadc.c ****     reg &= ~(uint32_t)(VADC_G_ARBPR_PRIO2_Msk);
 2672              	 .loc 2 1247 0 discriminator 3
 2673 0056 FB68     	 ldr r3,[r7,#12]
 2674 0058 23F44073 	 bic r3,r3,#768
 2675 005c FB60     	 str r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_vadc.c **** 
1249:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the priority of the request source */
1250:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO2_Pos);
 2676              	 .loc 2 1250 0 discriminator 3
 2677 005e 3B68     	 ldr r3,[r7]
 2678 0060 1B78     	 ldrb r3,[r3]
 2679 0062 C3F38103 	 ubfx r3,r3,#2,#2
 2680 0066 DBB2     	 uxtb r3,r3
 2681 0068 1B02     	 lsls r3,r3,#8
 2682 006a FA68     	 ldr r2,[r7,#12]
 2683 006c 1343     	 orrs r3,r3,r2
 2684 006e FB60     	 str r3,[r7,#12]
1251:../Libraries/XMCLib/src/xmc_vadc.c ****   
1252:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the start mode */
1253:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= conv_start_mask;
 2685              	 .loc 2 1253 0 discriminator 3
 2686 0070 FA68     	 ldr r2,[r7,#12]
 2687 0072 3B69     	 ldr r3,[r7,#16]
 2688 0074 1343     	 orrs r3,r3,r2
 2689 0076 FB60     	 str r3,[r7,#12]
1254:../Libraries/XMCLib/src/xmc_vadc.c **** 
1255:../Libraries/XMCLib/src/xmc_vadc.c ****     g_xmc_vadc_group_array[i]->ARBPR = reg;
 2690              	 .loc 2 1255 0 discriminator 3
 2691 0078 FB7D     	 ldrb r3,[r7,#23]
 2692 007a 1F4A     	 ldr r2,.L107
 2693 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2694 0080 FA68     	 ldr r2,[r7,#12]
 2695 0082 C3F88420 	 str r2,[r3,#132]
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2696              	 .loc 2 1243 0 discriminator 3
 2697 0086 FB7D     	 ldrb r3,[r7,#23]
 2698 0088 0133     	 adds r3,r3,#1
 2699 008a FB75     	 strb r3,[r7,#23]
 2700              	.L102:
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2701              	 .loc 2 1243 0 is_stmt 0 discriminator 1
 2702 008c FB7D     	 ldrb r3,[r7,#23]
 2703 008e 032B     	 cmp r3,#3
 2704 0090 DAD9     	 bls .L103
1256:../Libraries/XMCLib/src/xmc_vadc.c ****   
1257:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1258:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1259:../Libraries/XMCLib/src/xmc_vadc.c **** 
1260:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSCTRL register */
1261:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VAD
 2705              	 .loc 2 1261 0 is_stmt 1
 2706 0092 3B68     	 ldr r3,[r7]
 2707 0094 5B68     	 ldr r3,[r3,#4]
 2708 0096 43F40003 	 orr r3,r3,#8388608
 2709 009a 43F40043 	 orr r3,r3,#32768
 2710 009e 7A68     	 ldr r2,[r7,#4]
 2711 00a0 C2F80032 	 str r3,[r2,#512]
1262:../Libraries/XMCLib/src/xmc_vadc.c **** 
1263:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSMR register */
1264:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << V
 2712              	 .loc 2 1264 0
 2713 00a4 3B68     	 ldr r3,[r7]
 2714 00a6 9B68     	 ldr r3,[r3,#8]
 2715 00a8 43F00102 	 orr r2,r3,#1
 2716 00ac 7B68     	 ldr r3,[r7,#4]
 2717 00ae C3F80422 	 str r2,[r3,#516]
1265:../Libraries/XMCLib/src/xmc_vadc.c ****   
1266:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1267:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2718              	 .loc 2 1267 0
 2719 00b2 3B68     	 ldr r3,[r7]
 2720 00b4 1B78     	 ldrb r3,[r3]
 2721 00b6 03F00303 	 and r3,r3,#3
 2722 00ba DBB2     	 uxtb r3,r3
 2723 00bc 022B     	 cmp r3,#2
 2724 00be 07D1     	 bne .L104
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1269:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_RPTDIS_Msk;
 2725              	 .loc 2 1269 0
 2726 00c0 7B68     	 ldr r3,[r7,#4]
 2727 00c2 D3F80432 	 ldr r3,[r3,#516]
 2728 00c6 43F48032 	 orr r2,r3,#65536
 2729 00ca 7B68     	 ldr r3,[r7,#4]
 2730 00cc C3F80422 	 str r2,[r3,#516]
 2731              	.L104:
1270:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1271:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1272:../Libraries/XMCLib/src/xmc_vadc.c ****   
1273:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1274:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2732              	 .loc 2 1274 0
 2733 00d0 0023     	 movs r3,#0
 2734 00d2 FB75     	 strb r3,[r7,#23]
 2735 00d4 09E0     	 b .L105
 2736              	.L106:
1275:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1276:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2737              	 .loc 2 1276 0 discriminator 3
 2738 00d6 FB7D     	 ldrb r3,[r7,#23]
 2739 00d8 074A     	 ldr r2,.L107
 2740 00da 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2741 00de 1846     	 mov r0,r3
 2742 00e0 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
1274:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2743              	 .loc 2 1274 0 discriminator 3
 2744 00e4 FB7D     	 ldrb r3,[r7,#23]
 2745 00e6 0133     	 adds r3,r3,#1
 2746 00e8 FB75     	 strb r3,[r7,#23]
 2747              	.L105:
1274:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2748              	 .loc 2 1274 0 is_stmt 0 discriminator 1
 2749 00ea FB7D     	 ldrb r3,[r7,#23]
 2750 00ec 032B     	 cmp r3,#3
 2751 00ee F2D9     	 bls .L106
1277:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1278:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1279:../Libraries/XMCLib/src/xmc_vadc.c ****   
1280:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2752              	 .loc 2 1280 0 is_stmt 1
 2753 00f0 1837     	 adds r7,r7,#24
 2754              	 .cfi_def_cfa_offset 8
 2755 00f2 BD46     	 mov sp,r7
 2756              	 .cfi_def_cfa_register 13
 2757              	 
 2758 00f4 80BD     	 pop {r7,pc}
 2759              	.L108:
 2760 00f6 00BF     	 .align 2
 2761              	.L107:
 2762 00f8 00000000 	 .word g_xmc_vadc_group_array
 2763              	 .cfi_endproc
 2764              	.LFE290:
 2766              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger,"ax",%progbits
 2767              	 .align 2
 2768              	 .global XMC_VADC_GLOBAL_BackgroundSelectTrigger
 2769              	 .thumb
 2770              	 .thumb_func
 2772              	XMC_VADC_GLOBAL_BackgroundSelectTrigger:
 2773              	.LFB291:
1281:../Libraries/XMCLib/src/xmc_vadc.c **** 
1282:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger for background scan request source */
1283:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
1284:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2774              	 .loc 2 1284 0
 2775              	 .cfi_startproc
 2776              	 
 2777              	 
 2778              	 
 2779 0000 80B4     	 push {r7}
 2780              	 .cfi_def_cfa_offset 4
 2781              	 .cfi_offset 7,-4
 2782 0002 85B0     	 sub sp,sp,#20
 2783              	 .cfi_def_cfa_offset 24
 2784 0004 00AF     	 add r7,sp,#0
 2785              	 .cfi_def_cfa_register 7
 2786 0006 7860     	 str r0,[r7,#4]
 2787 0008 3960     	 str r1,[r7]
1285:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1286:../Libraries/XMCLib/src/xmc_vadc.c **** 
1287:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("VADC_BCKGND_SelectTriggerInput:Wrong Module Pointer", (global_ptr == VADC))
1288:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_N
1289:../Libraries/XMCLib/src/xmc_vadc.c **** 
1290:../Libraries/XMCLib/src/xmc_vadc.c ****   
1291:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2788              	 .loc 2 1291 0
 2789 000a 7B68     	 ldr r3,[r7,#4]
 2790 000c D3F80032 	 ldr r3,[r3,#512]
 2791 0010 FB60     	 str r3,[r7,#12]
1292:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
 2792              	 .loc 2 1292 0
 2793 0012 FB68     	 ldr r3,[r7,#12]
 2794 0014 43F40043 	 orr r3,r3,#32768
 2795 0018 FB60     	 str r3,[r7,#12]
1293:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_XTSEL_Msk);
 2796              	 .loc 2 1293 0
 2797 001a FB68     	 ldr r3,[r7,#12]
 2798 001c 23F47063 	 bic r3,r3,#3840
 2799 0020 FB60     	 str r3,[r7,#12]
1294:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 2800              	 .loc 2 1294 0
 2801 0022 3B68     	 ldr r3,[r7]
 2802 0024 1B02     	 lsls r3,r3,#8
 2803 0026 FA68     	 ldr r2,[r7,#12]
 2804 0028 1343     	 orrs r3,r3,r2
 2805 002a FB60     	 str r3,[r7,#12]
1295:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2806              	 .loc 2 1295 0
 2807 002c 7B68     	 ldr r3,[r7,#4]
 2808 002e FA68     	 ldr r2,[r7,#12]
 2809 0030 C3F80022 	 str r2,[r3,#512]
1296:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2810              	 .loc 2 1296 0
 2811 0034 1437     	 adds r7,r7,#20
 2812              	 .cfi_def_cfa_offset 4
 2813 0036 BD46     	 mov sp,r7
 2814              	 .cfi_def_cfa_register 13
 2815              	 
 2816 0038 5DF8047B 	 ldr r7,[sp],#4
 2817              	 .cfi_restore 7
 2818              	 .cfi_def_cfa_offset 0
 2819 003c 7047     	 bx lr
 2820              	 .cfi_endproc
 2821              	.LFE291:
 2823 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge,"ax",%progbits
 2824              	 .align 2
 2825              	 .global XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
 2826              	 .thumb
 2827              	 .thumb_func
 2829              	XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:
 2830              	.LFB292:
1297:../Libraries/XMCLib/src/xmc_vadc.c **** 
1298:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1299:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr,
1300:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_TRIGGER_EDGE_t trigger_edge)
1301:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2831              	 .loc 2 1301 0
 2832              	 .cfi_startproc
 2833              	 
 2834              	 
 2835              	 
 2836 0000 80B4     	 push {r7}
 2837              	 .cfi_def_cfa_offset 4
 2838              	 .cfi_offset 7,-4
 2839 0002 85B0     	 sub sp,sp,#20
 2840              	 .cfi_def_cfa_offset 24
 2841 0004 00AF     	 add r7,sp,#0
 2842              	 .cfi_def_cfa_register 7
 2843 0006 7860     	 str r0,[r7,#4]
 2844 0008 0B46     	 mov r3,r1
 2845 000a FB70     	 strb r3,[r7,#3]
1302:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1303:../Libraries/XMCLib/src/xmc_vadc.c **** 
1304:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Global Pointer", (global_ptr == VAD
1305:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Trigger Port",
1306:../Libraries/XMCLib/src/xmc_vadc.c ****             ((trigger_edge)<= XMC_VADC_TRIGGER_EDGE_ANY))
1307:../Libraries/XMCLib/src/xmc_vadc.c **** 
1308:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = global_ptr->BRSCTRL;
 2846              	 .loc 2 1308 0
 2847 000c 7B68     	 ldr r3,[r7,#4]
 2848 000e D3F80032 	 ldr r3,[r3,#512]
 2849 0012 FB60     	 str r3,[r7,#12]
1309:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
 2850              	 .loc 2 1309 0
 2851 0014 FB68     	 ldr r3,[r7,#12]
 2852 0016 43F40043 	 orr r3,r3,#32768
 2853 001a FB60     	 str r3,[r7,#12]
1310:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_BRSCTRL_XTMODE_Msk);
 2854              	 .loc 2 1310 0
 2855 001c FB68     	 ldr r3,[r7,#12]
 2856 001e 23F4C043 	 bic r3,r3,#24576
 2857 0022 FB60     	 str r3,[r7,#12]
1311:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 2858              	 .loc 2 1311 0
 2859 0024 FB78     	 ldrb r3,[r7,#3]
 2860 0026 5B03     	 lsls r3,r3,#13
 2861 0028 FA68     	 ldr r2,[r7,#12]
 2862 002a 1343     	 orrs r3,r3,r2
 2863 002c FB60     	 str r3,[r7,#12]
1312:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2864              	 .loc 2 1312 0
 2865 002e 7B68     	 ldr r3,[r7,#4]
 2866 0030 FA68     	 ldr r2,[r7,#12]
 2867 0032 C3F80022 	 str r2,[r3,#512]
1313:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2868              	 .loc 2 1313 0
 2869 0036 1437     	 adds r7,r7,#20
 2870              	 .cfi_def_cfa_offset 4
 2871 0038 BD46     	 mov sp,r7
 2872              	 .cfi_def_cfa_register 13
 2873              	 
 2874 003a 5DF8047B 	 ldr r7,[sp],#4
 2875              	 .cfi_restore 7
 2876              	 .cfi_def_cfa_offset 0
 2877 003e 7047     	 bx lr
 2878              	 .cfi_endproc
 2879              	.LFE292:
 2881              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectGating,"ax",%progbits
 2882              	 .align 2
 2883              	 .global XMC_VADC_GLOBAL_BackgroundSelectGating
 2884              	 .thumb
 2885              	 .thumb_func
 2887              	XMC_VADC_GLOBAL_BackgroundSelectGating:
 2888              	.LFB293:
1314:../Libraries/XMCLib/src/xmc_vadc.c **** 
1315:../Libraries/XMCLib/src/xmc_vadc.c **** 
1316:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gate for background scan request source */
1317:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
1318:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2889              	 .loc 2 1318 0
 2890              	 .cfi_startproc
 2891              	 
 2892              	 
 2893              	 
 2894 0000 80B4     	 push {r7}
 2895              	 .cfi_def_cfa_offset 4
 2896              	 .cfi_offset 7,-4
 2897 0002 85B0     	 sub sp,sp,#20
 2898              	 .cfi_def_cfa_offset 24
 2899 0004 00AF     	 add r7,sp,#0
 2900              	 .cfi_def_cfa_register 7
 2901 0006 7860     	 str r0,[r7,#4]
 2902 0008 3960     	 str r1,[r7]
1319:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1320:../Libraries/XMCLib/src/xmc_vadc.c **** 
1321:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Module Pointer", (global_ptr == VADC))
1322:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM
1323:../Libraries/XMCLib/src/xmc_vadc.c **** 
1324:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2903              	 .loc 2 1324 0
 2904 000a 7B68     	 ldr r3,[r7,#4]
 2905 000c D3F80032 	 ldr r3,[r3,#512]
 2906 0010 FB60     	 str r3,[r7,#12]
1325:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
 2907              	 .loc 2 1325 0
 2908 0012 FB68     	 ldr r3,[r7,#12]
 2909 0014 43F40003 	 orr r3,r3,#8388608
 2910 0018 FB60     	 str r3,[r7,#12]
1326:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_GTSEL_Msk);
 2911              	 .loc 2 1326 0
 2912 001a FB68     	 ldr r3,[r7,#12]
 2913 001c 23F47023 	 bic r3,r3,#983040
 2914 0020 FB60     	 str r3,[r7,#12]
1327:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 2915              	 .loc 2 1327 0
 2916 0022 3B68     	 ldr r3,[r7]
 2917 0024 1B04     	 lsls r3,r3,#16
 2918 0026 FA68     	 ldr r2,[r7,#12]
 2919 0028 1343     	 orrs r3,r3,r2
 2920 002a FB60     	 str r3,[r7,#12]
1328:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2921              	 .loc 2 1328 0
 2922 002c 7B68     	 ldr r3,[r7,#4]
 2923 002e FA68     	 ldr r2,[r7,#12]
 2924 0030 C3F80022 	 str r2,[r3,#512]
1329:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2925              	 .loc 2 1329 0
 2926 0034 1437     	 adds r7,r7,#20
 2927              	 .cfi_def_cfa_offset 4
 2928 0036 BD46     	 mov sp,r7
 2929              	 .cfi_def_cfa_register 13
 2930              	 
 2931 0038 5DF8047B 	 ldr r7,[sp],#4
 2932              	 .cfi_restore 7
 2933              	 .cfi_def_cfa_offset 0
 2934 003c 7047     	 bx lr
 2935              	 .cfi_endproc
 2936              	.LFE293:
 2938 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundAbortSequence,"ax",%progbits
 2939              	 .align 2
 2940              	 .global XMC_VADC_GLOBAL_BackgroundAbortSequence
 2941              	 .thumb
 2942              	 .thumb_func
 2944              	XMC_VADC_GLOBAL_BackgroundAbortSequence:
 2945              	.LFB294:
1330:../Libraries/XMCLib/src/xmc_vadc.c **** 
1331:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a sequence */
1332:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr)
1333:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2946              	 .loc 2 1333 0
 2947              	 .cfi_startproc
 2948              	 
 2949              	 
 2950 0000 80B5     	 push {r7,lr}
 2951              	 .cfi_def_cfa_offset 8
 2952              	 .cfi_offset 7,-8
 2953              	 .cfi_offset 14,-4
 2954 0002 86B0     	 sub sp,sp,#24
 2955              	 .cfi_def_cfa_offset 32
 2956 0004 00AF     	 add r7,sp,#0
 2957              	 .cfi_def_cfa_register 7
 2958 0006 7860     	 str r0,[r7,#4]
1334:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
1335:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1336:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1337:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t grp_asen2_flag[XMC_VADC_MAXIMUM_NUM_GROUPS];
1338:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1339:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAbortSequence:Wrong Module Pointer", (global_ptr == VADC))
1340:../Libraries/XMCLib/src/xmc_vadc.c **** 
1341:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1342:../Libraries/XMCLib/src/xmc_vadc.c ****   brsctrl = global_ptr->BRSCTRL;
 2959              	 .loc 2 1342 0
 2960 0008 7B68     	 ldr r3,[r7,#4]
 2961 000a D3F80032 	 ldr r3,[r3,#512]
 2962 000e 3B61     	 str r3,[r7,#16]
1343:../Libraries/XMCLib/src/xmc_vadc.c **** 
1344:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(0U | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
 2963              	 .loc 2 1344 0
 2964 0010 7B68     	 ldr r3,[r7,#4]
 2965 0012 254A     	 ldr r2,.L118
 2966 0014 C3F80022 	 str r2,[r3,#512]
1345:../Libraries/XMCLib/src/xmc_vadc.c **** 
1346:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable Background Request source */
1347:../Libraries/XMCLib/src/xmc_vadc.c **** 
1348:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1349:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2967              	 .loc 2 1349 0
 2968 0018 0023     	 movs r3,#0
 2969 001a 7B61     	 str r3,[r7,#20]
 2970 001c 17E0     	 b .L113
 2971              	.L114:
1350:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1351:../Libraries/XMCLib/src/xmc_vadc.c ****     grp_asen2_flag[i] = (uint8_t)(g_xmc_vadc_group_array[i]->ARBPR >> VADC_G_ARBPR_ASEN2_Pos);
 2972              	 .loc 2 1351 0 discriminator 3
 2973 001e 234A     	 ldr r2,.L118+4
 2974 0020 7B69     	 ldr r3,[r7,#20]
 2975 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2976 0026 D3F88430 	 ldr r3,[r3,#132]
 2977 002a 9B0E     	 lsrs r3,r3,#26
 2978 002c D9B2     	 uxtb r1,r3
 2979 002e 07F10C02 	 add r2,r7,#12
 2980 0032 7B69     	 ldr r3,[r7,#20]
 2981 0034 1344     	 add r3,r3,r2
 2982 0036 0A46     	 mov r2,r1
 2983 0038 1A70     	 strb r2,[r3]
1352:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2984              	 .loc 2 1352 0 discriminator 3
 2985 003a 1C4A     	 ldr r2,.L118+4
 2986 003c 7B69     	 ldr r3,[r7,#20]
 2987 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2988 0042 1846     	 mov r0,r3
 2989 0044 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1349:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2990              	 .loc 2 1349 0 discriminator 3
 2991 0048 7B69     	 ldr r3,[r7,#20]
 2992 004a 0133     	 adds r3,r3,#1
 2993 004c 7B61     	 str r3,[r7,#20]
 2994              	.L113:
1349:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2995              	 .loc 2 1349 0 is_stmt 0 discriminator 1
 2996 004e 7B69     	 ldr r3,[r7,#20]
 2997 0050 032B     	 cmp r3,#3
 2998 0052 E4D9     	 bls .L114
1353:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1354:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1355:../Libraries/XMCLib/src/xmc_vadc.c **** 
1356:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Abort the ongoing sequence */
1357:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_CLRPND_Msk;
 2999              	 .loc 2 1357 0 is_stmt 1
 3000 0054 7B68     	 ldr r3,[r7,#4]
 3001 0056 D3F80432 	 ldr r3,[r3,#516]
 3002 005a 43F48072 	 orr r2,r3,#256
 3003 005e 7B68     	 ldr r3,[r7,#4]
 3004 0060 C3F80422 	 str r2,[r3,#516]
1358:../Libraries/XMCLib/src/xmc_vadc.c **** 
1359:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1360:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable Background Request source */
1361:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3005              	 .loc 2 1361 0
 3006 0064 0023     	 movs r3,#0
 3007 0066 7B61     	 str r3,[r7,#20]
 3008 0068 10E0     	 b .L115
 3009              	.L117:
1362:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1363:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint8_t)1 == grp_asen2_flag[i])
 3010              	 .loc 2 1363 0
 3011 006a 07F10C02 	 add r2,r7,#12
 3012 006e 7B69     	 ldr r3,[r7,#20]
 3013 0070 1344     	 add r3,r3,r2
 3014 0072 1B78     	 ldrb r3,[r3]
 3015 0074 012B     	 cmp r3,#1
 3016 0076 06D1     	 bne .L116
1364:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1365:../Libraries/XMCLib/src/xmc_vadc.c ****       XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t*)g_xmc_vadc_group_array[i]);
 3017              	 .loc 2 1365 0
 3018 0078 0C4A     	 ldr r2,.L118+4
 3019 007a 7B69     	 ldr r3,[r7,#20]
 3020 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3021 0080 1846     	 mov r0,r3
 3022 0082 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
 3023              	.L116:
1361:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3024              	 .loc 2 1361 0 discriminator 2
 3025 0086 7B69     	 ldr r3,[r7,#20]
 3026 0088 0133     	 adds r3,r3,#1
 3027 008a 7B61     	 str r3,[r7,#20]
 3028              	.L115:
1361:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3029              	 .loc 2 1361 0 is_stmt 0 discriminator 1
 3030 008c 7B69     	 ldr r3,[r7,#20]
 3031 008e 032B     	 cmp r3,#3
 3032 0090 EBD9     	 bls .L117
1366:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1367:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1368:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1369:../Libraries/XMCLib/src/xmc_vadc.c **** 
1370:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Re-enable any disabled trigger and gating*/
1371:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(brsctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk
 3033              	 .loc 2 1371 0 is_stmt 1
 3034 0092 3B69     	 ldr r3,[r7,#16]
 3035 0094 43F40003 	 orr r3,r3,#8388608
 3036 0098 43F40043 	 orr r3,r3,#32768
 3037 009c 7A68     	 ldr r2,[r7,#4]
 3038 009e C2F80032 	 str r3,[r2,#512]
1372:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3039              	 .loc 2 1372 0
 3040 00a2 1837     	 adds r7,r7,#24
 3041              	 .cfi_def_cfa_offset 8
 3042 00a4 BD46     	 mov sp,r7
 3043              	 .cfi_def_cfa_register 13
 3044              	 
 3045 00a6 80BD     	 pop {r7,pc}
 3046              	.L119:
 3047              	 .align 2
 3048              	.L118:
 3049 00a8 00808000 	 .word 8421376
 3050 00ac 00000000 	 .word g_xmc_vadc_group_array
 3051              	 .cfi_endproc
 3052              	.LFE294:
 3054              	 .section .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending,"ax",%progbits
 3055              	 .align 2
 3056              	 .global XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
 3057              	 .thumb
 3058              	 .thumb_func
 3060              	XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:
 3061              	.LFB295:
1373:../Libraries/XMCLib/src/xmc_vadc.c **** 
1374:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine how many channels are awaiting conversion */
1375:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr)
1376:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3062              	 .loc 2 1376 0
 3063              	 .cfi_startproc
 3064              	 
 3065              	 
 3066              	 
 3067 0000 80B4     	 push {r7}
 3068              	 .cfi_def_cfa_offset 4
 3069              	 .cfi_offset 7,-4
 3070 0002 87B0     	 sub sp,sp,#28
 3071              	 .cfi_def_cfa_offset 32
 3072 0004 00AF     	 add r7,sp,#0
 3073              	 .cfi_def_cfa_register 7
 3074 0006 7860     	 str r0,[r7,#4]
1377:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1378:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1379:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t j;
1380:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1381:../Libraries/XMCLib/src/xmc_vadc.c **** 
1382:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:Wrong Module Pointer", (global_ptr ==
1383:../Libraries/XMCLib/src/xmc_vadc.c **** 
1384:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 3075              	 .loc 2 1384 0
 3076 0008 0023     	 movs r3,#0
 3077 000a BB60     	 str r3,[r7,#8]
1385:../Libraries/XMCLib/src/xmc_vadc.c ****   
1386:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop through all groups and find out who is awaiting conversion */
1387:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3078              	 .loc 2 1387 0
 3079 000c 0023     	 movs r3,#0
 3080 000e 3B61     	 str r3,[r7,#16]
 3081 0010 23E0     	 b .L121
 3082              	.L126:
1388:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1389:../Libraries/XMCLib/src/xmc_vadc.c ****     if (global_ptr->BRSSEL[i])
 3083              	 .loc 2 1389 0
 3084 0012 7B68     	 ldr r3,[r7,#4]
 3085 0014 3A69     	 ldr r2,[r7,#16]
 3086 0016 6032     	 adds r2,r2,#96
 3087 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3088 001c 002B     	 cmp r3,#0
 3089 001e 19D0     	 beq .L122
1390:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1391:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = global_ptr->BRSPND[i];
 3090              	 .loc 2 1391 0
 3091 0020 7B68     	 ldr r3,[r7,#4]
 3092 0022 3A69     	 ldr r2,[r7,#16]
 3093 0024 7032     	 adds r2,r2,#112
 3094 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3095 002a 7B61     	 str r3,[r7,#20]
1392:../Libraries/XMCLib/src/xmc_vadc.c **** 
1393:../Libraries/XMCLib/src/xmc_vadc.c ****       for(j=0U;j<XMC_VADC_NUM_CHANNELS_PER_GROUP;j++)
 3096              	 .loc 2 1393 0
 3097 002c 0023     	 movs r3,#0
 3098 002e FB60     	 str r3,[r7,#12]
 3099 0030 0DE0     	 b .L123
 3100              	.L125:
1394:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1395:../Libraries/XMCLib/src/xmc_vadc.c ****         if (reg & 1U)
 3101              	 .loc 2 1395 0
 3102 0032 7B69     	 ldr r3,[r7,#20]
 3103 0034 03F00103 	 and r3,r3,#1
 3104 0038 002B     	 cmp r3,#0
 3105 003a 02D0     	 beq .L124
1396:../Libraries/XMCLib/src/xmc_vadc.c ****         {
1397:../Libraries/XMCLib/src/xmc_vadc.c ****           count++;
 3106              	 .loc 2 1397 0
 3107 003c BB68     	 ldr r3,[r7,#8]
 3108 003e 0133     	 adds r3,r3,#1
 3109 0040 BB60     	 str r3,[r7,#8]
 3110              	.L124:
1398:../Libraries/XMCLib/src/xmc_vadc.c ****         }
1399:../Libraries/XMCLib/src/xmc_vadc.c **** 
1400:../Libraries/XMCLib/src/xmc_vadc.c ****         reg = reg >> 1U;
 3111              	 .loc 2 1400 0 discriminator 2
 3112 0042 7B69     	 ldr r3,[r7,#20]
 3113 0044 5B08     	 lsrs r3,r3,#1
 3114 0046 7B61     	 str r3,[r7,#20]
1393:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3115              	 .loc 2 1393 0 discriminator 2
 3116 0048 FB68     	 ldr r3,[r7,#12]
 3117 004a 0133     	 adds r3,r3,#1
 3118 004c FB60     	 str r3,[r7,#12]
 3119              	.L123:
1393:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3120              	 .loc 2 1393 0 is_stmt 0 discriminator 1
 3121 004e FB68     	 ldr r3,[r7,#12]
 3122 0050 072B     	 cmp r3,#7
 3123 0052 EED9     	 bls .L125
 3124              	.L122:
1387:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3125              	 .loc 2 1387 0 is_stmt 1 discriminator 2
 3126 0054 3B69     	 ldr r3,[r7,#16]
 3127 0056 0133     	 adds r3,r3,#1
 3128 0058 3B61     	 str r3,[r7,#16]
 3129              	.L121:
1387:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3130              	 .loc 2 1387 0 is_stmt 0 discriminator 1
 3131 005a 3B69     	 ldr r3,[r7,#16]
 3132 005c 032B     	 cmp r3,#3
 3133 005e D8D9     	 bls .L126
1401:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1402:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1403:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1404:../Libraries/XMCLib/src/xmc_vadc.c **** 
1405:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 3134              	 .loc 2 1405 0 is_stmt 1
 3135 0060 BB68     	 ldr r3,[r7,#8]
1406:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3136              	 .loc 2 1406 0
 3137 0062 1846     	 mov r0,r3
 3138 0064 1C37     	 adds r7,r7,#28
 3139              	 .cfi_def_cfa_offset 4
 3140 0066 BD46     	 mov sp,r7
 3141              	 .cfi_def_cfa_register 13
 3142              	 
 3143 0068 5DF8047B 	 ldr r7,[sp],#4
 3144              	 .cfi_restore 7
 3145              	 .cfi_def_cfa_offset 0
 3146 006c 7047     	 bx lr
 3147              	 .cfi_endproc
 3148              	.LFE295:
 3150 006e 00BF     	 .section .text.XMC_VADC_GROUP_QueueInit,"ax",%progbits
 3151              	 .align 2
 3152              	 .global XMC_VADC_GROUP_QueueInit
 3153              	 .thumb
 3154              	 .thumb_func
 3156              	XMC_VADC_GROUP_QueueInit:
 3157              	.LFB296:
1407:../Libraries/XMCLib/src/xmc_vadc.c **** 
1408:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)  
1409:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize queue request source */
1410:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
1411:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3158              	 .loc 2 1411 0
 3159              	 .cfi_startproc
 3160              	 
 3161              	 
 3162 0000 80B5     	 push {r7,lr}
 3163              	 .cfi_def_cfa_offset 8
 3164              	 .cfi_offset 7,-8
 3165              	 .cfi_offset 14,-4
 3166 0002 84B0     	 sub sp,sp,#16
 3167              	 .cfi_def_cfa_offset 24
 3168 0004 00AF     	 add r7,sp,#0
 3169              	 .cfi_def_cfa_register 7
 3170 0006 7860     	 str r0,[r7,#4]
 3171 0008 3960     	 str r1,[r7]
1412:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t          reg;
1413:../Libraries/XMCLib/src/xmc_vadc.c **** 
1414:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1415:../Libraries/XMCLib/src/xmc_vadc.c **** 
1416:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable arbitration slot of the queue request source */
1417:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3172              	 .loc 2 1417 0
 3173 000a 7868     	 ldr r0,[r7,#4]
 3174 000c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1418:../Libraries/XMCLib/src/xmc_vadc.c ****   
1419:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 3175              	 .loc 2 1419 0
 3176 0010 7B68     	 ldr r3,[r7,#4]
 3177 0012 D3F88430 	 ldr r3,[r3,#132]
 3178 0016 FB60     	 str r3,[r7,#12]
1420:../Libraries/XMCLib/src/xmc_vadc.c **** 
1421:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Request Source priority */
1422:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~((uint32_t)VADC_G_ARBPR_PRIO0_Msk);
 3179              	 .loc 2 1422 0
 3180 0018 FB68     	 ldr r3,[r7,#12]
 3181 001a 23F00303 	 bic r3,r3,#3
 3182 001e FB60     	 str r3,[r7,#12]
1423:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3183              	 .loc 2 1423 0
 3184 0020 3B68     	 ldr r3,[r7]
 3185 0022 1B78     	 ldrb r3,[r3]
 3186 0024 C3F38103 	 ubfx r3,r3,#2,#2
 3187 0028 DBB2     	 uxtb r3,r3
 3188 002a 1A46     	 mov r2,r3
 3189 002c FB68     	 ldr r3,[r7,#12]
 3190 002e 1343     	 orrs r3,r3,r2
 3191 0030 FB60     	 str r3,[r7,#12]
1424:../Libraries/XMCLib/src/xmc_vadc.c **** 
1425:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Conversion Start mode */
1426:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 3192              	 .loc 2 1426 0
 3193 0032 3B68     	 ldr r3,[r7]
 3194 0034 1B78     	 ldrb r3,[r3]
 3195 0036 03F00303 	 and r3,r3,#3
 3196 003a DBB2     	 uxtb r3,r3
 3197 003c 002B     	 cmp r3,#0
 3198 003e 03D0     	 beq .L129
1427:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1428:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM0_Msk);
 3199              	 .loc 2 1428 0
 3200 0040 FB68     	 ldr r3,[r7,#12]
 3201 0042 43F00803 	 orr r3,r3,#8
 3202 0046 FB60     	 str r3,[r7,#12]
 3203              	.L129:
1429:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1430:../Libraries/XMCLib/src/xmc_vadc.c **** 
1431:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 3204              	 .loc 2 1431 0
 3205 0048 7B68     	 ldr r3,[r7,#4]
 3206 004a FA68     	 ldr r2,[r7,#12]
 3207 004c C3F88420 	 str r2,[r3,#132]
1432:../Libraries/XMCLib/src/xmc_vadc.c **** 
1433:../Libraries/XMCLib/src/xmc_vadc.c **** 
1434:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (uint32_t)((config->qctrl0)|(uint32_t)(VADC_G_QCTRL0_XTWC_Msk)|
 3208              	 .loc 2 1434 0
 3209 0050 3B68     	 ldr r3,[r7]
 3210 0052 5B68     	 ldr r3,[r3,#4]
 3211 0054 43F08023 	 orr r3,r3,#-2147450880
 3212 0058 43F40003 	 orr r3,r3,#8388608
 3213 005c 7A68     	 ldr r2,[r7,#4]
 3214 005e C2F80031 	 str r3,[r2,#256]
1435:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_TMWC_Msk)|
1436:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_GTWC_Msk));
1437:../Libraries/XMCLib/src/xmc_vadc.c **** 
1438:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Gating mode */
1439:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QMR0 = ((uint32_t)(config->qmr0) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 3215              	 .loc 2 1439 0
 3216 0062 3B68     	 ldr r3,[r7]
 3217 0064 9B68     	 ldr r3,[r3,#8]
 3218 0066 43F00102 	 orr r2,r3,#1
 3219 006a 7B68     	 ldr r3,[r7,#4]
 3220 006c C3F80421 	 str r2,[r3,#260]
1440:../Libraries/XMCLib/src/xmc_vadc.c **** 
1441:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode) )
 3221              	 .loc 2 1441 0
 3222 0070 3B68     	 ldr r3,[r7]
 3223 0072 1B78     	 ldrb r3,[r3]
 3224 0074 03F00303 	 and r3,r3,#3
 3225 0078 DBB2     	 uxtb r3,r3
 3226 007a 022B     	 cmp r3,#2
 3227 007c 07D1     	 bne .L130
1442:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1443:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_RPTDIS_Pos);
 3228              	 .loc 2 1443 0
 3229 007e 7B68     	 ldr r3,[r7,#4]
 3230 0080 D3F80431 	 ldr r3,[r3,#260]
 3231 0084 43F48032 	 orr r2,r3,#65536
 3232 0088 7B68     	 ldr r3,[r7,#4]
 3233 008a C3F80421 	 str r2,[r3,#260]
 3234              	.L130:
1444:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1445:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot for the queue request source */
1446:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueEnableArbitrationSlot(group_ptr);
 3235              	 .loc 2 1446 0
 3236 008e 7868     	 ldr r0,[r7,#4]
 3237 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueEnableArbitrationSlot
1447:../Libraries/XMCLib/src/xmc_vadc.c **** 
1448:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3238              	 .loc 2 1448 0
 3239 0094 1037     	 adds r7,r7,#16
 3240              	 .cfi_def_cfa_offset 8
 3241 0096 BD46     	 mov sp,r7
 3242              	 .cfi_def_cfa_register 13
 3243              	 
 3244 0098 80BD     	 pop {r7,pc}
 3245              	 .cfi_endproc
 3246              	.LFE296:
 3248 009a 00BF     	 .section .text.XMC_VADC_GROUP_QueueSelectTrigger,"ax",%progbits
 3249              	 .align 2
 3250              	 .global XMC_VADC_GROUP_QueueSelectTrigger
 3251              	 .thumb
 3252              	 .thumb_func
 3254              	XMC_VADC_GROUP_QueueSelectTrigger:
 3255              	.LFB297:
1449:../Libraries/XMCLib/src/xmc_vadc.c **** 
1450:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible triggers as a conversion trigger for queue request source *
1451:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
1452:../Libraries/XMCLib/src/xmc_vadc.c ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num)
1453:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3256              	 .loc 2 1453 0
 3257              	 .cfi_startproc
 3258              	 
 3259              	 
 3260              	 
 3261 0000 80B4     	 push {r7}
 3262              	 .cfi_def_cfa_offset 4
 3263              	 .cfi_offset 7,-4
 3264 0002 85B0     	 sub sp,sp,#20
 3265              	 .cfi_def_cfa_offset 24
 3266 0004 00AF     	 add r7,sp,#0
 3267              	 .cfi_def_cfa_register 7
 3268 0006 7860     	 str r0,[r7,#4]
 3269 0008 0B46     	 mov r3,r1
 3270 000a FB70     	 strb r3,[r7,#3]
1454:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
1455:../Libraries/XMCLib/src/xmc_vadc.c ****   
1456:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1457:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_NUM_POR
1458:../Libraries/XMCLib/src/xmc_vadc.c **** 
1459:../Libraries/XMCLib/src/xmc_vadc.c ****   
1460:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the conversion trigger */
1461:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3271              	 .loc 2 1461 0
 3272 000c 7B68     	 ldr r3,[r7,#4]
 3273 000e D3F80031 	 ldr r3,[r3,#256]
 3274 0012 FB60     	 str r3,[r7,#12]
1462:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3275              	 .loc 2 1462 0
 3276 0014 FB68     	 ldr r3,[r7,#12]
 3277 0016 43F40043 	 orr r3,r3,#32768
 3278 001a FB60     	 str r3,[r7,#12]
1463:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTSEL_Msk);
 3279              	 .loc 2 1463 0
 3280 001c FB68     	 ldr r3,[r7,#12]
 3281 001e 23F47063 	 bic r3,r3,#3840
 3282 0022 FB60     	 str r3,[r7,#12]
1464:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3283              	 .loc 2 1464 0
 3284 0024 FB78     	 ldrb r3,[r7,#3]
 3285 0026 1B02     	 lsls r3,r3,#8
 3286 0028 FA68     	 ldr r2,[r7,#12]
 3287 002a 1343     	 orrs r3,r3,r2
 3288 002c FB60     	 str r3,[r7,#12]
1465:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3289              	 .loc 2 1465 0
 3290 002e 7B68     	 ldr r3,[r7,#4]
 3291 0030 FA68     	 ldr r2,[r7,#12]
 3292 0032 C3F80021 	 str r2,[r3,#256]
1466:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3293              	 .loc 2 1466 0
 3294 0036 1437     	 adds r7,r7,#20
 3295              	 .cfi_def_cfa_offset 4
 3296 0038 BD46     	 mov sp,r7
 3297              	 .cfi_def_cfa_register 13
 3298              	 
 3299 003a 5DF8047B 	 ldr r7,[sp],#4
 3300              	 .cfi_restore 7
 3301              	 .cfi_def_cfa_offset 0
 3302 003e 7047     	 bx lr
 3303              	 .cfi_endproc
 3304              	.LFE297:
 3306              	 .section .text.XMC_VADC_GROUP_QueueSelectTriggerEdge,"ax",%progbits
 3307              	 .align 2
 3308              	 .global XMC_VADC_GROUP_QueueSelectTriggerEdge
 3309              	 .thumb
 3310              	 .thumb_func
 3312              	XMC_VADC_GROUP_QueueSelectTriggerEdge:
 3313              	.LFB298:
1467:../Libraries/XMCLib/src/xmc_vadc.c **** 
1468:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1469:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
1470:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3314              	 .loc 2 1470 0
 3315              	 .cfi_startproc
 3316              	 
 3317              	 
 3318              	 
 3319 0000 80B4     	 push {r7}
 3320              	 .cfi_def_cfa_offset 4
 3321              	 .cfi_offset 7,-4
 3322 0002 85B0     	 sub sp,sp,#20
 3323              	 .cfi_def_cfa_offset 24
 3324 0004 00AF     	 add r7,sp,#0
 3325              	 .cfi_def_cfa_register 7
 3326 0006 7860     	 str r0,[r7,#4]
 3327 0008 0B46     	 mov r3,r1
 3328 000a FB70     	 strb r3,[r7,#3]
1471:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1472:../Libraries/XMCLib/src/xmc_vadc.c **** 
1473:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1474:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Gating Port", ((trigger_edge)<= XMC_VADC_
1475:../Libraries/XMCLib/src/xmc_vadc.c **** 
1476:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1477:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3329              	 .loc 2 1477 0
 3330 000c 7B68     	 ldr r3,[r7,#4]
 3331 000e D3F80031 	 ldr r3,[r3,#256]
 3332 0012 FB60     	 str r3,[r7,#12]
1478:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3333              	 .loc 2 1478 0
 3334 0014 FB68     	 ldr r3,[r7,#12]
 3335 0016 43F40043 	 orr r3,r3,#32768
 3336 001a FB60     	 str r3,[r7,#12]
1479:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTMODE_Msk);
 3337              	 .loc 2 1479 0
 3338 001c FB68     	 ldr r3,[r7,#12]
 3339 001e 23F4C043 	 bic r3,r3,#24576
 3340 0022 FB60     	 str r3,[r7,#12]
1480:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3341              	 .loc 2 1480 0
 3342 0024 FB78     	 ldrb r3,[r7,#3]
 3343 0026 5B03     	 lsls r3,r3,#13
 3344 0028 FA68     	 ldr r2,[r7,#12]
 3345 002a 1343     	 orrs r3,r3,r2
 3346 002c FB60     	 str r3,[r7,#12]
1481:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3347              	 .loc 2 1481 0
 3348 002e 7B68     	 ldr r3,[r7,#4]
 3349 0030 FA68     	 ldr r2,[r7,#12]
 3350 0032 C3F80021 	 str r2,[r3,#256]
1482:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3351              	 .loc 2 1482 0
 3352 0036 1437     	 adds r7,r7,#20
 3353              	 .cfi_def_cfa_offset 4
 3354 0038 BD46     	 mov sp,r7
 3355              	 .cfi_def_cfa_register 13
 3356              	 
 3357 003a 5DF8047B 	 ldr r7,[sp],#4
 3358              	 .cfi_restore 7
 3359              	 .cfi_def_cfa_offset 0
 3360 003e 7047     	 bx lr
 3361              	 .cfi_endproc
 3362              	.LFE298:
 3364              	 .section .text.XMC_VADC_GROUP_QueueSelectGating,"ax",%progbits
 3365              	 .align 2
 3366              	 .global XMC_VADC_GROUP_QueueSelectGating
 3367              	 .thumb
 3368              	 .thumb_func
 3370              	XMC_VADC_GROUP_QueueSelectGating:
 3371              	.LFB299:
1483:../Libraries/XMCLib/src/xmc_vadc.c **** 
1484:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible trigger gates as a trigger gating signal for queue request 
1485:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
1486:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3372              	 .loc 2 1486 0
 3373              	 .cfi_startproc
 3374              	 
 3375              	 
 3376              	 
 3377 0000 80B4     	 push {r7}
 3378              	 .cfi_def_cfa_offset 4
 3379              	 .cfi_offset 7,-4
 3380 0002 85B0     	 sub sp,sp,#20
 3381              	 .cfi_def_cfa_offset 24
 3382 0004 00AF     	 add r7,sp,#0
 3383              	 .cfi_def_cfa_register 7
 3384 0006 7860     	 str r0,[r7,#4]
 3385 0008 0B46     	 mov r3,r1
 3386 000a FB70     	 strb r3,[r7,#3]
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
1489:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM_PORTS
1491:../Libraries/XMCLib/src/xmc_vadc.c ****   
1492:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1493:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3387              	 .loc 2 1493 0
 3388 000c 7B68     	 ldr r3,[r7,#4]
 3389 000e D3F80031 	 ldr r3,[r3,#256]
 3390 0012 FB60     	 str r3,[r7,#12]
1494:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
 3391              	 .loc 2 1494 0
 3392 0014 FB68     	 ldr r3,[r7,#12]
 3393 0016 43F40003 	 orr r3,r3,#8388608
 3394 001a FB60     	 str r3,[r7,#12]
1495:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_GTSEL_Msk);
 3395              	 .loc 2 1495 0
 3396 001c FB68     	 ldr r3,[r7,#12]
 3397 001e 23F47023 	 bic r3,r3,#983040
 3398 0022 FB60     	 str r3,[r7,#12]
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 3399              	 .loc 2 1496 0
 3400 0024 FB78     	 ldrb r3,[r7,#3]
 3401 0026 1B04     	 lsls r3,r3,#16
 3402 0028 FA68     	 ldr r2,[r7,#12]
 3403 002a 1343     	 orrs r3,r3,r2
 3404 002c FB60     	 str r3,[r7,#12]
1497:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3405              	 .loc 2 1497 0
 3406 002e 7B68     	 ldr r3,[r7,#4]
 3407 0030 FA68     	 ldr r2,[r7,#12]
 3408 0032 C3F80021 	 str r2,[r3,#256]
1498:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3409              	 .loc 2 1498 0
 3410 0036 1437     	 adds r7,r7,#20
 3411              	 .cfi_def_cfa_offset 4
 3412 0038 BD46     	 mov sp,r7
 3413              	 .cfi_def_cfa_register 13
 3414              	 
 3415 003a 5DF8047B 	 ldr r7,[sp],#4
 3416              	 .cfi_restore 7
 3417              	 .cfi_def_cfa_offset 0
 3418 003e 7047     	 bx lr
 3419              	 .cfi_endproc
 3420              	.LFE299:
 3422              	 .section .text.XMC_VADC_GROUP_QueueGetLength,"ax",%progbits
 3423              	 .align 2
 3424              	 .global XMC_VADC_GROUP_QueueGetLength
 3425              	 .thumb
 3426              	 .thumb_func
 3428              	XMC_VADC_GROUP_QueueGetLength:
 3429              	.LFB300:
1499:../Libraries/XMCLib/src/xmc_vadc.c **** 
1500:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine the number of channels in the queue (length includes the valid channel in the B
1501:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr)
1502:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3430              	 .loc 2 1502 0
 3431              	 .cfi_startproc
 3432              	 
 3433              	 
 3434              	 
 3435 0000 80B4     	 push {r7}
 3436              	 .cfi_def_cfa_offset 4
 3437              	 .cfi_offset 7,-4
 3438 0002 87B0     	 sub sp,sp,#28
 3439              	 .cfi_def_cfa_offset 32
 3440 0004 00AF     	 add r7,sp,#0
 3441              	 .cfi_def_cfa_register 7
 3442 0006 7860     	 str r0,[r7,#4]
1503:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qsr;
1504:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qbur0;
1505:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        length;
1506:../Libraries/XMCLib/src/xmc_vadc.c **** 
1507:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetLength:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
1508:../Libraries/XMCLib/src/xmc_vadc.c **** 
1509:../Libraries/XMCLib/src/xmc_vadc.c ****   qsr = group_ptr->QSR0;
 3443              	 .loc 2 1509 0
 3444 0008 7B68     	 ldr r3,[r7,#4]
 3445 000a D3F80831 	 ldr r3,[r3,#264]
 3446 000e 3B61     	 str r3,[r7,#16]
1510:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3447              	 .loc 2 1510 0
 3448 0010 7B68     	 ldr r3,[r7,#4]
 3449 0012 D3F81031 	 ldr r3,[r3,#272]
 3450 0016 FB60     	 str r3,[r7,#12]
1511:../Libraries/XMCLib/src/xmc_vadc.c **** 
1512:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qsr & (uint32_t)VADC_G_QSR0_EMPTY_Msk)
 3451              	 .loc 2 1512 0
 3452 0018 3B69     	 ldr r3,[r7,#16]
 3453 001a 03F02003 	 and r3,r3,#32
 3454 001e 002B     	 cmp r3,#0
 3455 0020 02D0     	 beq .L135
1513:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1514:../Libraries/XMCLib/src/xmc_vadc.c ****     length = 0U;
 3456              	 .loc 2 1514 0
 3457 0022 0023     	 movs r3,#0
 3458 0024 7B61     	 str r3,[r7,#20]
 3459 0026 04E0     	 b .L136
 3460              	.L135:
1515:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1516:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1517:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1518:../Libraries/XMCLib/src/xmc_vadc.c ****     length = (qsr & (uint32_t)VADC_G_QSR0_FILL_Msk) + 1U;
 3461              	 .loc 2 1518 0
 3462 0028 3B69     	 ldr r3,[r7,#16]
 3463 002a 03F00F03 	 and r3,r3,#15
 3464 002e 0133     	 adds r3,r3,#1
 3465 0030 7B61     	 str r3,[r7,#20]
 3466              	.L136:
1519:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1520:../Libraries/XMCLib/src/xmc_vadc.c ****   
1521:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qbur0 & (uint32_t)VADC_G_QBUR0_V_Msk )
 3467              	 .loc 2 1521 0
 3468 0032 FB68     	 ldr r3,[r7,#12]
 3469 0034 03F48073 	 and r3,r3,#256
 3470 0038 002B     	 cmp r3,#0
 3471 003a 02D0     	 beq .L137
1522:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1523:../Libraries/XMCLib/src/xmc_vadc.c ****     length++;
 3472              	 .loc 2 1523 0
 3473 003c 7B69     	 ldr r3,[r7,#20]
 3474 003e 0133     	 adds r3,r3,#1
 3475 0040 7B61     	 str r3,[r7,#20]
 3476              	.L137:
1524:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1525:../Libraries/XMCLib/src/xmc_vadc.c **** 
1526:../Libraries/XMCLib/src/xmc_vadc.c ****   return length;
 3477              	 .loc 2 1526 0
 3478 0042 7B69     	 ldr r3,[r7,#20]
1527:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3479              	 .loc 2 1527 0
 3480 0044 1846     	 mov r0,r3
 3481 0046 1C37     	 adds r7,r7,#28
 3482              	 .cfi_def_cfa_offset 4
 3483 0048 BD46     	 mov sp,r7
 3484              	 .cfi_def_cfa_register 13
 3485              	 
 3486 004a 5DF8047B 	 ldr r7,[sp],#4
 3487              	 .cfi_restore 7
 3488              	 .cfi_def_cfa_offset 0
 3489 004e 7047     	 bx lr
 3490              	 .cfi_endproc
 3491              	.LFE300:
 3493              	 .section .text.XMC_VADC_GROUP_QueueAbortSequence,"ax",%progbits
 3494              	 .align 2
 3495              	 .global XMC_VADC_GROUP_QueueAbortSequence
 3496              	 .thumb
 3497              	 .thumb_func
 3499              	XMC_VADC_GROUP_QueueAbortSequence:
 3500              	.LFB301:
1528:../Libraries/XMCLib/src/xmc_vadc.c **** 
1529:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a channel sequence */
1530:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr)
1531:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3501              	 .loc 2 1531 0
 3502              	 .cfi_startproc
 3503              	 
 3504              	 
 3505 0000 80B5     	 push {r7,lr}
 3506              	 .cfi_def_cfa_offset 8
 3507              	 .cfi_offset 7,-8
 3508              	 .cfi_offset 14,-4
 3509 0002 84B0     	 sub sp,sp,#16
 3510              	 .cfi_def_cfa_offset 24
 3511 0004 00AF     	 add r7,sp,#0
 3512              	 .cfi_def_cfa_register 7
 3513 0006 7860     	 str r0,[r7,#4]
1532:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1533:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1534:../Libraries/XMCLib/src/xmc_vadc.c **** 
1535:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueAbortSequence:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1536:../Libraries/XMCLib/src/xmc_vadc.c **** 
1537:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1538:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 3514              	 .loc 2 1538 0
 3515 0008 7B68     	 ldr r3,[r7,#4]
 3516 000a D3F80031 	 ldr r3,[r3,#256]
 3517 000e FB60     	 str r3,[r7,#12]
1539:../Libraries/XMCLib/src/xmc_vadc.c **** 
1540:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3518              	 .loc 2 1540 0
 3519 0010 7B68     	 ldr r3,[r7,#4]
 3520 0012 144A     	 ldr r2,.L140
 3521 0014 C3F80021 	 str r2,[r3,#256]
1541:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1542:../Libraries/XMCLib/src/xmc_vadc.c ****   
1543:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1544:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3522              	 .loc 2 1544 0
 3523 0018 7B68     	 ldr r3,[r7,#4]
 3524 001a D3F88430 	 ldr r3,[r3,#132]
 3525 001e 1B0E     	 lsrs r3,r3,#24
 3526 0020 03F00103 	 and r3,r3,#1
 3527 0024 002B     	 cmp r3,#0
 3528 0026 14BF     	 ite ne
 3529 0028 0123     	 movne r3,#1
 3530 002a 0023     	 moveq r3,#0
 3531 002c FB72     	 strb r3,[r7,#11]
1545:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3532              	 .loc 2 1545 0
 3533 002e 7868     	 ldr r0,[r7,#4]
 3534 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1546:../Libraries/XMCLib/src/xmc_vadc.c ****    
1547:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Flush the Entries from queue*/
1548:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueFlushEntries(group_ptr);
 3535              	 .loc 2 1548 0
 3536 0034 7868     	 ldr r0,[r7,#4]
 3537 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueFlushEntries
1549:../Libraries/XMCLib/src/xmc_vadc.c ****   
1550:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1551:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3538              	 .loc 2 1551 0
 3539 003a 7B68     	 ldr r3,[r7,#4]
 3540 003c D3F88420 	 ldr r2,[r3,#132]
 3541 0040 FB7A     	 ldrb r3,[r7,#11]
 3542 0042 1B06     	 lsls r3,r3,#24
 3543 0044 1A43     	 orrs r2,r2,r3
 3544 0046 7B68     	 ldr r3,[r7,#4]
 3545 0048 C3F88420 	 str r2,[r3,#132]
1552:../Libraries/XMCLib/src/xmc_vadc.c ****   
1553:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1554:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1555:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3546              	 .loc 2 1555 0
 3547 004c FB68     	 ldr r3,[r7,#12]
 3548 004e 43F08023 	 orr r3,r3,#-2147450880
 3549 0052 43F40003 	 orr r3,r3,#8388608
1554:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3550              	 .loc 2 1554 0
 3551 0056 7A68     	 ldr r2,[r7,#4]
 3552 0058 C2F80031 	 str r3,[r2,#256]
1556:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3553              	 .loc 2 1556 0
 3554 005c 1037     	 adds r7,r7,#16
 3555              	 .cfi_def_cfa_offset 8
 3556 005e BD46     	 mov sp,r7
 3557              	 .cfi_def_cfa_register 13
 3558              	 
 3559 0060 80BD     	 pop {r7,pc}
 3560              	.L141:
 3561 0062 00BF     	 .align 2
 3562              	.L140:
 3563 0064 00808080 	 .word -2139062272
 3564              	 .cfi_endproc
 3565              	.LFE301:
 3567              	 .section .text.XMC_VADC_GROUP_QueueRemoveChannel,"ax",%progbits
 3568              	 .align 2
 3569              	 .global XMC_VADC_GROUP_QueueRemoveChannel
 3570              	 .thumb
 3571              	 .thumb_func
 3573              	XMC_VADC_GROUP_QueueRemoveChannel:
 3574              	.LFB302:
1557:../Libraries/XMCLib/src/xmc_vadc.c **** 
1558:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort conversion of the channel queued up next */
1559:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr)
1560:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3575              	 .loc 2 1560 0
 3576              	 .cfi_startproc
 3577              	 
 3578              	 
 3579 0000 80B5     	 push {r7,lr}
 3580              	 .cfi_def_cfa_offset 8
 3581              	 .cfi_offset 7,-8
 3582              	 .cfi_offset 14,-4
 3583 0002 86B0     	 sub sp,sp,#24
 3584              	 .cfi_def_cfa_offset 32
 3585 0004 00AF     	 add r7,sp,#0
 3586              	 .cfi_def_cfa_register 7
 3587 0006 7860     	 str r0,[r7,#4]
1561:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_before_abort;
1562:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_after_abort;
1563:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1564:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1565:../Libraries/XMCLib/src/xmc_vadc.c **** 
1566:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1567:../Libraries/XMCLib/src/xmc_vadc.c ****   
1568:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1569:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0= group_ptr->QCTRL0;
 3588              	 .loc 2 1569 0
 3589 0008 7B68     	 ldr r3,[r7,#4]
 3590 000a D3F80031 	 ldr r3,[r3,#256]
 3591 000e 3B61     	 str r3,[r7,#16]
1570:../Libraries/XMCLib/src/xmc_vadc.c **** 
1571:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3592              	 .loc 2 1571 0
 3593 0010 7B68     	 ldr r3,[r7,#4]
 3594 0012 204A     	 ldr r2,.L146
 3595 0014 C3F80021 	 str r2,[r3,#256]
1572:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1573:../Libraries/XMCLib/src/xmc_vadc.c ****   
1574:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1575:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3596              	 .loc 2 1575 0
 3597 0018 7B68     	 ldr r3,[r7,#4]
 3598 001a D3F88430 	 ldr r3,[r3,#132]
 3599 001e 1B0E     	 lsrs r3,r3,#24
 3600 0020 03F00103 	 and r3,r3,#1
 3601 0024 002B     	 cmp r3,#0
 3602 0026 14BF     	 ite ne
 3603 0028 0123     	 movne r3,#1
 3604 002a 0023     	 moveq r3,#0
 3605 002c FB73     	 strb r3,[r7,#15]
1576:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3606              	 .loc 2 1576 0
 3607 002e 7868     	 ldr r0,[r7,#4]
 3608 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1577:../Libraries/XMCLib/src/xmc_vadc.c **** 
1578:../Libraries/XMCLib/src/xmc_vadc.c ****   length_before_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3609              	 .loc 2 1578 0
 3610 0034 7868     	 ldr r0,[r7,#4]
 3611 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3612 003a B860     	 str r0,[r7,#8]
1579:../Libraries/XMCLib/src/xmc_vadc.c **** 
1580:../Libraries/XMCLib/src/xmc_vadc.c ****   if (length_before_abort)
 3613              	 .loc 2 1580 0
 3614 003c BB68     	 ldr r3,[r7,#8]
 3615 003e 002B     	 cmp r3,#0
 3616 0040 14D0     	 beq .L143
1581:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1582:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Remove the first entry of the queue */
1583:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_CLRV_Msk;
 3617              	 .loc 2 1583 0
 3618 0042 7B68     	 ldr r3,[r7,#4]
 3619 0044 D3F80431 	 ldr r3,[r3,#260]
 3620 0048 43F48072 	 orr r2,r3,#256
 3621 004c 7B68     	 ldr r3,[r7,#4]
 3622 004e C3F80421 	 str r2,[r3,#260]
1584:../Libraries/XMCLib/src/xmc_vadc.c **** 
1585:../Libraries/XMCLib/src/xmc_vadc.c ****     length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3623              	 .loc 2 1585 0
 3624 0052 7868     	 ldr r0,[r7,#4]
 3625 0054 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3626 0058 7861     	 str r0,[r7,#20]
1586:../Libraries/XMCLib/src/xmc_vadc.c **** 
1587:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Loop until a reduction in queue length is assessed */
1588:../Libraries/XMCLib/src/xmc_vadc.c ****     while(length_after_abort == length_before_abort)
 3627              	 .loc 2 1588 0
 3628 005a 03E0     	 b .L144
 3629              	.L145:
1589:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1590:../Libraries/XMCLib/src/xmc_vadc.c ****       length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3630              	 .loc 2 1590 0
 3631 005c 7868     	 ldr r0,[r7,#4]
 3632 005e FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3633 0062 7861     	 str r0,[r7,#20]
 3634              	.L144:
1588:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 3635              	 .loc 2 1588 0
 3636 0064 7A69     	 ldr r2,[r7,#20]
 3637 0066 BB68     	 ldr r3,[r7,#8]
 3638 0068 9A42     	 cmp r2,r3
 3639 006a F7D0     	 beq .L145
 3640              	.L143:
1591:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1592:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1593:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1594:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3641              	 .loc 2 1594 0
 3642 006c 7B68     	 ldr r3,[r7,#4]
 3643 006e D3F88420 	 ldr r2,[r3,#132]
 3644 0072 FB7B     	 ldrb r3,[r7,#15]
 3645 0074 1B06     	 lsls r3,r3,#24
 3646 0076 1A43     	 orrs r2,r2,r3
 3647 0078 7B68     	 ldr r3,[r7,#4]
 3648 007a C3F88420 	 str r2,[r3,#132]
1595:../Libraries/XMCLib/src/xmc_vadc.c ****   
1596:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1597:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1598:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3649              	 .loc 2 1598 0
 3650 007e 3B69     	 ldr r3,[r7,#16]
 3651 0080 43F08023 	 orr r3,r3,#-2147450880
 3652 0084 43F40003 	 orr r3,r3,#8388608
1597:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3653              	 .loc 2 1597 0
 3654 0088 7A68     	 ldr r2,[r7,#4]
 3655 008a C2F80031 	 str r3,[r2,#256]
1599:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3656              	 .loc 2 1599 0
 3657 008e 1837     	 adds r7,r7,#24
 3658              	 .cfi_def_cfa_offset 8
 3659 0090 BD46     	 mov sp,r7
 3660              	 .cfi_def_cfa_register 13
 3661              	 
 3662 0092 80BD     	 pop {r7,pc}
 3663              	.L147:
 3664              	 .align 2
 3665              	.L146:
 3666 0094 00808080 	 .word -2139062272
 3667              	 .cfi_endproc
 3668              	.LFE302:
 3670              	 .section .text.XMC_VADC_GROUP_QueueGetNextChannel,"ax",%progbits
 3671              	 .align 2
 3672              	 .global XMC_VADC_GROUP_QueueGetNextChannel
 3673              	 .thumb
 3674              	 .thumb_func
 3676              	XMC_VADC_GROUP_QueueGetNextChannel:
 3677              	.LFB303:
1600:../Libraries/XMCLib/src/xmc_vadc.c **** 
1601:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get details of channel meant to be converted right after the ongoing conversion */
1602:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr)
1603:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3678              	 .loc 2 1603 0
 3679              	 .cfi_startproc
 3680              	 
 3681              	 
 3682              	 
 3683 0000 80B4     	 push {r7}
 3684              	 .cfi_def_cfa_offset 4
 3685              	 .cfi_offset 7,-4
 3686 0002 85B0     	 sub sp,sp,#20
 3687              	 .cfi_def_cfa_offset 24
 3688 0004 00AF     	 add r7,sp,#0
 3689              	 .cfi_def_cfa_register 7
 3690 0006 7860     	 str r0,[r7,#4]
1604:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1605:../Libraries/XMCLib/src/xmc_vadc.c **** 
1606:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetNextChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1607:../Libraries/XMCLib/src/xmc_vadc.c ****   
1608:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1609:../Libraries/XMCLib/src/xmc_vadc.c ****    * Check if there is something in the backup stage. If not, read queue-0
1610:../Libraries/XMCLib/src/xmc_vadc.c ****    * entry.
1611:../Libraries/XMCLib/src/xmc_vadc.c ****    */
1612:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3691              	 .loc 2 1612 0
 3692 0008 7B68     	 ldr r3,[r7,#4]
 3693 000a D3F81031 	 ldr r3,[r3,#272]
 3694 000e 03F48073 	 and r3,r3,#256
 3695 0012 002B     	 cmp r3,#0
 3696 0014 06D0     	 beq .L149
1613:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1614:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3697              	 .loc 2 1614 0
 3698 0016 7B68     	 ldr r3,[r7,#4]
 3699 0018 D3F81031 	 ldr r3,[r3,#272]
 3700 001c 03F01F03 	 and r3,r3,#31
 3701 0020 FB60     	 str r3,[r7,#12]
 3702 0022 10E0     	 b .L150
 3703              	.L149:
1615:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1616:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( (group_ptr->Q0R0) & (uint32_t)VADC_G_Q0R0_V_Msk)
 3704              	 .loc 2 1616 0
 3705 0024 7B68     	 ldr r3,[r7,#4]
 3706 0026 D3F80C31 	 ldr r3,[r3,#268]
 3707 002a 03F48073 	 and r3,r3,#256
 3708 002e 002B     	 cmp r3,#0
 3709 0030 06D0     	 beq .L151
1617:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1618:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->Q0R0 & (uint32_t)VADC_G_Q0R0_REQCHNR_Msk);
 3710              	 .loc 2 1618 0
 3711 0032 7B68     	 ldr r3,[r7,#4]
 3712 0034 D3F80C31 	 ldr r3,[r3,#268]
 3713 0038 03F01F03 	 and r3,r3,#31
 3714 003c FB60     	 str r3,[r7,#12]
 3715 003e 02E0     	 b .L150
 3716              	.L151:
1619:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1620:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1621:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1622:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Nothing is pending */
1623:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3717              	 .loc 2 1623 0
 3718 0040 4FF0FF33 	 mov r3,#-1
 3719 0044 FB60     	 str r3,[r7,#12]
 3720              	.L150:
1624:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1625:../Libraries/XMCLib/src/xmc_vadc.c **** 
1626:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3721              	 .loc 2 1626 0
 3722 0046 FB68     	 ldr r3,[r7,#12]
1627:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3723              	 .loc 2 1627 0
 3724 0048 1846     	 mov r0,r3
 3725 004a 1437     	 adds r7,r7,#20
 3726              	 .cfi_def_cfa_offset 4
 3727 004c BD46     	 mov sp,r7
 3728              	 .cfi_def_cfa_register 13
 3729              	 
 3730 004e 5DF8047B 	 ldr r7,[sp],#4
 3731              	 .cfi_restore 7
 3732              	 .cfi_def_cfa_offset 0
 3733 0052 7047     	 bx lr
 3734              	 .cfi_endproc
 3735              	.LFE303:
 3737              	 .section .text.XMC_VADC_GROUP_QueueGetInterruptedChannel,"ax",%progbits
 3738              	 .align 2
 3739              	 .global XMC_VADC_GROUP_QueueGetInterruptedChannel
 3740              	 .thumb
 3741              	 .thumb_func
 3743              	XMC_VADC_GROUP_QueueGetInterruptedChannel:
 3744              	.LFB304:
1628:../Libraries/XMCLib/src/xmc_vadc.c **** 
1629:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get the channel number of the channel whose conversion had been interrupted */
1630:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr)
1631:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3745              	 .loc 2 1631 0
 3746              	 .cfi_startproc
 3747              	 
 3748              	 
 3749              	 
 3750 0000 80B4     	 push {r7}
 3751              	 .cfi_def_cfa_offset 4
 3752              	 .cfi_offset 7,-4
 3753 0002 85B0     	 sub sp,sp,#20
 3754              	 .cfi_def_cfa_offset 24
 3755 0004 00AF     	 add r7,sp,#0
 3756              	 .cfi_def_cfa_register 7
 3757 0006 7860     	 str r0,[r7,#4]
1632:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1633:../Libraries/XMCLib/src/xmc_vadc.c **** 
1634:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetInterruptedChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1635:../Libraries/XMCLib/src/xmc_vadc.c ****   
1636:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3758              	 .loc 2 1636 0
 3759 0008 7B68     	 ldr r3,[r7,#4]
 3760 000a D3F81031 	 ldr r3,[r3,#272]
 3761 000e 03F48073 	 and r3,r3,#256
 3762 0012 002B     	 cmp r3,#0
 3763 0014 06D0     	 beq .L154
1637:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1638:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3764              	 .loc 2 1638 0
 3765 0016 7B68     	 ldr r3,[r7,#4]
 3766 0018 D3F81031 	 ldr r3,[r3,#272]
 3767 001c 03F01F03 	 and r3,r3,#31
 3768 0020 FB60     	 str r3,[r7,#12]
 3769 0022 02E0     	 b .L155
 3770              	.L154:
1639:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1640:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1641:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1642:../Libraries/XMCLib/src/xmc_vadc.c ****     /* No such channel */
1643:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3771              	 .loc 2 1643 0
 3772 0024 4FF0FF33 	 mov r3,#-1
 3773 0028 FB60     	 str r3,[r7,#12]
 3774              	.L155:
1644:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1645:../Libraries/XMCLib/src/xmc_vadc.c **** 
1646:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3775              	 .loc 2 1646 0
 3776 002a FB68     	 ldr r3,[r7,#12]
1647:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3777              	 .loc 2 1647 0
 3778 002c 1846     	 mov r0,r3
 3779 002e 1437     	 adds r7,r7,#20
 3780              	 .cfi_def_cfa_offset 4
 3781 0030 BD46     	 mov sp,r7
 3782              	 .cfi_def_cfa_register 13
 3783              	 
 3784 0032 5DF8047B 	 ldr r7,[sp],#4
 3785              	 .cfi_restore 7
 3786              	 .cfi_def_cfa_offset 0
 3787 0036 7047     	 bx lr
 3788              	 .cfi_endproc
 3789              	.LFE304:
 3791              	 .section .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode,"ax",%progbits
 3792              	 .align 2
 3793              	 .global XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 3794              	 .thumb
 3795              	 .thumb_func
 3797              	XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:
 3798              	.LFB305:
1648:../Libraries/XMCLib/src/xmc_vadc.c **** 
1649:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a Service Request line for the request source event */
1650:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
1651:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3799              	 .loc 2 1651 0
 3800              	 .cfi_startproc
 3801              	 
 3802              	 
 3803              	 
 3804 0000 80B4     	 push {r7}
 3805              	 .cfi_def_cfa_offset 4
 3806              	 .cfi_offset 7,-4
 3807 0002 85B0     	 sub sp,sp,#20
 3808              	 .cfi_def_cfa_offset 24
 3809 0004 00AF     	 add r7,sp,#0
 3810              	 .cfi_def_cfa_register 7
 3811 0006 7860     	 str r0,[r7,#4]
 3812 0008 0B46     	 mov r3,r1
 3813 000a FB70     	 strb r3,[r7,#3]
1652:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1653:../Libraries/XMCLib/src/xmc_vadc.c **** 
1654:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_
1655:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC
1656:../Libraries/XMCLib/src/xmc_vadc.c **** 
1657:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 3814              	 .loc 2 1657 0
 3815 000c 7B68     	 ldr r3,[r7,#4]
 3816 000e D3F8C031 	 ldr r3,[r3,#448]
 3817 0012 FB60     	 str r3,[r7,#12]
1658:../Libraries/XMCLib/src/xmc_vadc.c **** 
1659:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV0NP_Msk);
 3818              	 .loc 2 1659 0
 3819 0014 FB68     	 ldr r3,[r7,#12]
 3820 0016 23F00F03 	 bic r3,r3,#15
 3821 001a FB60     	 str r3,[r7,#12]
1660:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 3822              	 .loc 2 1660 0
 3823 001c FB78     	 ldrb r3,[r7,#3]
 3824 001e FA68     	 ldr r2,[r7,#12]
 3825 0020 1343     	 orrs r3,r3,r2
 3826 0022 FB60     	 str r3,[r7,#12]
1661:../Libraries/XMCLib/src/xmc_vadc.c **** 
1662:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 3827              	 .loc 2 1662 0
 3828 0024 7B68     	 ldr r3,[r7,#4]
 3829 0026 FA68     	 ldr r2,[r7,#12]
 3830 0028 C3F8C021 	 str r2,[r3,#448]
1663:../Libraries/XMCLib/src/xmc_vadc.c **** 
1664:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3831              	 .loc 2 1664 0
 3832 002c 1437     	 adds r7,r7,#20
 3833              	 .cfi_def_cfa_offset 4
 3834 002e BD46     	 mov sp,r7
 3835              	 .cfi_def_cfa_register 13
 3836              	 
 3837 0030 5DF8047B 	 ldr r7,[sp],#4
 3838              	 .cfi_restore 7
 3839              	 .cfi_def_cfa_offset 0
 3840 0034 7047     	 bx lr
 3841              	 .cfi_endproc
 3842              	.LFE305:
 3844 0036 00BF     	 .section .text.XMC_VADC_GROUP_ChannelInit,"ax",%progbits
 3845              	 .align 2
 3846              	 .global XMC_VADC_GROUP_ChannelInit
 3847              	 .thumb
 3848              	 .thumb_func
 3850              	XMC_VADC_GROUP_ChannelInit:
 3851              	.LFB306:
1665:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1666:../Libraries/XMCLib/src/xmc_vadc.c **** 
1667:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1668:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize a channel unit */
1669:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
1670:../Libraries/XMCLib/src/xmc_vadc.c ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config)
1671:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3852              	 .loc 2 1671 0
 3853              	 .cfi_startproc
 3854              	 
 3855              	 
 3856              	 
 3857 0000 80B4     	 push {r7}
 3858              	 .cfi_def_cfa_offset 4
 3859              	 .cfi_offset 7,-4
 3860 0002 89B0     	 sub sp,sp,#36
 3861              	 .cfi_def_cfa_offset 40
 3862 0004 00AF     	 add r7,sp,#0
 3863              	 .cfi_def_cfa_register 7
 3864 0006 F860     	 str r0,[r7,#12]
 3865 0008 B960     	 str r1,[r7,#8]
 3866 000a 7A60     	 str r2,[r7,#4]
1672:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t prio;
1673:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_assign;
1674:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1675:../Libraries/XMCLib/src/xmc_vadc.c **** 
1676:../Libraries/XMCLib/src/xmc_vadc.c **** 
1677:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1678:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHANNELS_P
1679:../Libraries/XMCLib/src/xmc_vadc.c ****   
1680:../Libraries/XMCLib/src/xmc_vadc.c ****   prio  = (uint32_t)config->channel_priority;
 3867              	 .loc 2 1680 0
 3868 000c 7B68     	 ldr r3,[r7,#4]
 3869 000e 1B7A     	 ldrb r3,[r3,#8]
 3870 0010 BB61     	 str r3,[r7,#24]
1681:../Libraries/XMCLib/src/xmc_vadc.c **** 
1682:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Priority channel */
1683:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign  = group_ptr->CHASS;
 3871              	 .loc 2 1683 0
 3872 0012 FB68     	 ldr r3,[r7,#12]
 3873 0014 D3F88830 	 ldr r3,[r3,#136]
 3874 0018 7B61     	 str r3,[r7,#20]
1684:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3875              	 .loc 2 1684 0
 3876 001a BB68     	 ldr r3,[r7,#8]
 3877 001c 0122     	 movs r2,#1
 3878 001e 02FA03F3 	 lsl r3,r2,r3
 3879 0022 DB43     	 mvns r3,r3
 3880 0024 7A69     	 ldr r2,[r7,#20]
 3881 0026 1340     	 ands r3,r3,r2
 3882 0028 7B61     	 str r3,[r7,#20]
1685:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign |= (uint32_t)(prio << ch_num);
 3883              	 .loc 2 1685 0
 3884 002a BB68     	 ldr r3,[r7,#8]
 3885 002c BA69     	 ldr r2,[r7,#24]
 3886 002e 02FA03F3 	 lsl r3,r2,r3
 3887 0032 7A69     	 ldr r2,[r7,#20]
 3888 0034 1343     	 orrs r3,r3,r2
 3889 0036 7B61     	 str r3,[r7,#20]
1686:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHASS = ch_assign;
 3890              	 .loc 2 1686 0
 3891 0038 FB68     	 ldr r3,[r7,#12]
 3892 003a 7A69     	 ldr r2,[r7,#20]
 3893 003c C3F88820 	 str r2,[r3,#136]
1687:../Libraries/XMCLib/src/xmc_vadc.c **** 
1688:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Alias channel */
1689:../Libraries/XMCLib/src/xmc_vadc.c ****   if (config->alias_channel >= (int32_t)0)
 3894              	 .loc 2 1689 0
 3895 0040 7B68     	 ldr r3,[r7,#4]
 3896 0042 5B7A     	 ldrb r3,[r3,#9]
 3897 0044 5BB2     	 sxtb r3,r3
 3898 0046 002B     	 cmp r3,#0
 3899 0048 29DB     	 blt .L159
1690:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1691:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)0;
 3900              	 .loc 2 1691 0
 3901 004a 0023     	 movs r3,#0
 3902 004c FB61     	 str r3,[r7,#28]
1692:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint32_t)1 == ch_num)
 3903              	 .loc 2 1692 0
 3904 004e BB68     	 ldr r3,[r7,#8]
 3905 0050 012B     	 cmp r3,#1
 3906 0052 0AD1     	 bne .L160
1693:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1694:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS1_Pos;
 3907              	 .loc 2 1694 0
 3908 0054 0823     	 movs r3,#8
 3909 0056 FB61     	 str r3,[r7,#28]
1695:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS1_Msk);
 3910              	 .loc 2 1695 0
 3911 0058 FB68     	 ldr r3,[r7,#12]
 3912 005a D3F8B030 	 ldr r3,[r3,#176]
 3913 005e 23F4F852 	 bic r2,r3,#7936
 3914 0062 FB68     	 ldr r3,[r7,#12]
 3915 0064 C3F8B020 	 str r2,[r3,#176]
 3916 0068 0CE0     	 b .L161
 3917              	.L160:
1696:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1697:../Libraries/XMCLib/src/xmc_vadc.c ****     else if ((uint32_t)0 == ch_num)
 3918              	 .loc 2 1697 0
 3919 006a BB68     	 ldr r3,[r7,#8]
 3920 006c 002B     	 cmp r3,#0
 3921 006e 09D1     	 bne .L161
1698:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1699:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS0_Pos;
 3922              	 .loc 2 1699 0
 3923 0070 0023     	 movs r3,#0
 3924 0072 FB61     	 str r3,[r7,#28]
1700:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS0_Msk);
 3925              	 .loc 2 1700 0
 3926 0074 FB68     	 ldr r3,[r7,#12]
 3927 0076 D3F8B030 	 ldr r3,[r3,#176]
 3928 007a 23F01F02 	 bic r2,r3,#31
 3929 007e FB68     	 ldr r3,[r7,#12]
 3930 0080 C3F8B020 	 str r2,[r3,#176]
 3931              	.L161:
1701:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1702:../Libraries/XMCLib/src/xmc_vadc.c **** 
1703:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ALIAS |= (uint32_t)(config->alias_channel << mask);
 3932              	 .loc 2 1703 0
 3933 0084 FB68     	 ldr r3,[r7,#12]
 3934 0086 D3F8B030 	 ldr r3,[r3,#176]
 3935 008a 7A68     	 ldr r2,[r7,#4]
 3936 008c 527A     	 ldrb r2,[r2,#9]
 3937 008e 51B2     	 sxtb r1,r2
 3938 0090 FA69     	 ldr r2,[r7,#28]
 3939 0092 01FA02F2 	 lsl r2,r1,r2
 3940 0096 1A43     	 orrs r2,r2,r3
 3941 0098 FB68     	 ldr r3,[r7,#12]
 3942 009a C3F8B020 	 str r2,[r3,#176]
 3943              	.L159:
1704:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1705:../Libraries/XMCLib/src/xmc_vadc.c **** 
1706:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFL |= config->bfl;
 3944              	 .loc 2 1706 0
 3945 009e FB68     	 ldr r3,[r7,#12]
 3946 00a0 D3F8C820 	 ldr r2,[r3,#200]
 3947 00a4 7B68     	 ldr r3,[r7,#4]
 3948 00a6 5B68     	 ldr r3,[r3,#4]
 3949 00a8 1A43     	 orrs r2,r2,r3
 3950 00aa FB68     	 ldr r3,[r7,#12]
 3951 00ac C3F8C820 	 str r2,[r3,#200]
1707:../Libraries/XMCLib/src/xmc_vadc.c **** 
1708:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
1709:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLC |= config->bflc;
1710:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1711:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the CHCTR register */
1712:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = config->chctr;
 3952              	 .loc 2 1712 0
 3953 00b0 7B68     	 ldr r3,[r7,#4]
 3954 00b2 1968     	 ldr r1,[r3]
 3955 00b4 FB68     	 ldr r3,[r7,#12]
 3956 00b6 BA68     	 ldr r2,[r7,#8]
 3957 00b8 8032     	 adds r2,r2,#128
 3958 00ba 43F82210 	 str r1,[r3,r2,lsl#2]
1713:../Libraries/XMCLib/src/xmc_vadc.c **** 
1714:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3959              	 .loc 2 1714 0
 3960 00be 2437     	 adds r7,r7,#36
 3961              	 .cfi_def_cfa_offset 4
 3962 00c0 BD46     	 mov sp,r7
 3963              	 .cfi_def_cfa_register 13
 3964              	 
 3965 00c2 5DF8047B 	 ldr r7,[sp],#4
 3966              	 .cfi_restore 7
 3967              	 .cfi_def_cfa_offset 0
 3968 00c6 7047     	 bx lr
 3969              	 .cfi_endproc
 3970              	.LFE306:
 3972              	 .section .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds,"ax",%progbits
 3973              	 .align 2
 3974              	 .global XMC_VADC_GROUP_ChannelIsResultOutOfBounds
 3975              	 .thumb
 3976              	 .thumb_func
 3978              	XMC_VADC_GROUP_ChannelIsResultOutOfBounds:
 3979              	.LFB307:
1715:../Libraries/XMCLib/src/xmc_vadc.c **** 
1716:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine whether input to a channel has violated boundary conditions */
1717:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
1718:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3980              	 .loc 2 1718 0
 3981              	 .cfi_startproc
 3982              	 
 3983              	 
 3984              	 
 3985 0000 80B4     	 push {r7}
 3986              	 .cfi_def_cfa_offset 4
 3987              	 .cfi_offset 7,-4
 3988 0002 87B0     	 sub sp,sp,#28
 3989              	 .cfi_def_cfa_offset 32
 3990 0004 00AF     	 add r7,sp,#0
 3991              	 .cfi_def_cfa_register 7
 3992 0006 7860     	 str r0,[r7,#4]
 3993 0008 3960     	 str r1,[r7]
1719:../Libraries/XMCLib/src/xmc_vadc.c ****   bool retval;
1720:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    chctr;
1721:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    ceflag;
1722:../Libraries/XMCLib/src/xmc_vadc.c **** 
1723:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1724:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Channel Number",
1725:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1726:../Libraries/XMCLib/src/xmc_vadc.c **** 
1727:../Libraries/XMCLib/src/xmc_vadc.c ****   retval = (bool)false;
 3994              	 .loc 2 1727 0
 3995 000a 0023     	 movs r3,#0
 3996 000c FB75     	 strb r3,[r7,#23]
1728:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1729:../Libraries/XMCLib/src/xmc_vadc.c ****     Check if the Channel event is configured to be generated in the event of
1730:../Libraries/XMCLib/src/xmc_vadc.c ****     boundary violation and if affirmative, check if the channel event is set.
1731:../Libraries/XMCLib/src/xmc_vadc.c ****   */
1732:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CHEVMODE for requested channel */
1733:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 3997              	 .loc 2 1733 0
 3998 000e 7B68     	 ldr r3,[r7,#4]
 3999 0010 3A68     	 ldr r2,[r7]
 4000 0012 8032     	 adds r2,r2,#128
 4001 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4002 0018 3B61     	 str r3,[r7,#16]
1734:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
 4003              	 .loc 2 1734 0
 4004 001a 3B69     	 ldr r3,[r7,#16]
 4005 001c 1B0A     	 lsrs r3,r3,#8
 4006 001e 03F00303 	 and r3,r3,#3
 4007 0022 3B61     	 str r3,[r7,#16]
1735:../Libraries/XMCLib/src/xmc_vadc.c **** 
1736:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CEFLAG for the requested channel */
1737:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = group_ptr->CEFLAG;
 4008              	 .loc 2 1737 0
 4009 0024 7B68     	 ldr r3,[r7,#4]
 4010 0026 D3F88031 	 ldr r3,[r3,#384]
 4011 002a FB60     	 str r3,[r7,#12]
1738:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
 4012              	 .loc 2 1738 0
 4013 002c 3B68     	 ldr r3,[r7]
 4014 002e 0122     	 movs r2,#1
 4015 0030 02FA03F3 	 lsl r3,r2,r3
 4016 0034 FA68     	 ldr r2,[r7,#12]
 4017 0036 1340     	 ands r3,r3,r2
 4018 0038 FB60     	 str r3,[r7,#12]
1739:../Libraries/XMCLib/src/xmc_vadc.c **** 
1740:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Check what was the channel event generation criteria */
1741:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (( (uint32_t)XMC_VADC_CHANNEL_EVGEN_INBOUND == chctr) \
 4019              	 .loc 2 1741 0
 4020 003a 3B69     	 ldr r3,[r7,#16]
 4021 003c 012B     	 cmp r3,#1
 4022 003e 02D0     	 beq .L163
1742:../Libraries/XMCLib/src/xmc_vadc.c ****       || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4023              	 .loc 2 1742 0
 4024 0040 3B69     	 ldr r3,[r7,#16]
 4025 0042 022B     	 cmp r3,#2
 4026 0044 04D1     	 bne .L164
 4027              	.L163:
 4028              	 .loc 2 1742 0 is_stmt 0 discriminator 1
 4029 0046 FB68     	 ldr r3,[r7,#12]
 4030 0048 002B     	 cmp r3,#0
 4031 004a 01D0     	 beq .L164
1743:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1744:../Libraries/XMCLib/src/xmc_vadc.c ****     retval = (bool)true;
 4032              	 .loc 2 1744 0 is_stmt 1
 4033 004c 0123     	 movs r3,#1
 4034 004e FB75     	 strb r3,[r7,#23]
 4035              	.L164:
1745:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1746:../Libraries/XMCLib/src/xmc_vadc.c **** 
1747:../Libraries/XMCLib/src/xmc_vadc.c ****   return retval;
 4036              	 .loc 2 1747 0
 4037 0050 FB7D     	 ldrb r3,[r7,#23]
1748:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4038              	 .loc 2 1748 0
 4039 0052 1846     	 mov r0,r3
 4040 0054 1C37     	 adds r7,r7,#28
 4041              	 .cfi_def_cfa_offset 4
 4042 0056 BD46     	 mov sp,r7
 4043              	 .cfi_def_cfa_register 13
 4044              	 
 4045 0058 5DF8047B 	 ldr r7,[sp],#4
 4046              	 .cfi_restore 7
 4047              	 .cfi_def_cfa_offset 0
 4048 005c 7047     	 bx lr
 4049              	 .cfi_endproc
 4050              	.LFE307:
 4052 005e 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetInputReference,"ax",%progbits
 4053              	 .align 2
 4054              	 .global XMC_VADC_GROUP_ChannelSetInputReference
 4055              	 .thumb
 4056              	 .thumb_func
 4058              	XMC_VADC_GROUP_ChannelSetInputReference:
 4059              	.LFB308:
1749:../Libraries/XMCLib/src/xmc_vadc.c **** 
1750:../Libraries/XMCLib/src/xmc_vadc.c **** /* Set a reference voltage for conversion */
1751:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr,
1752:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1753:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const XMC_VADC_CHANNEL_REF_t ref)
1754:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4060              	 .loc 2 1754 0
 4061              	 .cfi_startproc
 4062              	 
 4063              	 
 4064              	 
 4065 0000 80B4     	 push {r7}
 4066              	 .cfi_def_cfa_offset 4
 4067              	 .cfi_offset 7,-4
 4068 0002 87B0     	 sub sp,sp,#28
 4069              	 .cfi_def_cfa_offset 32
 4070 0004 00AF     	 add r7,sp,#0
 4071              	 .cfi_def_cfa_register 7
 4072 0006 F860     	 str r0,[r7,#12]
 4073 0008 B960     	 str r1,[r7,#8]
 4074 000a 1346     	 mov r3,r2
 4075 000c FB71     	 strb r3,[r7,#7]
1755:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1756:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1757:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Channel Number", ((ch_num) < XMC_VADC_N
1758:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Voltage Reference", ((ref)<= XMC_VADC_C
1759:../Libraries/XMCLib/src/xmc_vadc.c **** 
1760:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4076              	 .loc 2 1760 0
 4077 000e FB68     	 ldr r3,[r7,#12]
 4078 0010 BA68     	 ldr r2,[r7,#8]
 4079 0012 8032     	 adds r2,r2,#128
 4080 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4081 0018 7B61     	 str r3,[r7,#20]
1761:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4082              	 .loc 2 1761 0
 4083 001a 7B69     	 ldr r3,[r7,#20]
 4084 001c 23F40063 	 bic r3,r3,#2048
 4085 0020 7B61     	 str r3,[r7,#20]
1762:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)ref <<  VADC_G_CHCTR_REFSEL_Pos);
 4086              	 .loc 2 1762 0
 4087 0022 FB79     	 ldrb r3,[r7,#7]
 4088 0024 DB02     	 lsls r3,r3,#11
 4089 0026 7A69     	 ldr r2,[r7,#20]
 4090 0028 1343     	 orrs r3,r3,r2
 4091 002a 7B61     	 str r3,[r7,#20]
1763:../Libraries/XMCLib/src/xmc_vadc.c **** 
1764:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4092              	 .loc 2 1764 0
 4093 002c FB68     	 ldr r3,[r7,#12]
 4094 002e BA68     	 ldr r2,[r7,#8]
 4095 0030 8032     	 adds r2,r2,#128
 4096 0032 7969     	 ldr r1,[r7,#20]
 4097 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1765:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4098              	 .loc 2 1765 0
 4099 0038 1C37     	 adds r7,r7,#28
 4100              	 .cfi_def_cfa_offset 4
 4101 003a BD46     	 mov sp,r7
 4102              	 .cfi_def_cfa_register 13
 4103              	 
 4104 003c 5DF8047B 	 ldr r7,[sp],#4
 4105              	 .cfi_restore 7
 4106              	 .cfi_def_cfa_offset 0
 4107 0040 7047     	 bx lr
 4108              	 .cfi_endproc
 4109              	.LFE308:
 4111 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetResultRegister,"ax",%progbits
 4112              	 .align 2
 4113              	 .global XMC_VADC_GROUP_ChannelSetResultRegister
 4114              	 .thumb
 4115              	 .thumb_func
 4117              	XMC_VADC_GROUP_ChannelSetResultRegister:
 4118              	.LFB309:
1766:../Libraries/XMCLib/src/xmc_vadc.c **** 
1767:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 16 registers for storing the channel result */
1768:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
1769:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1770:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t result_reg_num)
1771:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4119              	 .loc 2 1771 0
 4120              	 .cfi_startproc
 4121              	 
 4122              	 
 4123              	 
 4124 0000 80B4     	 push {r7}
 4125              	 .cfi_def_cfa_offset 4
 4126              	 .cfi_offset 7,-4
 4127 0002 87B0     	 sub sp,sp,#28
 4128              	 .cfi_def_cfa_offset 32
 4129 0004 00AF     	 add r7,sp,#0
 4130              	 .cfi_def_cfa_register 7
 4131 0006 F860     	 str r0,[r7,#12]
 4132 0008 B960     	 str r1,[r7,#8]
 4133 000a 7A60     	 str r2,[r7,#4]
1772:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1773:../Libraries/XMCLib/src/xmc_vadc.c **** 
1774:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1775:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Channel Number",
1776:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1777:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Result Register",
1778:../Libraries/XMCLib/src/xmc_vadc.c ****              ((result_reg_num) < XMC_VADC_NUM_RESULT_REGISTERS))
1779:../Libraries/XMCLib/src/xmc_vadc.c **** 
1780:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4134              	 .loc 2 1780 0
 4135 000c FB68     	 ldr r3,[r7,#12]
 4136 000e BA68     	 ldr r2,[r7,#8]
 4137 0010 8032     	 adds r2,r2,#128
 4138 0012 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4139 0016 7B61     	 str r3,[r7,#20]
1781:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4140              	 .loc 2 1781 0
 4141 0018 7B69     	 ldr r3,[r7,#20]
 4142 001a 23F47023 	 bic r3,r3,#983040
 4143 001e 7B61     	 str r3,[r7,#20]
1782:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)(result_reg_num <<  VADC_G_CHCTR_RESREG_Pos);
 4144              	 .loc 2 1782 0
 4145 0020 7B68     	 ldr r3,[r7,#4]
 4146 0022 1B04     	 lsls r3,r3,#16
 4147 0024 7A69     	 ldr r2,[r7,#20]
 4148 0026 1343     	 orrs r3,r3,r2
 4149 0028 7B61     	 str r3,[r7,#20]
1783:../Libraries/XMCLib/src/xmc_vadc.c **** 
1784:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4150              	 .loc 2 1784 0
 4151 002a FB68     	 ldr r3,[r7,#12]
 4152 002c BA68     	 ldr r2,[r7,#8]
 4153 002e 8032     	 adds r2,r2,#128
 4154 0030 7969     	 ldr r1,[r7,#20]
 4155 0032 43F82210 	 str r1,[r3,r2,lsl#2]
1785:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4156              	 .loc 2 1785 0
 4157 0036 1C37     	 adds r7,r7,#28
 4158              	 .cfi_def_cfa_offset 4
 4159 0038 BD46     	 mov sp,r7
 4160              	 .cfi_def_cfa_register 13
 4161              	 
 4162 003a 5DF8047B 	 ldr r7,[sp],#4
 4163              	 .cfi_restore 7
 4164              	 .cfi_def_cfa_offset 0
 4165 003e 7047     	 bx lr
 4166              	 .cfi_endproc
 4167              	.LFE309:
 4169              	 .section .text.XMC_VADC_GROUP_ChannelSetIclass,"ax",%progbits
 4170              	 .align 2
 4171              	 .global XMC_VADC_GROUP_ChannelSetIclass
 4172              	 .thumb
 4173              	 .thumb_func
 4175              	XMC_VADC_GROUP_ChannelSetIclass:
 4176              	.LFB310:
1786:../Libraries/XMCLib/src/xmc_vadc.c **** 
1787:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 4 class conversion */
1788:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetIclass(XMC_VADC_GROUP_t *const group_ptr,
1789:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const uint32_t ch_num,
1790:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const XMC_VADC_CHANNEL_CONV_t conversion_class)
1791:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4177              	 .loc 2 1791 0
 4178              	 .cfi_startproc
 4179              	 
 4180              	 
 4181              	 
 4182 0000 80B4     	 push {r7}
 4183              	 .cfi_def_cfa_offset 4
 4184              	 .cfi_offset 7,-4
 4185 0002 87B0     	 sub sp,sp,#28
 4186              	 .cfi_def_cfa_offset 32
 4187 0004 00AF     	 add r7,sp,#0
 4188              	 .cfi_def_cfa_register 7
 4189 0006 F860     	 str r0,[r7,#12]
 4190 0008 B960     	 str r1,[r7,#8]
 4191 000a 1346     	 mov r3,r2
 4192 000c FB71     	 strb r3,[r7,#7]
1792:../Libraries/XMCLib/src/xmc_vadc.c **** 
1793:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1794:../Libraries/XMCLib/src/xmc_vadc.c **** 
1795:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1796:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Channel Number",
1797:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1798:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong input class ",
1799:../Libraries/XMCLib/src/xmc_vadc.c ****              (XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1 >= conversion_class))
1800:../Libraries/XMCLib/src/xmc_vadc.c **** 
1801:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4193              	 .loc 2 1801 0
 4194 000e FB68     	 ldr r3,[r7,#12]
 4195 0010 BA68     	 ldr r2,[r7,#8]
 4196 0012 8032     	 adds r2,r2,#128
 4197 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4198 0018 7B61     	 str r3,[r7,#20]
1802:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_ICLSEL_Msk);
 4199              	 .loc 2 1802 0
 4200 001a 7B69     	 ldr r3,[r7,#20]
 4201 001c 23F00303 	 bic r3,r3,#3
 4202 0020 7B61     	 str r3,[r7,#20]
1803:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
 4203              	 .loc 2 1803 0
 4204 0022 FB79     	 ldrb r3,[r7,#7]
 4205 0024 7A69     	 ldr r2,[r7,#20]
 4206 0026 1343     	 orrs r3,r3,r2
 4207 0028 7B61     	 str r3,[r7,#20]
1804:../Libraries/XMCLib/src/xmc_vadc.c **** 
1805:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4208              	 .loc 2 1805 0
 4209 002a FB68     	 ldr r3,[r7,#12]
 4210 002c BA68     	 ldr r2,[r7,#8]
 4211 002e 8032     	 adds r2,r2,#128
 4212 0030 7969     	 ldr r1,[r7,#20]
 4213 0032 43F82210 	 str r1,[r3,r2,lsl#2]
1806:../Libraries/XMCLib/src/xmc_vadc.c **** 
1807:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4214              	 .loc 2 1807 0
 4215 0036 1C37     	 adds r7,r7,#28
 4216              	 .cfi_def_cfa_offset 4
 4217 0038 BD46     	 mov sp,r7
 4218              	 .cfi_def_cfa_register 13
 4219              	 
 4220 003a 5DF8047B 	 ldr r7,[sp],#4
 4221              	 .cfi_restore 7
 4222              	 .cfi_def_cfa_offset 0
 4223 003e 7047     	 bx lr
 4224              	 .cfi_endproc
 4225              	.LFE310:
 4227              	 .section .text.XMC_VADC_GROUP_ChannelGetResultRegister,"ax",%progbits
 4228              	 .align 2
 4229              	 .global XMC_VADC_GROUP_ChannelGetResultRegister
 4230              	 .thumb
 4231              	 .thumb_func
 4233              	XMC_VADC_GROUP_ChannelGetResultRegister:
 4234              	.LFB311:
1808:../Libraries/XMCLib/src/xmc_vadc.c **** 
1809:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result register bound with specified channel */
1810:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
1811:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4235              	 .loc 2 1811 0
 4236              	 .cfi_startproc
 4237              	 
 4238              	 
 4239              	 
 4240 0000 80B4     	 push {r7}
 4241              	 .cfi_def_cfa_offset 4
 4242              	 .cfi_offset 7,-4
 4243 0002 85B0     	 sub sp,sp,#20
 4244              	 .cfi_def_cfa_offset 24
 4245 0004 00AF     	 add r7,sp,#0
 4246              	 .cfi_def_cfa_register 7
 4247 0006 7860     	 str r0,[r7,#4]
 4248 0008 3960     	 str r1,[r7]
1812:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t resreg;
1813:../Libraries/XMCLib/src/xmc_vadc.c **** 
1814:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1815:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Channel Number",
1816:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1817:../Libraries/XMCLib/src/xmc_vadc.c **** 
1818:../Libraries/XMCLib/src/xmc_vadc.c ****   resreg = (uint8_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESREG_Msk) >> VADC_G_CHCTR
 4249              	 .loc 2 1818 0
 4250 000a 7B68     	 ldr r3,[r7,#4]
 4251 000c 3A68     	 ldr r2,[r7]
 4252 000e 8032     	 adds r2,r2,#128
 4253 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4254 0014 03F47023 	 and r3,r3,#983040
 4255 0018 1B0C     	 lsrs r3,r3,#16
 4256 001a FB73     	 strb r3,[r7,#15]
1819:../Libraries/XMCLib/src/xmc_vadc.c **** 
1820:../Libraries/XMCLib/src/xmc_vadc.c ****   return resreg;
 4257              	 .loc 2 1820 0
 4258 001c FB7B     	 ldrb r3,[r7,#15]
1821:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4259              	 .loc 2 1821 0
 4260 001e 1846     	 mov r0,r3
 4261 0020 1437     	 adds r7,r7,#20
 4262              	 .cfi_def_cfa_offset 4
 4263 0022 BD46     	 mov sp,r7
 4264              	 .cfi_def_cfa_register 13
 4265              	 
 4266 0024 5DF8047B 	 ldr r7,[sp],#4
 4267              	 .cfi_restore 7
 4268              	 .cfi_def_cfa_offset 0
 4269 0028 7047     	 bx lr
 4270              	 .cfi_endproc
 4271              	.LFE311:
 4273 002a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelTriggerEvent,"ax",%progbits
 4274              	 .align 2
 4275              	 .global XMC_VADC_GROUP_ChannelTriggerEvent
 4276              	 .thumb
 4277              	 .thumb_func
 4279              	XMC_VADC_GROUP_ChannelTriggerEvent:
 4280              	.LFB312:
1822:../Libraries/XMCLib/src/xmc_vadc.c **** 
1823:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to manually assert channel event */
1824:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num)
1825:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4281              	 .loc 2 1825 0
 4282              	 .cfi_startproc
 4283              	 
 4284              	 
 4285              	 
 4286 0000 80B4     	 push {r7}
 4287              	 .cfi_def_cfa_offset 4
 4288              	 .cfi_offset 7,-4
 4289 0002 85B0     	 sub sp,sp,#20
 4290              	 .cfi_def_cfa_offset 24
 4291 0004 00AF     	 add r7,sp,#0
 4292              	 .cfi_def_cfa_register 7
 4293 0006 7860     	 str r0,[r7,#4]
 4294 0008 3960     	 str r1,[r7]
1826:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
1827:../Libraries/XMCLib/src/xmc_vadc.c **** 
1828:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1829:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CH
1830:../Libraries/XMCLib/src/xmc_vadc.c **** 
1831:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag  = group_ptr->CEFLAG;
 4295              	 .loc 2 1831 0
 4296 000a 7B68     	 ldr r3,[r7,#4]
 4297 000c D3F88031 	 ldr r3,[r3,#384]
 4298 0010 FB60     	 str r3,[r7,#12]
1832:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4299              	 .loc 2 1832 0
 4300 0012 3B68     	 ldr r3,[r7]
 4301 0014 0122     	 movs r2,#1
 4302 0016 02FA03F3 	 lsl r3,r2,r3
 4303 001a FA68     	 ldr r2,[r7,#12]
 4304 001c 1343     	 orrs r3,r3,r2
 4305 001e FB60     	 str r3,[r7,#12]
1833:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 4306              	 .loc 2 1833 0
 4307 0020 7B68     	 ldr r3,[r7,#4]
 4308 0022 FA68     	 ldr r2,[r7,#12]
 4309 0024 C3F88021 	 str r2,[r3,#384]
1834:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4310              	 .loc 2 1834 0
 4311 0028 1437     	 adds r7,r7,#20
 4312              	 .cfi_def_cfa_offset 4
 4313 002a BD46     	 mov sp,r7
 4314              	 .cfi_def_cfa_register 13
 4315              	 
 4316 002c 5DF8047B 	 ldr r7,[sp],#4
 4317              	 .cfi_restore 7
 4318              	 .cfi_def_cfa_offset 0
 4319 0030 7047     	 bx lr
 4320              	 .cfi_endproc
 4321              	.LFE312:
 4323 0032 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode,"ax",%progbits
 4324              	 .align 2
 4325              	 .global XMC_VADC_GROUP_ChannelSetEventInterruptNode
 4326              	 .thumb
 4327              	 .thumb_func
 4329              	XMC_VADC_GROUP_ChannelSetEventInterruptNode:
 4330              	.LFB313:
1835:../Libraries/XMCLib/src/xmc_vadc.c **** 
1836:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind channel event with a service request (NVIC Node) */
1837:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1838:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1839:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_SR_t sr)
1840:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4331              	 .loc 2 1840 0
 4332              	 .cfi_startproc
 4333              	 
 4334              	 
 4335              	 
 4336 0000 80B4     	 push {r7}
 4337              	 .cfi_def_cfa_offset 4
 4338              	 .cfi_offset 7,-4
 4339 0002 87B0     	 sub sp,sp,#28
 4340              	 .cfi_def_cfa_offset 32
 4341 0004 00AF     	 add r7,sp,#0
 4342              	 .cfi_def_cfa_register 7
 4343 0006 F860     	 str r0,[r7,#12]
 4344 0008 B960     	 str r1,[r7,#8]
 4345 000a 1346     	 mov r3,r2
 4346 000c FB71     	 strb r3,[r7,#7]
1841:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1842:../Libraries/XMCLib/src/xmc_vadc.c **** 
1843:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROU
1844:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Channel Number",
1845:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1846:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_VAD
1847:../Libraries/XMCLib/src/xmc_vadc.c **** 
1848:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask  = group_ptr->CEVNP0;
 4347              	 .loc 2 1848 0
 4348 000e FB68     	 ldr r3,[r7,#12]
 4349 0010 D3F8A031 	 ldr r3,[r3,#416]
 4350 0014 7B61     	 str r3,[r7,#20]
1849:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4351              	 .loc 2 1849 0
 4352 0016 BB68     	 ldr r3,[r7,#8]
 4353 0018 9B00     	 lsls r3,r3,#2
 4354 001a 1A46     	 mov r2,r3
 4355 001c 0F23     	 movs r3,#15
 4356 001e 9340     	 lsls r3,r3,r2
 4357 0020 DB43     	 mvns r3,r3
 4358 0022 7A69     	 ldr r2,[r7,#20]
 4359 0024 1340     	 ands r3,r3,r2
 4360 0026 7B61     	 str r3,[r7,#20]
1850:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4361              	 .loc 2 1850 0
 4362 0028 FB79     	 ldrb r3,[r7,#7]
 4363 002a BA68     	 ldr r2,[r7,#8]
 4364 002c 9200     	 lsls r2,r2,#2
 4365 002e 9340     	 lsls r3,r3,r2
 4366 0030 7A69     	 ldr r2,[r7,#20]
 4367 0032 1343     	 orrs r3,r3,r2
 4368 0034 7B61     	 str r3,[r7,#20]
1851:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
 4369              	 .loc 2 1851 0
 4370 0036 FB68     	 ldr r3,[r7,#12]
 4371 0038 7A69     	 ldr r2,[r7,#20]
 4372 003a C3F8A021 	 str r2,[r3,#416]
1852:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4373              	 .loc 2 1852 0
 4374 003e 1C37     	 adds r7,r7,#28
 4375              	 .cfi_def_cfa_offset 4
 4376 0040 BD46     	 mov sp,r7
 4377              	 .cfi_def_cfa_register 13
 4378              	 
 4379 0042 5DF8047B 	 ldr r7,[sp],#4
 4380              	 .cfi_restore 7
 4381              	 .cfi_def_cfa_offset 0
 4382 0046 7047     	 bx lr
 4383              	 .cfi_endproc
 4384              	.LFE313:
 4386              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria,"ax",%progbits
 4387              	 .align 2
 4388              	 .global XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
 4389              	 .thumb
 4390              	 .thumb_func
 4392              	XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:
 4393              	.LFB314:
1853:../Libraries/XMCLib/src/xmc_vadc.c **** 
1854:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure conditions for generation of channel event */
1855:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria( XMC_VADC_GROUP_t *const group_ptr,
1856:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const uint32_t ch_num,
1857:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const XMC_VADC_CHANNEL_EVGEN_t criteria)
1858:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4394              	 .loc 2 1858 0
 4395              	 .cfi_startproc
 4396              	 
 4397              	 
 4398              	 
 4399 0000 80B4     	 push {r7}
 4400              	 .cfi_def_cfa_offset 4
 4401              	 .cfi_offset 7,-4
 4402 0002 87B0     	 sub sp,sp,#28
 4403              	 .cfi_def_cfa_offset 32
 4404 0004 00AF     	 add r7,sp,#0
 4405              	 .cfi_def_cfa_register 7
 4406 0006 F860     	 str r0,[r7,#12]
 4407 0008 B960     	 str r1,[r7,#8]
 4408 000a 1346     	 mov r3,r2
 4409 000c FB71     	 strb r3,[r7,#7]
1859:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1860:../Libraries/XMCLib/src/xmc_vadc.c **** 
1861:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Group Pointer", XMC_VADC_CHECK_GR
1862:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Channel Number",
1863:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1864:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Event Generation Criteria",
1865:../Libraries/XMCLib/src/xmc_vadc.c ****              ((criteria) <= XMC_VADC_CHANNEL_EVGEN_ALWAYS))
1866:../Libraries/XMCLib/src/xmc_vadc.c **** 
1867:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4410              	 .loc 2 1867 0
 4411 000e FB68     	 ldr r3,[r7,#12]
 4412 0010 BA68     	 ldr r2,[r7,#8]
 4413 0012 8032     	 adds r2,r2,#128
 4414 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4415 0018 7B61     	 str r3,[r7,#20]
1868:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 4416              	 .loc 2 1868 0
 4417 001a 7B69     	 ldr r3,[r7,#20]
 4418 001c 23F44073 	 bic r3,r3,#768
 4419 0020 7B61     	 str r3,[r7,#20]
1869:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)criteria << VADC_G_CHCTR_CHEVMODE_Pos);
 4420              	 .loc 2 1869 0
 4421 0022 FB79     	 ldrb r3,[r7,#7]
 4422 0024 1B02     	 lsls r3,r3,#8
 4423 0026 7A69     	 ldr r2,[r7,#20]
 4424 0028 1343     	 orrs r3,r3,r2
 4425 002a 7B61     	 str r3,[r7,#20]
1870:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4426              	 .loc 2 1870 0
 4427 002c FB68     	 ldr r3,[r7,#12]
 4428 002e BA68     	 ldr r2,[r7,#8]
 4429 0030 8032     	 adds r2,r2,#128
 4430 0032 7969     	 ldr r1,[r7,#20]
 4431 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1871:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4432              	 .loc 2 1871 0
 4433 0038 1C37     	 adds r7,r7,#28
 4434              	 .cfi_def_cfa_offset 4
 4435 003a BD46     	 mov sp,r7
 4436              	 .cfi_def_cfa_register 13
 4437              	 
 4438 003c 5DF8047B 	 ldr r7,[sp],#4
 4439              	 .cfi_restore 7
 4440              	 .cfi_def_cfa_offset 0
 4441 0040 7047     	 bx lr
 4442              	 .cfi_endproc
 4443              	.LFE314:
 4445 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetBoundarySelection,"ax",%progbits
 4446              	 .align 2
 4447              	 .global XMC_VADC_GROUP_ChannelSetBoundarySelection
 4448              	 .thumb
 4449              	 .thumb_func
 4451              	XMC_VADC_GROUP_ChannelSetBoundarySelection:
 4452              	.LFB315:
1872:../Libraries/XMCLib/src/xmc_vadc.c **** 
1873:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure the boundary selection */
1874:../Libraries/XMCLib/src/xmc_vadc.c **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
1875:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1876:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
1877:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_CHANNEL_BOUNDARY_t selection)
1878:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4453              	 .loc 2 1878 0
 4454              	 .cfi_startproc
 4455              	 
 4456              	 
 4457              	 
 4458 0000 80B4     	 push {r7}
 4459              	 .cfi_def_cfa_offset 4
 4460              	 .cfi_offset 7,-4
 4461 0002 85B0     	 sub sp,sp,#20
 4462              	 .cfi_def_cfa_offset 24
 4463 0004 00AF     	 add r7,sp,#0
 4464              	 .cfi_def_cfa_register 7
 4465 0006 F860     	 str r0,[r7,#12]
 4466 0008 B960     	 str r1,[r7,#8]
 4467 000a 1146     	 mov r1,r2
 4468 000c 1A46     	 mov r2,r3
 4469 000e 0B46     	 mov r3,r1
 4470 0010 FB71     	 strb r3,[r7,#7]
 4471 0012 1346     	 mov r3,r2
 4472 0014 BB71     	 strb r3,[r7,#6]
1879:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
1880:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Channel Number",
1881:../Libraries/XMCLib/src/xmc_vadc.c ****               ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1882:../Libraries/XMCLib/src/xmc_vadc.c **** 
1883:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_BNDSELL_Msk << boundary_sel);
 4473              	 .loc 2 1883 0
 4474 0016 FB68     	 ldr r3,[r7,#12]
 4475 0018 BA68     	 ldr r2,[r7,#8]
 4476 001a 8032     	 adds r2,r2,#128
 4477 001c 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4478 0020 FB79     	 ldrb r3,[r7,#7]
 4479 0022 3021     	 movs r1,#48
 4480 0024 01FA03F3 	 lsl r3,r1,r3
 4481 0028 DB43     	 mvns r3,r3
 4482 002a 02EA0301 	 and r1,r2,r3
 4483 002e FB68     	 ldr r3,[r7,#12]
 4484 0030 BA68     	 ldr r2,[r7,#8]
 4485 0032 8032     	 adds r2,r2,#128
 4486 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1884:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4487              	 .loc 2 1884 0
 4488 0038 FB68     	 ldr r3,[r7,#12]
 4489 003a BA68     	 ldr r2,[r7,#8]
 4490 003c 8032     	 adds r2,r2,#128
 4491 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4492 0042 BA79     	 ldrb r2,[r7,#6]
 4493 0044 F979     	 ldrb r1,[r7,#7]
 4494 0046 0431     	 adds r1,r1,#4
 4495 0048 8A40     	 lsls r2,r2,r1
 4496 004a 43EA0201 	 orr r1,r3,r2
 4497 004e FB68     	 ldr r3,[r7,#12]
 4498 0050 BA68     	 ldr r2,[r7,#8]
 4499 0052 8032     	 adds r2,r2,#128
 4500 0054 43F82210 	 str r1,[r3,r2,lsl#2]
1885:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4501              	 .loc 2 1885 0
 4502 0058 1437     	 adds r7,r7,#20
 4503              	 .cfi_def_cfa_offset 4
 4504 005a BD46     	 mov sp,r7
 4505              	 .cfi_def_cfa_register 13
 4506              	 
 4507 005c 5DF8047B 	 ldr r7,[sp],#4
 4508              	 .cfi_restore 7
 4509              	 .cfi_def_cfa_offset 0
 4510 0060 7047     	 bx lr
 4511              	 .cfi_endproc
 4512              	.LFE315:
 4514 0062 00BF     	 .section .text.XMC_VADC_GROUP_AddResultToFifo,"ax",%progbits
 4515              	 .align 2
 4516              	 .global XMC_VADC_GROUP_AddResultToFifo
 4517              	 .thumb
 4518              	 .thumb_func
 4520              	XMC_VADC_GROUP_AddResultToFifo:
 4521              	.LFB316:
1886:../Libraries/XMCLib/src/xmc_vadc.c **** 
1887:../Libraries/XMCLib/src/xmc_vadc.c **** /* Make the specified result register part of Result FIFO */ 
1888:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg)
1889:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4522              	 .loc 2 1889 0
 4523              	 .cfi_startproc
 4524              	 
 4525              	 
 4526              	 
 4527 0000 80B4     	 push {r7}
 4528              	 .cfi_def_cfa_offset 4
 4529              	 .cfi_offset 7,-4
 4530 0002 85B0     	 sub sp,sp,#20
 4531              	 .cfi_def_cfa_offset 24
 4532 0004 00AF     	 add r7,sp,#0
 4533              	 .cfi_def_cfa_register 7
 4534 0006 7860     	 str r0,[r7,#4]
 4535 0008 3960     	 str r1,[r7]
1890:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t fen;
1891:../Libraries/XMCLib/src/xmc_vadc.c **** 
1892:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1893:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESU
1894:../Libraries/XMCLib/src/xmc_vadc.c **** 
1895:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract and clear the FIFO enable field */
1896:../Libraries/XMCLib/src/xmc_vadc.c ****   fen = group_ptr->RCR[res_reg];
 4536              	 .loc 2 1896 0
 4537 000a 7B68     	 ldr r3,[r7,#4]
 4538 000c 3A68     	 ldr r2,[r7]
 4539 000e A032     	 adds r2,r2,#160
 4540 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4541 0014 FB60     	 str r3,[r7,#12]
1897:../Libraries/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 4542              	 .loc 2 1897 0
 4543 0016 FB68     	 ldr r3,[r7,#12]
 4544 0018 23F0C063 	 bic r3,r3,#100663296
 4545 001c FB60     	 str r3,[r7,#12]
1898:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set this register up as a FIFO member */
1899:../Libraries/XMCLib/src/xmc_vadc.c ****   fen |= (uint32_t)((uint32_t)1 << VADC_G_RCR_FEN_Pos);
 4546              	 .loc 2 1899 0
 4547 001e FB68     	 ldr r3,[r7,#12]
 4548 0020 43F00073 	 orr r3,r3,#33554432
 4549 0024 FB60     	 str r3,[r7,#12]
1900:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
 4550              	 .loc 2 1900 0
 4551 0026 7B68     	 ldr r3,[r7,#4]
 4552 0028 3A68     	 ldr r2,[r7]
 4553 002a A032     	 adds r2,r2,#160
 4554 002c F968     	 ldr r1,[r7,#12]
 4555 002e 43F82210 	 str r1,[r3,r2,lsl#2]
1901:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4556              	 .loc 2 1901 0
 4557 0032 1437     	 adds r7,r7,#20
 4558              	 .cfi_def_cfa_offset 4
 4559 0034 BD46     	 mov sp,r7
 4560              	 .cfi_def_cfa_register 13
 4561              	 
 4562 0036 5DF8047B 	 ldr r7,[sp],#4
 4563              	 .cfi_restore 7
 4564              	 .cfi_def_cfa_offset 0
 4565 003a 7047     	 bx lr
 4566              	 .cfi_endproc
 4567              	.LFE316:
 4569              	 .section .text.XMC_VADC_GROUP_SetResultFastCompareValue,"ax",%progbits
 4570              	 .align 2
 4571              	 .global XMC_VADC_GROUP_SetResultFastCompareValue
 4572              	 .thumb
 4573              	 .thumb_func
 4575              	XMC_VADC_GROUP_SetResultFastCompareValue:
 4576              	.LFB317:
1902:../Libraries/XMCLib/src/xmc_vadc.c **** 
1903:../Libraries/XMCLib/src/xmc_vadc.c **** 
1904:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1905:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultFastCompareValue(XMC_VADC_GROUP_t *const group_ptr,
1906:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const uint32_t res_reg,
1907:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const XMC_VADC_RESULT_SIZE_t compare_val)
1908:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4577              	 .loc 2 1908 0
 4578              	 .cfi_startproc
 4579              	 
 4580              	 
 4581              	 
 4582 0000 80B4     	 push {r7}
 4583              	 .cfi_def_cfa_offset 4
 4584              	 .cfi_offset 7,-4
 4585 0002 87B0     	 sub sp,sp,#28
 4586              	 .cfi_def_cfa_offset 32
 4587 0004 00AF     	 add r7,sp,#0
 4588              	 .cfi_def_cfa_register 7
 4589 0006 F860     	 str r0,[r7,#12]
 4590 0008 B960     	 str r1,[r7,#8]
 4591 000a 1346     	 mov r3,r2
 4592 000c FB80     	 strh r3,[r7,#6]
1909:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res = group_ptr->RES[res_reg];
 4593              	 .loc 2 1909 0
 4594 000e FB68     	 ldr r3,[r7,#12]
 4595 0010 BA68     	 ldr r2,[r7,#8]
 4596 0012 C032     	 adds r2,r2,#192
 4597 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4598 0018 7B61     	 str r3,[r7,#20]
1910:../Libraries/XMCLib/src/xmc_vadc.c **** 
1911:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1912:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Result Register",
1913:../Libraries/XMCLib/src/xmc_vadc.c ****             ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1914:../Libraries/XMCLib/src/xmc_vadc.c **** 
1915:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4599              	 .loc 2 1915 0
 4600 001a 7B69     	 ldr r3,[r7,#20]
 4601 001c 1B0C     	 lsrs r3,r3,#16
 4602 001e 1B04     	 lsls r3,r3,#16
 4603 0020 7B61     	 str r3,[r7,#20]
1916:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 4604              	 .loc 2 1916 0
 4605 0022 FB88     	 ldrh r3,[r7,#6]
 4606 0024 9B00     	 lsls r3,r3,#2
 4607 0026 7A69     	 ldr r2,[r7,#20]
 4608 0028 1343     	 orrs r3,r3,r2
 4609 002a 7B61     	 str r3,[r7,#20]
1917:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[res_reg] = res;
 4610              	 .loc 2 1917 0
 4611 002c FB68     	 ldr r3,[r7,#12]
 4612 002e BA68     	 ldr r2,[r7,#8]
 4613 0030 C032     	 adds r2,r2,#192
 4614 0032 7969     	 ldr r1,[r7,#20]
 4615 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1918:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4616              	 .loc 2 1918 0
 4617 0038 1C37     	 adds r7,r7,#28
 4618              	 .cfi_def_cfa_offset 4
 4619 003a BD46     	 mov sp,r7
 4620              	 .cfi_def_cfa_register 13
 4621              	 
 4622 003c 5DF8047B 	 ldr r7,[sp],#4
 4623              	 .cfi_restore 7
 4624              	 .cfi_def_cfa_offset 0
 4625 0040 7047     	 bx lr
 4626              	 .cfi_endproc
 4627              	.LFE317:
 4629 0042 00BF     	 .section .text.XMC_VADC_GROUP_GetFastCompareResult,"ax",%progbits
 4630              	 .align 2
 4631              	 .global XMC_VADC_GROUP_GetFastCompareResult
 4632              	 .thumb
 4633              	 .thumb_func
 4635              	XMC_VADC_GROUP_GetFastCompareResult:
 4636              	.LFB318:
1919:../Libraries/XMCLib/src/xmc_vadc.c **** 
1920:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of fast mode comparison */
1921:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GROUP_GetFastCompareResult(XMC_VADC_GROUP_t *const group_ptr, cons
1922:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4637              	 .loc 2 1922 0
 4638              	 .cfi_startproc
 4639              	 
 4640              	 
 4641              	 
 4642 0000 80B4     	 push {r7}
 4643              	 .cfi_def_cfa_offset 4
 4644              	 .cfi_offset 7,-4
 4645 0002 85B0     	 sub sp,sp,#20
 4646              	 .cfi_def_cfa_offset 24
 4647 0004 00AF     	 add r7,sp,#0
 4648              	 .cfi_def_cfa_register 7
 4649 0006 7860     	 str r0,[r7,#4]
 4650 0008 3960     	 str r1,[r7]
1923:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
1924:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1925:../Libraries/XMCLib/src/xmc_vadc.c **** 
1926:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
1927:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM
1928:../Libraries/XMCLib/src/xmc_vadc.c **** 
1929:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[res_reg];
 4651              	 .loc 2 1929 0
 4652 000a 7B68     	 ldr r3,[r7,#4]
 4653 000c 3A68     	 ldr r2,[r7]
 4654 000e C032     	 adds r2,r2,#192
 4655 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4656 0014 BB60     	 str r3,[r7,#8]
1930:../Libraries/XMCLib/src/xmc_vadc.c **** 
1931:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_G_RES_VF_Msk)
 4657              	 .loc 2 1931 0
 4658 0016 BB68     	 ldr r3,[r7,#8]
 4659 0018 002B     	 cmp r3,#0
 4660 001a 06DA     	 bge .L178
1932:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1933:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_G_RES_FCR_Pos) & (uint32_t)
 4661              	 .loc 2 1933 0
 4662 001c BB68     	 ldr r3,[r7,#8]
 4663 001e 9B0F     	 lsrs r3,r3,#30
 4664 0020 DBB2     	 uxtb r3,r3
 4665 0022 03F00103 	 and r3,r3,#1
 4666 0026 FB73     	 strb r3,[r7,#15]
 4667 0028 01E0     	 b .L179
 4668              	.L178:
1934:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1935:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1936:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1937:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 4669              	 .loc 2 1937 0
 4670 002a 0223     	 movs r3,#2
 4671 002c FB73     	 strb r3,[r7,#15]
 4672              	.L179:
1938:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1939:../Libraries/XMCLib/src/xmc_vadc.c **** 
1940:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 4673              	 .loc 2 1940 0
 4674 002e FB7B     	 ldrb r3,[r7,#15]
1941:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4675              	 .loc 2 1941 0
 4676 0030 1846     	 mov r0,r3
 4677 0032 1437     	 adds r7,r7,#20
 4678              	 .cfi_def_cfa_offset 4
 4679 0034 BD46     	 mov sp,r7
 4680              	 .cfi_def_cfa_register 13
 4681              	 
 4682 0036 5DF8047B 	 ldr r7,[sp],#4
 4683              	 .cfi_restore 7
 4684              	 .cfi_def_cfa_offset 0
 4685 003a 7047     	 bx lr
 4686              	 .cfi_endproc
 4687              	.LFE318:
 4689              	 .section .text.XMC_VADC_GROUP_SetResultSubtractionValue,"ax",%progbits
 4690              	 .align 2
 4691              	 .global XMC_VADC_GROUP_SetResultSubtractionValue
 4692              	 .thumb
 4693              	 .thumb_func
 4695              	XMC_VADC_GROUP_SetResultSubtractionValue:
 4696              	.LFB319:
1942:../Libraries/XMCLib/src/xmc_vadc.c **** 
1943:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1944:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultSubtractionValue(XMC_VADC_GROUP_t *const group_ptr,
1945:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const uint16_t subtraction_val)
1946:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4697              	 .loc 2 1946 0
 4698              	 .cfi_startproc
 4699              	 
 4700              	 
 4701              	 
 4702 0000 80B4     	 push {r7}
 4703              	 .cfi_def_cfa_offset 4
 4704              	 .cfi_offset 7,-4
 4705 0002 85B0     	 sub sp,sp,#20
 4706              	 .cfi_def_cfa_offset 24
 4707 0004 00AF     	 add r7,sp,#0
 4708              	 .cfi_def_cfa_register 7
 4709 0006 7860     	 str r0,[r7,#4]
 4710 0008 0B46     	 mov r3,r1
 4711 000a 7B80     	 strh r3,[r7,#2]
1947:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1948:../Libraries/XMCLib/src/xmc_vadc.c **** 
1949:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultSubtractionValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1950:../Libraries/XMCLib/src/xmc_vadc.c **** 
1951:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[0];
 4712              	 .loc 2 1951 0
 4713 000c 7B68     	 ldr r3,[r7,#4]
 4714 000e D3F80033 	 ldr r3,[r3,#768]
 4715 0012 FB60     	 str r3,[r7,#12]
1952:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4716              	 .loc 2 1952 0
 4717 0014 FB68     	 ldr r3,[r7,#12]
 4718 0016 1B0C     	 lsrs r3,r3,#16
 4719 0018 1B04     	 lsls r3,r3,#16
 4720 001a FB60     	 str r3,[r7,#12]
1953:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)subtraction_val;
 4721              	 .loc 2 1953 0
 4722 001c 7B88     	 ldrh r3,[r7,#2]
 4723 001e FA68     	 ldr r2,[r7,#12]
 4724 0020 1343     	 orrs r3,r3,r2
 4725 0022 FB60     	 str r3,[r7,#12]
1954:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[0] = res;
 4726              	 .loc 2 1954 0
 4727 0024 7B68     	 ldr r3,[r7,#4]
 4728 0026 FA68     	 ldr r2,[r7,#12]
 4729 0028 C3F80023 	 str r2,[r3,#768]
1955:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4730              	 .loc 2 1955 0
 4731 002c 1437     	 adds r7,r7,#20
 4732              	 .cfi_def_cfa_offset 4
 4733 002e BD46     	 mov sp,r7
 4734              	 .cfi_def_cfa_register 13
 4735              	 
 4736 0030 5DF8047B 	 ldr r7,[sp],#4
 4737              	 .cfi_restore 7
 4738              	 .cfi_def_cfa_offset 0
 4739 0034 7047     	 bx lr
 4740              	 .cfi_endproc
 4741              	.LFE319:
 4743 0036 00BF     	 .section .text.XMC_VADC_GROUP_SetResultInterruptNode,"ax",%progbits
 4744              	 .align 2
 4745              	 .global XMC_VADC_GROUP_SetResultInterruptNode
 4746              	 .thumb
 4747              	 .thumb_func
 4749              	XMC_VADC_GROUP_SetResultInterruptNode:
 4750              	.LFB320:
1956:../Libraries/XMCLib/src/xmc_vadc.c **** 
1957:../Libraries/XMCLib/src/xmc_vadc.c **** 
1958:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for result event of specified unit of result ha
1959:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1960:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const uint32_t res_reg,
1961:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_SR_t sr)
1962:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4751              	 .loc 2 1962 0
 4752              	 .cfi_startproc
 4753              	 
 4754              	 
 4755              	 
 4756 0000 80B4     	 push {r7}
 4757              	 .cfi_def_cfa_offset 4
 4758              	 .cfi_offset 7,-4
 4759 0002 87B0     	 sub sp,sp,#28
 4760              	 .cfi_def_cfa_offset 32
 4761 0004 00AF     	 add r7,sp,#0
 4762              	 .cfi_def_cfa_register 7
 4763 0006 F860     	 str r0,[r7,#12]
 4764 0008 B960     	 str r1,[r7,#8]
 4765 000a 1346     	 mov r3,r2
 4766 000c FB71     	 strb r3,[r7,#7]
1963:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1964:../Libraries/XMCLib/src/xmc_vadc.c **** 
1965:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1966:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Result Register", ((res_reg) < XMC_VADC_N
1967:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Service Request", ((sr)  <= XMC_VADC_SR_S
1968:../Libraries/XMCLib/src/xmc_vadc.c **** 
1969:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res_reg <= 7U)
 4767              	 .loc 2 1969 0
 4768 000e BB68     	 ldr r3,[r7,#8]
 4769 0010 072B     	 cmp r3,#7
 4770 0012 18D8     	 bhi .L183
1970:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1971:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask  = group_ptr->REVNP0;
 4771              	 .loc 2 1971 0
 4772 0014 FB68     	 ldr r3,[r7,#12]
 4773 0016 D3F8B031 	 ldr r3,[r3,#432]
 4774 001a 7B61     	 str r3,[r7,#20]
1972:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
 4775              	 .loc 2 1972 0
 4776 001c BB68     	 ldr r3,[r7,#8]
 4777 001e 9B00     	 lsls r3,r3,#2
 4778 0020 1A46     	 mov r2,r3
 4779 0022 0F23     	 movs r3,#15
 4780 0024 9340     	 lsls r3,r3,r2
 4781 0026 DB43     	 mvns r3,r3
 4782 0028 7A69     	 ldr r2,[r7,#20]
 4783 002a 1340     	 ands r3,r3,r2
 4784 002c 7B61     	 str r3,[r7,#20]
1973:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << (res_reg * (uint32_t)4));
 4785              	 .loc 2 1973 0
 4786 002e FB79     	 ldrb r3,[r7,#7]
 4787 0030 BA68     	 ldr r2,[r7,#8]
 4788 0032 9200     	 lsls r2,r2,#2
 4789 0034 9340     	 lsls r3,r3,r2
 4790 0036 7A69     	 ldr r2,[r7,#20]
 4791 0038 1343     	 orrs r3,r3,r2
 4792 003a 7B61     	 str r3,[r7,#20]
1974:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP0 = route_mask;
 4793              	 .loc 2 1974 0
 4794 003c FB68     	 ldr r3,[r7,#12]
 4795 003e 7A69     	 ldr r2,[r7,#20]
 4796 0040 C3F8B021 	 str r2,[r3,#432]
 4797 0044 1EE0     	 b .L182
 4798              	.L183:
1975:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1976:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1977:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1978:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask = group_ptr->REVNP1;
 4799              	 .loc 2 1978 0
 4800 0046 FB68     	 ldr r3,[r7,#12]
 4801 0048 D3F8B431 	 ldr r3,[r3,#436]
 4802 004c 7B61     	 str r3,[r7,#20]
1979:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4803              	 .loc 2 1979 0
 4804 004e BB68     	 ldr r3,[r7,#8]
 4805 0050 03F18043 	 add r3,r3,#1073741824
 4806 0054 083B     	 subs r3,r3,#8
 4807 0056 9B00     	 lsls r3,r3,#2
 4808 0058 1A46     	 mov r2,r3
 4809 005a 0F23     	 movs r3,#15
 4810 005c 9340     	 lsls r3,r3,r2
 4811 005e DB43     	 mvns r3,r3
 4812 0060 7A69     	 ldr r2,[r7,#20]
 4813 0062 1340     	 ands r3,r3,r2
 4814 0064 7B61     	 str r3,[r7,#20]
1980:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << ((res_reg - (uint32_t)8) * (uint32_t)4));
 4815              	 .loc 2 1980 0
 4816 0066 FA79     	 ldrb r2,[r7,#7]
 4817 0068 BB68     	 ldr r3,[r7,#8]
 4818 006a 03F18043 	 add r3,r3,#1073741824
 4819 006e 083B     	 subs r3,r3,#8
 4820 0070 9B00     	 lsls r3,r3,#2
 4821 0072 02FA03F3 	 lsl r3,r2,r3
 4822 0076 7A69     	 ldr r2,[r7,#20]
 4823 0078 1343     	 orrs r3,r3,r2
 4824 007a 7B61     	 str r3,[r7,#20]
1981:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP1 = route_mask;
 4825              	 .loc 2 1981 0
 4826 007c FB68     	 ldr r3,[r7,#12]
 4827 007e 7A69     	 ldr r2,[r7,#20]
 4828 0080 C3F8B421 	 str r2,[r3,#436]
 4829              	.L182:
1982:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1983:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4830              	 .loc 2 1983 0
 4831 0084 1C37     	 adds r7,r7,#28
 4832              	 .cfi_def_cfa_offset 4
 4833 0086 BD46     	 mov sp,r7
 4834              	 .cfi_def_cfa_register 13
 4835              	 
 4836 0088 5DF8047B 	 ldr r7,[sp],#4
 4837              	 .cfi_restore 7
 4838              	 .cfi_def_cfa_offset 0
 4839 008c 7047     	 bx lr
 4840              	 .cfi_endproc
 4841              	.LFE320:
 4843 008e 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoTail,"ax",%progbits
 4844              	 .align 2
 4845              	 .global XMC_VADC_GROUP_GetResultFifoTail
 4846              	 .thumb
 4847              	 .thumb_func
 4849              	XMC_VADC_GROUP_GetResultFifoTail:
 4850              	.LFB321:
1984:../Libraries/XMCLib/src/xmc_vadc.c **** 
1985:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the tail of the fifo which the specified result register is a part of */
1986:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoTail(XMC_VADC_GROUP_t *const group_ptr, uint32_t res_reg)
1987:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4851              	 .loc 2 1987 0
 4852              	 .cfi_startproc
 4853              	 
 4854              	 
 4855 0000 80B5     	 push {r7,lr}
 4856              	 .cfi_def_cfa_offset 8
 4857              	 .cfi_offset 7,-8
 4858              	 .cfi_offset 14,-4
 4859 0002 86B0     	 sub sp,sp,#24
 4860              	 .cfi_def_cfa_offset 32
 4861 0004 00AF     	 add r7,sp,#0
 4862              	 .cfi_def_cfa_register 7
 4863 0006 7860     	 str r0,[r7,#4]
 4864 0008 3960     	 str r1,[r7]
1988:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t tail;
1989:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
1990:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t i;
1991:../Libraries/XMCLib/src/xmc_vadc.c ****   bool exit_flag;
1992:../Libraries/XMCLib/src/xmc_vadc.c **** 
1993:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1994:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
1995:../Libraries/XMCLib/src/xmc_vadc.c **** 
1996:../Libraries/XMCLib/src/xmc_vadc.c ****   tail = 0U;
 4865              	 .loc 2 1996 0
 4866 000a 0023     	 movs r3,#0
 4867 000c 7B61     	 str r3,[r7,#20]
1997:../Libraries/XMCLib/src/xmc_vadc.c ****   exit_flag= (bool)false;
 4868              	 .loc 2 1997 0
 4869 000e 0023     	 movs r3,#0
 4870 0010 FB73     	 strb r3,[r7,#15]
1998:../Libraries/XMCLib/src/xmc_vadc.c **** 
1999:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 4871              	 .loc 2 1999 0
 4872 0012 7868     	 ldr r0,[r7,#4]
 4873 0014 3968     	 ldr r1,[r7]
 4874 0016 FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 4875 001a 0346     	 mov r3,r0
 4876 001c 002B     	 cmp r3,#0
 4877 001e 02D0     	 beq .L186
2000:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2001:../Libraries/XMCLib/src/xmc_vadc.c ****     res_reg = res_reg - 1U;
 4878              	 .loc 2 2001 0
 4879 0020 3B68     	 ldr r3,[r7]
 4880 0022 013B     	 subs r3,r3,#1
 4881 0024 3B60     	 str r3,[r7]
 4882              	.L186:
2002:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2003:../Libraries/XMCLib/src/xmc_vadc.c **** 
2004:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Border condition */
2005:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == res_reg)
 4883              	 .loc 2 2005 0
 4884 0026 3B68     	 ldr r3,[r7]
 4885 0028 002B     	 cmp r3,#0
 4886 002a 02D1     	 bne .L187
2006:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2007:../Libraries/XMCLib/src/xmc_vadc.c ****     tail = 0U;
 4887              	 .loc 2 2007 0
 4888 002c 0023     	 movs r3,#0
 4889 002e 7B61     	 str r3,[r7,#20]
 4890 0030 26E0     	 b .L188
 4891              	.L187:
2008:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2009:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2010:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2011:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Stop either at a node that does not have FEN set or at Node-0 */
2012:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = (int32_t)res_reg; i >= (int32_t)0; i--)
 4892              	 .loc 2 2012 0
 4893 0032 3B68     	 ldr r3,[r7]
 4894 0034 3B61     	 str r3,[r7,#16]
 4895 0036 20E0     	 b .L189
 4896              	.L194:
2013:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2014:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr = group_ptr->RCR[i];
 4897              	 .loc 2 2014 0
 4898 0038 7B68     	 ldr r3,[r7,#4]
 4899 003a 3A69     	 ldr r2,[r7,#16]
 4900 003c A032     	 adds r2,r2,#160
 4901 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4902 0042 BB60     	 str r3,[r7,#8]
2015:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4903              	 .loc 2 2015 0
 4904 0044 BB68     	 ldr r3,[r7,#8]
 4905 0046 03F0C063 	 and r3,r3,#100663296
 4906 004a BB60     	 str r3,[r7,#8]
2016:../Libraries/XMCLib/src/xmc_vadc.c **** 
2017:../Libraries/XMCLib/src/xmc_vadc.c ****        if (rcr)
 4907              	 .loc 2 2017 0
 4908 004c BB68     	 ldr r3,[r7,#8]
 4909 004e 002B     	 cmp r3,#0
 4910 0050 07D0     	 beq .L190
2018:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2019:../Libraries/XMCLib/src/xmc_vadc.c ****          if ((int32_t)0 == i)
 4911              	 .loc 2 2019 0
 4912 0052 3B69     	 ldr r3,[r7,#16]
 4913 0054 002B     	 cmp r3,#0
 4914 0056 09D1     	 bne .L192
2020:../Libraries/XMCLib/src/xmc_vadc.c ****          {
2021:../Libraries/XMCLib/src/xmc_vadc.c ****           /* No more nodes. Stop here */
2022:../Libraries/XMCLib/src/xmc_vadc.c ****           tail = (uint32_t)0;
 4915              	 .loc 2 2022 0
 4916 0058 0023     	 movs r3,#0
 4917 005a 7B61     	 str r3,[r7,#20]
2023:../Libraries/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
 4918              	 .loc 2 2023 0
 4919 005c 0123     	 movs r3,#1
 4920 005e FB73     	 strb r3,[r7,#15]
 4921 0060 04E0     	 b .L192
 4922              	.L190:
2024:../Libraries/XMCLib/src/xmc_vadc.c ****          }
2025:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2026:../Libraries/XMCLib/src/xmc_vadc.c ****        else
2027:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2028:../Libraries/XMCLib/src/xmc_vadc.c ****          /* The preceding register forms the tail of the FIFO */
2029:../Libraries/XMCLib/src/xmc_vadc.c ****          tail = (uint32_t)i + (uint32_t)1;
 4923              	 .loc 2 2029 0
 4924 0062 3B69     	 ldr r3,[r7,#16]
 4925 0064 0133     	 adds r3,r3,#1
 4926 0066 7B61     	 str r3,[r7,#20]
2030:../Libraries/XMCLib/src/xmc_vadc.c ****          exit_flag = (bool)true;
 4927              	 .loc 2 2030 0
 4928 0068 0123     	 movs r3,#1
 4929 006a FB73     	 strb r3,[r7,#15]
 4930              	.L192:
2031:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2032:../Libraries/XMCLib/src/xmc_vadc.c ****        if (exit_flag)
 4931              	 .loc 2 2032 0
 4932 006c FB7B     	 ldrb r3,[r7,#15]
 4933 006e 002B     	 cmp r3,#0
 4934 0070 00D0     	 beq .L193
2033:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2034:../Libraries/XMCLib/src/xmc_vadc.c ****          break;
 4935              	 .loc 2 2034 0
 4936 0072 05E0     	 b .L188
 4937              	.L193:
2012:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4938              	 .loc 2 2012 0 discriminator 2
 4939 0074 3B69     	 ldr r3,[r7,#16]
 4940 0076 013B     	 subs r3,r3,#1
 4941 0078 3B61     	 str r3,[r7,#16]
 4942              	.L189:
2012:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4943              	 .loc 2 2012 0 is_stmt 0 discriminator 1
 4944 007a 3B69     	 ldr r3,[r7,#16]
 4945 007c 002B     	 cmp r3,#0
 4946 007e DBDA     	 bge .L194
 4947              	.L188:
2035:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2036:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2037:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2038:../Libraries/XMCLib/src/xmc_vadc.c ****   return tail;
 4948              	 .loc 2 2038 0 is_stmt 1
 4949 0080 7B69     	 ldr r3,[r7,#20]
2039:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4950              	 .loc 2 2039 0
 4951 0082 1846     	 mov r0,r3
 4952 0084 1837     	 adds r7,r7,#24
 4953              	 .cfi_def_cfa_offset 8
 4954 0086 BD46     	 mov sp,r7
 4955              	 .cfi_def_cfa_register 13
 4956              	 
 4957 0088 80BD     	 pop {r7,pc}
 4958              	 .cfi_endproc
 4959              	.LFE321:
 4961 008a 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoHead,"ax",%progbits
 4962              	 .align 2
 4963              	 .global XMC_VADC_GROUP_GetResultFifoHead
 4964              	 .thumb
 4965              	 .thumb_func
 4967              	XMC_VADC_GROUP_GetResultFifoHead:
 4968              	.LFB322:
2040:../Libraries/XMCLib/src/xmc_vadc.c **** 
2041:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the head of the fifo which the specified result register is a part of */
2042:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg
2043:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4969              	 .loc 2 2043 0
 4970              	 .cfi_startproc
 4971              	 
 4972              	 
 4973 0000 80B5     	 push {r7,lr}
 4974              	 .cfi_def_cfa_offset 8
 4975              	 .cfi_offset 7,-8
 4976              	 .cfi_offset 14,-4
 4977 0002 86B0     	 sub sp,sp,#24
 4978              	 .cfi_def_cfa_offset 32
 4979 0004 00AF     	 add r7,sp,#0
 4980              	 .cfi_def_cfa_register 7
 4981 0006 7860     	 str r0,[r7,#4]
 4982 0008 3960     	 str r1,[r7]
2044:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t head;
2045:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2046:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
2047:../Libraries/XMCLib/src/xmc_vadc.c **** 
2048:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2049:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2050:../Libraries/XMCLib/src/xmc_vadc.c **** 
2051:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 4983              	 .loc 2 2051 0
 4984 000a 7868     	 ldr r0,[r7,#4]
 4985 000c 3968     	 ldr r1,[r7]
 4986 000e FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 4987 0012 0346     	 mov r3,r0
 4988 0014 002B     	 cmp r3,#0
 4989 0016 02D0     	 beq .L197
2052:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2053:../Libraries/XMCLib/src/xmc_vadc.c ****       head = res_reg;
 4990              	 .loc 2 2053 0
 4991 0018 3B68     	 ldr r3,[r7]
 4992 001a 7B61     	 str r3,[r7,#20]
 4993 001c 1AE0     	 b .L198
 4994              	.L197:
2054:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2055:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2056:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2057:../Libraries/XMCLib/src/xmc_vadc.c ****     head = XMC_VADC_NUM_RESULT_REGISTERS - (uint32_t)1;
 4995              	 .loc 2 2057 0
 4996 001e 0F23     	 movs r3,#15
 4997 0020 7B61     	 str r3,[r7,#20]
2058:../Libraries/XMCLib/src/xmc_vadc.c **** 
2059:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = res_reg; i < XMC_VADC_NUM_RESULT_REGISTERS ; i++)
 4998              	 .loc 2 2059 0
 4999 0022 3B68     	 ldr r3,[r7]
 5000 0024 3B61     	 str r3,[r7,#16]
 5001 0026 12E0     	 b .L199
 5002              	.L201:
2060:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2061:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
 5003              	 .loc 2 2061 0
 5004 0028 7B68     	 ldr r3,[r7,#4]
 5005 002a 3A69     	 ldr r2,[r7,#16]
 5006 002c A032     	 adds r2,r2,#160
 5007 002e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5008 0032 FB60     	 str r3,[r7,#12]
2062:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5009              	 .loc 2 2062 0
 5010 0034 FB68     	 ldr r3,[r7,#12]
 5011 0036 03F0C063 	 and r3,r3,#100663296
 5012 003a FB60     	 str r3,[r7,#12]
2063:../Libraries/XMCLib/src/xmc_vadc.c **** 
2064:../Libraries/XMCLib/src/xmc_vadc.c ****       if (!rcr)
 5013              	 .loc 2 2064 0
 5014 003c FB68     	 ldr r3,[r7,#12]
 5015 003e 002B     	 cmp r3,#0
 5016 0040 02D1     	 bne .L200
2065:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2066:../Libraries/XMCLib/src/xmc_vadc.c ****         /* This node forms the head of the FIFO */
2067:../Libraries/XMCLib/src/xmc_vadc.c ****         head = i ;
 5017              	 .loc 2 2067 0
 5018 0042 3B69     	 ldr r3,[r7,#16]
 5019 0044 7B61     	 str r3,[r7,#20]
2068:../Libraries/XMCLib/src/xmc_vadc.c ****         break;
 5020              	 .loc 2 2068 0
 5021 0046 05E0     	 b .L198
 5022              	.L200:
2059:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5023              	 .loc 2 2059 0 discriminator 2
 5024 0048 3B69     	 ldr r3,[r7,#16]
 5025 004a 0133     	 adds r3,r3,#1
 5026 004c 3B61     	 str r3,[r7,#16]
 5027              	.L199:
2059:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5028              	 .loc 2 2059 0 is_stmt 0 discriminator 1
 5029 004e 3B69     	 ldr r3,[r7,#16]
 5030 0050 0F2B     	 cmp r3,#15
 5031 0052 E9D9     	 bls .L201
 5032              	.L198:
2069:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2070:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2071:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2072:../Libraries/XMCLib/src/xmc_vadc.c ****   return head;
 5033              	 .loc 2 2072 0 is_stmt 1
 5034 0054 7B69     	 ldr r3,[r7,#20]
2073:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5035              	 .loc 2 2073 0
 5036 0056 1846     	 mov r0,r3
 5037 0058 1837     	 adds r7,r7,#24
 5038              	 .cfi_def_cfa_offset 8
 5039 005a BD46     	 mov sp,r7
 5040              	 .cfi_def_cfa_register 13
 5041              	 
 5042 005c 80BD     	 pop {r7,pc}
 5043              	 .cfi_endproc
 5044              	.LFE322:
 5046 005e 00BF     	 .section .text.XMC_VADC_GROUP_IsResultRegisterFifoHead,"ax",%progbits
 5047              	 .align 2
 5048              	 .global XMC_VADC_GROUP_IsResultRegisterFifoHead
 5049              	 .thumb
 5050              	 .thumb_func
 5052              	XMC_VADC_GROUP_IsResultRegisterFifoHead:
 5053              	.LFB323:
2074:../Libraries/XMCLib/src/xmc_vadc.c **** 
2075:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine if the specified result register is the head of a result fifo */
2076:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_IsResultRegisterFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_
2077:../Libraries/XMCLib/src/xmc_vadc.c **** {
 5054              	 .loc 2 2077 0
 5055              	 .cfi_startproc
 5056              	 
 5057              	 
 5058              	 
 5059 0000 80B4     	 push {r7}
 5060              	 .cfi_def_cfa_offset 4
 5061              	 .cfi_offset 7,-4
 5062 0002 87B0     	 sub sp,sp,#28
 5063              	 .cfi_def_cfa_offset 32
 5064 0004 00AF     	 add r7,sp,#0
 5065              	 .cfi_def_cfa_register 7
 5066 0006 7860     	 str r0,[r7,#4]
 5067 0008 3960     	 str r1,[r7]
2078:../Libraries/XMCLib/src/xmc_vadc.c ****   bool ret_val;
2079:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_head;
2080:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_next;
2081:../Libraries/XMCLib/src/xmc_vadc.c **** 
2082:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2083:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Result Register",
2084:../Libraries/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
2085:../Libraries/XMCLib/src/xmc_vadc.c **** 
2086:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head = group_ptr->RCR[res_reg];
 5068              	 .loc 2 2086 0
 5069 000a 7B68     	 ldr r3,[r7,#4]
 5070 000c 3A68     	 ldr r2,[r7]
 5071 000e A032     	 adds r2,r2,#160
 5072 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5073 0014 3B61     	 str r3,[r7,#16]
2087:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5074              	 .loc 2 2087 0
 5075 0016 3B69     	 ldr r3,[r7,#16]
 5076 0018 03F0C063 	 and r3,r3,#100663296
 5077 001c 3B61     	 str r3,[r7,#16]
2088:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 5078              	 .loc 2 2088 0
 5079 001e 3B68     	 ldr r3,[r7]
 5080 0020 5A1E     	 subs r2,r3,#1
 5081 0022 7B68     	 ldr r3,[r7,#4]
 5082 0024 A032     	 adds r2,r2,#160
 5083 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5084 002a FB60     	 str r3,[r7,#12]
2089:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5085              	 .loc 2 2089 0
 5086 002c FB68     	 ldr r3,[r7,#12]
 5087 002e 03F0C063 	 and r3,r3,#100663296
 5088 0032 FB60     	 str r3,[r7,#12]
2090:../Libraries/XMCLib/src/xmc_vadc.c **** 
2091:../Libraries/XMCLib/src/xmc_vadc.c ****   if (rcr_head)
 5089              	 .loc 2 2091 0
 5090 0034 3B69     	 ldr r3,[r7,#16]
 5091 0036 002B     	 cmp r3,#0
 5092 0038 02D0     	 beq .L204
2092:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2093:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5093              	 .loc 2 2093 0
 5094 003a 0023     	 movs r3,#0
 5095 003c FB75     	 strb r3,[r7,#23]
 5096 003e 07E0     	 b .L205
 5097              	.L204:
2094:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (rcr_next)
 5098              	 .loc 2 2095 0
 5099 0040 FB68     	 ldr r3,[r7,#12]
 5100 0042 002B     	 cmp r3,#0
 5101 0044 02D0     	 beq .L206
2096:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2097:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)true;
 5102              	 .loc 2 2097 0
 5103 0046 0123     	 movs r3,#1
 5104 0048 FB75     	 strb r3,[r7,#23]
 5105 004a 01E0     	 b .L205
 5106              	.L206:
2098:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2099:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2100:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2101:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5107              	 .loc 2 2101 0
 5108 004c 0023     	 movs r3,#0
 5109 004e FB75     	 strb r3,[r7,#23]
 5110              	.L205:
2102:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2103:../Libraries/XMCLib/src/xmc_vadc.c **** 
2104:../Libraries/XMCLib/src/xmc_vadc.c ****   return ret_val;
 5111              	 .loc 2 2104 0
 5112 0050 FB7D     	 ldrb r3,[r7,#23]
2105:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5113              	 .loc 2 2105 0
 5114 0052 1846     	 mov r0,r3
 5115 0054 1C37     	 adds r7,r7,#28
 5116              	 .cfi_def_cfa_offset 4
 5117 0056 BD46     	 mov sp,r7
 5118              	 .cfi_def_cfa_register 13
 5119              	 
 5120 0058 5DF8047B 	 ldr r7,[sp],#4
 5121              	 .cfi_restore 7
 5122              	 .cfi_def_cfa_offset 0
 5123 005c 7047     	 bx lr
 5124              	 .cfi_endproc
 5125              	.LFE323:
 5127 005e 00BF     	 .text
 5128              	.Letext0:
 5129              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5130              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5131              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 5132              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 5133              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 5134              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 5135              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_vadc.c
    {standard input}:20     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 $t
    {standard input}:24     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 XMC_VADC_GROUP_ExternalMuxControlInit
    {standard input}:100    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 $t
    {standard input}:104    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanEnableArbitrationSlot
    {standard input}:139    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 $t
    {standard input}:143    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanDisableArbitrationSlot
    {standard input}:178    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 $t
    {standard input}:182    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
    {standard input}:217    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 $t
    {standard input}:221    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
    {standard input}:256    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 $t
    {standard input}:260    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueEnableArbitrationSlot
    {standard input}:295    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 $t
    {standard input}:299    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueDisableArbitrationSlot
    {standard input}:334    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 $t
    {standard input}:338    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 XMC_VADC_GROUP_QueueFlushEntries
    {standard input}:382    .rodata.g_xmc_vadc_group_array:00000000 $d
    {standard input}:385    .rodata.g_xmc_vadc_group_array:00000000 g_xmc_vadc_group_array
    {standard input}:391    .text.XMC_VADC_GLOBAL_EnableModule:00000000 $t
    {standard input}:396    .text.XMC_VADC_GLOBAL_EnableModule:00000000 XMC_VADC_GLOBAL_EnableModule
    {standard input}:418    .text.XMC_VADC_GLOBAL_DisableModule:00000000 $t
    {standard input}:423    .text.XMC_VADC_GLOBAL_DisableModule:00000000 XMC_VADC_GLOBAL_DisableModule
    {standard input}:444    .text.XMC_VADC_GLOBAL_Init:00000000 $t
    {standard input}:449    .text.XMC_VADC_GLOBAL_Init:00000000 XMC_VADC_GLOBAL_Init
    {standard input}:509    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 $t
    {standard input}:514    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 XMC_VADC_GLOBAL_InputClassInit
    {standard input}:569    .text.XMC_VADC_GLOBAL_InputClassInit:00000044 $d
    {standard input}:574    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 $t
    {standard input}:579    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 XMC_VADC_GLOBAL_StartupCalibration
    {standard input}:654    .text.XMC_VADC_GLOBAL_StartupCalibration:00000060 $d
    {standard input}:659    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 $t
    {standard input}:664    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 XMC_VADC_GLOBAL_SetBoundaries
    {standard input}:713    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 $t
    {standard input}:718    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 XMC_VADC_GLOBAL_SetIndividualBoundary
    {standard input}:791    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 $t
    {standard input}:796    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 XMC_VADC_GLOBAL_SetCompareValue
    {standard input}:842    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 $t
    {standard input}:847    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 XMC_VADC_GLOBAL_GetCompareResult
    {standard input}:899    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 $t
    {standard input}:904    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 XMC_VADC_GLOBAL_BindGroupToEMux
    {standard input}:971    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 $t
    {standard input}:976    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 XMC_VADC_GLOBAL_SetResultEventInterruptNode
    {standard input}:1035   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:1040   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
    {standard input}:1098   .text.XMC_VADC_GROUP_Init:00000000 $t
    {standard input}:1103   .text.XMC_VADC_GROUP_Init:00000000 XMC_VADC_GROUP_Init
    {standard input}:1178   .text.XMC_VADC_GROUP_InputClassInit:00000000 XMC_VADC_GROUP_InputClassInit
    {standard input}:1173   .text.XMC_VADC_GROUP_InputClassInit:00000000 $t
    {standard input}:1300   .text.XMC_VADC_GROUP_SetPowerMode:00000000 $t
    {standard input}:1305   .text.XMC_VADC_GROUP_SetPowerMode:00000000 XMC_VADC_GROUP_SetPowerMode
    {standard input}:1353   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 $t
    {standard input}:1358   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 XMC_VADC_GROUP_SetSyncSlave
    {standard input}:1416   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 $t
    {standard input}:1421   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 XMC_VADC_GROUP_SetSyncMaster
    {standard input}:1462   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 $t
    {standard input}:1467   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 XMC_VADC_GROUP_CheckSlaveReadiness
    {standard input}:1545   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000064 $d
    {standard input}:1550   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 $t
    {standard input}:1555   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 XMC_VADC_GROUP_IgnoreSlaveReadiness
    {standard input}:1634   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000064 $d
    {standard input}:1639   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 $t
    {standard input}:1644   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 XMC_VADC_GROUP_SetSyncSlaveReadySignal
    {standard input}:1696   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 $t
    {standard input}:1701   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 XMC_VADC_GROUP_EnableChannelSyncRequest
    {standard input}:1751   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 $t
    {standard input}:1756   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 XMC_VADC_GROUP_DisableChannelSyncRequest
    {standard input}:1806   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 $t
    {standard input}:1811   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 XMC_VADC_GROUP_IsConverterBusy
    {standard input}:1856   .text.XMC_VADC_GROUP_SetBoundaries:00000000 $t
    {standard input}:1861   .text.XMC_VADC_GROUP_SetBoundaries:00000000 XMC_VADC_GROUP_SetBoundaries
    {standard input}:1921   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 $t
    {standard input}:1926   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 XMC_VADC_GROUP_SetIndividualBoundary
    {standard input}:1999   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 $t
    {standard input}:2004   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 XMC_VADC_GROUP_TriggerServiceRequest
    {standard input}:2067   .text.XMC_VADC_GROUP_ScanInit:00000000 $t
    {standard input}:2072   .text.XMC_VADC_GROUP_ScanInit:00000000 XMC_VADC_GROUP_ScanInit
    {standard input}:2165   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 $t
    {standard input}:2170   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 XMC_VADC_GROUP_ScanSelectTrigger
    {standard input}:2223   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 $t
    {standard input}:2228   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 XMC_VADC_GROUP_ScanSelectTriggerEdge
    {standard input}:2281   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 $t
    {standard input}:2286   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 XMC_VADC_GROUP_ScanSelectGating
    {standard input}:2339   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 $t
    {standard input}:2344   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 XMC_VADC_GROUP_ScanSequenceAbort
    {standard input}:2417   .text.XMC_VADC_GROUP_ScanSequenceAbort:0000007c $d
    {standard input}:2422   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 $t
    {standard input}:2427   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 XMC_VADC_GROUP_ScanGetNumChannelsPending
    {standard input}:2500   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:2505   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
    {standard input}:2554   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 $t
    {standard input}:2559   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 XMC_VADC_GROUP_ScanRemoveChannel
    {standard input}:2606   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 $t
    {standard input}:2611   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 XMC_VADC_GLOBAL_BackgroundInit
    {standard input}:2762   .text.XMC_VADC_GLOBAL_BackgroundInit:000000f8 $d
    {standard input}:2767   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 $t
    {standard input}:2772   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 XMC_VADC_GLOBAL_BackgroundSelectTrigger
    {standard input}:2824   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 $t
    {standard input}:2829   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
    {standard input}:2882   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 $t
    {standard input}:2887   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 XMC_VADC_GLOBAL_BackgroundSelectGating
    {standard input}:2939   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 $t
    {standard input}:2944   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 XMC_VADC_GLOBAL_BackgroundAbortSequence
    {standard input}:3049   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:000000a8 $d
    {standard input}:3055   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 $t
    {standard input}:3060   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
    {standard input}:3151   .text.XMC_VADC_GROUP_QueueInit:00000000 $t
    {standard input}:3156   .text.XMC_VADC_GROUP_QueueInit:00000000 XMC_VADC_GROUP_QueueInit
    {standard input}:3249   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 $t
    {standard input}:3254   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 XMC_VADC_GROUP_QueueSelectTrigger
    {standard input}:3307   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 $t
    {standard input}:3312   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 XMC_VADC_GROUP_QueueSelectTriggerEdge
    {standard input}:3365   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 $t
    {standard input}:3370   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 XMC_VADC_GROUP_QueueSelectGating
    {standard input}:3423   .text.XMC_VADC_GROUP_QueueGetLength:00000000 $t
    {standard input}:3428   .text.XMC_VADC_GROUP_QueueGetLength:00000000 XMC_VADC_GROUP_QueueGetLength
    {standard input}:3494   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 $t
    {standard input}:3499   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 XMC_VADC_GROUP_QueueAbortSequence
    {standard input}:3563   .text.XMC_VADC_GROUP_QueueAbortSequence:00000064 $d
    {standard input}:3568   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 $t
    {standard input}:3573   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 XMC_VADC_GROUP_QueueRemoveChannel
    {standard input}:3666   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000094 $d
    {standard input}:3671   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 $t
    {standard input}:3676   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 XMC_VADC_GROUP_QueueGetNextChannel
    {standard input}:3738   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 $t
    {standard input}:3743   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 XMC_VADC_GROUP_QueueGetInterruptedChannel
    {standard input}:3792   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:3797   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
    {standard input}:3845   .text.XMC_VADC_GROUP_ChannelInit:00000000 $t
    {standard input}:3850   .text.XMC_VADC_GROUP_ChannelInit:00000000 XMC_VADC_GROUP_ChannelInit
    {standard input}:3973   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 $t
    {standard input}:3978   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 XMC_VADC_GROUP_ChannelIsResultOutOfBounds
    {standard input}:4053   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 $t
    {standard input}:4058   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 XMC_VADC_GROUP_ChannelSetInputReference
    {standard input}:4112   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 $t
    {standard input}:4117   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 XMC_VADC_GROUP_ChannelSetResultRegister
    {standard input}:4170   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 $t
    {standard input}:4175   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 XMC_VADC_GROUP_ChannelSetIclass
    {standard input}:4228   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 $t
    {standard input}:4233   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 XMC_VADC_GROUP_ChannelGetResultRegister
    {standard input}:4274   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 $t
    {standard input}:4279   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 XMC_VADC_GROUP_ChannelTriggerEvent
    {standard input}:4324   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 $t
    {standard input}:4329   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 XMC_VADC_GROUP_ChannelSetEventInterruptNode
    {standard input}:4387   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 $t
    {standard input}:4392   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
    {standard input}:4446   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 $t
    {standard input}:4451   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 XMC_VADC_GROUP_ChannelSetBoundarySelection
    {standard input}:4515   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 $t
    {standard input}:4520   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 XMC_VADC_GROUP_AddResultToFifo
    {standard input}:4570   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 $t
    {standard input}:4575   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 XMC_VADC_GROUP_SetResultFastCompareValue
    {standard input}:4630   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 $t
    {standard input}:4635   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 XMC_VADC_GROUP_GetFastCompareResult
    {standard input}:4690   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 $t
    {standard input}:4695   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 XMC_VADC_GROUP_SetResultSubtractionValue
    {standard input}:4744   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 $t
    {standard input}:4749   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 XMC_VADC_GROUP_SetResultInterruptNode
    {standard input}:4844   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 $t
    {standard input}:4849   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 XMC_VADC_GROUP_GetResultFifoTail
    {standard input}:5052   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 XMC_VADC_GROUP_IsResultRegisterFifoHead
    {standard input}:4962   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 $t
    {standard input}:4967   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 XMC_VADC_GROUP_GetResultFifoHead
    {standard input}:5047   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
