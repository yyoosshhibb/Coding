   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_flash.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FLASH_lEnterPageModeCommand
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB151:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc4_flash.c"
   1:../Libraries/XMCLib/src/xmc4_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../Libraries/XMCLib/src/xmc4_flash.c ****  * @date 2016-01-08
   4:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_flash.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_flash.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_flash.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc4_flash.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_flash.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  39:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  40:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  42:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-06-20: 
  43:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  45:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-08-17: 
  46:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added the below API's to the public interface.
  47:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  48:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  49:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  50:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  51:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  52:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  53:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2016-01-08: 
  54:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  55:../Libraries/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  56:../Libraries/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  57:../Libraries/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  58:../Libraries/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  59:../Libraries/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  60:../Libraries/XMCLib/src/xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  61:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  62:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  63:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2018-02-08
  64:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Added implementation of XMC_FLASH_InstallBMI()
  65:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  66:../Libraries/XMCLib/src/xmc4_flash.c ****  * @endcond 
  67:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  68:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  69:../Libraries/XMCLib/src/xmc4_flash.c **** 
  70:../Libraries/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  71:../Libraries/XMCLib/src/xmc4_flash.c **** 
  72:../Libraries/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  73:../Libraries/XMCLib/src/xmc4_flash.c **** 
  74:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc4_flash.c ****  * MACROS
  76:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc4_flash.c **** 
  78:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  79:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  80:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_BMI_STRING_WORDS (10UL) /* Used to upadte the assembly buffer during BMI String
  81:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  82:../Libraries/XMCLib/src/xmc4_flash.c **** 
  83:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  84:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  85:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  86:../Libraries/XMCLib/src/xmc4_flash.c **** 
  87:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  89:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  91:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  92:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  93:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  94:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
  95:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
  96:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
  97:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
  98:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
  99:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
 100:../Libraries/XMCLib/src/xmc4_flash.c **** 
 101:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 102:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
 103:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 104:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
 105:../Libraries/XMCLib/src/xmc4_flash.c **** {
  28              	 .loc 1 105 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	 .cfi_def_cfa_register 7
 106:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 107:../Libraries/XMCLib/src/xmc4_flash.c **** 
 108:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  40              	 .loc 1 108 0
  41 0006 054B     	 ldr r3,.L2
  42 0008 7B60     	 str r3,[r7,#4]
 109:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = (uint32_t)0x50U;
  43              	 .loc 1 109 0
  44 000a 7B68     	 ldr r3,[r7,#4]
  45 000c 5022     	 movs r2,#80
  46 000e 1A60     	 str r2,[r3]
 110:../Libraries/XMCLib/src/xmc4_flash.c **** }
  47              	 .loc 1 110 0
  48 0010 0C37     	 adds r7,r7,#12
  49              	 .cfi_def_cfa_offset 4
  50 0012 BD46     	 mov sp,r7
  51              	 .cfi_def_cfa_register 13
  52              	 
  53 0014 5DF8047B 	 ldr r7,[sp],#4
  54              	 .cfi_restore 7
  55              	 .cfi_def_cfa_offset 0
  56 0018 7047     	 bx lr
  57              	.L3:
  58 001a 00BF     	 .align 2
  59              	.L2:
  60 001c 5455000C 	 .word 201348436
  61              	 .cfi_endproc
  62              	.LFE151:
  64              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  65              	 .align 2
  66              	 .global XMC_FLASH_lLoadPageCommand
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_FLASH_lLoadPageCommand:
  71              	.LFB152:
 111:../Libraries/XMCLib/src/xmc4_flash.c **** 
 112:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 113:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
 114:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 115:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 116:../Libraries/XMCLib/src/xmc4_flash.c **** {
  72              	 .loc 1 116 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	 .cfi_def_cfa_offset 4
  79              	 .cfi_offset 7,-4
  80 0002 85B0     	 sub sp,sp,#20
  81              	 .cfi_def_cfa_offset 24
  82 0004 00AF     	 add r7,sp,#0
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
  85 0008 3960     	 str r1,[r7]
 117:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 118:../Libraries/XMCLib/src/xmc4_flash.c **** 
 119:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
  86              	 .loc 1 119 0
  87 000a 074B     	 ldr r3,.L5
  88 000c FB60     	 str r3,[r7,#12]
 120:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = low_word;
  89              	 .loc 1 120 0
  90 000e FB68     	 ldr r3,[r7,#12]
  91 0010 7A68     	 ldr r2,[r7,#4]
  92 0012 1A60     	 str r2,[r3]
 121:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
  93              	 .loc 1 121 0
  94 0014 054B     	 ldr r3,.L5+4
  95 0016 FB60     	 str r3,[r7,#12]
 122:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = high_word;
  96              	 .loc 1 122 0
  97 0018 FB68     	 ldr r3,[r7,#12]
  98 001a 3A68     	 ldr r2,[r7]
  99 001c 1A60     	 str r2,[r3]
 123:../Libraries/XMCLib/src/xmc4_flash.c **** }
 100              	 .loc 1 123 0
 101 001e 1437     	 adds r7,r7,#20
 102              	 .cfi_def_cfa_offset 4
 103 0020 BD46     	 mov sp,r7
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 0022 5DF8047B 	 ldr r7,[sp],#4
 107              	 .cfi_restore 7
 108              	 .cfi_def_cfa_offset 0
 109 0026 7047     	 bx lr
 110              	.L6:
 111              	 .align 2
 112              	.L5:
 113 0028 F055000C 	 .word 201348592
 114 002c F455000C 	 .word 201348596
 115              	 .cfi_endproc
 116              	.LFE152:
 118              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
 119              	 .align 2
 120              	 .global XMC_FLASH_lWritePageCommand
 121              	 .thumb
 122              	 .thumb_func
 124              	XMC_FLASH_lWritePageCommand:
 125              	.LFB153:
 124:../Libraries/XMCLib/src/xmc4_flash.c **** 
 125:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 126:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 127:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 128:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 129:../Libraries/XMCLib/src/xmc4_flash.c **** {
 126              	 .loc 1 129 0
 127              	 .cfi_startproc
 128              	 
 129              	 
 130              	 
 131 0000 80B4     	 push {r7}
 132              	 .cfi_def_cfa_offset 4
 133              	 .cfi_offset 7,-4
 134 0002 85B0     	 sub sp,sp,#20
 135              	 .cfi_def_cfa_offset 24
 136 0004 00AF     	 add r7,sp,#0
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 130:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 131:../Libraries/XMCLib/src/xmc4_flash.c **** 
 132:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 139              	 .loc 1 132 0
 140 0008 0C4B     	 ldr r3,.L8
 141 000a FB60     	 str r3,[r7,#12]
 133:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 142              	 .loc 1 133 0
 143 000c FB68     	 ldr r3,[r7,#12]
 144 000e AA22     	 movs r2,#170
 145 0010 1A60     	 str r2,[r3]
 134:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 146              	 .loc 1 134 0
 147 0012 0B4B     	 ldr r3,.L8+4
 148 0014 FB60     	 str r3,[r7,#12]
 135:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 149              	 .loc 1 135 0
 150 0016 FB68     	 ldr r3,[r7,#12]
 151 0018 5522     	 movs r2,#85
 152 001a 1A60     	 str r2,[r3]
 136:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 153              	 .loc 1 136 0
 154 001c 074B     	 ldr r3,.L8
 155 001e FB60     	 str r3,[r7,#12]
 137:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 156              	 .loc 1 137 0
 157 0020 FB68     	 ldr r3,[r7,#12]
 158 0022 A022     	 movs r2,#160
 159 0024 1A60     	 str r2,[r3]
 138:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 160              	 .loc 1 138 0
 161 0026 7B68     	 ldr r3,[r7,#4]
 162 0028 FB60     	 str r3,[r7,#12]
 139:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 163              	 .loc 1 139 0
 164 002a FB68     	 ldr r3,[r7,#12]
 165 002c AA22     	 movs r2,#170
 166 002e 1A60     	 str r2,[r3]
 140:../Libraries/XMCLib/src/xmc4_flash.c **** }
 167              	 .loc 1 140 0
 168 0030 1437     	 adds r7,r7,#20
 169              	 .cfi_def_cfa_offset 4
 170 0032 BD46     	 mov sp,r7
 171              	 .cfi_def_cfa_register 13
 172              	 
 173 0034 5DF8047B 	 ldr r7,[sp],#4
 174              	 .cfi_restore 7
 175              	 .cfi_def_cfa_offset 0
 176 0038 7047     	 bx lr
 177              	.L9:
 178 003a 00BF     	 .align 2
 179              	.L8:
 180 003c 5455000C 	 .word 201348436
 181 0040 A8AA000C 	 .word 201370280
 182              	 .cfi_endproc
 183              	.LFE153:
 185              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 186              	 .align 2
 187              	 .global XMC_FLASH_lWriteUCBPageCommand
 188              	 .thumb
 189              	 .thumb_func
 191              	XMC_FLASH_lWriteUCBPageCommand:
 192              	.LFB154:
 141:../Libraries/XMCLib/src/xmc4_flash.c **** 
 142:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 143:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 144:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 145:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 146:../Libraries/XMCLib/src/xmc4_flash.c **** {
 193              	 .loc 1 146 0
 194              	 .cfi_startproc
 195              	 
 196              	 
 197              	 
 198 0000 80B4     	 push {r7}
 199              	 .cfi_def_cfa_offset 4
 200              	 .cfi_offset 7,-4
 201 0002 85B0     	 sub sp,sp,#20
 202              	 .cfi_def_cfa_offset 24
 203 0004 00AF     	 add r7,sp,#0
 204              	 .cfi_def_cfa_register 7
 205 0006 7860     	 str r0,[r7,#4]
 147:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 148:../Libraries/XMCLib/src/xmc4_flash.c **** 
 149:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 206              	 .loc 1 149 0
 207 0008 0C4B     	 ldr r3,.L11
 208 000a FB60     	 str r3,[r7,#12]
 150:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 209              	 .loc 1 150 0
 210 000c FB68     	 ldr r3,[r7,#12]
 211 000e AA22     	 movs r2,#170
 212 0010 1A60     	 str r2,[r3]
 151:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 213              	 .loc 1 151 0
 214 0012 0B4B     	 ldr r3,.L11+4
 215 0014 FB60     	 str r3,[r7,#12]
 152:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 216              	 .loc 1 152 0
 217 0016 FB68     	 ldr r3,[r7,#12]
 218 0018 5522     	 movs r2,#85
 219 001a 1A60     	 str r2,[r3]
 153:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 220              	 .loc 1 153 0
 221 001c 074B     	 ldr r3,.L11
 222 001e FB60     	 str r3,[r7,#12]
 154:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 223              	 .loc 1 154 0
 224 0020 FB68     	 ldr r3,[r7,#12]
 225 0022 C022     	 movs r2,#192
 226 0024 1A60     	 str r2,[r3]
 155:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 227              	 .loc 1 155 0
 228 0026 7B68     	 ldr r3,[r7,#4]
 229 0028 FB60     	 str r3,[r7,#12]
 156:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 230              	 .loc 1 156 0
 231 002a FB68     	 ldr r3,[r7,#12]
 232 002c AA22     	 movs r2,#170
 233 002e 1A60     	 str r2,[r3]
 157:../Libraries/XMCLib/src/xmc4_flash.c **** }
 234              	 .loc 1 157 0
 235 0030 1437     	 adds r7,r7,#20
 236              	 .cfi_def_cfa_offset 4
 237 0032 BD46     	 mov sp,r7
 238              	 .cfi_def_cfa_register 13
 239              	 
 240 0034 5DF8047B 	 ldr r7,[sp],#4
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0038 7047     	 bx lr
 244              	.L12:
 245 003a 00BF     	 .align 2
 246              	.L11:
 247 003c 5455000C 	 .word 201348436
 248 0040 A8AA000C 	 .word 201370280
 249              	 .cfi_endproc
 250              	.LFE154:
 252              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 253              	 .align 2
 254              	 .global XMC_FLASH_lEraseSectorCommand
 255              	 .thumb
 256              	 .thumb_func
 258              	XMC_FLASH_lEraseSectorCommand:
 259              	.LFB155:
 158:../Libraries/XMCLib/src/xmc4_flash.c **** 
 159:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 160:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 161:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 162:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 163:../Libraries/XMCLib/src/xmc4_flash.c **** {
 260              	 .loc 1 163 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265 0000 80B4     	 push {r7}
 266              	 .cfi_def_cfa_offset 4
 267              	 .cfi_offset 7,-4
 268 0002 85B0     	 sub sp,sp,#20
 269              	 .cfi_def_cfa_offset 24
 270 0004 00AF     	 add r7,sp,#0
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
 164:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 165:../Libraries/XMCLib/src/xmc4_flash.c **** 
 166:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 273              	 .loc 1 166 0
 274 0008 114B     	 ldr r3,.L14
 275 000a FB60     	 str r3,[r7,#12]
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 276              	 .loc 1 167 0
 277 000c FB68     	 ldr r3,[r7,#12]
 278 000e AA22     	 movs r2,#170
 279 0010 1A60     	 str r2,[r3]
 168:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 280              	 .loc 1 168 0
 281 0012 104B     	 ldr r3,.L14+4
 282 0014 FB60     	 str r3,[r7,#12]
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 283              	 .loc 1 169 0
 284 0016 FB68     	 ldr r3,[r7,#12]
 285 0018 5522     	 movs r2,#85
 286 001a 1A60     	 str r2,[r3]
 170:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 287              	 .loc 1 170 0
 288 001c 0C4B     	 ldr r3,.L14
 289 001e FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 290              	 .loc 1 171 0
 291 0020 FB68     	 ldr r3,[r7,#12]
 292 0022 8022     	 movs r2,#128
 293 0024 1A60     	 str r2,[r3]
 172:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 294              	 .loc 1 172 0
 295 0026 0A4B     	 ldr r3,.L14
 296 0028 FB60     	 str r3,[r7,#12]
 173:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 297              	 .loc 1 173 0
 298 002a FB68     	 ldr r3,[r7,#12]
 299 002c AA22     	 movs r2,#170
 300 002e 1A60     	 str r2,[r3]
 174:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 301              	 .loc 1 174 0
 302 0030 084B     	 ldr r3,.L14+4
 303 0032 FB60     	 str r3,[r7,#12]
 175:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 304              	 .loc 1 175 0
 305 0034 FB68     	 ldr r3,[r7,#12]
 306 0036 5522     	 movs r2,#85
 307 0038 1A60     	 str r2,[r3]
 176:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 308              	 .loc 1 176 0
 309 003a 7B68     	 ldr r3,[r7,#4]
 310 003c FB60     	 str r3,[r7,#12]
 177:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 311              	 .loc 1 177 0
 312 003e FB68     	 ldr r3,[r7,#12]
 313 0040 3022     	 movs r2,#48
 314 0042 1A60     	 str r2,[r3]
 178:../Libraries/XMCLib/src/xmc4_flash.c **** }
 315              	 .loc 1 178 0
 316 0044 1437     	 adds r7,r7,#20
 317              	 .cfi_def_cfa_offset 4
 318 0046 BD46     	 mov sp,r7
 319              	 .cfi_def_cfa_register 13
 320              	 
 321 0048 5DF8047B 	 ldr r7,[sp],#4
 322              	 .cfi_restore 7
 323              	 .cfi_def_cfa_offset 0
 324 004c 7047     	 bx lr
 325              	.L15:
 326 004e 00BF     	 .align 2
 327              	.L14:
 328 0050 5455000C 	 .word 201348436
 329 0054 A8AA000C 	 .word 201370280
 330              	 .cfi_endproc
 331              	.LFE155:
 333              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 334              	 .align 2
 335              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 336              	 .thumb
 337              	 .thumb_func
 339              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 340              	.LFB156:
 179:../Libraries/XMCLib/src/xmc4_flash.c **** 
 180:../Libraries/XMCLib/src/xmc4_flash.c **** 
 181:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 182:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 183:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 184:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 185:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 186:../Libraries/XMCLib/src/xmc4_flash.c **** {
 341              	 .loc 1 186 0
 342              	 .cfi_startproc
 343              	 
 344              	 
 345              	 
 346 0000 80B4     	 push {r7}
 347              	 .cfi_def_cfa_offset 4
 348              	 .cfi_offset 7,-4
 349 0002 87B0     	 sub sp,sp,#28
 350              	 .cfi_def_cfa_offset 32
 351 0004 00AF     	 add r7,sp,#0
 352              	 .cfi_def_cfa_register 7
 353 0006 F860     	 str r0,[r7,#12]
 354 0008 B960     	 str r1,[r7,#8]
 355 000a 7A60     	 str r2,[r7,#4]
 187:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 188:../Libraries/XMCLib/src/xmc4_flash.c **** 
 189:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 356              	 .loc 1 189 0
 357 000c 114B     	 ldr r3,.L17
 358 000e 7B61     	 str r3,[r7,#20]
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 359              	 .loc 1 190 0
 360 0010 7B69     	 ldr r3,[r7,#20]
 361 0012 AA22     	 movs r2,#170
 362 0014 1A60     	 str r2,[r3]
 191:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 363              	 .loc 1 191 0
 364 0016 104B     	 ldr r3,.L17+4
 365 0018 7B61     	 str r3,[r7,#20]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 366              	 .loc 1 192 0
 367 001a 7B69     	 ldr r3,[r7,#20]
 368 001c 5522     	 movs r2,#85
 369 001e 1A60     	 str r2,[r3]
 193:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 370              	 .loc 1 193 0
 371 0020 0E4B     	 ldr r3,.L17+8
 372 0022 7B61     	 str r3,[r7,#20]
 194:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = user;
 373              	 .loc 1 194 0
 374 0024 7B69     	 ldr r3,[r7,#20]
 375 0026 FA68     	 ldr r2,[r7,#12]
 376 0028 1A60     	 str r2,[r3]
 195:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 377              	 .loc 1 195 0
 378 002a 0B4B     	 ldr r3,.L17+4
 379 002c 7B61     	 str r3,[r7,#20]
 196:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 380              	 .loc 1 196 0
 381 002e 7B69     	 ldr r3,[r7,#20]
 382 0030 BA68     	 ldr r2,[r7,#8]
 383 0032 1A60     	 str r2,[r3]
 197:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 384              	 .loc 1 197 0
 385 0034 084B     	 ldr r3,.L17+4
 386 0036 7B61     	 str r3,[r7,#20]
 198:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 387              	 .loc 1 198 0
 388 0038 7B69     	 ldr r3,[r7,#20]
 389 003a 7A68     	 ldr r2,[r7,#4]
 390 003c 1A60     	 str r2,[r3]
 199:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 391              	 .loc 1 199 0
 392 003e 084B     	 ldr r3,.L17+12
 393 0040 7B61     	 str r3,[r7,#20]
 200:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 394              	 .loc 1 200 0
 395 0042 7B69     	 ldr r3,[r7,#20]
 396 0044 0522     	 movs r2,#5
 397 0046 1A60     	 str r2,[r3]
 201:../Libraries/XMCLib/src/xmc4_flash.c **** }
 398              	 .loc 1 201 0
 399 0048 1C37     	 adds r7,r7,#28
 400              	 .cfi_def_cfa_offset 4
 401 004a BD46     	 mov sp,r7
 402              	 .cfi_def_cfa_register 13
 403              	 
 404 004c 5DF8047B 	 ldr r7,[sp],#4
 405              	 .cfi_restore 7
 406              	 .cfi_def_cfa_offset 0
 407 0050 7047     	 bx lr
 408              	.L18:
 409 0052 00BF     	 .align 2
 410              	.L17:
 411 0054 5455000C 	 .word 201348436
 412 0058 A8AA000C 	 .word 201370280
 413 005c 3C55000C 	 .word 201348412
 414 0060 5855000C 	 .word 201348440
 415              	 .cfi_endproc
 416              	.LFE156:
 418              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 419              	 .align 2
 420              	 .global XMC_FLASH_lDisableReadProtectionCommand
 421              	 .thumb
 422              	 .thumb_func
 424              	XMC_FLASH_lDisableReadProtectionCommand:
 425              	.LFB157:
 202:../Libraries/XMCLib/src/xmc4_flash.c **** 
 203:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 204:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 205:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 206:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 207:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 208:../Libraries/XMCLib/src/xmc4_flash.c **** {
 426              	 .loc 1 208 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430              	 
 431 0000 80B4     	 push {r7}
 432              	 .cfi_def_cfa_offset 4
 433              	 .cfi_offset 7,-4
 434 0002 85B0     	 sub sp,sp,#20
 435              	 .cfi_def_cfa_offset 24
 436 0004 00AF     	 add r7,sp,#0
 437              	 .cfi_def_cfa_register 7
 438 0006 7860     	 str r0,[r7,#4]
 439 0008 3960     	 str r1,[r7]
 209:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 210:../Libraries/XMCLib/src/xmc4_flash.c **** 
 211:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 440              	 .loc 1 211 0
 441 000a 114B     	 ldr r3,.L20
 442 000c FB60     	 str r3,[r7,#12]
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 443              	 .loc 1 212 0
 444 000e FB68     	 ldr r3,[r7,#12]
 445 0010 AA22     	 movs r2,#170
 446 0012 1A60     	 str r2,[r3]
 213:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 447              	 .loc 1 213 0
 448 0014 0F4B     	 ldr r3,.L20+4
 449 0016 FB60     	 str r3,[r7,#12]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 450              	 .loc 1 214 0
 451 0018 FB68     	 ldr r3,[r7,#12]
 452 001a 5522     	 movs r2,#85
 453 001c 1A60     	 str r2,[r3]
 215:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 454              	 .loc 1 215 0
 455 001e 0E4B     	 ldr r3,.L20+8
 456 0020 FB60     	 str r3,[r7,#12]
 216:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 457              	 .loc 1 216 0
 458 0022 FB68     	 ldr r3,[r7,#12]
 459 0024 0022     	 movs r2,#0
 460 0026 1A60     	 str r2,[r3]
 217:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 461              	 .loc 1 217 0
 462 0028 0A4B     	 ldr r3,.L20+4
 463 002a FB60     	 str r3,[r7,#12]
 218:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 464              	 .loc 1 218 0
 465 002c FB68     	 ldr r3,[r7,#12]
 466 002e 7A68     	 ldr r2,[r7,#4]
 467 0030 1A60     	 str r2,[r3]
 219:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 468              	 .loc 1 219 0
 469 0032 084B     	 ldr r3,.L20+4
 470 0034 FB60     	 str r3,[r7,#12]
 220:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 471              	 .loc 1 220 0
 472 0036 FB68     	 ldr r3,[r7,#12]
 473 0038 3A68     	 ldr r2,[r7]
 474 003a 1A60     	 str r2,[r3]
 221:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 475              	 .loc 1 221 0
 476 003c 074B     	 ldr r3,.L20+12
 477 003e FB60     	 str r3,[r7,#12]
 222:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 478              	 .loc 1 222 0
 479 0040 FB68     	 ldr r3,[r7,#12]
 480 0042 0822     	 movs r2,#8
 481 0044 1A60     	 str r2,[r3]
 223:../Libraries/XMCLib/src/xmc4_flash.c **** }
 482              	 .loc 1 223 0
 483 0046 1437     	 adds r7,r7,#20
 484              	 .cfi_def_cfa_offset 4
 485 0048 BD46     	 mov sp,r7
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 004a 5DF8047B 	 ldr r7,[sp],#4
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 004e 7047     	 bx lr
 492              	.L21:
 493              	 .align 2
 494              	.L20:
 495 0050 5455000C 	 .word 201348436
 496 0054 A8AA000C 	 .word 201370280
 497 0058 3C55000C 	 .word 201348412
 498 005c 5855000C 	 .word 201348440
 499              	 .cfi_endproc
 500              	.LFE157:
 502              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 503              	 .align 2
 504              	 .global XMC_FLASH_lClearStatusCommand
 505              	 .thumb
 506              	 .thumb_func
 508              	XMC_FLASH_lClearStatusCommand:
 509              	.LFB158:
 224:../Libraries/XMCLib/src/xmc4_flash.c **** 
 225:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 226:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 227:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 228:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 229:../Libraries/XMCLib/src/xmc4_flash.c **** {
 510              	 .loc 1 229 0
 511              	 .cfi_startproc
 512              	 
 513              	 
 514              	 
 515 0000 80B4     	 push {r7}
 516              	 .cfi_def_cfa_offset 4
 517              	 .cfi_offset 7,-4
 518 0002 83B0     	 sub sp,sp,#12
 519              	 .cfi_def_cfa_offset 16
 520 0004 00AF     	 add r7,sp,#0
 521              	 .cfi_def_cfa_register 7
 230:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 231:../Libraries/XMCLib/src/xmc4_flash.c **** 
 232:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 522              	 .loc 1 232 0
 523 0006 054B     	 ldr r3,.L23
 524 0008 7B60     	 str r3,[r7,#4]
 233:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 525              	 .loc 1 233 0
 526 000a 7B68     	 ldr r3,[r7,#4]
 527 000c F522     	 movs r2,#245
 528 000e 1A60     	 str r2,[r3]
 234:../Libraries/XMCLib/src/xmc4_flash.c **** }
 529              	 .loc 1 234 0
 530 0010 0C37     	 adds r7,r7,#12
 531              	 .cfi_def_cfa_offset 4
 532 0012 BD46     	 mov sp,r7
 533              	 .cfi_def_cfa_register 13
 534              	 
 535 0014 5DF8047B 	 ldr r7,[sp],#4
 536              	 .cfi_restore 7
 537              	 .cfi_def_cfa_offset 0
 538 0018 7047     	 bx lr
 539              	.L24:
 540 001a 00BF     	 .align 2
 541              	.L23:
 542 001c 5455000C 	 .word 201348436
 543              	 .cfi_endproc
 544              	.LFE158:
 546              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 547              	 .align 2
 548              	 .global XMC_FLASH_ClearStatus
 549              	 .thumb
 550              	 .thumb_func
 552              	XMC_FLASH_ClearStatus:
 553              	.LFB159:
 235:../Libraries/XMCLib/src/xmc4_flash.c **** 
 236:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 237:../Libraries/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 238:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 239:../Libraries/XMCLib/src/xmc4_flash.c **** 
 240:../Libraries/XMCLib/src/xmc4_flash.c ****  /*
 241:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 242:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 243:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 244:../Libraries/XMCLib/src/xmc4_flash.c **** {
 554              	 .loc 1 244 0
 555              	 .cfi_startproc
 556              	 
 557              	 
 558 0000 80B5     	 push {r7,lr}
 559              	 .cfi_def_cfa_offset 8
 560              	 .cfi_offset 7,-8
 561              	 .cfi_offset 14,-4
 562 0002 00AF     	 add r7,sp,#0
 563              	 .cfi_def_cfa_register 7
 245:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 564              	 .loc 1 245 0
 565 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 246:../Libraries/XMCLib/src/xmc4_flash.c **** }
 566              	 .loc 1 246 0
 567 0008 80BD     	 pop {r7,pc}
 568              	 .cfi_endproc
 569              	.LFE159:
 571 000a 00BF     	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 572              	 .align 2
 573              	 .global XMC_FLASH_GetStatus
 574              	 .thumb
 575              	 .thumb_func
 577              	XMC_FLASH_GetStatus:
 578              	.LFB160:
 247:../Libraries/XMCLib/src/xmc4_flash.c **** 
 248:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 249:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 250:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 251:../Libraries/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 252:../Libraries/XMCLib/src/xmc4_flash.c **** {
 579              	 .loc 1 252 0
 580              	 .cfi_startproc
 581              	 
 582              	 
 583              	 
 584 0000 80B4     	 push {r7}
 585              	 .cfi_def_cfa_offset 4
 586              	 .cfi_offset 7,-4
 587 0002 00AF     	 add r7,sp,#0
 588              	 .cfi_def_cfa_register 7
 253:../Libraries/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 589              	 .loc 1 253 0
 590 0004 044B     	 ldr r3,.L28
 591 0006 03F58053 	 add r3,r3,#4096
 592 000a 1033     	 adds r3,r3,#16
 593 000c 1B68     	 ldr r3,[r3]
 254:../Libraries/XMCLib/src/xmc4_flash.c **** }
 594              	 .loc 1 254 0
 595 000e 1846     	 mov r0,r3
 596 0010 BD46     	 mov sp,r7
 597              	 .cfi_def_cfa_register 13
 598              	 
 599 0012 5DF8047B 	 ldr r7,[sp],#4
 600              	 .cfi_restore 7
 601              	 .cfi_def_cfa_offset 0
 602 0016 7047     	 bx lr
 603              	.L29:
 604              	 .align 2
 605              	.L28:
 606 0018 00100058 	 .word 1476399104
 607              	 .cfi_endproc
 608              	.LFE160:
 610              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 611              	 .align 2
 612              	 .global XMC_FLASH_EnableEvent
 613              	 .thumb
 614              	 .thumb_func
 616              	XMC_FLASH_EnableEvent:
 617              	.LFB161:
 255:../Libraries/XMCLib/src/xmc4_flash.c **** 
 256:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 257:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 258:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 259:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 260:../Libraries/XMCLib/src/xmc4_flash.c **** {
 618              	 .loc 1 260 0
 619              	 .cfi_startproc
 620              	 
 621              	 
 622              	 
 623 0000 80B4     	 push {r7}
 624              	 .cfi_def_cfa_offset 4
 625              	 .cfi_offset 7,-4
 626 0002 83B0     	 sub sp,sp,#12
 627              	 .cfi_def_cfa_offset 16
 628 0004 00AF     	 add r7,sp,#0
 629              	 .cfi_def_cfa_register 7
 630 0006 7860     	 str r0,[r7,#4]
 261:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 631              	 .loc 1 261 0
 632 0008 0849     	 ldr r1,.L31
 633 000a 084B     	 ldr r3,.L31
 634 000c 03F58053 	 add r3,r3,#4096
 635 0010 1433     	 adds r3,r3,#20
 636 0012 1A68     	 ldr r2,[r3]
 637 0014 7B68     	 ldr r3,[r7,#4]
 638 0016 1A43     	 orrs r2,r2,r3
 639 0018 01F58053 	 add r3,r1,#4096
 640 001c 1433     	 adds r3,r3,#20
 641 001e 1A60     	 str r2,[r3]
 262:../Libraries/XMCLib/src/xmc4_flash.c **** }
 642              	 .loc 1 262 0
 643 0020 0C37     	 adds r7,r7,#12
 644              	 .cfi_def_cfa_offset 4
 645 0022 BD46     	 mov sp,r7
 646              	 .cfi_def_cfa_register 13
 647              	 
 648 0024 5DF8047B 	 ldr r7,[sp],#4
 649              	 .cfi_restore 7
 650              	 .cfi_def_cfa_offset 0
 651 0028 7047     	 bx lr
 652              	.L32:
 653 002a 00BF     	 .align 2
 654              	.L31:
 655 002c 00100058 	 .word 1476399104
 656              	 .cfi_endproc
 657              	.LFE161:
 659              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 660              	 .align 2
 661              	 .global XMC_FLASH_DisableEvent
 662              	 .thumb
 663              	 .thumb_func
 665              	XMC_FLASH_DisableEvent:
 666              	.LFB162:
 263:../Libraries/XMCLib/src/xmc4_flash.c **** 
 264:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 265:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation 
 266:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 267:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 268:../Libraries/XMCLib/src/xmc4_flash.c **** {
 667              	 .loc 1 268 0
 668              	 .cfi_startproc
 669              	 
 670              	 
 671              	 
 672 0000 80B4     	 push {r7}
 673              	 .cfi_def_cfa_offset 4
 674              	 .cfi_offset 7,-4
 675 0002 83B0     	 sub sp,sp,#12
 676              	 .cfi_def_cfa_offset 16
 677 0004 00AF     	 add r7,sp,#0
 678              	 .cfi_def_cfa_register 7
 679 0006 7860     	 str r0,[r7,#4]
 269:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 680              	 .loc 1 269 0
 681 0008 0849     	 ldr r1,.L34
 682 000a 084B     	 ldr r3,.L34
 683 000c 03F58053 	 add r3,r3,#4096
 684 0010 1433     	 adds r3,r3,#20
 685 0012 1A68     	 ldr r2,[r3]
 686 0014 7B68     	 ldr r3,[r7,#4]
 687 0016 DB43     	 mvns r3,r3
 688 0018 1A40     	 ands r2,r2,r3
 689 001a 01F58053 	 add r3,r1,#4096
 690 001e 1433     	 adds r3,r3,#20
 691 0020 1A60     	 str r2,[r3]
 270:../Libraries/XMCLib/src/xmc4_flash.c **** }
 692              	 .loc 1 270 0
 693 0022 0C37     	 adds r7,r7,#12
 694              	 .cfi_def_cfa_offset 4
 695 0024 BD46     	 mov sp,r7
 696              	 .cfi_def_cfa_register 13
 697              	 
 698 0026 5DF8047B 	 ldr r7,[sp],#4
 699              	 .cfi_restore 7
 700              	 .cfi_def_cfa_offset 0
 701 002a 7047     	 bx lr
 702              	.L35:
 703              	 .align 2
 704              	.L34:
 705 002c 00100058 	 .word 1476399104
 706              	 .cfi_endproc
 707              	.LFE162:
 709              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 710              	 .align 2
 711              	 .global XMC_FLASH_ProgramPage
 712              	 .thumb
 713              	 .thumb_func
 715              	XMC_FLASH_ProgramPage:
 716              	.LFB163:
 271:../Libraries/XMCLib/src/xmc4_flash.c **** 
 272:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 273:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 274:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 275:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 276:../Libraries/XMCLib/src/xmc4_flash.c **** {
 717              	 .loc 1 276 0
 718              	 .cfi_startproc
 719              	 
 720              	 
 721 0000 80B5     	 push {r7,lr}
 722              	 .cfi_def_cfa_offset 8
 723              	 .cfi_offset 7,-8
 724              	 .cfi_offset 14,-4
 725 0002 84B0     	 sub sp,sp,#16
 726              	 .cfi_def_cfa_offset 24
 727 0004 00AF     	 add r7,sp,#0
 728              	 .cfi_def_cfa_register 7
 729 0006 7860     	 str r0,[r7,#4]
 730 0008 3960     	 str r1,[r7]
 277:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 278:../Libraries/XMCLib/src/xmc4_flash.c **** 
 279:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 731              	 .loc 1 279 0
 732 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 280:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 733              	 .loc 1 280 0
 734 000e FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 281:../Libraries/XMCLib/src/xmc4_flash.c **** 
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 735              	 .loc 1 282 0
 736 0012 0023     	 movs r3,#0
 737 0014 FB60     	 str r3,[r7,#12]
 738 0016 11E0     	 b .L37
 739              	.L38:
 283:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 284:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 740              	 .loc 1 284 0 discriminator 3
 741 0018 FB68     	 ldr r3,[r7,#12]
 742 001a 9B00     	 lsls r3,r3,#2
 743 001c 3A68     	 ldr r2,[r7]
 744 001e 1344     	 add r3,r3,r2
 745 0020 1968     	 ldr r1,[r3]
 746 0022 FB68     	 ldr r3,[r7,#12]
 747 0024 0133     	 adds r3,r3,#1
 748 0026 9B00     	 lsls r3,r3,#2
 749 0028 3A68     	 ldr r2,[r7]
 750 002a 1344     	 add r3,r3,r2
 751 002c 1B68     	 ldr r3,[r3]
 752 002e 0846     	 mov r0,r1
 753 0030 1946     	 mov r1,r3
 754 0032 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 755              	 .loc 1 282 0 discriminator 3
 756 0036 FB68     	 ldr r3,[r7,#12]
 757 0038 0233     	 adds r3,r3,#2
 758 003a FB60     	 str r3,[r7,#12]
 759              	.L37:
 282:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 760              	 .loc 1 282 0 is_stmt 0 discriminator 1
 761 003c FB68     	 ldr r3,[r7,#12]
 762 003e 3F2B     	 cmp r3,#63
 763 0040 EAD9     	 bls .L38
 285:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 286:../Libraries/XMCLib/src/xmc4_flash.c **** 
 287:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 764              	 .loc 1 287 0 is_stmt 1
 765 0042 7868     	 ldr r0,[r7,#4]
 766 0044 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 288:../Libraries/XMCLib/src/xmc4_flash.c **** 
 289:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 290:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 767              	 .loc 1 290 0
 768 0048 00BF     	 nop
 769              	.L39:
 770              	 .loc 1 290 0 is_stmt 0 discriminator 1
 771 004a 064B     	 ldr r3,.L40
 772 004c 03F58053 	 add r3,r3,#4096
 773 0050 1033     	 adds r3,r3,#16
 774 0052 1B68     	 ldr r3,[r3]
 775 0054 03F00103 	 and r3,r3,#1
 776 0058 002B     	 cmp r3,#0
 777 005a F6D1     	 bne .L39
 291:../Libraries/XMCLib/src/xmc4_flash.c **** }
 778              	 .loc 1 291 0 is_stmt 1
 779 005c 1037     	 adds r7,r7,#16
 780              	 .cfi_def_cfa_offset 8
 781 005e BD46     	 mov sp,r7
 782              	 .cfi_def_cfa_register 13
 783              	 
 784 0060 80BD     	 pop {r7,pc}
 785              	.L41:
 786 0062 00BF     	 .align 2
 787              	.L40:
 788 0064 00100058 	 .word 1476399104
 789              	 .cfi_endproc
 790              	.LFE163:
 792              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 793              	 .align 2
 794              	 .global XMC_FLASH_EraseSector
 795              	 .thumb
 796              	 .thumb_func
 798              	XMC_FLASH_EraseSector:
 799              	.LFB164:
 292:../Libraries/XMCLib/src/xmc4_flash.c **** 
 293:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 294:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the logical sector
 295:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 296:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 297:../Libraries/XMCLib/src/xmc4_flash.c **** {
 800              	 .loc 1 297 0
 801              	 .cfi_startproc
 802              	 
 803              	 
 804 0000 80B5     	 push {r7,lr}
 805              	 .cfi_def_cfa_offset 8
 806              	 .cfi_offset 7,-8
 807              	 .cfi_offset 14,-4
 808 0002 82B0     	 sub sp,sp,#8
 809              	 .cfi_def_cfa_offset 16
 810 0004 00AF     	 add r7,sp,#0
 811              	 .cfi_def_cfa_register 7
 812 0006 7860     	 str r0,[r7,#4]
 298:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 813              	 .loc 1 298 0
 814 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 299:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 815              	 .loc 1 299 0
 816 000c 7868     	 ldr r0,[r7,#4]
 817 000e FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 300:../Libraries/XMCLib/src/xmc4_flash.c **** 
 301:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 302:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 818              	 .loc 1 302 0
 819 0012 00BF     	 nop
 820              	.L43:
 821              	 .loc 1 302 0 is_stmt 0 discriminator 1
 822 0014 054B     	 ldr r3,.L44
 823 0016 03F58053 	 add r3,r3,#4096
 824 001a 1033     	 adds r3,r3,#16
 825 001c 1B68     	 ldr r3,[r3]
 826 001e 03F00103 	 and r3,r3,#1
 827 0022 002B     	 cmp r3,#0
 828 0024 F6D1     	 bne .L43
 303:../Libraries/XMCLib/src/xmc4_flash.c **** }
 829              	 .loc 1 303 0 is_stmt 1
 830 0026 0837     	 adds r7,r7,#8
 831              	 .cfi_def_cfa_offset 8
 832 0028 BD46     	 mov sp,r7
 833              	 .cfi_def_cfa_register 13
 834              	 
 835 002a 80BD     	 pop {r7,pc}
 836              	.L45:
 837              	 .align 2
 838              	.L44:
 839 002c 00100058 	 .word 1476399104
 840              	 .cfi_endproc
 841              	.LFE164:
 843              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 844              	 .align 2
 845              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 846              	 .thumb
 847              	 .thumb_func
 849              	XMC_FLASH_lErasePhysicalSectorCommand:
 850              	.LFB165:
 304:../Libraries/XMCLib/src/xmc4_flash.c **** 
 305:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 306:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 307:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 308:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 309:../Libraries/XMCLib/src/xmc4_flash.c **** {
 851              	 .loc 1 309 0
 852              	 .cfi_startproc
 853              	 
 854              	 
 855              	 
 856 0000 80B4     	 push {r7}
 857              	 .cfi_def_cfa_offset 4
 858              	 .cfi_offset 7,-4
 859 0002 85B0     	 sub sp,sp,#20
 860              	 .cfi_def_cfa_offset 24
 861 0004 00AF     	 add r7,sp,#0
 862              	 .cfi_def_cfa_register 7
 863 0006 7860     	 str r0,[r7,#4]
 310:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 311:../Libraries/XMCLib/src/xmc4_flash.c **** 
 312:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 864              	 .loc 1 312 0
 865 0008 114B     	 ldr r3,.L47
 866 000a FB60     	 str r3,[r7,#12]
 313:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 867              	 .loc 1 313 0
 868 000c FB68     	 ldr r3,[r7,#12]
 869 000e AA22     	 movs r2,#170
 870 0010 1A60     	 str r2,[r3]
 314:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 871              	 .loc 1 314 0
 872 0012 104B     	 ldr r3,.L47+4
 873 0014 FB60     	 str r3,[r7,#12]
 315:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 874              	 .loc 1 315 0
 875 0016 FB68     	 ldr r3,[r7,#12]
 876 0018 5522     	 movs r2,#85
 877 001a 1A60     	 str r2,[r3]
 316:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 878              	 .loc 1 316 0
 879 001c 0C4B     	 ldr r3,.L47
 880 001e FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 881              	 .loc 1 317 0
 882 0020 FB68     	 ldr r3,[r7,#12]
 883 0022 8022     	 movs r2,#128
 884 0024 1A60     	 str r2,[r3]
 318:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 885              	 .loc 1 318 0
 886 0026 0A4B     	 ldr r3,.L47
 887 0028 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 888              	 .loc 1 319 0
 889 002a FB68     	 ldr r3,[r7,#12]
 890 002c AA22     	 movs r2,#170
 891 002e 1A60     	 str r2,[r3]
 320:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 892              	 .loc 1 320 0
 893 0030 084B     	 ldr r3,.L47+4
 894 0032 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 895              	 .loc 1 321 0
 896 0034 FB68     	 ldr r3,[r7,#12]
 897 0036 5522     	 movs r2,#85
 898 0038 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 899              	 .loc 1 322 0
 900 003a 7B68     	 ldr r3,[r7,#4]
 901 003c FB60     	 str r3,[r7,#12]
 323:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 902              	 .loc 1 323 0
 903 003e FB68     	 ldr r3,[r7,#12]
 904 0040 4022     	 movs r2,#64
 905 0042 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc4_flash.c **** }
 906              	 .loc 1 324 0
 907 0044 1437     	 adds r7,r7,#20
 908              	 .cfi_def_cfa_offset 4
 909 0046 BD46     	 mov sp,r7
 910              	 .cfi_def_cfa_register 13
 911              	 
 912 0048 5DF8047B 	 ldr r7,[sp],#4
 913              	 .cfi_restore 7
 914              	 .cfi_def_cfa_offset 0
 915 004c 7047     	 bx lr
 916              	.L48:
 917 004e 00BF     	 .align 2
 918              	.L47:
 919 0050 5455000C 	 .word 201348436
 920 0054 A8AA000C 	 .word 201370280
 921              	 .cfi_endproc
 922              	.LFE165:
 924              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 925              	 .align 2
 926              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 927              	 .thumb
 928              	 .thumb_func
 930              	XMC_FLASH_lRepairPhysicalSectorCommand:
 931              	.LFB166:
 325:../Libraries/XMCLib/src/xmc4_flash.c **** 
 326:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 327:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 328:../Libraries/XMCLib/src/xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 329:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 330:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 331:../Libraries/XMCLib/src/xmc4_flash.c **** {
 932              	 .loc 1 331 0
 933              	 .cfi_startproc
 934              	 
 935              	 
 936              	 
 937 0000 80B4     	 push {r7}
 938              	 .cfi_def_cfa_offset 4
 939              	 .cfi_offset 7,-4
 940 0002 83B0     	 sub sp,sp,#12
 941              	 .cfi_def_cfa_offset 16
 942 0004 00AF     	 add r7,sp,#0
 943              	 .cfi_def_cfa_register 7
 332:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 333:../Libraries/XMCLib/src/xmc4_flash.c **** 
 334:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 944              	 .loc 1 334 0
 945 0006 114B     	 ldr r3,.L50
 946 0008 7B60     	 str r3,[r7,#4]
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 947              	 .loc 1 335 0
 948 000a 7B68     	 ldr r3,[r7,#4]
 949 000c AA22     	 movs r2,#170
 950 000e 1A60     	 str r2,[r3]
 336:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 951              	 .loc 1 336 0
 952 0010 0F4B     	 ldr r3,.L50+4
 953 0012 7B60     	 str r3,[r7,#4]
 337:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 954              	 .loc 1 337 0
 955 0014 7B68     	 ldr r3,[r7,#4]
 956 0016 5522     	 movs r2,#85
 957 0018 1A60     	 str r2,[r3]
 338:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 958              	 .loc 1 338 0
 959 001a 0C4B     	 ldr r3,.L50
 960 001c 7B60     	 str r3,[r7,#4]
 339:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 961              	 .loc 1 339 0
 962 001e 7B68     	 ldr r3,[r7,#4]
 963 0020 8022     	 movs r2,#128
 964 0022 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 965              	 .loc 1 340 0
 966 0024 094B     	 ldr r3,.L50
 967 0026 7B60     	 str r3,[r7,#4]
 341:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 968              	 .loc 1 341 0
 969 0028 7B68     	 ldr r3,[r7,#4]
 970 002a AA22     	 movs r2,#170
 971 002c 1A60     	 str r2,[r3]
 342:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 972              	 .loc 1 342 0
 973 002e 084B     	 ldr r3,.L50+4
 974 0030 7B60     	 str r3,[r7,#4]
 343:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 975              	 .loc 1 343 0
 976 0032 7B68     	 ldr r3,[r7,#4]
 977 0034 5522     	 movs r2,#85
 978 0036 1A60     	 str r2,[r3]
 344:../Libraries/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 979              	 .loc 1 344 0
 980 0038 064B     	 ldr r3,.L50+8
 981 003a 7B60     	 str r3,[r7,#4]
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 982              	 .loc 1 345 0
 983 003c 7B68     	 ldr r3,[r7,#4]
 984 003e 4022     	 movs r2,#64
 985 0040 1A60     	 str r2,[r3]
 346:../Libraries/XMCLib/src/xmc4_flash.c **** }
 986              	 .loc 1 346 0
 987 0042 0C37     	 adds r7,r7,#12
 988              	 .cfi_def_cfa_offset 4
 989 0044 BD46     	 mov sp,r7
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 0046 5DF8047B 	 ldr r7,[sp],#4
 993              	 .cfi_restore 7
 994              	 .cfi_def_cfa_offset 0
 995 004a 7047     	 bx lr
 996              	.L51:
 997              	 .align 2
 998              	.L50:
 999 004c 5455000C 	 .word 201348436
 1000 0050 A8AA000C 	 .word 201370280
 1001 0054 0000010C 	 .word 201392128
 1002              	 .cfi_endproc
 1003              	.LFE166:
 1005              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 1006              	 .align 2
 1007              	 .global XMC_FLASH_ErasePhysicalSector
 1008              	 .thumb
 1009              	 .thumb_func
 1011              	XMC_FLASH_ErasePhysicalSector:
 1012              	.LFB167:
 347:../Libraries/XMCLib/src/xmc4_flash.c **** 
 348:../Libraries/XMCLib/src/xmc4_flash.c ****  /* 
 349:../Libraries/XMCLib/src/xmc4_flash.c ****   * This API erase the physical sector
 350:../Libraries/XMCLib/src/xmc4_flash.c ****   */
 351:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 352:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1013              	 .loc 1 352 0
 1014              	 .cfi_startproc
 1015              	 
 1016              	 
 1017 0000 80B5     	 push {r7,lr}
 1018              	 .cfi_def_cfa_offset 8
 1019              	 .cfi_offset 7,-8
 1020              	 .cfi_offset 14,-4
 1021 0002 82B0     	 sub sp,sp,#8
 1022              	 .cfi_def_cfa_offset 16
 1023 0004 00AF     	 add r7,sp,#0
 1024              	 .cfi_def_cfa_register 7
 1025 0006 7860     	 str r0,[r7,#4]
 353:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1026              	 .loc 1 353 0
 1027 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 354:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 1028              	 .loc 1 354 0
 1029 000c 7868     	 ldr r0,[r7,#4]
 1030 000e FFF7FEFF 	 bl XMC_FLASH_lErasePhysicalSectorCommand
 355:../Libraries/XMCLib/src/xmc4_flash.c **** 
 356:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 357:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1031              	 .loc 1 357 0
 1032 0012 00BF     	 nop
 1033              	.L53:
 1034              	 .loc 1 357 0 is_stmt 0 discriminator 1
 1035 0014 054B     	 ldr r3,.L54
 1036 0016 03F58053 	 add r3,r3,#4096
 1037 001a 1033     	 adds r3,r3,#16
 1038 001c 1B68     	 ldr r3,[r3]
 1039 001e 03F00103 	 and r3,r3,#1
 1040 0022 002B     	 cmp r3,#0
 1041 0024 F6D1     	 bne .L53
 358:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1042              	 .loc 1 358 0 is_stmt 1
 1043 0026 0837     	 adds r7,r7,#8
 1044              	 .cfi_def_cfa_offset 8
 1045 0028 BD46     	 mov sp,r7
 1046              	 .cfi_def_cfa_register 13
 1047              	 
 1048 002a 80BD     	 pop {r7,pc}
 1049              	.L55:
 1050              	 .align 2
 1051              	.L54:
 1052 002c 00100058 	 .word 1476399104
 1053              	 .cfi_endproc
 1054              	.LFE167:
 1056              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 1057              	 .align 2
 1058              	 .global XMC_FLASH_RepairPhysicalSector
 1059              	 .thumb
 1060              	 .thumb_func
 1062              	XMC_FLASH_RepairPhysicalSector:
 1063              	.LFB168:
 359:../Libraries/XMCLib/src/xmc4_flash.c **** 
 360:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 361:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API repair the physical sector
 362:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 363:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 364:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1064              	 .loc 1 364 0
 1065              	 .cfi_startproc
 1066              	 
 1067              	 
 1068 0000 80B5     	 push {r7,lr}
 1069              	 .cfi_def_cfa_offset 8
 1070              	 .cfi_offset 7,-8
 1071              	 .cfi_offset 14,-4
 1072 0002 00AF     	 add r7,sp,#0
 1073              	 .cfi_def_cfa_register 7
 365:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1074              	 .loc 1 365 0
 1075 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 366:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 1076              	 .loc 1 366 0
 1077 0008 FFF7FEFF 	 bl XMC_FLASH_lRepairPhysicalSectorCommand
 367:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1078              	 .loc 1 367 0
 1079 000c 80BD     	 pop {r7,pc}
 1080              	 .cfi_endproc
 1081              	.LFE168:
 1083 000e 00BF     	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 1084              	 .align 2
 1085              	 .global XMC_FLASH_EraseUCB
 1086              	 .thumb
 1087              	 .thumb_func
 1089              	XMC_FLASH_EraseUCB:
 1090              	.LFB169:
 368:../Libraries/XMCLib/src/xmc4_flash.c **** 
 369:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 370:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 371:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 372:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 373:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1091              	 .loc 1 373 0
 1092              	 .cfi_startproc
 1093              	 
 1094              	 
 1095              	 
 1096 0000 80B4     	 push {r7}
 1097              	 .cfi_def_cfa_offset 4
 1098              	 .cfi_offset 7,-4
 1099 0002 85B0     	 sub sp,sp,#20
 1100              	 .cfi_def_cfa_offset 24
 1101 0004 00AF     	 add r7,sp,#0
 1102              	 .cfi_def_cfa_register 7
 1103 0006 7860     	 str r0,[r7,#4]
 374:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 375:../Libraries/XMCLib/src/xmc4_flash.c **** 
 376:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1104              	 .loc 1 376 0
 1105 0008 164B     	 ldr r3,.L59
 1106 000a FB60     	 str r3,[r7,#12]
 377:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1107              	 .loc 1 377 0
 1108 000c FB68     	 ldr r3,[r7,#12]
 1109 000e AA22     	 movs r2,#170
 1110 0010 1A60     	 str r2,[r3]
 378:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1111              	 .loc 1 378 0
 1112 0012 154B     	 ldr r3,.L59+4
 1113 0014 FB60     	 str r3,[r7,#12]
 379:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1114              	 .loc 1 379 0
 1115 0016 FB68     	 ldr r3,[r7,#12]
 1116 0018 5522     	 movs r2,#85
 1117 001a 1A60     	 str r2,[r3]
 380:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1118              	 .loc 1 380 0
 1119 001c 114B     	 ldr r3,.L59
 1120 001e FB60     	 str r3,[r7,#12]
 381:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1121              	 .loc 1 381 0
 1122 0020 FB68     	 ldr r3,[r7,#12]
 1123 0022 8022     	 movs r2,#128
 1124 0024 1A60     	 str r2,[r3]
 382:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1125              	 .loc 1 382 0
 1126 0026 0F4B     	 ldr r3,.L59
 1127 0028 FB60     	 str r3,[r7,#12]
 383:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1128              	 .loc 1 383 0
 1129 002a FB68     	 ldr r3,[r7,#12]
 1130 002c AA22     	 movs r2,#170
 1131 002e 1A60     	 str r2,[r3]
 384:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1132              	 .loc 1 384 0
 1133 0030 0D4B     	 ldr r3,.L59+4
 1134 0032 FB60     	 str r3,[r7,#12]
 385:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1135              	 .loc 1 385 0
 1136 0034 FB68     	 ldr r3,[r7,#12]
 1137 0036 5522     	 movs r2,#85
 1138 0038 1A60     	 str r2,[r3]
 386:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 1139              	 .loc 1 386 0
 1140 003a 7B68     	 ldr r3,[r7,#4]
 1141 003c FB60     	 str r3,[r7,#12]
 387:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 1142              	 .loc 1 387 0
 1143 003e FB68     	 ldr r3,[r7,#12]
 1144 0040 C022     	 movs r2,#192
 1145 0042 1A60     	 str r2,[r3]
 388:../Libraries/XMCLib/src/xmc4_flash.c **** 
 389:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 390:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1146              	 .loc 1 390 0
 1147 0044 00BF     	 nop
 1148              	.L58:
 1149              	 .loc 1 390 0 is_stmt 0 discriminator 1
 1150 0046 094B     	 ldr r3,.L59+8
 1151 0048 03F58053 	 add r3,r3,#4096
 1152 004c 1033     	 adds r3,r3,#16
 1153 004e 1B68     	 ldr r3,[r3]
 1154 0050 03F00103 	 and r3,r3,#1
 1155 0054 002B     	 cmp r3,#0
 1156 0056 F6D1     	 bne .L58
 391:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1157              	 .loc 1 391 0 is_stmt 1
 1158 0058 1437     	 adds r7,r7,#20
 1159              	 .cfi_def_cfa_offset 4
 1160 005a BD46     	 mov sp,r7
 1161              	 .cfi_def_cfa_register 13
 1162              	 
 1163 005c 5DF8047B 	 ldr r7,[sp],#4
 1164              	 .cfi_restore 7
 1165              	 .cfi_def_cfa_offset 0
 1166 0060 7047     	 bx lr
 1167              	.L60:
 1168 0062 00BF     	 .align 2
 1169              	.L59:
 1170 0064 5455000C 	 .word 201348436
 1171 0068 A8AA000C 	 .word 201370280
 1172 006c 00100058 	 .word 1476399104
 1173              	 .cfi_endproc
 1174              	.LFE169:
 1176              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 1177              	 .align 2
 1178              	 .global XMC_FLASH_Reset
 1179              	 .thumb
 1180              	 .thumb_func
 1182              	XMC_FLASH_Reset:
 1183              	.LFB170:
 392:../Libraries/XMCLib/src/xmc4_flash.c **** 
 393:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 394:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
 395:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 396:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_Reset(void)
 397:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1184              	 .loc 1 397 0
 1185              	 .cfi_startproc
 1186              	 
 1187              	 
 1188              	 
 1189 0000 80B4     	 push {r7}
 1190              	 .cfi_def_cfa_offset 4
 1191              	 .cfi_offset 7,-4
 1192 0002 83B0     	 sub sp,sp,#12
 1193              	 .cfi_def_cfa_offset 16
 1194 0004 00AF     	 add r7,sp,#0
 1195              	 .cfi_def_cfa_register 7
 398:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 399:../Libraries/XMCLib/src/xmc4_flash.c **** 
 400:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1196              	 .loc 1 400 0
 1197 0006 054B     	 ldr r3,.L62
 1198 0008 7B60     	 str r3,[r7,#4]
 401:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
 1199              	 .loc 1 401 0
 1200 000a 7B68     	 ldr r3,[r7,#4]
 1201 000c F022     	 movs r2,#240
 1202 000e 1A60     	 str r2,[r3]
 402:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1203              	 .loc 1 402 0
 1204 0010 0C37     	 adds r7,r7,#12
 1205              	 .cfi_def_cfa_offset 4
 1206 0012 BD46     	 mov sp,r7
 1207              	 .cfi_def_cfa_register 13
 1208              	 
 1209 0014 5DF8047B 	 ldr r7,[sp],#4
 1210              	 .cfi_restore 7
 1211              	 .cfi_def_cfa_offset 0
 1212 0018 7047     	 bx lr
 1213              	.L63:
 1214 001a 00BF     	 .align 2
 1215              	.L62:
 1216 001c 5455000C 	 .word 201348436
 1217              	 .cfi_endproc
 1218              	.LFE170:
 1220              	 .section .text.XMC_FLASH_InstallBMI,"ax",%progbits
 1221              	 .align 2
 1222              	 .global XMC_FLASH_InstallBMI
 1223              	 .thumb
 1224              	 .thumb_func
 1226              	XMC_FLASH_InstallBMI:
 1227              	.LFB171:
 403:../Libraries/XMCLib/src/xmc4_flash.c **** 
 404:../Libraries/XMCLib/src/xmc4_flash.c **** #define BMI_STRING_BYTE_CNT 30
 405:../Libraries/XMCLib/src/xmc4_flash.c **** 
 406:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallBMI(XMC_FLASH_BMI_STRING_t *const bmi_string)
 407:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1228              	 .loc 1 407 0
 1229              	 .cfi_startproc
 1230              	 
 1231              	 
 1232 0000 80B5     	 push {r7,lr}
 1233              	 .cfi_def_cfa_offset 8
 1234              	 .cfi_offset 7,-8
 1235              	 .cfi_offset 14,-4
 1236 0002 86B0     	 sub sp,sp,#24
 1237              	 .cfi_def_cfa_offset 32
 1238 0004 00AF     	 add r7,sp,#0
 1239              	 .cfi_def_cfa_register 7
 1240 0006 7860     	 str r0,[r7,#4]
 408:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t checksum = 0;
 1241              	 .loc 1 408 0
 1242 0008 0023     	 movs r3,#0
 1243 000a 7B61     	 str r3,[r7,#20]
 1244              	.LBB2:
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1245              	 .loc 1 409 0
 1246 000c 0023     	 movs r3,#0
 1247 000e 3B61     	 str r3,[r7,#16]
 1248 0010 0AE0     	 b .L65
 1249              	.L66:
 410:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 411:../Libraries/XMCLib/src/xmc4_flash.c **** 	checksum ^= ((const uint8_t *)bmi_string)[i];
 1250              	 .loc 1 411 0 discriminator 3
 1251 0012 3B69     	 ldr r3,[r7,#16]
 1252 0014 7A68     	 ldr r2,[r7,#4]
 1253 0016 1344     	 add r3,r3,r2
 1254 0018 1B78     	 ldrb r3,[r3]
 1255 001a 1A46     	 mov r2,r3
 1256 001c 7B69     	 ldr r3,[r7,#20]
 1257 001e 5340     	 eors r3,r3,r2
 1258 0020 7B61     	 str r3,[r7,#20]
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1259              	 .loc 1 409 0 discriminator 3
 1260 0022 3B69     	 ldr r3,[r7,#16]
 1261 0024 0133     	 adds r3,r3,#1
 1262 0026 3B61     	 str r3,[r7,#16]
 1263              	.L65:
 409:../Libraries/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1264              	 .loc 1 409 0 is_stmt 0 discriminator 1
 1265 0028 3B69     	 ldr r3,[r7,#16]
 1266 002a 1D2B     	 cmp r3,#29
 1267 002c F1DD     	 ble .L66
 1268              	.LBE2:
 412:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 413:../Libraries/XMCLib/src/xmc4_flash.c **** 
 414:../Libraries/XMCLib/src/xmc4_flash.c ****   bmi_string->reserved = checksum;
 1269              	 .loc 1 414 0 is_stmt 1
 1270 002e 7B68     	 ldr r3,[r7,#4]
 1271 0030 7A69     	 ldr r2,[r7,#20]
 1272 0032 1A62     	 str r2,[r3,#32]
 415:../Libraries/XMCLib/src/xmc4_flash.c **** 
 416:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1273              	 .loc 1 416 0
 1274 0034 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 417:../Libraries/XMCLib/src/xmc4_flash.c **** 
 418:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[0], ((const uint32_t *)bmi_string)[1]);
 1275              	 .loc 1 418 0
 1276 0038 7B68     	 ldr r3,[r7,#4]
 1277 003a 1A68     	 ldr r2,[r3]
 1278 003c 7B68     	 ldr r3,[r7,#4]
 1279 003e 0433     	 adds r3,r3,#4
 1280 0040 1B68     	 ldr r3,[r3]
 1281 0042 1046     	 mov r0,r2
 1282 0044 1946     	 mov r1,r3
 1283 0046 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 419:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[2], ((const uint32_t *)bmi_string)[3]);
 1284              	 .loc 1 419 0
 1285 004a 7B68     	 ldr r3,[r7,#4]
 1286 004c 0833     	 adds r3,r3,#8
 1287 004e 1A68     	 ldr r2,[r3]
 1288 0050 7B68     	 ldr r3,[r7,#4]
 1289 0052 0C33     	 adds r3,r3,#12
 1290 0054 1B68     	 ldr r3,[r3]
 1291 0056 1046     	 mov r0,r2
 1292 0058 1946     	 mov r1,r3
 1293 005a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 420:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[4], ((const uint32_t *)bmi_string)[5]);
 1294              	 .loc 1 420 0
 1295 005e 7B68     	 ldr r3,[r7,#4]
 1296 0060 1033     	 adds r3,r3,#16
 1297 0062 1A68     	 ldr r2,[r3]
 1298 0064 7B68     	 ldr r3,[r7,#4]
 1299 0066 1433     	 adds r3,r3,#20
 1300 0068 1B68     	 ldr r3,[r3]
 1301 006a 1046     	 mov r0,r2
 1302 006c 1946     	 mov r1,r3
 1303 006e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 421:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[6], ((const uint32_t *)bmi_string)[7]);
 1304              	 .loc 1 421 0
 1305 0072 7B68     	 ldr r3,[r7,#4]
 1306 0074 1833     	 adds r3,r3,#24
 1307 0076 1A68     	 ldr r2,[r3]
 1308 0078 7B68     	 ldr r3,[r7,#4]
 1309 007a 1C33     	 adds r3,r3,#28
 1310 007c 1B68     	 ldr r3,[r3]
 1311 007e 1046     	 mov r0,r2
 1312 0080 1946     	 mov r1,r3
 1313 0082 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 422:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[8], 0);
 1314              	 .loc 1 422 0
 1315 0086 7B68     	 ldr r3,[r7,#4]
 1316 0088 2033     	 adds r3,r3,#32
 1317 008a 1B68     	 ldr r3,[r3]
 1318 008c 1846     	 mov r0,r3
 1319 008e 0021     	 movs r1,#0
 1320 0090 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 1321              	.LBB3:
 423:../Libraries/XMCLib/src/xmc4_flash.c **** 
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   for (uint32_t idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_BMI_STRING_WORDS); idx += 2U)
 1322              	 .loc 1 424 0
 1323 0094 0023     	 movs r3,#0
 1324 0096 FB60     	 str r3,[r7,#12]
 1325 0098 06E0     	 b .L67
 1326              	.L68:
 425:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 426:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1327              	 .loc 1 426 0 discriminator 3
 1328 009a 0020     	 movs r0,#0
 1329 009c 0021     	 movs r1,#0
 1330 009e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1331              	 .loc 1 424 0 discriminator 3
 1332 00a2 FB68     	 ldr r3,[r7,#12]
 1333 00a4 0233     	 adds r3,r3,#2
 1334 00a6 FB60     	 str r3,[r7,#12]
 1335              	.L67:
 424:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1336              	 .loc 1 424 0 is_stmt 0 discriminator 1
 1337 00a8 FB68     	 ldr r3,[r7,#12]
 1338 00aa 352B     	 cmp r3,#53
 1339 00ac F5D9     	 bls .L68
 1340              	.LBE3:
 427:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 428:../Libraries/XMCLib/src/xmc4_flash.c **** 
 429:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB2 + XMC_FLASH_BYTES_PER_PAGE))
 1341              	 .loc 1 429 0 is_stmt 1
 1342 00ae 0848     	 ldr r0,.L70
 1343 00b0 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 430:../Libraries/XMCLib/src/xmc4_flash.c **** 
 431:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 432:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1344              	 .loc 1 432 0
 1345 00b4 00BF     	 nop
 1346              	.L69:
 1347              	 .loc 1 432 0 is_stmt 0 discriminator 1
 1348 00b6 074B     	 ldr r3,.L70+4
 1349 00b8 03F58053 	 add r3,r3,#4096
 1350 00bc 1033     	 adds r3,r3,#16
 1351 00be 1B68     	 ldr r3,[r3]
 1352 00c0 03F00103 	 and r3,r3,#1
 1353 00c4 002B     	 cmp r3,#0
 1354 00c6 F6D1     	 bne .L69
 433:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1355              	 .loc 1 433 0 is_stmt 1
 1356 00c8 1837     	 adds r7,r7,#24
 1357              	 .cfi_def_cfa_offset 8
 1358 00ca BD46     	 mov sp,r7
 1359              	 .cfi_def_cfa_register 13
 1360              	 
 1361 00cc 80BD     	 pop {r7,pc}
 1362              	.L71:
 1363 00ce 00BF     	 .align 2
 1364              	.L70:
 1365 00d0 0009000C 	 .word 201328896
 1366 00d4 00100058 	 .word 1476399104
 1367              	 .cfi_endproc
 1368              	.LFE171:
 1370              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1371              	 .align 2
 1372              	 .global XMC_FLASH_InstallProtection
 1373              	 .thumb
 1374              	 .thumb_func
 1376              	XMC_FLASH_InstallProtection:
 1377              	.LFB172:
 434:../Libraries/XMCLib/src/xmc4_flash.c **** 
 435:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 436:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 437:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 438:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 439:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 440:../Libraries/XMCLib/src/xmc4_flash.c **** 	                             uint32_t password_0,
 441:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 442:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1378              	 .loc 1 442 0
 1379              	 .cfi_startproc
 1380              	 
 1381              	 
 1382 0000 80B5     	 push {r7,lr}
 1383              	 .cfi_def_cfa_offset 8
 1384              	 .cfi_offset 7,-8
 1385              	 .cfi_offset 14,-4
 1386 0002 86B0     	 sub sp,sp,#24
 1387              	 .cfi_def_cfa_offset 32
 1388 0004 00AF     	 add r7,sp,#0
 1389              	 .cfi_def_cfa_register 7
 1390 0006 B960     	 str r1,[r7,#8]
 1391 0008 7A60     	 str r2,[r7,#4]
 1392 000a 3B60     	 str r3,[r7]
 1393 000c 0346     	 mov r3,r0
 1394 000e FB73     	 strb r3,[r7,#15]
 443:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 444:../Libraries/XMCLib/src/xmc4_flash.c ****   
 445:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 446:../Libraries/XMCLib/src/xmc4_flash.c **** 
 447:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1395              	 .loc 1 447 0
 1396 0010 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 448:../Libraries/XMCLib/src/xmc4_flash.c **** 
 449:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1397              	 .loc 1 449 0
 1398 0014 B868     	 ldr r0,[r7,#8]
 1399 0016 0021     	 movs r1,#0
 1400 0018 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 450:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1401              	 .loc 1 450 0
 1402 001c B868     	 ldr r0,[r7,#8]
 1403 001e 0021     	 movs r1,#0
 1404 0020 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 451:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1405              	 .loc 1 451 0
 1406 0024 7868     	 ldr r0,[r7,#4]
 1407 0026 3968     	 ldr r1,[r7]
 1408 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 452:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1409              	 .loc 1 452 0
 1410 002c 7868     	 ldr r0,[r7,#4]
 1411 002e 3968     	 ldr r1,[r7]
 1412 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 453:../Libraries/XMCLib/src/xmc4_flash.c ****   
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1413              	 .loc 1 454 0
 1414 0034 0023     	 movs r3,#0
 1415 0036 7B61     	 str r3,[r7,#20]
 1416 0038 06E0     	 b .L73
 1417              	.L74:
 455:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 456:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1418              	 .loc 1 456 0 discriminator 3
 1419 003a 0020     	 movs r0,#0
 1420 003c 0021     	 movs r1,#0
 1421 003e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1422              	 .loc 1 454 0 discriminator 3
 1423 0042 7B69     	 ldr r3,[r7,#20]
 1424 0044 0233     	 adds r3,r3,#2
 1425 0046 7B61     	 str r3,[r7,#20]
 1426              	.L73:
 454:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1427              	 .loc 1 454 0 is_stmt 0 discriminator 1
 1428 0048 7B69     	 ldr r3,[r7,#20]
 1429 004a 372B     	 cmp r3,#55
 1430 004c F5D9     	 bls .L74
 457:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 458:../Libraries/XMCLib/src/xmc4_flash.c **** 
 459:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1431              	 .loc 1 459 0 is_stmt 1
 1432 004e FB7B     	 ldrb r3,[r7,#15]
 1433 0050 03F54033 	 add r3,r3,#196608
 1434 0054 9B02     	 lsls r3,r3,#10
 1435 0056 1846     	 mov r0,r3
 1436 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 460:../Libraries/XMCLib/src/xmc4_flash.c **** 
 461:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 462:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1437              	 .loc 1 462 0
 1438 005c 00BF     	 nop
 1439              	.L75:
 1440              	 .loc 1 462 0 is_stmt 0 discriminator 1
 1441 005e 064B     	 ldr r3,.L76
 1442 0060 03F58053 	 add r3,r3,#4096
 1443 0064 1033     	 adds r3,r3,#16
 1444 0066 1B68     	 ldr r3,[r3]
 1445 0068 03F00103 	 and r3,r3,#1
 1446 006c 002B     	 cmp r3,#0
 1447 006e F6D1     	 bne .L75
 463:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1448              	 .loc 1 463 0 is_stmt 1
 1449 0070 1837     	 adds r7,r7,#24
 1450              	 .cfi_def_cfa_offset 8
 1451 0072 BD46     	 mov sp,r7
 1452              	 .cfi_def_cfa_register 13
 1453              	 
 1454 0074 80BD     	 pop {r7,pc}
 1455              	.L77:
 1456 0076 00BF     	 .align 2
 1457              	.L76:
 1458 0078 00100058 	 .word 1476399104
 1459              	 .cfi_endproc
 1460              	.LFE172:
 1462              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1463              	 .align 2
 1464              	 .global XMC_FLASH_ConfirmProtection
 1465              	 .thumb
 1466              	 .thumb_func
 1468              	XMC_FLASH_ConfirmProtection:
 1469              	.LFB173:
 464:../Libraries/XMCLib/src/xmc4_flash.c **** 
 465:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 466:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 467:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 468:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 469:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1470              	 .loc 1 469 0
 1471              	 .cfi_startproc
 1472              	 
 1473              	 
 1474 0000 80B5     	 push {r7,lr}
 1475              	 .cfi_def_cfa_offset 8
 1476              	 .cfi_offset 7,-8
 1477              	 .cfi_offset 14,-4
 1478 0002 84B0     	 sub sp,sp,#16
 1479              	 .cfi_def_cfa_offset 24
 1480 0004 00AF     	 add r7,sp,#0
 1481              	 .cfi_def_cfa_register 7
 1482 0006 0346     	 mov r3,r0
 1483 0008 FB71     	 strb r3,[r7,#7]
 470:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 471:../Libraries/XMCLib/src/xmc4_flash.c **** 
 472:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 473:../Libraries/XMCLib/src/xmc4_flash.c **** 
 474:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1484              	 .loc 1 474 0
 1485 000a FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 475:../Libraries/XMCLib/src/xmc4_flash.c **** 
 476:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1486              	 .loc 1 476 0
 1487 000e 1548     	 ldr r0,.L82
 1488 0010 0021     	 movs r1,#0
 1489 0012 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 477:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1490              	 .loc 1 477 0
 1491 0016 1348     	 ldr r0,.L82
 1492 0018 0021     	 movs r1,#0
 1493 001a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 478:../Libraries/XMCLib/src/xmc4_flash.c **** 
 479:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1494              	 .loc 1 480 0
 1495 001e 0023     	 movs r3,#0
 1496 0020 FB60     	 str r3,[r7,#12]
 1497 0022 06E0     	 b .L79
 1498              	.L80:
 481:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 482:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1499              	 .loc 1 482 0 discriminator 3
 1500 0024 0020     	 movs r0,#0
 1501 0026 0021     	 movs r1,#0
 1502 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1503              	 .loc 1 480 0 discriminator 3
 1504 002c FB68     	 ldr r3,[r7,#12]
 1505 002e 0233     	 adds r3,r3,#2
 1506 0030 FB60     	 str r3,[r7,#12]
 1507              	.L79:
 480:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1508              	 .loc 1 480 0 is_stmt 0 discriminator 1
 1509 0032 FB68     	 ldr r3,[r7,#12]
 1510 0034 3B2B     	 cmp r3,#59
 1511 0036 F5D9     	 bls .L80
 483:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 484:../Libraries/XMCLib/src/xmc4_flash.c **** 
 485:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1512              	 .loc 1 485 0 is_stmt 1
 1513 0038 FB79     	 ldrb r3,[r7,#7]
 1514 003a 03F54033 	 add r3,r3,#196608
 1515 003e 9B02     	 lsls r3,r3,#10
 486:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1516              	 .loc 1 486 0
 1517 0040 03F50073 	 add r3,r3,#512
 485:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1518              	 .loc 1 485 0
 1519 0044 1846     	 mov r0,r3
 1520 0046 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 487:../Libraries/XMCLib/src/xmc4_flash.c **** 
 488:../Libraries/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 489:../Libraries/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1521              	 .loc 1 489 0
 1522 004a 00BF     	 nop
 1523              	.L81:
 1524              	 .loc 1 489 0 is_stmt 0 discriminator 1
 1525 004c 064B     	 ldr r3,.L82+4
 1526 004e 03F58053 	 add r3,r3,#4096
 1527 0052 1033     	 adds r3,r3,#16
 1528 0054 1B68     	 ldr r3,[r3]
 1529 0056 03F00103 	 and r3,r3,#1
 1530 005a 002B     	 cmp r3,#0
 1531 005c F6D1     	 bne .L81
 490:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1532              	 .loc 1 490 0 is_stmt 1
 1533 005e 1037     	 adds r7,r7,#16
 1534              	 .cfi_def_cfa_offset 8
 1535 0060 BD46     	 mov sp,r7
 1536              	 .cfi_def_cfa_register 13
 1537              	 
 1538 0062 80BD     	 pop {r7,pc}
 1539              	.L83:
 1540              	 .align 2
 1541              	.L82:
 1542 0064 C315FE8A 	 .word -1963059773
 1543 0068 00100058 	 .word 1476399104
 1544              	 .cfi_endproc
 1545              	.LFE173:
 1547              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1548              	 .align 2
 1549              	 .global XMC_FLASH_VerifyReadProtection
 1550              	 .thumb
 1551              	 .thumb_func
 1553              	XMC_FLASH_VerifyReadProtection:
 1554              	.LFB174:
 491:../Libraries/XMCLib/src/xmc4_flash.c **** 
 492:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 493:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 494:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 495:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 496:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1555              	 .loc 1 496 0
 1556              	 .cfi_startproc
 1557              	 
 1558              	 
 1559 0000 80B5     	 push {r7,lr}
 1560              	 .cfi_def_cfa_offset 8
 1561              	 .cfi_offset 7,-8
 1562              	 .cfi_offset 14,-4
 1563 0002 84B0     	 sub sp,sp,#16
 1564              	 .cfi_def_cfa_offset 24
 1565 0004 00AF     	 add r7,sp,#0
 1566              	 .cfi_def_cfa_register 7
 1567 0006 7860     	 str r0,[r7,#4]
 1568 0008 3960     	 str r1,[r7]
 497:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1569              	 .loc 1 497 0
 1570 000a 0023     	 movs r3,#0
 1571 000c FB73     	 strb r3,[r7,#15]
 498:../Libraries/XMCLib/src/xmc4_flash.c ****   
 499:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if read protection is installed */
 500:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1572              	 .loc 1 500 0
 1573 000e FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1574 0012 0346     	 mov r3,r0
 1575 0014 03F48023 	 and r3,r3,#262144
 1576 0018 002B     	 cmp r3,#0
 1577 001a 0FD0     	 beq .L85
 501:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 502:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1578              	 .loc 1 502 0
 1579 001c FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 503:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1580              	 .loc 1 503 0
 1581 0020 7868     	 ldr r0,[r7,#4]
 1582 0022 3968     	 ldr r1,[r7]
 1583 0024 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 504:../Libraries/XMCLib/src/xmc4_flash.c **** 
 505:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1584              	 .loc 1 505 0
 1585 0028 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1586 002c 0346     	 mov r3,r0
 1587 002e 03F40023 	 and r3,r3,#524288
 1588 0032 002B     	 cmp r3,#0
 1589 0034 14BF     	 ite ne
 1590 0036 0123     	 movne r3,#1
 1591 0038 0023     	 moveq r3,#0
 1592 003a FB73     	 strb r3,[r7,#15]
 1593              	.L85:
 506:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 507:../Libraries/XMCLib/src/xmc4_flash.c **** 
 508:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1594              	 .loc 1 508 0
 1595 003c FB7B     	 ldrb r3,[r7,#15]
 509:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1596              	 .loc 1 509 0
 1597 003e 1846     	 mov r0,r3
 1598 0040 1037     	 adds r7,r7,#16
 1599              	 .cfi_def_cfa_offset 8
 1600 0042 BD46     	 mov sp,r7
 1601              	 .cfi_def_cfa_register 13
 1602              	 
 1603 0044 80BD     	 pop {r7,pc}
 1604              	 .cfi_endproc
 1605              	.LFE174:
 1607 0046 00BF     	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1608              	 .align 2
 1609              	 .global XMC_FLASH_VerifyWriteProtection
 1610              	 .thumb
 1611              	 .thumb_func
 1613              	XMC_FLASH_VerifyWriteProtection:
 1614              	.LFB175:
 510:../Libraries/XMCLib/src/xmc4_flash.c **** 
 511:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 512:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 513:../Libraries/XMCLib/src/xmc4_flash.c ****  * specified user.
 514:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 515:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 516:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask, 
 517:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0, 
 518:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 519:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1615              	 .loc 1 519 0
 1616              	 .cfi_startproc
 1617              	 
 1618              	 
 1619 0000 80B5     	 push {r7,lr}
 1620              	 .cfi_def_cfa_offset 8
 1621              	 .cfi_offset 7,-8
 1622              	 .cfi_offset 14,-4
 1623 0002 86B0     	 sub sp,sp,#24
 1624              	 .cfi_def_cfa_offset 32
 1625 0004 00AF     	 add r7,sp,#0
 1626              	 .cfi_def_cfa_register 7
 1627 0006 F860     	 str r0,[r7,#12]
 1628 0008 B960     	 str r1,[r7,#8]
 1629 000a 7A60     	 str r2,[r7,#4]
 1630 000c 3B60     	 str r3,[r7]
 520:../Libraries/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1631              	 .loc 1 520 0
 1632 000e 0023     	 movs r3,#0
 1633 0010 FB75     	 strb r3,[r7,#23]
 521:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 1634              	 .loc 1 521 0
 1635 0012 FB68     	 ldr r3,[r7,#12]
 1636 0014 9A00     	 lsls r2,r3,#2
 1637 0016 1A4B     	 ldr r3,.L92
 1638 0018 1344     	 add r3,r3,r2
 1639 001a 3B61     	 str r3,[r7,#16]
 522:../Libraries/XMCLib/src/xmc4_flash.c **** 
 523:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 524:../Libraries/XMCLib/src/xmc4_flash.c **** 
 525:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 526:../Libraries/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1640              	 .loc 1 526 0
 1641 001c FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1642 0020 0246     	 mov r2,r0
 1643 0022 FB68     	 ldr r3,[r7,#12]
 1644 0024 1533     	 adds r3,r3,#21
 1645 0026 22FA03F3 	 lsr r3,r2,r3
 1646 002a 03F00103 	 and r3,r3,#1
 1647 002e 002B     	 cmp r3,#0
 1648 0030 20D0     	 beq .L88
 527:../Libraries/XMCLib/src/xmc4_flash.c ****   {  
 528:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1649              	 .loc 1 528 0
 1650 0032 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 529:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1651              	 .loc 1 529 0
 1652 0036 F868     	 ldr r0,[r7,#12]
 1653 0038 7968     	 ldr r1,[r7,#4]
 1654 003a 3A68     	 ldr r2,[r7]
 1655 003c FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 530:../Libraries/XMCLib/src/xmc4_flash.c ****     
 531:../Libraries/XMCLib/src/xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1656              	 .loc 1 531 0
 1657 0040 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1658 0044 0246     	 mov r2,r0
 1659 0046 FB68     	 ldr r3,[r7,#12]
 1660 0048 1933     	 adds r3,r3,#25
 1661 004a 22FA03F3 	 lsr r3,r2,r3
 1662 004e 03F00103 	 and r3,r3,#1
 1663 0052 002B     	 cmp r3,#0
 1664 0054 08D0     	 beq .L89
 532:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1665              	 .loc 1 532 0 discriminator 1
 1666 0056 3B69     	 ldr r3,[r7,#16]
 1667 0058 1A68     	 ldr r2,[r3]
 1668 005a BB68     	 ldr r3,[r7,#8]
 1669 005c 23F40043 	 bic r3,r3,#32768
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1670              	 .loc 1 531 0 discriminator 1
 1671 0060 9A42     	 cmp r2,r3
 1672 0062 01D1     	 bne .L89
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1673              	 .loc 1 531 0 is_stmt 0 discriminator 3
 1674 0064 0123     	 movs r3,#1
 1675 0066 00E0     	 b .L90
 1676              	.L89:
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1677              	 .loc 1 531 0 discriminator 4
 1678 0068 0023     	 movs r3,#0
 1679              	.L90:
 531:../Libraries/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1680              	 .loc 1 531 0 discriminator 6
 1681 006a FB75     	 strb r3,[r7,#23]
 1682 006c FB7D     	 ldrb r3,[r7,#23]
 1683 006e 03F00103 	 and r3,r3,#1
 1684 0072 FB75     	 strb r3,[r7,#23]
 1685              	.L88:
 533:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 534:../Libraries/XMCLib/src/xmc4_flash.c **** 
 535:../Libraries/XMCLib/src/xmc4_flash.c ****   return status;
 1686              	 .loc 1 535 0 is_stmt 1
 1687 0074 FB7D     	 ldrb r3,[r7,#23]
 536:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1688              	 .loc 1 536 0
 1689 0076 1846     	 mov r0,r3
 1690 0078 1837     	 adds r7,r7,#24
 1691              	 .cfi_def_cfa_offset 8
 1692 007a BD46     	 mov sp,r7
 1693              	 .cfi_def_cfa_register 13
 1694              	 
 1695 007c 80BD     	 pop {r7,pc}
 1696              	.L93:
 1697 007e 00BF     	 .align 2
 1698              	.L92:
 1699 0080 20200058 	 .word 1476403232
 1700              	 .cfi_endproc
 1701              	.LFE175:
 1703              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1704              	 .align 2
 1705              	 .global XMC_FLASH_ResumeProtection
 1706              	 .thumb
 1707              	 .thumb_func
 1709              	XMC_FLASH_ResumeProtection:
 1710              	.LFB176:
 537:../Libraries/XMCLib/src/xmc4_flash.c **** 
 538:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 539:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 540:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 541:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 542:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1711              	 .loc 1 542 0
 1712              	 .cfi_startproc
 1713              	 
 1714              	 
 1715              	 
 1716 0000 80B4     	 push {r7}
 1717              	 .cfi_def_cfa_offset 4
 1718              	 .cfi_offset 7,-4
 1719 0002 83B0     	 sub sp,sp,#12
 1720              	 .cfi_def_cfa_offset 16
 1721 0004 00AF     	 add r7,sp,#0
 1722              	 .cfi_def_cfa_register 7
 543:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 544:../Libraries/XMCLib/src/xmc4_flash.c **** 
 545:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1723              	 .loc 1 545 0
 1724 0006 054B     	 ldr r3,.L95
 1725 0008 7B60     	 str r3,[r7,#4]
 546:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 1726              	 .loc 1 546 0
 1727 000a 7B68     	 ldr r3,[r7,#4]
 1728 000c 5E22     	 movs r2,#94
 1729 000e 1A60     	 str r2,[r3]
 547:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1730              	 .loc 1 547 0
 1731 0010 0C37     	 adds r7,r7,#12
 1732              	 .cfi_def_cfa_offset 4
 1733 0012 BD46     	 mov sp,r7
 1734              	 .cfi_def_cfa_register 13
 1735              	 
 1736 0014 5DF8047B 	 ldr r7,[sp],#4
 1737              	 .cfi_restore 7
 1738              	 .cfi_def_cfa_offset 0
 1739 0018 7047     	 bx lr
 1740              	.L96:
 1741 001a 00BF     	 .align 2
 1742              	.L95:
 1743 001c 5455000C 	 .word 201348436
 1744              	 .cfi_endproc
 1745              	.LFE176:
 1747              	 .text
 1748              	.Letext0:
 1749              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1750              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1751              	 .file 4 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1752              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_flash.h"
 1753              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 1754              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:20     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:60     .text.XMC_FLASH_lEnterPageModeCommand:0000001c $d
    {standard input}:65     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:70     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:113    .text.XMC_FLASH_lLoadPageCommand:00000028 $d
    {standard input}:119    .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:124    .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:180    .text.XMC_FLASH_lWritePageCommand:0000003c $d
    {standard input}:186    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:191    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:247    .text.XMC_FLASH_lWriteUCBPageCommand:0000003c $d
    {standard input}:253    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:258    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:328    .text.XMC_FLASH_lEraseSectorCommand:00000050 $d
    {standard input}:334    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:339    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:411    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000054 $d
    {standard input}:419    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:424    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:495    .text.XMC_FLASH_lDisableReadProtectionCommand:00000050 $d
    {standard input}:503    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:508    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:542    .text.XMC_FLASH_lClearStatusCommand:0000001c $d
    {standard input}:547    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:552    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:572    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:577    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:606    .text.XMC_FLASH_GetStatus:00000018 $d
    {standard input}:611    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:616    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:655    .text.XMC_FLASH_EnableEvent:0000002c $d
    {standard input}:660    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:665    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:705    .text.XMC_FLASH_DisableEvent:0000002c $d
    {standard input}:710    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:715    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:788    .text.XMC_FLASH_ProgramPage:00000064 $d
    {standard input}:793    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:798    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:839    .text.XMC_FLASH_EraseSector:0000002c $d
    {standard input}:844    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:849    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:919    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000050 $d
    {standard input}:925    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:930    .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:999    .text.XMC_FLASH_lRepairPhysicalSectorCommand:0000004c $d
    {standard input}:1006   .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:1011   .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:1052   .text.XMC_FLASH_ErasePhysicalSector:0000002c $d
    {standard input}:1057   .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:1062   .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:1084   .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:1089   .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:1170   .text.XMC_FLASH_EraseUCB:00000064 $d
    {standard input}:1177   .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:1182   .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:1216   .text.XMC_FLASH_Reset:0000001c $d
    {standard input}:1221   .text.XMC_FLASH_InstallBMI:00000000 $t
    {standard input}:1226   .text.XMC_FLASH_InstallBMI:00000000 XMC_FLASH_InstallBMI
    {standard input}:1365   .text.XMC_FLASH_InstallBMI:000000d0 $d
    {standard input}:1371   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1376   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1458   .text.XMC_FLASH_InstallProtection:00000078 $d
    {standard input}:1463   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1468   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1542   .text.XMC_FLASH_ConfirmProtection:00000064 $d
    {standard input}:1548   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1553   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1608   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1613   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1699   .text.XMC_FLASH_VerifyWriteProtection:00000080 $d
    {standard input}:1704   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1709   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1743   .text.XMC_FLASH_ResumeProtection:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
