   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB177:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2017-02-25
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  *      
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  57:../Libraries/XMCLib/src/xmc_ledts.c **** 
  58:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  62:../Libraries/XMCLib/src/xmc_ledts.c **** 
  63:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  64:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  73:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ledts.c **** 
  75:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  77:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**
  92:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  93:../Libraries/XMCLib/src/xmc_ledts.c ****   */
  94:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  95:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 95 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 82B0     	 sub sp,sp,#8
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	 .cfi_def_cfa_register 7
  40 0006 7860     	 str r0,[r7,#4]
  41 0008 3960     	 str r1,[r7]
  96:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  97:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  42              	 .loc 1 99 0
  43 000a 7B68     	 ldr r3,[r7,#4]
  44 000c 0B4A     	 ldr r2,.L5
  45 000e 9342     	 cmp r3,r2
  46 0010 02D1     	 bne .L2
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 101:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
 103:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 104:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 105:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  47              	 .loc 1 105 0
  48 0012 0B48     	 ldr r0,.L5+4
  49 0014 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  50              	.L2:
 106:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 108:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 109:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 112:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 113:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 115:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 118:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
 121:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 126:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 129:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 130:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 131:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 132:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 133:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 134:../Libraries/XMCLib/src/xmc_ledts.c **** 
 135:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  51              	 .loc 1 135 0
  52 0018 7B68     	 ldr r3,[r7,#4]
  53 001a 5B68     	 ldr r3,[r3,#4]
  54 001c 1B0C     	 lsrs r3,r3,#16
  55 001e 1B04     	 lsls r3,r3,#16
  56 0020 002B     	 cmp r3,#0
  57 0022 01D0     	 beq .L3
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 137:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  58              	 .loc 1 137 0
  59 0024 0123     	 movs r3,#1
  60 0026 04E0     	 b .L4
  61              	.L3:
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 139:../Libraries/XMCLib/src/xmc_ledts.c **** 
 140:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  62              	 .loc 1 140 0
  63 0028 3B68     	 ldr r3,[r7]
  64 002a 1A68     	 ldr r2,[r3]
  65 002c 7B68     	 ldr r3,[r7,#4]
  66 002e 5A60     	 str r2,[r3,#4]
 141:../Libraries/XMCLib/src/xmc_ledts.c **** 
 142:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  67              	 .loc 1 142 0
  68 0030 0023     	 movs r3,#0
  69              	.L4:
 143:../Libraries/XMCLib/src/xmc_ledts.c **** }
  70              	 .loc 1 143 0
  71 0032 1846     	 mov r0,r3
  72 0034 0837     	 adds r7,r7,#8
  73              	 .cfi_def_cfa_offset 8
  74 0036 BD46     	 mov sp,r7
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 0038 80BD     	 pop {r7,pc}
  78              	.L6:
  79 003a 00BF     	 .align 2
  80              	.L5:
  81 003c 00000148 	 .word 1208025088
  82 0040 08000010 	 .word 268435464
  83              	 .cfi_endproc
  84              	.LFE177:
  86              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  87              	 .align 2
  88              	 .global XMC_LEDTS_InitLED
  89              	 .thumb
  90              	 .thumb_func
  92              	XMC_LEDTS_InitLED:
  93              	.LFB178:
 144:../Libraries/XMCLib/src/xmc_ledts.c **** 
 145:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 147:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 148:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 149:../Libraries/XMCLib/src/xmc_ledts.c **** {
  94              	 .loc 1 149 0
  95              	 .cfi_startproc
  96              	 
  97              	 
  98              	 
  99 0000 80B4     	 push {r7}
 100              	 .cfi_def_cfa_offset 4
 101              	 .cfi_offset 7,-4
 102 0002 83B0     	 sub sp,sp,#12
 103              	 .cfi_def_cfa_offset 16
 104 0004 00AF     	 add r7,sp,#0
 105              	 .cfi_def_cfa_register 7
 106 0006 7860     	 str r0,[r7,#4]
 107 0008 3960     	 str r1,[r7]
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 151:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 108              	 .loc 1 153 0
 109 000a 7B68     	 ldr r3,[r7,#4]
 110 000c 5B68     	 ldr r3,[r3,#4]
 111 000e 1B0C     	 lsrs r3,r3,#16
 112 0010 1B04     	 lsls r3,r3,#16
 113 0012 002B     	 cmp r3,#0
 114 0014 01D0     	 beq .L8
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 155:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 115              	 .loc 1 155 0
 116 0016 0123     	 movs r3,#1
 117 0018 13E0     	 b .L9
 118              	.L8:
 156:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 157:../Libraries/XMCLib/src/xmc_ledts.c **** 
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 119              	 .loc 1 158 0
 120 001a 7B68     	 ldr r3,[r7,#4]
 121 001c 9B68     	 ldr r3,[r3,#8]
 122 001e 23F07042 	 bic r2,r3,#-268435456
 123 0022 7B68     	 ldr r3,[r7,#4]
 124 0024 9A60     	 str r2,[r3,#8]
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 125              	 .loc 1 159 0
 126 0026 7B68     	 ldr r3,[r7,#4]
 127 0028 9A68     	 ldr r2,[r3,#8]
 128 002a 3B68     	 ldr r3,[r7]
 129 002c 1B68     	 ldr r3,[r3]
 130 002e 1A43     	 orrs r2,r2,r3
 131 0030 7B68     	 ldr r3,[r7,#4]
 132 0032 9A60     	 str r2,[r3,#8]
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 133              	 .loc 1 162 0
 134 0034 7B68     	 ldr r3,[r7,#4]
 135 0036 5B68     	 ldr r3,[r3,#4]
 136 0038 43F00202 	 orr r2,r3,#2
 137 003c 7B68     	 ldr r3,[r7,#4]
 138 003e 5A60     	 str r2,[r3,#4]
 163:../Libraries/XMCLib/src/xmc_ledts.c **** 
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 139              	 .loc 1 164 0
 140 0040 0023     	 movs r3,#0
 141              	.L9:
 165:../Libraries/XMCLib/src/xmc_ledts.c **** }
 142              	 .loc 1 165 0
 143 0042 1846     	 mov r0,r3
 144 0044 0C37     	 adds r7,r7,#12
 145              	 .cfi_def_cfa_offset 4
 146 0046 BD46     	 mov sp,r7
 147              	 .cfi_def_cfa_register 13
 148              	 
 149 0048 5DF8047B 	 ldr r7,[sp],#4
 150              	 .cfi_restore 7
 151              	 .cfi_def_cfa_offset 0
 152 004c 7047     	 bx lr
 153              	 .cfi_endproc
 154              	.LFE178:
 156 004e 00BF     	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 157              	 .align 2
 158              	 .global XMC_LEDTS_InitTSBasic
 159              	 .thumb
 160              	 .thumb_func
 162              	XMC_LEDTS_InitTSBasic:
 163              	.LFB179:
 166:../Libraries/XMCLib/src/xmc_ledts.c **** 
 167:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 168:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 170:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 171:../Libraries/XMCLib/src/xmc_ledts.c **** {
 164              	 .loc 1 171 0
 165              	 .cfi_startproc
 166              	 
 167              	 
 168              	 
 169 0000 80B4     	 push {r7}
 170              	 .cfi_def_cfa_offset 4
 171              	 .cfi_offset 7,-4
 172 0002 85B0     	 sub sp,sp,#20
 173              	 .cfi_def_cfa_offset 24
 174 0004 00AF     	 add r7,sp,#0
 175              	 .cfi_def_cfa_register 7
 176 0006 7860     	 str r0,[r7,#4]
 177 0008 3960     	 str r1,[r7]
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 173:../Libraries/XMCLib/src/xmc_ledts.c **** 
 174:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 175:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 176:../Libraries/XMCLib/src/xmc_ledts.c **** 
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 178              	 .loc 1 177 0
 179 000a 7B68     	 ldr r3,[r7,#4]
 180 000c 5B68     	 ldr r3,[r3,#4]
 181 000e 1B0C     	 lsrs r3,r3,#16
 182 0010 1B04     	 lsls r3,r3,#16
 183 0012 002B     	 cmp r3,#0
 184 0014 01D0     	 beq .L11
 178:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 179:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 185              	 .loc 1 179 0
 186 0016 0123     	 movs r3,#1
 187 0018 15E0     	 b .L12
 188              	.L11:
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 189              	 .loc 1 182 0
 190 001a 0E4B     	 ldr r3,.L13
 191 001c FB60     	 str r3,[r7,#12]
 183:../Libraries/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 184:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 192              	 .loc 1 184 0
 193 001e 7B68     	 ldr r3,[r7,#4]
 194 0020 9A68     	 ldr r2,[r3,#8]
 195 0022 FB68     	 ldr r3,[r7,#12]
 196 0024 1A40     	 ands r2,r2,r3
 197 0026 7B68     	 ldr r3,[r7,#4]
 198 0028 9A60     	 str r2,[r3,#8]
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 199              	 .loc 1 185 0
 200 002a 7B68     	 ldr r3,[r7,#4]
 201 002c 9A68     	 ldr r2,[r3,#8]
 202 002e 3B68     	 ldr r3,[r7]
 203 0030 1B68     	 ldr r3,[r3]
 204 0032 1A43     	 orrs r2,r2,r3
 205 0034 7B68     	 ldr r3,[r7,#4]
 206 0036 9A60     	 str r2,[r3,#8]
 186:../Libraries/XMCLib/src/xmc_ledts.c **** 
 187:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 207              	 .loc 1 188 0
 208 0038 7B68     	 ldr r3,[r7,#4]
 209 003a 5B68     	 ldr r3,[r3,#4]
 210 003c 43F00102 	 orr r2,r3,#1
 211 0040 7B68     	 ldr r3,[r7,#4]
 212 0042 5A60     	 str r2,[r3,#4]
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 213              	 .loc 1 190 0
 214 0044 0023     	 movs r3,#0
 215              	.L12:
 191:../Libraries/XMCLib/src/xmc_ledts.c **** }
 216              	 .loc 1 191 0
 217 0046 1846     	 mov r0,r3
 218 0048 1437     	 adds r7,r7,#20
 219              	 .cfi_def_cfa_offset 4
 220 004a BD46     	 mov sp,r7
 221              	 .cfi_def_cfa_register 13
 222              	 
 223 004c 5DF8047B 	 ldr r7,[sp],#4
 224              	 .cfi_restore 7
 225              	 .cfi_def_cfa_offset 0
 226 0050 7047     	 bx lr
 227              	.L14:
 228 0052 00BF     	 .align 2
 229              	.L13:
 230 0054 FFFF60F0 	 .word -262078465
 231              	 .cfi_endproc
 232              	.LFE179:
 234              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 235              	 .align 2
 236              	 .global XMC_LEDTS_InitTSAdvanced
 237              	 .thumb
 238              	 .thumb_func
 240              	XMC_LEDTS_InitTSAdvanced:
 241              	.LFB180:
 192:../Libraries/XMCLib/src/xmc_ledts.c **** 
 193:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 194:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 196:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 197:../Libraries/XMCLib/src/xmc_ledts.c **** {
 242              	 .loc 1 197 0
 243              	 .cfi_startproc
 244              	 
 245              	 
 246              	 
 247 0000 80B4     	 push {r7}
 248              	 .cfi_def_cfa_offset 4
 249              	 .cfi_offset 7,-4
 250 0002 85B0     	 sub sp,sp,#20
 251              	 .cfi_def_cfa_offset 24
 252 0004 00AF     	 add r7,sp,#0
 253              	 .cfi_def_cfa_register 7
 254 0006 7860     	 str r0,[r7,#4]
 255 0008 3960     	 str r1,[r7]
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 199:../Libraries/XMCLib/src/xmc_ledts.c **** 
 200:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 201:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 202:../Libraries/XMCLib/src/xmc_ledts.c **** 
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 256              	 .loc 1 203 0
 257 000a 7B68     	 ldr r3,[r7,#4]
 258 000c 5B68     	 ldr r3,[r3,#4]
 259 000e 1B0C     	 lsrs r3,r3,#16
 260 0010 1B04     	 lsls r3,r3,#16
 261 0012 002B     	 cmp r3,#0
 262 0014 01D0     	 beq .L16
 204:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 205:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 263              	 .loc 1 205 0
 264 0016 0123     	 movs r3,#1
 265 0018 1FE0     	 b .L17
 266              	.L16:
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 267              	 .loc 1 208 0
 268 001a 6FF4F053 	 mvn r3,#7680
 269 001e FB60     	 str r3,[r7,#12]
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 270              	 .loc 1 209 0
 271 0020 7B68     	 ldr r3,[r7,#4]
 272 0022 5A68     	 ldr r2,[r3,#4]
 273 0024 FB68     	 ldr r3,[r7,#12]
 274 0026 1A40     	 ands r2,r2,r3
 275 0028 7B68     	 ldr r3,[r7,#4]
 276 002a 5A60     	 str r2,[r3,#4]
 210:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 277              	 .loc 1 210 0
 278 002c 7B68     	 ldr r3,[r7,#4]
 279 002e 5A68     	 ldr r2,[r3,#4]
 280 0030 3B68     	 ldr r3,[r7]
 281 0032 1B68     	 ldr r3,[r3]
 282 0034 1A43     	 orrs r2,r2,r3
 283 0036 7B68     	 ldr r3,[r7,#4]
 284 0038 5A60     	 str r2,[r3,#4]
 211:../Libraries/XMCLib/src/xmc_ledts.c **** 
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 285              	 .loc 1 212 0
 286 003a 0B4B     	 ldr r3,.L18
 287 003c FB60     	 str r3,[r7,#12]
 213:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 288              	 .loc 1 213 0
 289 003e 7B68     	 ldr r3,[r7,#4]
 290 0040 9A68     	 ldr r2,[r3,#8]
 291 0042 FB68     	 ldr r3,[r7,#12]
 292 0044 1A40     	 ands r2,r2,r3
 293 0046 7B68     	 ldr r3,[r7,#4]
 294 0048 9A60     	 str r2,[r3,#8]
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 295              	 .loc 1 214 0
 296 004a 7B68     	 ldr r3,[r7,#4]
 297 004c 9A68     	 ldr r2,[r3,#8]
 298 004e 3B68     	 ldr r3,[r7]
 299 0050 5B68     	 ldr r3,[r3,#4]
 300 0052 1A43     	 orrs r2,r2,r3
 301 0054 7B68     	 ldr r3,[r7,#4]
 302 0056 9A60     	 str r2,[r3,#8]
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 303              	 .loc 1 216 0
 304 0058 0023     	 movs r3,#0
 305              	.L17:
 217:../Libraries/XMCLib/src/xmc_ledts.c **** }
 306              	 .loc 1 217 0
 307 005a 1846     	 mov r0,r3
 308 005c 1437     	 adds r7,r7,#20
 309              	 .cfi_def_cfa_offset 4
 310 005e BD46     	 mov sp,r7
 311              	 .cfi_def_cfa_register 13
 312              	 
 313 0060 5DF8047B 	 ldr r7,[sp],#4
 314              	 .cfi_restore 7
 315              	 .cfi_def_cfa_offset 0
 316 0064 7047     	 bx lr
 317              	.L19:
 318 0066 00BF     	 .align 2
 319              	.L18:
 320 0068 E0FF9FFF 	 .word -6291488
 321              	 .cfi_endproc
 322              	.LFE180:
 324              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 325              	 .align 2
 326              	 .global XMC_LEDTS_StartCounter
 327              	 .thumb
 328              	 .thumb_func
 330              	XMC_LEDTS_StartCounter:
 331              	.LFB181:
 218:../Libraries/XMCLib/src/xmc_ledts.c **** 
 219:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 222:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 223:../Libraries/XMCLib/src/xmc_ledts.c **** {
 332              	 .loc 1 223 0
 333              	 .cfi_startproc
 334              	 
 335              	 
 336              	 
 337 0000 80B4     	 push {r7}
 338              	 .cfi_def_cfa_offset 4
 339              	 .cfi_offset 7,-4
 340 0002 83B0     	 sub sp,sp,#12
 341              	 .cfi_def_cfa_offset 16
 342 0004 00AF     	 add r7,sp,#0
 343              	 .cfi_def_cfa_register 7
 344 0006 7860     	 str r0,[r7,#4]
 345 0008 0B46     	 mov r3,r1
 346 000a 7B80     	 strh r3,[r7,#2]
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 225:../Libraries/XMCLib/src/xmc_ledts.c **** 
 226:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 347              	 .loc 1 226 0
 348 000c 7B68     	 ldr r3,[r7,#4]
 349 000e 5B68     	 ldr r3,[r3,#4]
 350 0010 7A88     	 ldrh r2,[r7,#2]
 351 0012 1204     	 lsls r2,r2,#16
 352 0014 1A43     	 orrs r2,r2,r3
 353 0016 7B68     	 ldr r3,[r7,#4]
 354 0018 5A60     	 str r2,[r3,#4]
 227:../Libraries/XMCLib/src/xmc_ledts.c **** }
 355              	 .loc 1 227 0
 356 001a 0C37     	 adds r7,r7,#12
 357              	 .cfi_def_cfa_offset 4
 358 001c BD46     	 mov sp,r7
 359              	 .cfi_def_cfa_register 13
 360              	 
 361 001e 5DF8047B 	 ldr r7,[sp],#4
 362              	 .cfi_restore 7
 363              	 .cfi_def_cfa_offset 0
 364 0022 7047     	 bx lr
 365              	 .cfi_endproc
 366              	.LFE181:
 368              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 369              	 .align 2
 370              	 .global XMC_LEDTS_StopCounter
 371              	 .thumb
 372              	 .thumb_func
 374              	XMC_LEDTS_StopCounter:
 375              	.LFB182:
 228:../Libraries/XMCLib/src/xmc_ledts.c **** 
 229:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 230:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 231:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 232:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 233:../Libraries/XMCLib/src/xmc_ledts.c **** {
 376              	 .loc 1 233 0
 377              	 .cfi_startproc
 378              	 
 379              	 
 380              	 
 381 0000 80B4     	 push {r7}
 382              	 .cfi_def_cfa_offset 4
 383              	 .cfi_offset 7,-4
 384 0002 83B0     	 sub sp,sp,#12
 385              	 .cfi_def_cfa_offset 16
 386 0004 00AF     	 add r7,sp,#0
 387              	 .cfi_def_cfa_register 7
 388 0006 7860     	 str r0,[r7,#4]
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 235:../Libraries/XMCLib/src/xmc_ledts.c **** 
 236:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 389              	 .loc 1 236 0
 390 0008 7B68     	 ldr r3,[r7,#4]
 391 000a 5B68     	 ldr r3,[r3,#4]
 392 000c 9AB2     	 uxth r2,r3
 393 000e 7B68     	 ldr r3,[r7,#4]
 394 0010 5A60     	 str r2,[r3,#4]
 237:../Libraries/XMCLib/src/xmc_ledts.c **** }
 395              	 .loc 1 237 0
 396 0012 0C37     	 adds r7,r7,#12
 397              	 .cfi_def_cfa_offset 4
 398 0014 BD46     	 mov sp,r7
 399              	 .cfi_def_cfa_register 13
 400              	 
 401 0016 5DF8047B 	 ldr r7,[sp],#4
 402              	 .cfi_restore 7
 403              	 .cfi_def_cfa_offset 0
 404 001a 7047     	 bx lr
 405              	 .cfi_endproc
 406              	.LFE182:
 408              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 409              	 .align 2
 410              	 .global XMC_LEDTS_ReadInterruptFlag
 411              	 .thumb
 412              	 .thumb_func
 414              	XMC_LEDTS_ReadInterruptFlag:
 415              	.LFB183:
 238:../Libraries/XMCLib/src/xmc_ledts.c **** 
 239:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 240:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 241:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 242:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 243:../Libraries/XMCLib/src/xmc_ledts.c **** {
 416              	 .loc 1 243 0
 417              	 .cfi_startproc
 418              	 
 419              	 
 420              	 
 421 0000 80B4     	 push {r7}
 422              	 .cfi_def_cfa_offset 4
 423              	 .cfi_offset 7,-4
 424 0002 83B0     	 sub sp,sp,#12
 425              	 .cfi_def_cfa_offset 16
 426 0004 00AF     	 add r7,sp,#0
 427              	 .cfi_def_cfa_register 7
 428 0006 7860     	 str r0,[r7,#4]
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 245:../Libraries/XMCLib/src/xmc_ledts.c **** 
 246:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 429              	 .loc 1 246 0
 430 0008 7B68     	 ldr r3,[r7,#4]
 431 000a DB68     	 ldr r3,[r3,#12]
 432 000c 03F00F03 	 and r3,r3,#15
 247:../Libraries/XMCLib/src/xmc_ledts.c **** }
 433              	 .loc 1 247 0
 434 0010 1846     	 mov r0,r3
 435 0012 0C37     	 adds r7,r7,#12
 436              	 .cfi_def_cfa_offset 4
 437 0014 BD46     	 mov sp,r7
 438              	 .cfi_def_cfa_register 13
 439              	 
 440 0016 5DF8047B 	 ldr r7,[sp],#4
 441              	 .cfi_restore 7
 442              	 .cfi_def_cfa_offset 0
 443 001a 7047     	 bx lr
 444              	 .cfi_endproc
 445              	.LFE183:
 447              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_LEDTS_SetActivePADNo
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_LEDTS_SetActivePADNo:
 454              	.LFB184:
 248:../Libraries/XMCLib/src/xmc_ledts.c **** 
 249:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 250:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 251:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 252:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 253:../Libraries/XMCLib/src/xmc_ledts.c **** {
 455              	 .loc 1 253 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	 .cfi_def_cfa_offset 4
 462              	 .cfi_offset 7,-4
 463 0002 85B0     	 sub sp,sp,#20
 464              	 .cfi_def_cfa_offset 24
 465 0004 00AF     	 add r7,sp,#0
 466              	 .cfi_def_cfa_register 7
 467 0006 7860     	 str r0,[r7,#4]
 468 0008 0B46     	 mov r3,r1
 469 000a FB70     	 strb r3,[r7,#3]
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 255:../Libraries/XMCLib/src/xmc_ledts.c **** 
 256:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 257:../Libraries/XMCLib/src/xmc_ledts.c **** 
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 470              	 .loc 1 258 0
 471 000c 7B68     	 ldr r3,[r7,#4]
 472 000e 9B68     	 ldr r3,[r3,#8]
 473 0010 FB60     	 str r3,[r7,#12]
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 474              	 .loc 1 259 0
 475 0012 FB68     	 ldr r3,[r7,#12]
 476 0014 23F00703 	 bic r3,r3,#7
 477 0018 FB60     	 str r3,[r7,#12]
 260:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 478              	 .loc 1 260 0
 479 001a FB78     	 ldrb r3,[r7,#3]
 480 001c FA68     	 ldr r2,[r7,#12]
 481 001e 1343     	 orrs r3,r3,r2
 482 0020 FB60     	 str r3,[r7,#12]
 261:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 483              	 .loc 1 261 0
 484 0022 7B68     	 ldr r3,[r7,#4]
 485 0024 FA68     	 ldr r2,[r7,#12]
 486 0026 9A60     	 str r2,[r3,#8]
 262:../Libraries/XMCLib/src/xmc_ledts.c **** }
 487              	 .loc 1 262 0
 488 0028 1437     	 adds r7,r7,#20
 489              	 .cfi_def_cfa_offset 4
 490 002a BD46     	 mov sp,r7
 491              	 .cfi_def_cfa_register 13
 492              	 
 493 002c 5DF8047B 	 ldr r7,[sp],#4
 494              	 .cfi_restore 7
 495              	 .cfi_def_cfa_offset 0
 496 0030 7047     	 bx lr
 497              	 .cfi_endproc
 498              	.LFE184:
 500 0032 00BF     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 501              	 .align 2
 502              	 .global XMC_LEDTS_ClearInterruptFlag
 503              	 .thumb
 504              	 .thumb_func
 506              	XMC_LEDTS_ClearInterruptFlag:
 507              	.LFB185:
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 265:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 267:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 268:../Libraries/XMCLib/src/xmc_ledts.c **** {
 508              	 .loc 1 268 0
 509              	 .cfi_startproc
 510              	 
 511              	 
 512              	 
 513 0000 80B4     	 push {r7}
 514              	 .cfi_def_cfa_offset 4
 515              	 .cfi_offset 7,-4
 516 0002 83B0     	 sub sp,sp,#12
 517              	 .cfi_def_cfa_offset 16
 518 0004 00AF     	 add r7,sp,#0
 519              	 .cfi_def_cfa_register 7
 520 0006 7860     	 str r0,[r7,#4]
 521 0008 3960     	 str r1,[r7]
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 270:../Libraries/XMCLib/src/xmc_ledts.c **** 
 271:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 522              	 .loc 1 271 0
 523 000a 3B68     	 ldr r3,[r7]
 524 000c 1A04     	 lsls r2,r3,#16
 525 000e 7B68     	 ldr r3,[r7,#4]
 526 0010 DA60     	 str r2,[r3,#12]
 272:../Libraries/XMCLib/src/xmc_ledts.c **** }
 527              	 .loc 1 272 0
 528 0012 0C37     	 adds r7,r7,#12
 529              	 .cfi_def_cfa_offset 4
 530 0014 BD46     	 mov sp,r7
 531              	 .cfi_def_cfa_register 13
 532              	 
 533 0016 5DF8047B 	 ldr r7,[sp],#4
 534              	 .cfi_restore 7
 535              	 .cfi_def_cfa_offset 0
 536 001a 7047     	 bx lr
 537              	 .cfi_endproc
 538              	.LFE185:
 540              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 541              	 .align 2
 542              	 .global XMC_LEDTS_SetLEDLinePattern
 543              	 .thumb
 544              	 .thumb_func
 546              	XMC_LEDTS_SetLEDLinePattern:
 547              	.LFB186:
 273:../Libraries/XMCLib/src/xmc_ledts.c **** 
 274:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 275:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 276:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 277:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 278:../Libraries/XMCLib/src/xmc_ledts.c **** {
 548              	 .loc 1 278 0
 549              	 .cfi_startproc
 550              	 
 551              	 
 552              	 
 553 0000 80B4     	 push {r7}
 554              	 .cfi_def_cfa_offset 4
 555              	 .cfi_offset 7,-4
 556 0002 85B0     	 sub sp,sp,#20
 557              	 .cfi_def_cfa_offset 24
 558 0004 00AF     	 add r7,sp,#0
 559              	 .cfi_def_cfa_register 7
 560 0006 7860     	 str r0,[r7,#4]
 561 0008 0B46     	 mov r3,r1
 562 000a FB70     	 strb r3,[r7,#3]
 563 000c 1346     	 mov r3,r2
 564 000e BB70     	 strb r3,[r7,#2]
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 280:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 565              	 .loc 1 280 0
 566 0010 FB78     	 ldrb r3,[r7,#3]
 567 0012 9B08     	 lsrs r3,r3,#2
 568 0014 FB73     	 strb r3,[r7,#15]
 281:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 569              	 .loc 1 281 0
 570 0016 FB78     	 ldrb r3,[r7,#3]
 571 0018 03F00303 	 and r3,r3,#3
 572 001c DBB2     	 uxtb r3,r3
 573 001e DB00     	 lsls r3,r3,#3
 574 0020 BB73     	 strb r3,[r7,#14]
 282:../Libraries/XMCLib/src/xmc_ledts.c **** 
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 284:../Libraries/XMCLib/src/xmc_ledts.c **** 
 285:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 575              	 .loc 1 285 0
 576 0022 FB7B     	 ldrb r3,[r7,#15]
 577 0024 7A68     	 ldr r2,[r7,#4]
 578 0026 0433     	 adds r3,r3,#4
 579 0028 9B00     	 lsls r3,r3,#2
 580 002a 1344     	 add r3,r3,r2
 581 002c 5B68     	 ldr r3,[r3,#4]
 582 002e BB60     	 str r3,[r7,#8]
 286:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 583              	 .loc 1 286 0
 584 0030 BB7B     	 ldrb r3,[r7,#14]
 585 0032 FF22     	 movs r2,#255
 586 0034 02FA03F3 	 lsl r3,r2,r3
 587 0038 DB43     	 mvns r3,r3
 588 003a 1A46     	 mov r2,r3
 589 003c BB68     	 ldr r3,[r7,#8]
 590 003e 1340     	 ands r3,r3,r2
 591 0040 BB60     	 str r3,[r7,#8]
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 592              	 .loc 1 287 0
 593 0042 BA78     	 ldrb r2,[r7,#2]
 594 0044 BB7B     	 ldrb r3,[r7,#14]
 595 0046 02FA03F3 	 lsl r3,r2,r3
 596 004a 1A46     	 mov r2,r3
 597 004c BB68     	 ldr r3,[r7,#8]
 598 004e 1343     	 orrs r3,r3,r2
 599 0050 BB60     	 str r3,[r7,#8]
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 600              	 .loc 1 288 0
 601 0052 FB7B     	 ldrb r3,[r7,#15]
 602 0054 7A68     	 ldr r2,[r7,#4]
 603 0056 0433     	 adds r3,r3,#4
 604 0058 9B00     	 lsls r3,r3,#2
 605 005a 1344     	 add r3,r3,r2
 606 005c BA68     	 ldr r2,[r7,#8]
 607 005e 5A60     	 str r2,[r3,#4]
 289:../Libraries/XMCLib/src/xmc_ledts.c **** 
 290:../Libraries/XMCLib/src/xmc_ledts.c **** }
 608              	 .loc 1 290 0
 609 0060 1437     	 adds r7,r7,#20
 610              	 .cfi_def_cfa_offset 4
 611 0062 BD46     	 mov sp,r7
 612              	 .cfi_def_cfa_register 13
 613              	 
 614 0064 5DF8047B 	 ldr r7,[sp],#4
 615              	 .cfi_restore 7
 616              	 .cfi_def_cfa_offset 0
 617 0068 7047     	 bx lr
 618              	 .cfi_endproc
 619              	.LFE186:
 621 006a 00BF     	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 622              	 .align 2
 623              	 .global XMC_LEDTS_SetColumnBrightness
 624              	 .thumb
 625              	 .thumb_func
 627              	XMC_LEDTS_SetColumnBrightness:
 628              	.LFB187:
 291:../Libraries/XMCLib/src/xmc_ledts.c **** 
 292:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 295:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 296:../Libraries/XMCLib/src/xmc_ledts.c **** {
 629              	 .loc 1 296 0
 630              	 .cfi_startproc
 631              	 
 632              	 
 633              	 
 634 0000 80B4     	 push {r7}
 635              	 .cfi_def_cfa_offset 4
 636              	 .cfi_offset 7,-4
 637 0002 85B0     	 sub sp,sp,#20
 638              	 .cfi_def_cfa_offset 24
 639 0004 00AF     	 add r7,sp,#0
 640              	 .cfi_def_cfa_register 7
 641 0006 7860     	 str r0,[r7,#4]
 642 0008 0B46     	 mov r3,r1
 643 000a FB70     	 strb r3,[r7,#3]
 644 000c 1346     	 mov r3,r2
 645 000e BB70     	 strb r3,[r7,#2]
 297:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 298:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 646              	 .loc 1 298 0
 647 0010 FB78     	 ldrb r3,[r7,#3]
 648 0012 9B08     	 lsrs r3,r3,#2
 649 0014 FB73     	 strb r3,[r7,#15]
 299:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 650              	 .loc 1 299 0
 651 0016 FB78     	 ldrb r3,[r7,#3]
 652 0018 03F00303 	 and r3,r3,#3
 653 001c DBB2     	 uxtb r3,r3
 654 001e DB00     	 lsls r3,r3,#3
 655 0020 BB73     	 strb r3,[r7,#14]
 300:../Libraries/XMCLib/src/xmc_ledts.c **** 
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 302:../Libraries/XMCLib/src/xmc_ledts.c **** 
 303:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 656              	 .loc 1 303 0
 657 0022 FB7B     	 ldrb r3,[r7,#15]
 658 0024 7A68     	 ldr r2,[r7,#4]
 659 0026 0633     	 adds r3,r3,#6
 660 0028 9B00     	 lsls r3,r3,#2
 661 002a 1344     	 add r3,r3,r2
 662 002c 5B68     	 ldr r3,[r3,#4]
 663 002e BB60     	 str r3,[r7,#8]
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 664              	 .loc 1 304 0
 665 0030 BB7B     	 ldrb r3,[r7,#14]
 666 0032 FF22     	 movs r2,#255
 667 0034 02FA03F3 	 lsl r3,r2,r3
 668 0038 DB43     	 mvns r3,r3
 669 003a 1A46     	 mov r2,r3
 670 003c BB68     	 ldr r3,[r7,#8]
 671 003e 1340     	 ands r3,r3,r2
 672 0040 BB60     	 str r3,[r7,#8]
 305:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 673              	 .loc 1 305 0
 674 0042 BA78     	 ldrb r2,[r7,#2]
 675 0044 BB7B     	 ldrb r3,[r7,#14]
 676 0046 02FA03F3 	 lsl r3,r2,r3
 677 004a 1A46     	 mov r2,r3
 678 004c BB68     	 ldr r3,[r7,#8]
 679 004e 1343     	 orrs r3,r3,r2
 680 0050 BB60     	 str r3,[r7,#8]
 306:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 681              	 .loc 1 306 0
 682 0052 FB7B     	 ldrb r3,[r7,#15]
 683 0054 7A68     	 ldr r2,[r7,#4]
 684 0056 0633     	 adds r3,r3,#6
 685 0058 9B00     	 lsls r3,r3,#2
 686 005a 1344     	 add r3,r3,r2
 687 005c BA68     	 ldr r2,[r7,#8]
 688 005e 5A60     	 str r2,[r3,#4]
 307:../Libraries/XMCLib/src/xmc_ledts.c **** }
 689              	 .loc 1 307 0
 690 0060 1437     	 adds r7,r7,#20
 691              	 .cfi_def_cfa_offset 4
 692 0062 BD46     	 mov sp,r7
 693              	 .cfi_def_cfa_register 13
 694              	 
 695 0064 5DF8047B 	 ldr r7,[sp],#4
 696              	 .cfi_restore 7
 697              	 .cfi_def_cfa_offset 0
 698 0068 7047     	 bx lr
 699              	 .cfi_endproc
 700              	.LFE187:
 702 006a 00BF     	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 703              	 .align 2
 704              	 .global XMC_LEDTS_SetCommonOscillationWindow
 705              	 .thumb
 706              	 .thumb_func
 708              	XMC_LEDTS_SetCommonOscillationWindow:
 709              	.LFB188:
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 310:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 312:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 313:../Libraries/XMCLib/src/xmc_ledts.c **** {
 710              	 .loc 1 313 0
 711              	 .cfi_startproc
 712              	 
 713              	 
 714              	 
 715 0000 80B4     	 push {r7}
 716              	 .cfi_def_cfa_offset 4
 717              	 .cfi_offset 7,-4
 718 0002 85B0     	 sub sp,sp,#20
 719              	 .cfi_def_cfa_offset 24
 720 0004 00AF     	 add r7,sp,#0
 721              	 .cfi_def_cfa_register 7
 722 0006 7860     	 str r0,[r7,#4]
 723 0008 0B46     	 mov r3,r1
 724 000a FB70     	 strb r3,[r7,#3]
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 315:../Libraries/XMCLib/src/xmc_ledts.c **** 
 316:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 317:../Libraries/XMCLib/src/xmc_ledts.c **** 
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 725              	 .loc 1 318 0
 726 000c 7B68     	 ldr r3,[r7,#4]
 727 000e 1B6A     	 ldr r3,[r3,#32]
 728 0010 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 729              	 .loc 1 319 0
 730 0012 FB68     	 ldr r3,[r7,#12]
 731 0014 23F07F43 	 bic r3,r3,#-16777216
 732 0018 FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 733              	 .loc 1 320 0
 734 001a FB78     	 ldrb r3,[r7,#3]
 735 001c 1B06     	 lsls r3,r3,#24
 736 001e 1A46     	 mov r2,r3
 737 0020 FB68     	 ldr r3,[r7,#12]
 738 0022 1343     	 orrs r3,r3,r2
 739 0024 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 740              	 .loc 1 321 0
 741 0026 7B68     	 ldr r3,[r7,#4]
 742 0028 FA68     	 ldr r2,[r7,#12]
 743 002a 1A62     	 str r2,[r3,#32]
 322:../Libraries/XMCLib/src/xmc_ledts.c **** }
 744              	 .loc 1 322 0
 745 002c 1437     	 adds r7,r7,#20
 746              	 .cfi_def_cfa_offset 4
 747 002e BD46     	 mov sp,r7
 748              	 .cfi_def_cfa_register 13
 749              	 
 750 0030 5DF8047B 	 ldr r7,[sp],#4
 751              	 .cfi_restore 7
 752              	 .cfi_def_cfa_offset 0
 753 0034 7047     	 bx lr
 754              	 .cfi_endproc
 755              	.LFE188:
 757 0036 00BF     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 758              	 .align 2
 759              	 .global XMC_LEDTS_ReadFNCOL
 760              	 .thumb
 761              	 .thumb_func
 763              	XMC_LEDTS_ReadFNCOL:
 764              	.LFB189:
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 325:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 327:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 328:../Libraries/XMCLib/src/xmc_ledts.c **** {
 765              	 .loc 1 328 0
 766              	 .cfi_startproc
 767              	 
 768              	 
 769              	 
 770 0000 80B4     	 push {r7}
 771              	 .cfi_def_cfa_offset 4
 772              	 .cfi_offset 7,-4
 773 0002 85B0     	 sub sp,sp,#20
 774              	 .cfi_def_cfa_offset 24
 775 0004 00AF     	 add r7,sp,#0
 776              	 .cfi_def_cfa_register 7
 777 0006 7860     	 str r0,[r7,#4]
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 330:../Libraries/XMCLib/src/xmc_ledts.c **** 
 331:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 332:../Libraries/XMCLib/src/xmc_ledts.c **** 
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 778              	 .loc 1 333 0
 779 0008 7B68     	 ldr r3,[r7,#4]
 780 000a 9B68     	 ldr r3,[r3,#8]
 781 000c 03F0E003 	 and r3,r3,#224
 782 0010 FB60     	 str r3,[r7,#12]
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 783              	 .loc 1 334 0
 784 0012 FB68     	 ldr r3,[r7,#12]
 785 0014 5B09     	 lsrs r3,r3,#5
 786 0016 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ledts.c **** 
 336:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 787              	 .loc 1 336 0
 788 0018 FB68     	 ldr r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ledts.c **** }
 789              	 .loc 1 337 0
 790 001a 1846     	 mov r0,r3
 791 001c 1437     	 adds r7,r7,#20
 792              	 .cfi_def_cfa_offset 4
 793 001e BD46     	 mov sp,r7
 794              	 .cfi_def_cfa_register 13
 795              	 
 796 0020 5DF8047B 	 ldr r7,[sp],#4
 797              	 .cfi_restore 7
 798              	 .cfi_def_cfa_offset 0
 799 0024 7047     	 bx lr
 800              	 .cfi_endproc
 801              	.LFE189:
 803 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 804              	 .align 2
 805              	 .global XMC_LEDTS_SetNumOfLEDColumns
 806              	 .thumb
 807              	 .thumb_func
 809              	XMC_LEDTS_SetNumOfLEDColumns:
 810              	.LFB190:
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 340:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 342:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 343:../Libraries/XMCLib/src/xmc_ledts.c **** {
 811              	 .loc 1 343 0
 812              	 .cfi_startproc
 813              	 
 814              	 
 815              	 
 816 0000 80B4     	 push {r7}
 817              	 .cfi_def_cfa_offset 4
 818              	 .cfi_offset 7,-4
 819 0002 83B0     	 sub sp,sp,#12
 820              	 .cfi_def_cfa_offset 16
 821 0004 00AF     	 add r7,sp,#0
 822              	 .cfi_def_cfa_register 7
 823 0006 7860     	 str r0,[r7,#4]
 824 0008 0B46     	 mov r3,r1
 825 000a FB70     	 strb r3,[r7,#3]
 344:../Libraries/XMCLib/src/xmc_ledts.c **** 
 345:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 826              	 .loc 1 347 0
 827 000c 7B68     	 ldr r3,[r7,#4]
 828 000e 9B68     	 ldr r3,[r3,#8]
 829 0010 23F06042 	 bic r2,r3,#-536870912
 830 0014 7B68     	 ldr r3,[r7,#4]
 831 0016 9A60     	 str r2,[r3,#8]
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 832              	 .loc 1 348 0
 833 0018 7B68     	 ldr r3,[r7,#4]
 834 001a 9B68     	 ldr r3,[r3,#8]
 835 001c FA78     	 ldrb r2,[r7,#3]
 836 001e 5207     	 lsls r2,r2,#29
 837 0020 1A43     	 orrs r2,r2,r3
 838 0022 7B68     	 ldr r3,[r7,#4]
 839 0024 9A60     	 str r2,[r3,#8]
 349:../Libraries/XMCLib/src/xmc_ledts.c **** }
 840              	 .loc 1 349 0
 841 0026 0C37     	 adds r7,r7,#12
 842              	 .cfi_def_cfa_offset 4
 843 0028 BD46     	 mov sp,r7
 844              	 .cfi_def_cfa_register 13
 845              	 
 846 002a 5DF8047B 	 ldr r7,[sp],#4
 847              	 .cfi_restore 7
 848              	 .cfi_def_cfa_offset 0
 849 002e 7047     	 bx lr
 850              	 .cfi_endproc
 851              	.LFE190:
 853              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 854              	 .align 2
 855              	 .global XMC_LEDTS_ReadTSVAL
 856              	 .thumb
 857              	 .thumb_func
 859              	XMC_LEDTS_ReadTSVAL:
 860              	.LFB191:
 350:../Libraries/XMCLib/src/xmc_ledts.c **** 
 351:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 352:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 354:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 355:../Libraries/XMCLib/src/xmc_ledts.c **** {
 861              	 .loc 1 355 0
 862              	 .cfi_startproc
 863              	 
 864              	 
 865              	 
 866 0000 80B4     	 push {r7}
 867              	 .cfi_def_cfa_offset 4
 868              	 .cfi_offset 7,-4
 869 0002 85B0     	 sub sp,sp,#20
 870              	 .cfi_def_cfa_offset 24
 871 0004 00AF     	 add r7,sp,#0
 872              	 .cfi_def_cfa_register 7
 873 0006 7860     	 str r0,[r7,#4]
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 357:../Libraries/XMCLib/src/xmc_ledts.c **** 
 358:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 359:../Libraries/XMCLib/src/xmc_ledts.c **** 
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 874              	 .loc 1 360 0
 875 0008 7B68     	 ldr r3,[r7,#4]
 876 000a 1B69     	 ldr r3,[r3,#16]
 877 000c FB81     	 strh r3,[r7,#14]
 361:../Libraries/XMCLib/src/xmc_ledts.c **** 
 362:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 878              	 .loc 1 362 0
 879 000e FB89     	 ldrh r3,[r7,#14]
 363:../Libraries/XMCLib/src/xmc_ledts.c **** }
 880              	 .loc 1 363 0
 881 0010 1846     	 mov r0,r3
 882 0012 1437     	 adds r7,r7,#20
 883              	 .cfi_def_cfa_offset 4
 884 0014 BD46     	 mov sp,r7
 885              	 .cfi_def_cfa_register 13
 886              	 
 887 0016 5DF8047B 	 ldr r7,[sp],#4
 888              	 .cfi_restore 7
 889              	 .cfi_def_cfa_offset 0
 890 001a 7047     	 bx lr
 891              	 .cfi_endproc
 892              	.LFE191:
 894              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 895              	 .align 2
 896              	 .global XMC_LEDTS_SetOscillationWindow
 897              	 .thumb
 898              	 .thumb_func
 900              	XMC_LEDTS_SetOscillationWindow:
 901              	.LFB192:
 364:../Libraries/XMCLib/src/xmc_ledts.c **** 
 365:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 367:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 368:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 369:../Libraries/XMCLib/src/xmc_ledts.c **** {
 902              	 .loc 1 369 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906              	 
 907 0000 80B4     	 push {r7}
 908              	 .cfi_def_cfa_offset 4
 909              	 .cfi_offset 7,-4
 910 0002 85B0     	 sub sp,sp,#20
 911              	 .cfi_def_cfa_offset 24
 912 0004 00AF     	 add r7,sp,#0
 913              	 .cfi_def_cfa_register 7
 914 0006 7860     	 str r0,[r7,#4]
 915 0008 0B46     	 mov r3,r1
 916 000a FB70     	 strb r3,[r7,#3]
 917 000c 1346     	 mov r3,r2
 918 000e BB70     	 strb r3,[r7,#2]
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 371:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 919              	 .loc 1 371 0
 920 0010 FB78     	 ldrb r3,[r7,#3]
 921 0012 9B08     	 lsrs r3,r3,#2
 922 0014 FB73     	 strb r3,[r7,#15]
 372:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 923              	 .loc 1 372 0
 924 0016 FB78     	 ldrb r3,[r7,#3]
 925 0018 03F00303 	 and r3,r3,#3
 926 001c DBB2     	 uxtb r3,r3
 927 001e DB00     	 lsls r3,r3,#3
 928 0020 BB73     	 strb r3,[r7,#14]
 373:../Libraries/XMCLib/src/xmc_ledts.c **** 
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 375:../Libraries/XMCLib/src/xmc_ledts.c **** 
 376:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 929              	 .loc 1 376 0
 930 0022 FB7B     	 ldrb r3,[r7,#15]
 931 0024 7A68     	 ldr r2,[r7,#4]
 932 0026 0833     	 adds r3,r3,#8
 933 0028 9B00     	 lsls r3,r3,#2
 934 002a 1344     	 add r3,r3,r2
 935 002c 5B68     	 ldr r3,[r3,#4]
 936 002e BB60     	 str r3,[r7,#8]
 377:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 937              	 .loc 1 377 0
 938 0030 BB7B     	 ldrb r3,[r7,#14]
 939 0032 FF22     	 movs r2,#255
 940 0034 02FA03F3 	 lsl r3,r2,r3
 941 0038 DB43     	 mvns r3,r3
 942 003a 1A46     	 mov r2,r3
 943 003c BB68     	 ldr r3,[r7,#8]
 944 003e 1340     	 ands r3,r3,r2
 945 0040 BB60     	 str r3,[r7,#8]
 378:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 946              	 .loc 1 378 0
 947 0042 BA78     	 ldrb r2,[r7,#2]
 948 0044 BB7B     	 ldrb r3,[r7,#14]
 949 0046 02FA03F3 	 lsl r3,r2,r3
 950 004a 1A46     	 mov r2,r3
 951 004c BB68     	 ldr r3,[r7,#8]
 952 004e 1343     	 orrs r3,r3,r2
 953 0050 BB60     	 str r3,[r7,#8]
 379:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 954              	 .loc 1 379 0
 955 0052 FB7B     	 ldrb r3,[r7,#15]
 956 0054 7A68     	 ldr r2,[r7,#4]
 957 0056 0833     	 adds r3,r3,#8
 958 0058 9B00     	 lsls r3,r3,#2
 959 005a 1344     	 add r3,r3,r2
 960 005c BA68     	 ldr r2,[r7,#8]
 961 005e 5A60     	 str r2,[r3,#4]
 380:../Libraries/XMCLib/src/xmc_ledts.c **** }
 962              	 .loc 1 380 0
 963 0060 1437     	 adds r7,r7,#20
 964              	 .cfi_def_cfa_offset 4
 965 0062 BD46     	 mov sp,r7
 966              	 .cfi_def_cfa_register 13
 967              	 
 968 0064 5DF8047B 	 ldr r7,[sp],#4
 969              	 .cfi_restore 7
 970              	 .cfi_def_cfa_offset 0
 971 0068 7047     	 bx lr
 972              	 .cfi_endproc
 973              	.LFE192:
 975 006a 00BF     	 .text
 976              	.Letext0:
 977              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 978              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 979              	 .file 4 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 980              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_ledts.h"
 981              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 982              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 983              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 984              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:81     .text.XMC_LEDTS_InitGlobal:0000003c $d
    {standard input}:87     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:92     .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:157    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:162    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:230    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:235    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:240    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:320    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:325    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:330    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:369    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:374    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:409    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:414    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:448    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:453    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:501    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:506    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:541    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:546    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:622    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:627    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:703    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:708    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:758    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:763    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:804    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:809    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:854    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:859    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:895    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:900    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
