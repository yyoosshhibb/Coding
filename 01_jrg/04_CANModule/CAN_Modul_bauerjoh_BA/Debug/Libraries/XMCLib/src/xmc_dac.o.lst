   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DAC_CH_EnableOutput,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DAC_CH_EnableOutput:
  25              	.LFB140:
  26              	 .file 1 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_dac.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @file xmc_dac.h
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @date 2015-08-31
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @cond
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  **********************************************************************************
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * All rights reserved.                        
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *                                             
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Redistribution and use in source and binary forms, with or without           
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * modification,are permitted provided that the following conditions are met:   
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   Redistributions of source code must retain the above copyright notice,      
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   this list of conditions and the following disclaimer.                        
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   this list of conditions and the following disclaimer in the documentation    
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   and/or other materials provided with the distribution.                       
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   may be used to endorse or promote products derived from this software without
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *   specific prior written permission.                                           
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *                                                                              
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * To improve the quality of the software, users are encouraged to share        
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * dave@infineon.com).                                                          
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  **********************************************************************************
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Change History
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * --------------
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-18:
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Initial version
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *      
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-02-20:
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Driver description added
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-06-19:
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 2015-08-31:
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *     - Help document updated
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @endcond 
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #ifndef XMC_DAC_H
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_H
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * HEADER FILES
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #include <xmc_common.h>
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /* DAC peripheral is not available on XMC1X devices. */
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(DAC)
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup XMClib
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @addtogroup DAC
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @{
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @brief Digital to Analog Converter (DAC) driver for XMC 4000 microcontroller family. <br>
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver uses DAC peripheral to convert digital value to analog value. XMC4000 microcontroller
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * and maximum conversion rate of 2MHz with full accuracy and 5MHz with reduced accuracy.
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * It consists of inbuilt pattern generator, ramp generator and noise generator modes. Additionally
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * in single value mode and in data mode.
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * It has DMA handling capability to generate custom waveforms in data mode without CPU interventio
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC driver features:
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Configuration structure XMC_DAC_CH_CONFIG_t and initialization function XMC_DAC_CH_Init() to
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Pattern Generator Mode:
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in pattern generator mode using XMC_DAC_CH_StartPatternMode()
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- XMC_DAC_CH_SetPattern() is used to set the waveform pattern values in pattern register for on
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetPatternFrequency()
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -#  Single Value Mode:
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in single value mode using XMC_DAC_CH_StartSingleValueMode()
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Data Mode:
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in data mode using XMC_DAC_CH_StartDataMode()
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Ramp Mode:
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *  - DAC is configured in ramp generator mode using XMC_DAC_CH_StartRampMode()
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to change the trigger frequency using XMC_DAC_CH_SetRampFrequency()
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *  - Allows to set the start and stop values of the ramp using XMC_DAC_CH_SetRampStart() and XMC_D
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Noise Mode:
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- DAC is configured in noise mode using XMC_DAC_CH_StartNoiseMode()
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * 	- Allows to change the trigger frequency using XMC_DAC_CH_SetFrequency()
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to change the scale, offset dynamically using XMC_DAC_CH_SetOutputScale() and XMC_DAC_
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# Allows to select one of the eight possible trigger sources using XMC_DAC_CH_SetTrigger()
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * -# 2 DAC channels can be used in synchronization in single value mode and data mode to generate 
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * MACROS
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC0 ((XMC_DAC_t *)DAC_BASE)         /**< DAC module register base */
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_DACCFG_NEGATE_Msk (0x10000000UL) /*< DAC negation enable mask in XMC44 device */
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_NO_CHANNELS (2U)                 /**< DAC maximum channels */
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_SAMPLES_PER_PERIOD (32U)         /**< DAC samples per period in pattern mode */
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_TRIANGLE  {0U, 4U, 8U, 12U, 16U, 19U, 23U, 27U, 31U} /**< First quarter Tri
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_SINE      {0U, 6U, 12U, 17U, 22U, 26U, 29U, 30U, 31U} /**< First quarter Si
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_PATTERN_RECTANGLE {31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U, 31U} /**< First quarter 
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_DAC_VALID(PTR)            ((PTR) == XMC_DAC0)
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_CHANNEL_VALID(CH)         (CH < XMC_DAC_NO_CHANNELS)
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_TRIGGER_VALID(TRIGGER)    ((TRIGGER == XMC_DAC_CH_TRIGGER_INTERNAL) ||\
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1) ||
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1) ||
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1) ||
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9) ||\
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8) ||\
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS) 
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS) 
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (TRIGGER == XMC_DAC_CH_TRIGGER_SOFTWARE))
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_MODE_VALID(MODE)          ((MODE == XMC_DAC_CH_MODE_IDLE) ||\
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_SINGLE) ||\
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_DATA) ||\
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_PATTERN) ||\
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_NOISE) ||\
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (MODE == XMC_DAC_CH_MODE_RAMP))
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #define XMC_DAC_IS_OUTPUT_SCALE_VALID(SCALE) ((SCALE == XMC_DAC_CH_OUTPUT_SCALE_NONE) ||\
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_2) ||\
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_4) ||\
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_8) ||\
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_16) ||\
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_32) ||\
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_64) ||\
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_MUL_128) ||\
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_2) ||\
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_4) ||\
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_8) ||\
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_16) ||\
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_32) ||\
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_64) ||\
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               (SCALE == XMC_DAC_CH_OUTPUT_SCALE_DIV_128))
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                             
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * ENUMS
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Return types of the API's
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_STATUS
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_OK              = 0U, /**< Status is ok, no error detected */
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR           = 1U, /**< Error detected */
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_BUSY            = 2U, /**< DAC is busy */
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2LOW  = 3U, /**< Frequency can't be configured. Frequency is to low. 
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_STATUS_ERROR_FREQ2HIGH = 4U  /**< Frequency can't be configured. Frequency is to high.
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_STATUS_t;
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Operating modes of DAC
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_MODE
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_IDLE    = 0x0U << DAC_DAC0CFG0_MODE_Pos,    /**< DAC is disabled */
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_SINGLE  = 0x1U << DAC_DAC0CFG0_MODE_Pos,    /**< Single value mode - single data 
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_DATA    = 0x2U << DAC_DAC0CFG0_MODE_Pos,    /**< Data mode - continuous data proc
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_PATTERN = 0x3U << DAC_DAC0CFG0_MODE_Pos,    /**< Pattern mode - inbuilt pattern w
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    Sine, Triangle, Rectangle */
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_NOISE   = 0x4U << DAC_DAC0CFG0_MODE_Pos,    /**< Noise mode - pseudo-random noise
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_MODE_RAMP    = 0x5U << DAC_DAC0CFG0_MODE_Pos     /**< Ramp mode - ramp generation */
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_MODE_t;
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Trigger sources for the data update
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_TRIGGER
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_INTERNAL =
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x0U << DAC_DAC0CFG1_TRIGMOD_Pos),                                      /**< Internal trigge
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU80_SR1 =
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | 0x0U,                               /**< External trigge
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU40_SR1 =
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x2U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_CCU41_SR1 =
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x3U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_9 =
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x4U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_P2_8 =
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x5U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U0C0_DX1INS =
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x6U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_EXTERNAL_U1C0_DX1INS =
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_TRIGMOD_Pos) | (0x7U << DAC_DAC0CFG1_TRIGSEL_Pos), /**< External trigge
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_TRIGGER_SOFTWARE =
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x2U << DAC_DAC0CFG1_TRIGMOD_Pos)                                       /**< Software trigge
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_TRIGGER_t;
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Data type of the input data
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_DATA_TYPE
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_UNSIGNED = 0U , /**< input data is unsigned */
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_DATA_TYPE_SIGNED = 1U     /**< input data is signed */
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_DATA_TYPE_t;
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Scaling of the input data
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_SCALE
 230:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 231:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_NONE =
 232:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x0U,                                                                   /**< No scaling */
 233:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_2 =
 234:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x1U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 2 
 235:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_4 =
 236:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x2U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 4 
 237:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_8 =
 238:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x3U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 8 
 239:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_16 =
 240:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x4U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 16
 241:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_32 =
 242:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x5U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 32
 243:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_64 =
 244:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x6U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 64
 245:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_MUL_128 =
 246:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       (0x1U << DAC_DAC0CFG1_MULDIV_Pos) | (0x7U << DAC_DAC0CFG1_SCALE_Pos),   /**< multiplied by 12
 247:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_2 =
 248:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x1U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 2 */
 249:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_4 =
 250:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x2U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 4 */
 251:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_8 =
 252:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x3U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 8 */
 253:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_16 =
 254:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x4U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 16 */
 255:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_32 =
 256:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x5U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 32 */
 257:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_64 =
 258:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x6U << DAC_DAC0CFG1_SCALE_Pos,                                         /**< divided by 64 */
 259:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_SCALE_DIV_128 =
 260:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****       0x7U << DAC_DAC0CFG1_SCALE_Pos                                          /**< divided by 128 *
 261:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_SCALE_t;
 262:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 263:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 264:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Negation of input data (applicable only for XMC44 device)
 265:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 266:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_OUTPUT_NEGATION
 267:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 268:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_DISABLED = 0U,                   /**< XMC_DAC_CH_OUTPUT_NEGATION_DISAB
 269:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_OUTPUT_NEGATION_ENABLED = 1U                     /**< XMC_DAC_CH_OUTPUT_NEGATION_ENABL
 270:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_OUTPUT_NEGATION_t;
 271:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 272:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 273:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Output sign signal for the Pattern Generation Mode
 274:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 275:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef enum XMC_DAC_CH_PATTERN_SIGN_OUTPUT
 276:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 277:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_DISABLED = 0U,  /**< Sign output signal generation is disabled */
 278:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_DAC_CH_PATTERN_SIGN_OUTPUT_ENABLED = 1U    /**< Sign output signal generation is enabled */
 279:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t;
 280:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 281:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 282:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DATA STRUCTURES
 283:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 284:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 285:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC peripheral registers configuration.
 286:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 287:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct
 288:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 289:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   __I  uint32_t  ID;
 290:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 291:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 292:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 293:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t low;
 294:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t high;
 295:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   } DACCFG[XMC_DAC_NO_CHANNELS];
 296:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 297:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DACDATA[XMC_DAC_NO_CHANNELS];
 298:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   __IO uint32_t DAC01DATA;
 299:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 300:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 301:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 302:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t low;
 303:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****      __IO uint32_t high;
 304:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   } DACPAT[XMC_DAC_NO_CHANNELS];
 305:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 306:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_t;
 307:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 308:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard start*/
 309:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 310:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma push
 311:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma anon_unions
 312:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 313:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma warning 586
 314:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 315:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 316:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 317:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel related configuration
 318:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 319:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** typedef struct XMC_DAC_CH_CONFIG
 320:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 321:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   union
 322:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 323:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 324:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 325:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :23;                /**< Not used bits */
 326:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t data_type:1;        /**< input data type - unsigned / signed */
 327:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :4;                 /**< Not used bits */
 328:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_negation:1;  /**< Negation of the output waveform enabled/disabled */
 329:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :3;
 330:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   };
 331:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   uint32_t cfg0;
 332:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   };
 333:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   union
 334:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 335:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   struct
 336:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   {
 337:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_scale:4;  /**< Scale value of type XMC_DAC_CH_OUTPUT_SCALE_t. It includes scali
 338:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t output_offset:8; /**< offset value */
 339:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     uint32_t :20;
 340:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   };
 341:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   uint32_t cfg1;
 342:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   };
 343:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** } XMC_DAC_CH_CONFIG_t;
 344:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*Anonymous structure/union guard end*/
 345:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #if defined(__CC_ARM)
 346:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma pop
 347:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #elif defined(__TASKING__)
 348:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   #pragma warning restore
 349:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 350:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /*******************************************************************************
 351:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * API PROTOTYPES
 352:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *******************************************************************************/
 353:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 354:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #ifdef __cplusplus
 355:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** extern "C" {
 356:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** #endif
 357:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 358:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 359:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 360:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 361:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 362:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 363:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 364:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables DAC clock and releases DAC reset.<br>
 365:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 366:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 367:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Enabling DAC is the first step of DAC initialisation. This API is called by XMC_DAC_CH_Init().
 368:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is enabled by setting \a DAC bit of \a CGATCLR1 register. DAC reset is released by set
 369:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 370:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 371:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 372:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Disable(), XMC_DAC_CH_Init()\n\n\n
 373:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 374:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 375:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Enable(XMC_DAC_t *const dac);
 376:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 377:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 378:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 379:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 380:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 381:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 382:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 383:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables DAC clock and resets DAC.
 384:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 385:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 386:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC clock is disabled by setting \a DAC bit of \a CGATSET1 register. DAC is reset by setting \a 
 387:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 388:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_IsEnabled(), XMC_DAC_Enable()\n\n\n
 390:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 391:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 392:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_Disable(XMC_DAC_t *const dac);
 393:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 394:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 395:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 396:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 397:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool<br>
 398:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if DAC is enabled<br>
 399:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if DAC is disabled
 400:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 401:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 402:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the state of the DAC.
 403:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 404:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 405:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC enabled status is determined by referring to \a DACRS bit of \a PRSTAT1 register.
 406:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 407:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 408:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_Enable(), XMC_DAC_Disable()\n\n\n
 409:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 410:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 411:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** bool XMC_DAC_IsEnabled(const XMC_DAC_t *const dac);
 412:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 413:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 414:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 415:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 416:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 417:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 418:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 419:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to Simultaneous data mode from Independent data mode.
 420:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 421:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 422:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 423:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is enabled by setting \a DATMOD bit of \a DAC0CFG1 register.
 424:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 425:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 426:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Set channel 0 and channel 1 to Data mode before calling this API.
 427:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 428:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 429:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_SimultaneousWrite(), XMC_
 430:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 431:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 432:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_EnableSimultaneousDataMode(XMC_DAC_t *const dac)
 433:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 434:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_EnableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 435:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 436:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high |= DAC_DAC0CFG1_DATMOD_Msk;
 437:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 438:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 439:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 440:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 441:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 442:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 443:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 444:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 445:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC switches to independent data mode from simultaneous Data mode.
 446:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 447:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 448:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Independent data mode is the default data mode.
 449:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Simultaneous data mode is disabled by clearing \a DATMOD bit of \a DAC0CFG1 register.
 450:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 451:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 452:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartDataMode(), XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 453:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 454:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 455:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_DisableSimultaneousDataMode(XMC_DAC_t *const dac)
 456:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 457:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_DisableSimultaneousDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 458:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 459:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[0].high &= ~DAC_DAC0CFG1_DATMOD_Msk;
 460:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 461:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 462:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 463:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 464:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data0 Data for DAC channel 0 [0-4095]
 465:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data1 Data for DAC channel 1 [0-4095]
 466:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 467:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 468:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 469:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 470:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The data (\e data0 & \e data1) to be converted by channel 0 & channel 1 are updated to \a DATA1 
 471:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * data0 and data1 have the range of [0-4095].
 472:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 473:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 474:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel 0 and Channel 1 should be set to simultaneous data mode before calling this API.
 475:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 476:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 477:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_EnableSimultaneousDataMode()\n\n\n
 478:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 479:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 480:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_SimultaneousWrite(XMC_DAC_t *const dac, const uint16_t data0, const ui
 481:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 482:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_SimultaneousWrite: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 483:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 484:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (data0 << DAC_DAC01DATA_DATA0_Pos) | (data1 << DAC_DAC01DATA_DATA1_Pos);
 485:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 486:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 487:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 488:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 489:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 490:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param config Pointer to the DAC channel configuration structure
 491:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 492:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 493:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 494:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 495:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Initialises and configures the DAC \e channel with the configuration date pointed by \e config.
 496:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 497:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 498:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * DAC channel is initialised by configuring the registers \a DAC0CFG0 and \a DAC0CFG1 registers (f
 499:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * It enables the channel output by calling XMC_DAC_CH_EnableOutput().
 500:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 501:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 502:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_Init(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_CH_CONFIG_t *const 
 503:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 504:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 505:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 506:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 507:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 508:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 509:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 510:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 511:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is enabled by setting the \a ANAEN bit of \a DAC0CFG1 register (for ch
 512:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 513:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><BR>
 514:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \a tSTARTUP time for DAC analog output starts after the \a ANAEN bit is set to one.
 515:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * After the expiry of the startup time the default value is driven to DAC output and a new value c
 516:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 517:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 518:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_DisableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 519:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 520:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 521:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 522:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
  27              	 .loc 1 522 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	 .cfi_def_cfa_offset 16
  37 0004 00AF     	 add r7,sp,#0
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 0B46     	 mov r3,r1
  41 000a FB70     	 strb r3,[r7,#3]
 523:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 524:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 525:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 526:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high |= DAC_DAC0CFG1_ANAEN_Msk;
  42              	 .loc 1 526 0
  43 000c F878     	 ldrb r0,[r7,#3]
  44 000e FB78     	 ldrb r3,[r7,#3]
  45 0010 7A68     	 ldr r2,[r7,#4]
  46 0012 DB00     	 lsls r3,r3,#3
  47 0014 1344     	 add r3,r3,r2
  48 0016 9B68     	 ldr r3,[r3,#8]
  49 0018 43F08072 	 orr r2,r3,#16777216
  50 001c 7968     	 ldr r1,[r7,#4]
  51 001e C300     	 lsls r3,r0,#3
  52 0020 0B44     	 add r3,r3,r1
  53 0022 9A60     	 str r2,[r3,#8]
 527:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
  54              	 .loc 1 527 0
  55 0024 0C37     	 adds r7,r7,#12
  56              	 .cfi_def_cfa_offset 4
  57 0026 BD46     	 mov sp,r7
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 0028 5DF8047B 	 ldr r7,[sp],#4
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 002c 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE140:
  67 002e 00BF     	 .section .text.XMC_DAC_CH_EnablePatternSignOutput,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_DAC_CH_EnablePatternSignOutput:
  73              	.LFB144:
 528:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 529:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 530:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 531:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 532:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 533:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 534:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 535:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 536:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output is disabled by clearing the \a ANAEN bit of \a DAC0CFG1 register (for 
 537:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 538:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 539:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * A call to this API stops driving the converted digital input to its output.
 540:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 541:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 542:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_IsOutputEnabled()\n\n\n
 543:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 544:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 545:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisableOutput(XMC_DAC_t *const dac, const uint8_t channel)
 546:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 547:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 548:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisableOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 549:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 550:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high &= ~DAC_DAC0CFG1_ANAEN_Msk;
 551:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 552:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 553:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 554:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 555:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 556:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 557:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return bool <BR>
 558:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * true  - if analog output is enabled <BR>
 559:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * false - if analog output is disabled <BR>
 560:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 561:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 562:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Returns the status of DAC analog output.
 563:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 564:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 565:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel output enabled or disabled is determined by reading the \a ANAEN bit of \a DA
 566:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 567:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 568:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnableOutput(), XMC_DAC_CH_DisableOutput()\n\n\n
 569:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 570:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 571:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE bool XMC_DAC_CH_IsOutputEnabled(const XMC_DAC_t *const dac, const uint8_t channel)
 572:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 573:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 574:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_IsOutputEnabled: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(
 575:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 576:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   return (bool)(dac->DACCFG[channel].high & DAC_DAC0CFG1_ANAEN_Msk);
 577:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 578:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 579:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 580:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 581:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 582:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param data Data to be written  [0-4095]
 583:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 584:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 585:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 586:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 587:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Writes the \e data to the \e channel's DATA register.
 588:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 589:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 590:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The \e data is then converted and driven to the output.
 591:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the trigger is set, On a trigger event the data in DATA register is converted and driven to \
 592:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Data \a data is written to the \a channel by loading \a data to \a DATA0 bit-field of \a DAC0DAT
 593:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * data has the range of [0-4095].
 594:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 595:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 596:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The API can be used for Single Value Mode, Data Mode (Individual) & Ramp Mode.
 597:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_EnableOutput() API to enable analog output.
 598:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 599:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 600:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartSingleValueMode(), XMC_DAC_CH_StartDataMode(), XMC_DAC_CH_StartRampMode()\n\n\n
 601:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 602:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 603:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_Write(XMC_DAC_t *const dac, const uint8_t channel, const uint16_t d
 604:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 605:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 606:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_Write: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel));
 607:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 608:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = data;
 609:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 610:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 611:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 612:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 613:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 614:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 615:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 616:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 617:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 618:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Single Value Mode by calling XMC_DAC_CH_SetMode().
 619:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 620:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 621:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data.
 622:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 623:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 624:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Write()\n\n\n
 625:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 626:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 627:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartSingleValueMode(XMC_DAC_t *const dac, const uint8_t channel);
 628:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 629:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 630:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 631:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 632:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 633:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency [Hz]
 634:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 635:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 636:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 637:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 638:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Data mode. Trigger and frequency are configured.
 639:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 640:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 641:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_Write() API to write the data. Call XMC_DAC_EnableSimultaneousDataMode() to swit
 642:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 643:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 644:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_Write(), XMC_DAC_EnableSimultaneousDataMode() \n\n\n
 645:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 646:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 647:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartDataMode(XMC_DAC_t *const dac,
 648:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint8_t channel,
 649:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 650:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint32_t frequency);
 651:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 652:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 653:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 654:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 655:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Start point of the ramp [0-4095]
 656:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Stop point of the ramp [0-4095]
 657:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 658:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Ramp frequency in [Hz]
 659:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 660:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 661:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 662:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 663:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Ramp mode. Trigger, frequency, start and stop values are configured.
 664:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger ramp values are converted and driven to \e channel output.
 665:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Start and stop have the range of [0-4095]. Stop should be equal or greater than start. 
 666:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 667:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 668:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \e stop value, it restarts from the \e start value with the next
 669:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 670:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 671:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop() \n\n\n
 672:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 673:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 674:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartRampMode(XMC_DAC_t *const dac,
 675:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint8_t channel,
 676:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint16_t start,
 677:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint16_t stop,
 678:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 679:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                              const uint32_t frequency);
 680:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 681:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 682:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 683:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 684:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Data table of a pattern
 685:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param sign_output Sign information of the waveform
 686:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 687:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 688:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 689:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 690:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 691:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 692:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Pattern mode. Trigger, frequency, sign output and data are configured.
 693:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger, the \e pattern values are converted and driven to \e channel output.
 694:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 695:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 696:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init(), XMC_DAC_CH_DisablePatternSignOutput() \n\n\n
 697:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 698:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 699:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartPatternMode(XMC_DAC_t *const dac,
 700:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint8_t channel,
 701:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint8_t *const pattern,
 702:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t sign_output,
 703:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const XMC_DAC_CH_TRIGGER_t trigger,
 704:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                 const uint32_t frequency);
 705:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 706:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 707:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 708:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 709:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Data points update trigger
 710:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 711:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 712:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t status
 713:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 714:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 715:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e channel to Noise mode. Trigger and frequency are configured.
 716:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * On a \e trigger the DAC starts converting and drives to \e channel output.
 717:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 718:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 719:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_Init()\n\n\n
 720:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 721:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 722:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartNoiseMode(XMC_DAC_t *const dac,
 723:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               const uint8_t channel,
 724:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               const XMC_DAC_CH_TRIGGER_t trigger,
 725:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                               const uint32_t frequency);
 726:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 727:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 728:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 729:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 730:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param pattern Pointer to the data table
 731:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 732:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 733:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 734:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 735:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The data for the Pattern mode is written to the \a DAC0PATL and \a DAC0PATH registers.
 736:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The API is called by XMC_DAC_CH_StartPatternMode().
 737:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 738:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 739:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Pattern mode.
 740:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 741:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 742:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_EnablePatternSignOutput(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 743:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 744:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 745:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** void XMC_DAC_CH_SetPattern(XMC_DAC_t *const dac, const uint8_t channel, const uint8_t *const patter
 746:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 747:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 748:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 749:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 750:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 751:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 752:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 753:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 754:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Enables the output sign information for Pattern Mode.
 755:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 756:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 757:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is enabled by setting \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1CF
 758:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 759:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 760:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 761:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 762:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 763:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_DisablePatternSignOutput()\n\n\n
 764:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 765:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 766:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_EnablePatternSignOutput(XMC_DAC_t *const dac,
 767:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                      const uint8_t channel)
 768:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
  74              	 .loc 1 768 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	 .cfi_def_cfa_register 7
  86 0006 7860     	 str r0,[r7,#4]
  87 0008 0B46     	 mov r3,r1
  88 000a FB70     	 strb r3,[r7,#3]
 769:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(
 770:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_EnablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANNE
 771:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 772:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low |= DAC_DAC0CFG0_SIGNEN_Msk;
  89              	 .loc 1 772 0
  90 000c F878     	 ldrb r0,[r7,#3]
  91 000e FB78     	 ldrb r3,[r7,#3]
  92 0010 7A68     	 ldr r2,[r7,#4]
  93 0012 DB00     	 lsls r3,r3,#3
  94 0014 1344     	 add r3,r3,r2
  95 0016 5B68     	 ldr r3,[r3,#4]
  96 0018 43F00052 	 orr r2,r3,#536870912
  97 001c 7968     	 ldr r1,[r7,#4]
  98 001e C300     	 lsls r3,r0,#3
  99 0020 0B44     	 add r3,r3,r1
 100 0022 5A60     	 str r2,[r3,#4]
 773:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 101              	 .loc 1 773 0
 102 0024 0C37     	 adds r7,r7,#12
 103              	 .cfi_def_cfa_offset 4
 104 0026 BD46     	 mov sp,r7
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0028 5DF8047B 	 ldr r7,[sp],#4
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 002c 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE144:
 114 002e 00BF     	 .section .text.XMC_DAC_CH_DisablePatternSignOutput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_DAC_CH_DisablePatternSignOutput:
 120              	.LFB145:
 774:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 775:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 776:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 777:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 778:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 779:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 780:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 781:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 782:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Disables output sign information for Pattern Mode.
 783:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 784:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 785:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sign output is disabled by clearing \a SIGNEN bit of \a DAC0CFG0 register (for channel 0) / DAC1
 786:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 787:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 788:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Pattern mode.
 789:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 790:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 791:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode(), XMC_DAC_CH_EnablePatternSignOutput()\n\n\n
 792:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 793:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 794:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_DisablePatternSignOutput(XMC_DAC_t *const dac,
 795:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                      const uint8_t channel)
 796:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 121              	 .loc 1 796 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	 .cfi_def_cfa_offset 4
 128              	 .cfi_offset 7,-4
 129 0002 83B0     	 sub sp,sp,#12
 130              	 .cfi_def_cfa_offset 16
 131 0004 00AF     	 add r7,sp,#0
 132              	 .cfi_def_cfa_register 7
 133 0006 7860     	 str r0,[r7,#4]
 134 0008 0B46     	 mov r3,r1
 135 000a FB70     	 strb r3,[r7,#3]
 797:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID
 798:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_DisablePatternSignOutput: channel parameter not valid\n", XMC_DAC_IS_CHANN
 799:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 800:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low &= ~DAC_DAC0CFG0_SIGNEN_Msk;
 136              	 .loc 1 800 0
 137 000c F878     	 ldrb r0,[r7,#3]
 138 000e FB78     	 ldrb r3,[r7,#3]
 139 0010 7A68     	 ldr r2,[r7,#4]
 140 0012 DB00     	 lsls r3,r3,#3
 141 0014 1344     	 add r3,r3,r2
 142 0016 5B68     	 ldr r3,[r3,#4]
 143 0018 23F00052 	 bic r2,r3,#536870912
 144 001c 7968     	 ldr r1,[r7,#4]
 145 001e C300     	 lsls r3,r0,#3
 146 0020 0B44     	 add r3,r3,r1
 147 0022 5A60     	 str r2,[r3,#4]
 801:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 148              	 .loc 1 801 0
 149 0024 0C37     	 adds r7,r7,#12
 150              	 .cfi_def_cfa_offset 4
 151 0026 BD46     	 mov sp,r7
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0028 5DF8047B 	 ldr r7,[sp],#4
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 002c 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE145:
 161 002e 00BF     	 .section .text.XMC_DAC_CH_SetRampStart,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_DAC_CH_SetRampStart:
 167              	.LFB146:
 802:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 803:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 804:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 805:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 806:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param start Ramp start point [0-4095]
 807:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 808:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 809:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 810:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 811:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp start value by writing to the register \a DAC0DATA (for \e channel 0) or \a DAC1DA
 812:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the \a start value with the next tr
 813:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e start value is lower than the stop value.
 814:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 815:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 816:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \a channel is set to Ramp mode.
 817:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Start value is a 12 bit data.
 818:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 819:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 820:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStart(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStop()\n\n\n
 821:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 822:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 823:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStart(XMC_DAC_t *const dac, const uint8_t channel, const uin
 824:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 168              	 .loc 1 824 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	 .cfi_def_cfa_offset 4
 175              	 .cfi_offset 7,-4
 176 0002 83B0     	 sub sp,sp,#12
 177              	 .cfi_def_cfa_offset 16
 178 0004 00AF     	 add r7,sp,#0
 179              	 .cfi_def_cfa_register 7
 180 0006 7860     	 str r0,[r7,#4]
 181 0008 0B46     	 mov r3,r1
 182 000a FB70     	 strb r3,[r7,#3]
 183 000c 1346     	 mov r3,r2
 184 000e 3B80     	 strh r3,[r7]
 825:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 826:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 827:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 828:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACDATA[channel] = start;
 185              	 .loc 1 828 0
 186 0010 FB78     	 ldrb r3,[r7,#3]
 187 0012 3A88     	 ldrh r2,[r7]
 188 0014 7968     	 ldr r1,[r7,#4]
 189 0016 0433     	 adds r3,r3,#4
 190 0018 9B00     	 lsls r3,r3,#2
 191 001a 0B44     	 add r3,r3,r1
 192 001c 5A60     	 str r2,[r3,#4]
 829:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 193              	 .loc 1 829 0
 194 001e 0C37     	 adds r7,r7,#12
 195              	 .cfi_def_cfa_offset 4
 196 0020 BD46     	 mov sp,r7
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 0022 5DF8047B 	 ldr r7,[sp],#4
 200              	 .cfi_restore 7
 201              	 .cfi_def_cfa_offset 0
 202 0026 7047     	 bx lr
 203              	 .cfi_endproc
 204              	.LFE146:
 206              	 .section .text.XMC_DAC_CH_SetRampStop,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	XMC_DAC_CH_SetRampStop:
 212              	.LFB148:
 830:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 831:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 832:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 833:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 834:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 835:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 836:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 837:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 838:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp start value by reading \a DATA0 bit-field of \a DAC0DATA register (for channel 0) 
 839:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 840:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 841:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 842:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 843:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 844:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 845:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStart(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetR
 846:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 847:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 848:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStart(XMC_DAC_t *const dac, const uint8_t channel)
 849:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 850:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 851:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStart: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(cha
 852:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   
 853:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   return (uint16_t)(dac->DACDATA[channel]);
 854:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 855:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 856:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 857:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 858:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 859:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param stop Ramp stop point [0-4095]
 860:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 861:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 862:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 863:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 864:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the ramp stop value by writing to the bit-field \a DATA0 (for \e channel 0) or \a DATA1 (fo
 865:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its \a stop value, it restarts from the start value with the next tr
 866:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Ensure \e stop value is higher than the start value.
 867:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 868:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 869:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 870:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Stop value is a 12 bit data.
 871:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 872:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 873:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_GetRampStop(), XMC_DAC_CH_SetRampStart()\n\n\n
 874:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 875:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 876:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetRampStop(XMC_DAC_t *const dac, const uint8_t channel, const uint
 877:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 213              	 .loc 1 877 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217              	 
 218 0000 80B4     	 push {r7}
 219              	 .cfi_def_cfa_offset 4
 220              	 .cfi_offset 7,-4
 221 0002 83B0     	 sub sp,sp,#12
 222              	 .cfi_def_cfa_offset 16
 223 0004 00AF     	 add r7,sp,#0
 224              	 .cfi_def_cfa_register 7
 225 0006 7860     	 str r0,[r7,#4]
 226 0008 0B46     	 mov r3,r1
 227 000a FB70     	 strb r3,[r7,#3]
 228 000c 1346     	 mov r3,r2
 229 000e 3B80     	 strh r3,[r7]
 878:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 879:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 880:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DAC01DATA = (dac->DAC01DATA & ~(DAC_DAC01DATA_DATA0_Msk << (channel * DAC_DAC01DATA_DATA1_Po
 230              	 .loc 1 881 0
 231 0010 7B68     	 ldr r3,[r7,#4]
 232 0012 DA69     	 ldr r2,[r3,#28]
 233 0014 FB78     	 ldrb r3,[r7,#3]
 234 0016 1B01     	 lsls r3,r3,#4
 235 0018 1946     	 mov r1,r3
 236 001a 40F6FF73 	 movw r3,#4095
 237 001e 8B40     	 lsls r3,r3,r1
 238 0020 DB43     	 mvns r3,r3
 239 0022 1340     	 ands r3,r3,r2
 882:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                (stop << (channel * DAC_DAC01DATA_DATA1_Pos));
 240              	 .loc 1 882 0
 241 0024 3A88     	 ldrh r2,[r7]
 242 0026 F978     	 ldrb r1,[r7,#3]
 243 0028 0901     	 lsls r1,r1,#4
 244 002a 8A40     	 lsls r2,r2,r1
 881:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                (stop << (channel * DAC_DAC01DATA_DATA1_Pos));
 245              	 .loc 1 881 0
 246 002c 1A43     	 orrs r2,r2,r3
 247 002e 7B68     	 ldr r3,[r7,#4]
 248 0030 DA61     	 str r2,[r3,#28]
 883:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 249              	 .loc 1 883 0
 250 0032 0C37     	 adds r7,r7,#12
 251              	 .cfi_def_cfa_offset 4
 252 0034 BD46     	 mov sp,r7
 253              	 .cfi_def_cfa_register 13
 254              	 
 255 0036 5DF8047B 	 ldr r7,[sp],#4
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 003a 7047     	 bx lr
 259              	 .cfi_endproc
 260              	.LFE148:
 262              	 .section .text.XMC_DAC_CH_SetTrigger,"ax",%progbits
 263              	 .align 2
 264              	 .thumb
 265              	 .thumb_func
 267              	XMC_DAC_CH_SetTrigger:
 268              	.LFB150:
 884:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 885:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 886:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 887:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 888:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 889:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return uint16_t
 890:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 891:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 892:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Gets the ramp stop value by reading \a DATA0 bit-field of \a DAC01DATA register (for channel 0) 
 893:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * If the ramp counter reaches its stop value, it restarts from the start value with the next trigg
 894:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 895:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 896:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API if the \e channel is set to Ramp mode.
 897:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 898:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 899:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampStop(), XMC_DAC_CH_StartRampMode(), XMC_DAC_CH_GetRampStart()\n\n\n
 900:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 901:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 902:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE uint16_t XMC_DAC_CH_GetRampStop(XMC_DAC_t *const dac, const uint8_t channel)
 903:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 904:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 905:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_GetRampStop: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chan
 906:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 907:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   return((dac->DAC01DATA >> (channel * DAC_DAC01DATA_DATA1_Pos)) & DAC_DAC01DATA_DATA0_Msk);
 908:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 909:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 910:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 911:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 912:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 913:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param trigger Trigger source
 914:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 915:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
 916:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 917:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 918:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Selects the \e trigger source for the \e channel by configuring the bits TRIGSEL & TRIGMOD of CF
 919:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 920:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 921:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Channel \a channel trigger source is selected by \a TRIGSEL bit-field of \a DAC0CFG1 register (f
 922:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 923:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 924:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetTrigger(XMC_DAC_t *const dac, const uint8_t channel, const XMC_D
 925:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 269              	 .loc 1 925 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274 0000 80B4     	 push {r7}
 275              	 .cfi_def_cfa_offset 4
 276              	 .cfi_offset 7,-4
 277 0002 85B0     	 sub sp,sp,#20
 278              	 .cfi_def_cfa_offset 24
 279 0004 00AF     	 add r7,sp,#0
 280              	 .cfi_def_cfa_register 7
 281 0006 F860     	 str r0,[r7,#12]
 282 0008 0B46     	 mov r3,r1
 283 000a 7A60     	 str r2,[r7,#4]
 284 000c FB72     	 strb r3,[r7,#11]
 926:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 927:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chann
 928:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetTrigger: trigger parameter not valid\n", XMC_DAC_IS_TRIGGER_VALID(trigg
 929:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 930:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].high = (dac->DACCFG[channel].high & ~(DAC_DAC0CFG1_TRIGSEL_Msk | DAC_DAC0CFG
 285              	 .loc 1 930 0
 286 000e F87A     	 ldrb r0,[r7,#11]
 287 0010 FB7A     	 ldrb r3,[r7,#11]
 288 0012 FA68     	 ldr r2,[r7,#12]
 289 0014 DB00     	 lsls r3,r3,#3
 290 0016 1344     	 add r3,r3,r2
 291 0018 9B68     	 ldr r3,[r3,#8]
 292 001a 23F4CE22 	 bic r2,r3,#421888
 293 001e 7B68     	 ldr r3,[r7,#4]
 294 0020 1A43     	 orrs r2,r2,r3
 295 0022 F968     	 ldr r1,[r7,#12]
 296 0024 C300     	 lsls r3,r0,#3
 297 0026 0B44     	 add r3,r3,r1
 298 0028 9A60     	 str r2,[r3,#8]
 931:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                               trigger;
 932:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 299              	 .loc 1 932 0
 300 002a 1437     	 adds r7,r7,#20
 301              	 .cfi_def_cfa_offset 4
 302 002c BD46     	 mov sp,r7
 303              	 .cfi_def_cfa_register 13
 304              	 
 305 002e 5DF8047B 	 ldr r7,[sp],#4
 306              	 .cfi_restore 7
 307              	 .cfi_def_cfa_offset 0
 308 0032 7047     	 bx lr
 309              	 .cfi_endproc
 310              	.LFE150:
 312              	 .section .text.XMC_DAC_CH_SetMode,"ax",%progbits
 313              	 .align 2
 314              	 .thumb
 315              	 .thumb_func
 317              	XMC_DAC_CH_SetMode:
 318              	.LFB152:
 933:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 934:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 935:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 936:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 937:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency Waveform frequency in [Hz]
 938:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 939:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 940:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 941:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 942:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel.
 943:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 944:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 945:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * The value \e frequency acts as clock divider. The smallest \e frequency divider value is 16.
 946:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * A valid \e frequency value should be within the range XMC_DAC_MIN_FREQ_DIVIDER to XMC_DAC_MAX_FR
 947:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \a frequency is configured by setting \a FREQ bit-field of \a DAC0CFG0 register (for c
 948:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 949:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 950:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only for Single value mode, Data mode and Noise mode.
 951:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call XMC_DAC_CH_SetRampFrequency() in case of Ramp mode and XMC_DAC_CH_SetPatternFrequency() in 
 952:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 953:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 954:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_SetRampFrequency(), XMC_DAC_CH_SetPatternFrequency()\n\n\n
 955:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 956:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 957:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetFrequency(XMC_DAC_t *const dac, const uint8_t channel, const uint
 958:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 959:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 960:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 961:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 962:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency [Hz]
 963:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 964:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 965:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 966:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 967:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 968:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 969:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 970:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Ramp mode, the \a frequency of operation depends on the total number of sample points (\
 971:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 972:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 973:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 974:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Ramp mode.
 975:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 976:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
 977:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartRampMode()\n\n\n
 978:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 979:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
 980:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetRampFrequency(XMC_DAC_t *const dac, const uint8_t channel, const 
 981:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
 982:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
 983:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
 984:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
 985:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param frequency in [Hz]
 986:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 987:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return XMC_DAC_CH_STATUS_t
 988:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 989:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
 990:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the \e frequency of DAC channel by calling XMC_DAC_CH_SetFrequency().
 991:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 992:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par
 993:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * For the Pattern mode, the \a frequency of operation depends on the total number of sample points
 994:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Frequency \e frequency is multiplied by the total number of sample points, so that each trigger 
 995:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 996:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Note:</b><br>
 997:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Call this API only if the \a channel is set to Pattern mode.
 998:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
 999:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Related APIs:</b><BR>
1000:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * XMC_DAC_CH_StartPatternMode()\n\n\n
1001:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
1002:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
1003:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetPatternFrequency(XMC_DAC_t *const dac,
1004:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    const uint8_t channel,
1005:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                                                                    const uint32_t frequency)
1006:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
1007:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac)
1008:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetPatternFrequency: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VA
1009:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
1010:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   return XMC_DAC_CH_SetFrequency(dac, channel, frequency * XMC_DAC_SAMPLES_PER_PERIOD);
1011:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
1012:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** 
1013:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** /**
1014:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param dac Pointer to an instance of DAC module
1015:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param channel DAC channel number
1016:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @param mode DAC operation mode
1017:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
1018:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * @return None
1019:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
1020:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * \par<b>Description:</b><br>
1021:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Sets the operating \e mode for the \e channel by setting the \a MODE bit-field of \a DAC0CFG0 re
1022:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  * Different modes of DAC operation are defined by enum XMC_DAC_CH_MODE_t.
1023:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  *
1024:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****  */
1025:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** __STATIC_INLINE void XMC_DAC_CH_SetMode(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_
1026:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** {
 319              	 .loc 1 1026 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323              	 
 324 0000 80B4     	 push {r7}
 325              	 .cfi_def_cfa_offset 4
 326              	 .cfi_offset 7,-4
 327 0002 85B0     	 sub sp,sp,#20
 328              	 .cfi_def_cfa_offset 24
 329 0004 00AF     	 add r7,sp,#0
 330              	 .cfi_def_cfa_register 7
 331 0006 F860     	 str r0,[r7,#12]
 332 0008 0B46     	 mov r3,r1
 333 000a 7A60     	 str r2,[r7,#4]
 334 000c FB72     	 strb r3,[r7,#11]
1027:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
1028:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(channel)
1029:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   XMC_ASSERT("XMC_DAC_CH_SetMode: trigger parameter not valid\n", XMC_DAC_IS_MODE_VALID(mode));
1030:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****     
1031:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****   dac->DACCFG[channel].low = (dac->DACCFG[channel].low & ~DAC_DAC0CFG0_MODE_Msk) |
 335              	 .loc 1 1031 0
 336 000e F87A     	 ldrb r0,[r7,#11]
 337 0010 FB7A     	 ldrb r3,[r7,#11]
 338 0012 FA68     	 ldr r2,[r7,#12]
 339 0014 DB00     	 lsls r3,r3,#3
 340 0016 1344     	 add r3,r3,r2
 341 0018 5B68     	 ldr r3,[r3,#4]
 342 001a 23F4E002 	 bic r2,r3,#7340032
 343 001e 7B68     	 ldr r3,[r7,#4]
 344 0020 1A43     	 orrs r2,r2,r3
 345 0022 F968     	 ldr r1,[r7,#12]
 346 0024 C300     	 lsls r3,r0,#3
 347 0026 0B44     	 add r3,r3,r1
 348 0028 5A60     	 str r2,[r3,#4]
1032:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h ****                              mode;
1033:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc\xmc_dac.h **** }
 349              	 .loc 1 1033 0
 350 002a 1437     	 adds r7,r7,#20
 351              	 .cfi_def_cfa_offset 4
 352 002c BD46     	 mov sp,r7
 353              	 .cfi_def_cfa_register 13
 354              	 
 355 002e 5DF8047B 	 ldr r7,[sp],#4
 356              	 .cfi_restore 7
 357              	 .cfi_def_cfa_offset 0
 358 0032 7047     	 bx lr
 359              	 .cfi_endproc
 360              	.LFE152:
 362              	 .section .text.XMC_DAC_Enable,"ax",%progbits
 363              	 .align 2
 364              	 .global XMC_DAC_Enable
 365              	 .thumb
 366              	 .thumb_func
 368              	XMC_DAC_Enable:
 369              	.LFB203:
 370              	 .file 2 "../Libraries/XMCLib/src/xmc_dac.c"
   1:../Libraries/XMCLib/src/xmc_dac.c **** /**
   2:../Libraries/XMCLib/src/xmc_dac.c ****  * @file xmc_dac.c
   3:../Libraries/XMCLib/src/xmc_dac.c ****  * @date 2015-06-19
   4:../Libraries/XMCLib/src/xmc_dac.c ****  *
   5:../Libraries/XMCLib/src/xmc_dac.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_dac.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_dac.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_dac.c ****  *
   9:../Libraries/XMCLib/src/xmc_dac.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_dac.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_dac.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_dac.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_dac.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_dac.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_dac.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_dac.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_dac.c ****  * 
  18:../Libraries/XMCLib/src/xmc_dac.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_dac.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_dac.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_dac.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dac.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_dac.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_dac.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_dac.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_dac.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_dac.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_dac.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_dac.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_dac.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_dac.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_dac.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_dac.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_dac.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_dac.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_dac.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_dac.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_dac.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_dac.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_dac.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_dac.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_dac.c ****  *
  43:../Libraries/XMCLib/src/xmc_dac.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_dac.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_dac.c ****  *
  46:../Libraries/XMCLib/src/xmc_dac.c ****  * 2015-02-18:
  47:../Libraries/XMCLib/src/xmc_dac.c ****  *     - Initial version
  48:../Libraries/XMCLib/src/xmc_dac.c ****  *
  49:../Libraries/XMCLib/src/xmc_dac.c ****  * 2015-06-19:
  50:../Libraries/XMCLib/src/xmc_dac.c ****  *     - Removed GetDriverVersion API
  51:../Libraries/XMCLib/src/xmc_dac.c ****  * @endcond 
  52:../Libraries/XMCLib/src/xmc_dac.c ****  *
  53:../Libraries/XMCLib/src/xmc_dac.c ****  */
  54:../Libraries/XMCLib/src/xmc_dac.c **** 
  55:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  56:../Libraries/XMCLib/src/xmc_dac.c ****  * HEADER FILES
  57:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  58:../Libraries/XMCLib/src/xmc_dac.c **** 
  59:../Libraries/XMCLib/src/xmc_dac.c **** #include <xmc_dac.h>
  60:../Libraries/XMCLib/src/xmc_dac.c **** #include <xmc_scu.h>
  61:../Libraries/XMCLib/src/xmc_dac.c **** 
  62:../Libraries/XMCLib/src/xmc_dac.c **** /* DAC peripheral is not available on XMC1X devices. */
  63:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(DAC)
  64:../Libraries/XMCLib/src/xmc_dac.c **** 
  65:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  66:../Libraries/XMCLib/src/xmc_dac.c ****  * MACROS
  67:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  68:../Libraries/XMCLib/src/xmc_dac.c **** 
  69:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_MIN_FREQ_DIVIDER (16U)
  70:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_MAX_FREQ_DIVIDER (1048576U)
  71:../Libraries/XMCLib/src/xmc_dac.c **** #define XMC_DAC_DAC0PATL_PAT_BITSIZE (5U)
  72:../Libraries/XMCLib/src/xmc_dac.c **** 
  73:../Libraries/XMCLib/src/xmc_dac.c **** /*******************************************************************************
  74:../Libraries/XMCLib/src/xmc_dac.c ****  * API IMPLEMENTATION
  75:../Libraries/XMCLib/src/xmc_dac.c ****  *******************************************************************************/
  76:../Libraries/XMCLib/src/xmc_dac.c **** 
  77:../Libraries/XMCLib/src/xmc_dac.c **** /* API to enable the DAC module */
  78:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_Enable(XMC_DAC_t *const dac)
  79:../Libraries/XMCLib/src/xmc_dac.c **** {
 371              	 .loc 2 79 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375 0000 80B5     	 push {r7,lr}
 376              	 .cfi_def_cfa_offset 8
 377              	 .cfi_offset 7,-8
 378              	 .cfi_offset 14,-4
 379 0002 82B0     	 sub sp,sp,#8
 380              	 .cfi_def_cfa_offset 16
 381 0004 00AF     	 add r7,sp,#0
 382              	 .cfi_def_cfa_register 7
 383 0006 7860     	 str r0,[r7,#4]
  80:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
  81:../Libraries/XMCLib/src/xmc_dac.c ****   
  82:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(CLOCK_GATING_SUPPORTED)
  83:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DAC);
  84:../Libraries/XMCLib/src/xmc_dac.c **** #endif
  85:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DAC);
 384              	 .loc 2 85 0
 385 0008 0248     	 ldr r0,.L9
 386 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  86:../Libraries/XMCLib/src/xmc_dac.c **** }
 387              	 .loc 2 86 0
 388 000e 0837     	 adds r7,r7,#8
 389              	 .cfi_def_cfa_offset 8
 390 0010 BD46     	 mov sp,r7
 391              	 .cfi_def_cfa_register 13
 392              	 
 393 0012 80BD     	 pop {r7,pc}
 394              	.L10:
 395              	 .align 2
 396              	.L9:
 397 0014 20000010 	 .word 268435488
 398              	 .cfi_endproc
 399              	.LFE203:
 401              	 .section .text.XMC_DAC_Disable,"ax",%progbits
 402              	 .align 2
 403              	 .global XMC_DAC_Disable
 404              	 .thumb
 405              	 .thumb_func
 407              	XMC_DAC_Disable:
 408              	.LFB204:
  87:../Libraries/XMCLib/src/xmc_dac.c **** 
  88:../Libraries/XMCLib/src/xmc_dac.c **** /* API to disable the DAC module */
  89:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_Disable(XMC_DAC_t *const dac)
  90:../Libraries/XMCLib/src/xmc_dac.c **** {
 409              	 .loc 2 90 0
 410              	 .cfi_startproc
 411              	 
 412              	 
 413 0000 80B5     	 push {r7,lr}
 414              	 .cfi_def_cfa_offset 8
 415              	 .cfi_offset 7,-8
 416              	 .cfi_offset 14,-4
 417 0002 82B0     	 sub sp,sp,#8
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	 .cfi_def_cfa_register 7
 421 0006 7860     	 str r0,[r7,#4]
  91:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
  92:../Libraries/XMCLib/src/xmc_dac.c **** 
  93:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_DAC);
 422              	 .loc 2 93 0
 423 0008 0248     	 ldr r0,.L12
 424 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  94:../Libraries/XMCLib/src/xmc_dac.c **** #if defined(CLOCK_GATING_SUPPORTED)
  95:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_DAC);
  96:../Libraries/XMCLib/src/xmc_dac.c **** #endif
  97:../Libraries/XMCLib/src/xmc_dac.c **** }
 425              	 .loc 2 97 0
 426 000e 0837     	 adds r7,r7,#8
 427              	 .cfi_def_cfa_offset 8
 428 0010 BD46     	 mov sp,r7
 429              	 .cfi_def_cfa_register 13
 430              	 
 431 0012 80BD     	 pop {r7,pc}
 432              	.L13:
 433              	 .align 2
 434              	.L12:
 435 0014 20000010 	 .word 268435488
 436              	 .cfi_endproc
 437              	.LFE204:
 439              	 .section .text.XMC_DAC_IsEnabled,"ax",%progbits
 440              	 .align 2
 441              	 .global XMC_DAC_IsEnabled
 442              	 .thumb
 443              	 .thumb_func
 445              	XMC_DAC_IsEnabled:
 446              	.LFB205:
  98:../Libraries/XMCLib/src/xmc_dac.c **** 
  99:../Libraries/XMCLib/src/xmc_dac.c **** /* API to check whether DAC is enabled */
 100:../Libraries/XMCLib/src/xmc_dac.c **** bool XMC_DAC_IsEnabled(const XMC_DAC_t *const dac)
 101:../Libraries/XMCLib/src/xmc_dac.c **** {
 447              	 .loc 2 101 0
 448              	 .cfi_startproc
 449              	 
 450              	 
 451 0000 80B5     	 push {r7,lr}
 452              	 .cfi_def_cfa_offset 8
 453              	 .cfi_offset 7,-8
 454              	 .cfi_offset 14,-4
 455 0002 84B0     	 sub sp,sp,#16
 456              	 .cfi_def_cfa_offset 24
 457 0004 00AF     	 add r7,sp,#0
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 102:../Libraries/XMCLib/src/xmc_dac.c ****   bool status;
 103:../Libraries/XMCLib/src/xmc_dac.c **** 
 104:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_UNUSED_ARG(dac);
 105:../Libraries/XMCLib/src/xmc_dac.c **** 
 106:../Libraries/XMCLib/src/xmc_dac.c ****   status = XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_DAC);
 460              	 .loc 2 106 0
 461 0008 0848     	 ldr r0,.L18
 462 000a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 463 000e 0346     	 mov r3,r0
 464 0010 FB73     	 strb r3,[r7,#15]
 107:../Libraries/XMCLib/src/xmc_dac.c ****   if(status == true)
 465              	 .loc 2 107 0
 466 0012 FB7B     	 ldrb r3,[r7,#15]
 467 0014 002B     	 cmp r3,#0
 468 0016 02D0     	 beq .L15
 108:../Libraries/XMCLib/src/xmc_dac.c ****   {
 109:../Libraries/XMCLib/src/xmc_dac.c ****     status = false;
 469              	 .loc 2 109 0
 470 0018 0023     	 movs r3,#0
 471 001a FB73     	 strb r3,[r7,#15]
 472 001c 01E0     	 b .L16
 473              	.L15:
 110:../Libraries/XMCLib/src/xmc_dac.c ****   }
 111:../Libraries/XMCLib/src/xmc_dac.c ****   else
 112:../Libraries/XMCLib/src/xmc_dac.c ****   {
 113:../Libraries/XMCLib/src/xmc_dac.c ****     status = true;
 474              	 .loc 2 113 0
 475 001e 0123     	 movs r3,#1
 476 0020 FB73     	 strb r3,[r7,#15]
 477              	.L16:
 114:../Libraries/XMCLib/src/xmc_dac.c ****   }
 115:../Libraries/XMCLib/src/xmc_dac.c ****   return (status);
 478              	 .loc 2 115 0
 479 0022 FB7B     	 ldrb r3,[r7,#15]
 116:../Libraries/XMCLib/src/xmc_dac.c **** }
 480              	 .loc 2 116 0
 481 0024 1846     	 mov r0,r3
 482 0026 1037     	 adds r7,r7,#16
 483              	 .cfi_def_cfa_offset 8
 484 0028 BD46     	 mov sp,r7
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 002a 80BD     	 pop {r7,pc}
 488              	.L19:
 489              	 .align 2
 490              	.L18:
 491 002c 20000010 	 .word 268435488
 492              	 .cfi_endproc
 493              	.LFE205:
 495              	 .section .text.XMC_DAC_CH_Init,"ax",%progbits
 496              	 .align 2
 497              	 .global XMC_DAC_CH_Init
 498              	 .thumb
 499              	 .thumb_func
 501              	XMC_DAC_CH_Init:
 502              	.LFB206:
 117:../Libraries/XMCLib/src/xmc_dac.c **** 
 118:../Libraries/XMCLib/src/xmc_dac.c **** /* API to initialize DAC channel configuration */
 119:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_CH_Init(XMC_DAC_t *const dac, const uint8_t channel, const XMC_DAC_CH_CONFIG_t *const 
 120:../Libraries/XMCLib/src/xmc_dac.c **** {
 503              	 .loc 2 120 0
 504              	 .cfi_startproc
 505              	 
 506              	 
 507 0000 80B5     	 push {r7,lr}
 508              	 .cfi_def_cfa_offset 8
 509              	 .cfi_offset 7,-8
 510              	 .cfi_offset 14,-4
 511 0002 84B0     	 sub sp,sp,#16
 512              	 .cfi_def_cfa_offset 24
 513 0004 00AF     	 add r7,sp,#0
 514              	 .cfi_def_cfa_register 7
 515 0006 F860     	 str r0,[r7,#12]
 516 0008 0B46     	 mov r3,r1
 517 000a 7A60     	 str r2,[r7,#4]
 518 000c FB72     	 strb r3,[r7,#11]
 121:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_Enable(dac);
 519              	 .loc 2 121 0
 520 000e F868     	 ldr r0,[r7,#12]
 521 0010 FFF7FEFF 	 bl XMC_DAC_Enable
 122:../Libraries/XMCLib/src/xmc_dac.c **** 
 123:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACCFG[channel].low = config->cfg0;
 522              	 .loc 2 123 0
 523 0014 FB7A     	 ldrb r3,[r7,#11]
 524 0016 7A68     	 ldr r2,[r7,#4]
 525 0018 1268     	 ldr r2,[r2]
 526 001a F968     	 ldr r1,[r7,#12]
 527 001c DB00     	 lsls r3,r3,#3
 528 001e 0B44     	 add r3,r3,r1
 529 0020 5A60     	 str r2,[r3,#4]
 124:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACCFG[channel].high = config->cfg1;
 530              	 .loc 2 124 0
 531 0022 FB7A     	 ldrb r3,[r7,#11]
 532 0024 7A68     	 ldr r2,[r7,#4]
 533 0026 5268     	 ldr r2,[r2,#4]
 534 0028 F968     	 ldr r1,[r7,#12]
 535 002a DB00     	 lsls r3,r3,#3
 536 002c 0B44     	 add r3,r3,r1
 537 002e 9A60     	 str r2,[r3,#8]
 125:../Libraries/XMCLib/src/xmc_dac.c ****   if (channel < XMC_DAC_NO_CHANNELS)
 538              	 .loc 2 125 0
 539 0030 FB7A     	 ldrb r3,[r7,#11]
 540 0032 012B     	 cmp r3,#1
 541 0034 04D8     	 bhi .L20
 126:../Libraries/XMCLib/src/xmc_dac.c ****   {
 127:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_EnableOutput(dac, channel);
 542              	 .loc 2 127 0
 543 0036 FB7A     	 ldrb r3,[r7,#11]
 544 0038 F868     	 ldr r0,[r7,#12]
 545 003a 1946     	 mov r1,r3
 546 003c FFF7FEFF 	 bl XMC_DAC_CH_EnableOutput
 547              	.L20:
 128:../Libraries/XMCLib/src/xmc_dac.c ****   }
 129:../Libraries/XMCLib/src/xmc_dac.c **** }
 548              	 .loc 2 129 0
 549 0040 1037     	 adds r7,r7,#16
 550              	 .cfi_def_cfa_offset 8
 551 0042 BD46     	 mov sp,r7
 552              	 .cfi_def_cfa_register 13
 553              	 
 554 0044 80BD     	 pop {r7,pc}
 555              	 .cfi_endproc
 556              	.LFE206:
 558 0046 00BF     	 .section .text.XMC_DAC_CH_SetFrequency,"ax",%progbits
 559              	 .align 2
 560              	 .global XMC_DAC_CH_SetFrequency
 561              	 .thumb
 562              	 .thumb_func
 564              	XMC_DAC_CH_SetFrequency:
 565              	.LFB207:
 130:../Libraries/XMCLib/src/xmc_dac.c **** 
 131:../Libraries/XMCLib/src/xmc_dac.c **** /* API to set the waveform frequency except in Ramp and Pattern generation mode. */
 132:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetFrequency(XMC_DAC_t *const dac,
 133:../Libraries/XMCLib/src/xmc_dac.c ****                                             const uint8_t channel,
 134:../Libraries/XMCLib/src/xmc_dac.c ****                                             const uint32_t frequency)
 135:../Libraries/XMCLib/src/xmc_dac.c **** {
 566              	 .loc 2 135 0
 567              	 .cfi_startproc
 568              	 
 569              	 
 570 0000 80B5     	 push {r7,lr}
 571              	 .cfi_def_cfa_offset 8
 572              	 .cfi_offset 7,-8
 573              	 .cfi_offset 14,-4
 574 0002 86B0     	 sub sp,sp,#24
 575              	 .cfi_def_cfa_offset 32
 576 0004 00AF     	 add r7,sp,#0
 577              	 .cfi_def_cfa_register 7
 578 0006 F860     	 str r0,[r7,#12]
 579 0008 0B46     	 mov r3,r1
 580 000a 7A60     	 str r2,[r7,#4]
 581 000c FB72     	 strb r3,[r7,#11]
 136:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t divider;
 137:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status;
 138:../Libraries/XMCLib/src/xmc_dac.c **** 
 139:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetFrequency: frequency must be greater than zero", frequency > 0U);
 140:../Libraries/XMCLib/src/xmc_dac.c **** 
 141:../Libraries/XMCLib/src/xmc_dac.c ****   divider = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / frequency;
 582              	 .loc 2 141 0
 583 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 584 0012 0246     	 mov r2,r0
 585 0014 7B68     	 ldr r3,[r7,#4]
 586 0016 B2FBF3F3 	 udiv r3,r2,r3
 587 001a 3B61     	 str r3,[r7,#16]
 142:../Libraries/XMCLib/src/xmc_dac.c **** 
 143:../Libraries/XMCLib/src/xmc_dac.c ****   if (divider < XMC_DAC_MIN_FREQ_DIVIDER)
 588              	 .loc 2 143 0
 589 001c 3B69     	 ldr r3,[r7,#16]
 590 001e 0F2B     	 cmp r3,#15
 591 0020 02D8     	 bhi .L23
 144:../Libraries/XMCLib/src/xmc_dac.c ****   {
 145:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_ERROR_FREQ2HIGH;
 592              	 .loc 2 145 0
 593 0022 0423     	 movs r3,#4
 594 0024 FB75     	 strb r3,[r7,#23]
 595 0026 16E0     	 b .L24
 596              	.L23:
 146:../Libraries/XMCLib/src/xmc_dac.c ****   }
 147:../Libraries/XMCLib/src/xmc_dac.c ****   else if (divider >= XMC_DAC_MAX_FREQ_DIVIDER)
 597              	 .loc 2 147 0
 598 0028 3B69     	 ldr r3,[r7,#16]
 599 002a B3F5801F 	 cmp r3,#1048576
 600 002e 02D3     	 bcc .L25
 148:../Libraries/XMCLib/src/xmc_dac.c ****   {
 149:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_ERROR_FREQ2LOW;
 601              	 .loc 2 149 0
 602 0030 0323     	 movs r3,#3
 603 0032 FB75     	 strb r3,[r7,#23]
 604 0034 0FE0     	 b .L24
 605              	.L25:
 150:../Libraries/XMCLib/src/xmc_dac.c ****   }
 151:../Libraries/XMCLib/src/xmc_dac.c ****   else {
 152:../Libraries/XMCLib/src/xmc_dac.c ****     dac->DACCFG[channel].low = (dac->DACCFG[channel].low & (uint32_t)(~DAC_DAC0CFG0_FREQ_Msk)) |
 606              	 .loc 2 152 0
 607 0036 F87A     	 ldrb r0,[r7,#11]
 608 0038 FB7A     	 ldrb r3,[r7,#11]
 609 003a FA68     	 ldr r2,[r7,#12]
 610 003c DB00     	 lsls r3,r3,#3
 611 003e 1344     	 add r3,r3,r2
 612 0040 5B68     	 ldr r3,[r3,#4]
 613 0042 1B0D     	 lsrs r3,r3,#20
 614 0044 1B05     	 lsls r3,r3,#20
 615 0046 3A69     	 ldr r2,[r7,#16]
 616 0048 1A43     	 orrs r2,r2,r3
 617 004a F968     	 ldr r1,[r7,#12]
 618 004c C300     	 lsls r3,r0,#3
 619 004e 0B44     	 add r3,r3,r1
 620 0050 5A60     	 str r2,[r3,#4]
 153:../Libraries/XMCLib/src/xmc_dac.c ****                                (divider << DAC_DAC0CFG0_FREQ_Pos);
 154:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_STATUS_OK;
 621              	 .loc 2 154 0
 622 0052 0023     	 movs r3,#0
 623 0054 FB75     	 strb r3,[r7,#23]
 624              	.L24:
 155:../Libraries/XMCLib/src/xmc_dac.c ****   }
 156:../Libraries/XMCLib/src/xmc_dac.c **** 
 157:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 625              	 .loc 2 157 0
 626 0056 FB7D     	 ldrb r3,[r7,#23]
 158:../Libraries/XMCLib/src/xmc_dac.c **** }
 627              	 .loc 2 158 0
 628 0058 1846     	 mov r0,r3
 629 005a 1837     	 adds r7,r7,#24
 630              	 .cfi_def_cfa_offset 8
 631 005c BD46     	 mov sp,r7
 632              	 .cfi_def_cfa_register 13
 633              	 
 634 005e 80BD     	 pop {r7,pc}
 635              	 .cfi_endproc
 636              	.LFE207:
 638              	 .section .text.XMC_DAC_CH_SetRampFrequency,"ax",%progbits
 639              	 .align 2
 640              	 .global XMC_DAC_CH_SetRampFrequency
 641              	 .thumb
 642              	 .thumb_func
 644              	XMC_DAC_CH_SetRampFrequency:
 645              	.LFB208:
 159:../Libraries/XMCLib/src/xmc_dac.c **** 
 160:../Libraries/XMCLib/src/xmc_dac.c **** /* API to set the waveform frequency in Ramp Mode. */
 161:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_SetRampFrequency(XMC_DAC_t *const dac,
 162:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const uint8_t channel,
 163:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const uint32_t frequency)
 164:../Libraries/XMCLib/src/xmc_dac.c **** {
 646              	 .loc 2 164 0
 647              	 .cfi_startproc
 648              	 
 649              	 
 650 0000 80B5     	 push {r7,lr}
 651              	 .cfi_def_cfa_offset 8
 652              	 .cfi_offset 7,-8
 653              	 .cfi_offset 14,-4
 654 0002 86B0     	 sub sp,sp,#24
 655              	 .cfi_def_cfa_offset 32
 656 0004 00AF     	 add r7,sp,#0
 657              	 .cfi_def_cfa_register 7
 658 0006 F860     	 str r0,[r7,#12]
 659 0008 0B46     	 mov r3,r1
 660 000a 7A60     	 str r2,[r7,#4]
 661 000c FB72     	 strb r3,[r7,#11]
 165:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t stop;
 166:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t start;
 167:../Libraries/XMCLib/src/xmc_dac.c **** 
 168:../Libraries/XMCLib/src/xmc_dac.c ****   start = dac->DACDATA[channel];
 662              	 .loc 2 168 0
 663 000e FB7A     	 ldrb r3,[r7,#11]
 664 0010 FA68     	 ldr r2,[r7,#12]
 665 0012 0433     	 adds r3,r3,#4
 666 0014 9B00     	 lsls r3,r3,#2
 667 0016 1344     	 add r3,r3,r2
 668 0018 5B68     	 ldr r3,[r3,#4]
 669 001a 7B61     	 str r3,[r7,#20]
 169:../Libraries/XMCLib/src/xmc_dac.c ****   stop = (dac->DAC01DATA >> (channel * DAC_DAC01DATA_DATA1_Pos)) & (uint32_t)DAC_DAC01DATA_DATA0_Ms
 670              	 .loc 2 169 0
 671 001c FB68     	 ldr r3,[r7,#12]
 672 001e DB69     	 ldr r3,[r3,#28]
 673 0020 FA7A     	 ldrb r2,[r7,#11]
 674 0022 1201     	 lsls r2,r2,#4
 675 0024 D340     	 lsrs r3,r3,r2
 676 0026 C3F30B03 	 ubfx r3,r3,#0,#12
 677 002a 3B61     	 str r3,[r7,#16]
 170:../Libraries/XMCLib/src/xmc_dac.c **** 
 171:../Libraries/XMCLib/src/xmc_dac.c ****   return XMC_DAC_CH_SetFrequency(dac, channel, frequency * ((stop - start) + 1U));
 678              	 .loc 2 171 0
 679 002c 3A69     	 ldr r2,[r7,#16]
 680 002e 7B69     	 ldr r3,[r7,#20]
 681 0030 D31A     	 subs r3,r2,r3
 682 0032 0133     	 adds r3,r3,#1
 683 0034 7A68     	 ldr r2,[r7,#4]
 684 0036 02FB03F3 	 mul r3,r2,r3
 685 003a FA7A     	 ldrb r2,[r7,#11]
 686 003c F868     	 ldr r0,[r7,#12]
 687 003e 1146     	 mov r1,r2
 688 0040 1A46     	 mov r2,r3
 689 0042 FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 690 0046 0346     	 mov r3,r0
 172:../Libraries/XMCLib/src/xmc_dac.c **** }
 691              	 .loc 2 172 0
 692 0048 1846     	 mov r0,r3
 693 004a 1837     	 adds r7,r7,#24
 694              	 .cfi_def_cfa_offset 8
 695 004c BD46     	 mov sp,r7
 696              	 .cfi_def_cfa_register 13
 697              	 
 698 004e 80BD     	 pop {r7,pc}
 699              	 .cfi_endproc
 700              	.LFE208:
 702              	 .section .text.XMC_DAC_CH_StartSingleValueMode,"ax",%progbits
 703              	 .align 2
 704              	 .global XMC_DAC_CH_StartSingleValueMode
 705              	 .thumb
 706              	 .thumb_func
 708              	XMC_DAC_CH_StartSingleValueMode:
 709              	.LFB209:
 173:../Libraries/XMCLib/src/xmc_dac.c **** 
 174:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Single Value Mode. */
 175:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartSingleValueMode(XMC_DAC_t *const dac, const uint8_t channel)
 176:../Libraries/XMCLib/src/xmc_dac.c **** {
 710              	 .loc 2 176 0
 711              	 .cfi_startproc
 712              	 
 713              	 
 714 0000 80B5     	 push {r7,lr}
 715              	 .cfi_def_cfa_offset 8
 716              	 .cfi_offset 7,-8
 717              	 .cfi_offset 14,-4
 718 0002 82B0     	 sub sp,sp,#8
 719              	 .cfi_def_cfa_offset 16
 720 0004 00AF     	 add r7,sp,#0
 721              	 .cfi_def_cfa_register 7
 722 0006 7860     	 str r0,[r7,#4]
 723 0008 0B46     	 mov r3,r1
 724 000a FB70     	 strb r3,[r7,#3]
 177:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac
 178:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_V
 179:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartSingleValueMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 180:../Libraries/XMCLib/src/xmc_dac.c **** 
 181:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_SINGLE);
 725              	 .loc 2 181 0
 726 000c FB78     	 ldrb r3,[r7,#3]
 727 000e 7868     	 ldr r0,[r7,#4]
 728 0010 1946     	 mov r1,r3
 729 0012 4FF48012 	 mov r2,#1048576
 730 0016 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 182:../Libraries/XMCLib/src/xmc_dac.c **** 
 183:../Libraries/XMCLib/src/xmc_dac.c ****   return XMC_DAC_CH_STATUS_OK;
 731              	 .loc 2 183 0
 732 001a 0023     	 movs r3,#0
 184:../Libraries/XMCLib/src/xmc_dac.c **** }
 733              	 .loc 2 184 0
 734 001c 1846     	 mov r0,r3
 735 001e 0837     	 adds r7,r7,#8
 736              	 .cfi_def_cfa_offset 8
 737 0020 BD46     	 mov sp,r7
 738              	 .cfi_def_cfa_register 13
 739              	 
 740 0022 80BD     	 pop {r7,pc}
 741              	 .cfi_endproc
 742              	.LFE209:
 744              	 .section .text.XMC_DAC_CH_StartDataMode,"ax",%progbits
 745              	 .align 2
 746              	 .global XMC_DAC_CH_StartDataMode
 747              	 .thumb
 748              	 .thumb_func
 750              	XMC_DAC_CH_StartDataMode:
 751              	.LFB210:
 185:../Libraries/XMCLib/src/xmc_dac.c **** 
 186:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Data Mode. */
 187:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartDataMode(XMC_DAC_t *const dac,
 188:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint8_t channel,
 189:../Libraries/XMCLib/src/xmc_dac.c ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 190:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint32_t frequency)
 191:../Libraries/XMCLib/src/xmc_dac.c **** {
 752              	 .loc 2 191 0
 753              	 .cfi_startproc
 754              	 
 755              	 
 756 0000 80B5     	 push {r7,lr}
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 7,-8
 759              	 .cfi_offset 14,-4
 760 0002 86B0     	 sub sp,sp,#24
 761              	 .cfi_def_cfa_offset 32
 762 0004 00AF     	 add r7,sp,#0
 763              	 .cfi_def_cfa_register 7
 764 0006 F860     	 str r0,[r7,#12]
 765 0008 7A60     	 str r2,[r7,#4]
 766 000a 3B60     	 str r3,[r7]
 767 000c 0B46     	 mov r3,r1
 768 000e FB72     	 strb r3,[r7,#11]
 192:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 769              	 .loc 2 192 0
 770 0010 0023     	 movs r3,#0
 771 0012 FB75     	 strb r3,[r7,#23]
 193:../Libraries/XMCLib/src/xmc_dac.c **** 
 194:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 195:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 196:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartDataMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 197:../Libraries/XMCLib/src/xmc_dac.c **** 
 198:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 772              	 .loc 2 198 0
 773 0014 FB7A     	 ldrb r3,[r7,#11]
 774 0016 F868     	 ldr r0,[r7,#12]
 775 0018 1946     	 mov r1,r3
 776 001a 0022     	 movs r2,#0
 777 001c FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 199:../Libraries/XMCLib/src/xmc_dac.c **** 
 200:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 778              	 .loc 2 200 0
 779 0020 7B68     	 ldr r3,[r7,#4]
 780 0022 002B     	 cmp r3,#0
 781 0024 07D1     	 bne .L32
 201:../Libraries/XMCLib/src/xmc_dac.c ****   {
 202:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency);
 782              	 .loc 2 202 0
 783 0026 FB7A     	 ldrb r3,[r7,#11]
 784 0028 F868     	 ldr r0,[r7,#12]
 785 002a 1946     	 mov r1,r3
 786 002c 3A68     	 ldr r2,[r7]
 787 002e FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 788 0032 0346     	 mov r3,r0
 789 0034 FB75     	 strb r3,[r7,#23]
 790              	.L32:
 203:../Libraries/XMCLib/src/xmc_dac.c ****   }
 204:../Libraries/XMCLib/src/xmc_dac.c **** 
 205:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 791              	 .loc 2 205 0
 792 0036 FB7D     	 ldrb r3,[r7,#23]
 793 0038 002B     	 cmp r3,#0
 794 003a 0CD1     	 bne .L33
 206:../Libraries/XMCLib/src/xmc_dac.c ****   {
 207:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 795              	 .loc 2 207 0
 796 003c FB7A     	 ldrb r3,[r7,#11]
 797 003e F868     	 ldr r0,[r7,#12]
 798 0040 1946     	 mov r1,r3
 799 0042 7A68     	 ldr r2,[r7,#4]
 800 0044 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 208:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_DATA);
 801              	 .loc 2 208 0
 802 0048 FB7A     	 ldrb r3,[r7,#11]
 803 004a F868     	 ldr r0,[r7,#12]
 804 004c 1946     	 mov r1,r3
 805 004e 4FF40012 	 mov r2,#2097152
 806 0052 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 807              	.L33:
 209:../Libraries/XMCLib/src/xmc_dac.c ****   }
 210:../Libraries/XMCLib/src/xmc_dac.c **** 
 211:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 808              	 .loc 2 211 0
 809 0056 FB7D     	 ldrb r3,[r7,#23]
 212:../Libraries/XMCLib/src/xmc_dac.c **** }
 810              	 .loc 2 212 0
 811 0058 1846     	 mov r0,r3
 812 005a 1837     	 adds r7,r7,#24
 813              	 .cfi_def_cfa_offset 8
 814 005c BD46     	 mov sp,r7
 815              	 .cfi_def_cfa_register 13
 816              	 
 817 005e 80BD     	 pop {r7,pc}
 818              	 .cfi_endproc
 819              	.LFE210:
 821              	 .section .text.XMC_DAC_CH_StartRampMode,"ax",%progbits
 822              	 .align 2
 823              	 .global XMC_DAC_CH_StartRampMode
 824              	 .thumb
 825              	 .thumb_func
 827              	XMC_DAC_CH_StartRampMode:
 828              	.LFB211:
 213:../Libraries/XMCLib/src/xmc_dac.c **** 
 214:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Ramp Mode. */
 215:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartRampMode(XMC_DAC_t *const dac,
 216:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint8_t channel,
 217:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint16_t start,
 218:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint16_t stop,
 219:../Libraries/XMCLib/src/xmc_dac.c ****                                              const XMC_DAC_CH_TRIGGER_t trigger,
 220:../Libraries/XMCLib/src/xmc_dac.c ****                                              const uint32_t frequency)
 221:../Libraries/XMCLib/src/xmc_dac.c **** {
 829              	 .loc 2 221 0
 830              	 .cfi_startproc
 831              	 
 832              	 
 833 0000 80B5     	 push {r7,lr}
 834              	 .cfi_def_cfa_offset 8
 835              	 .cfi_offset 7,-8
 836              	 .cfi_offset 14,-4
 837 0002 86B0     	 sub sp,sp,#24
 838              	 .cfi_def_cfa_offset 32
 839 0004 00AF     	 add r7,sp,#0
 840              	 .cfi_def_cfa_register 7
 841 0006 F860     	 str r0,[r7,#12]
 842 0008 0846     	 mov r0,r1
 843 000a 1146     	 mov r1,r2
 844 000c 1A46     	 mov r2,r3
 845 000e 0346     	 mov r3,r0
 846 0010 FB72     	 strb r3,[r7,#11]
 847 0012 0B46     	 mov r3,r1
 848 0014 3B81     	 strh r3,[r7,#8]
 849 0016 1346     	 mov r3,r2
 850 0018 FB80     	 strh r3,[r7,#6]
 222:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 851              	 .loc 2 222 0
 852 001a 0023     	 movs r3,#0
 853 001c FB75     	 strb r3,[r7,#23]
 223:../Libraries/XMCLib/src/xmc_dac.c **** 
 224:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 225:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(ch
 226:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartRampMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 227:../Libraries/XMCLib/src/xmc_dac.c **** 
 228:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 854              	 .loc 2 228 0
 855 001e FB7A     	 ldrb r3,[r7,#11]
 856 0020 F868     	 ldr r0,[r7,#12]
 857 0022 1946     	 mov r1,r3
 858 0024 0022     	 movs r2,#0
 859 0026 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 229:../Libraries/XMCLib/src/xmc_dac.c **** 
 230:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetRampStart(dac, channel, start);
 860              	 .loc 2 230 0
 861 002a FA7A     	 ldrb r2,[r7,#11]
 862 002c 3B89     	 ldrh r3,[r7,#8]
 863 002e F868     	 ldr r0,[r7,#12]
 864 0030 1146     	 mov r1,r2
 865 0032 1A46     	 mov r2,r3
 866 0034 FFF7FEFF 	 bl XMC_DAC_CH_SetRampStart
 231:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetRampStop(dac, channel, stop);
 867              	 .loc 2 231 0
 868 0038 FA7A     	 ldrb r2,[r7,#11]
 869 003a FB88     	 ldrh r3,[r7,#6]
 870 003c F868     	 ldr r0,[r7,#12]
 871 003e 1146     	 mov r1,r2
 872 0040 1A46     	 mov r2,r3
 873 0042 FFF7FEFF 	 bl XMC_DAC_CH_SetRampStop
 232:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 874              	 .loc 2 232 0
 875 0046 FB7A     	 ldrb r3,[r7,#11]
 876 0048 F868     	 ldr r0,[r7,#12]
 877 004a 1946     	 mov r1,r3
 878 004c 3A6A     	 ldr r2,[r7,#32]
 879 004e FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 233:../Libraries/XMCLib/src/xmc_dac.c **** 
 234:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 880              	 .loc 2 234 0
 881 0052 3B6A     	 ldr r3,[r7,#32]
 882 0054 002B     	 cmp r3,#0
 883 0056 07D1     	 bne .L36
 235:../Libraries/XMCLib/src/xmc_dac.c ****   {
 236:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetRampFrequency(dac, channel, frequency);
 884              	 .loc 2 236 0
 885 0058 FB7A     	 ldrb r3,[r7,#11]
 886 005a F868     	 ldr r0,[r7,#12]
 887 005c 1946     	 mov r1,r3
 888 005e 7A6A     	 ldr r2,[r7,#36]
 889 0060 FFF7FEFF 	 bl XMC_DAC_CH_SetRampFrequency
 890 0064 0346     	 mov r3,r0
 891 0066 FB75     	 strb r3,[r7,#23]
 892              	.L36:
 237:../Libraries/XMCLib/src/xmc_dac.c ****   }
 238:../Libraries/XMCLib/src/xmc_dac.c **** 
 239:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 893              	 .loc 2 239 0
 894 0068 FB7D     	 ldrb r3,[r7,#23]
 895 006a 002B     	 cmp r3,#0
 896 006c 06D1     	 bne .L37
 240:../Libraries/XMCLib/src/xmc_dac.c ****   {
 241:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_RAMP);
 897              	 .loc 2 241 0
 898 006e FB7A     	 ldrb r3,[r7,#11]
 899 0070 F868     	 ldr r0,[r7,#12]
 900 0072 1946     	 mov r1,r3
 901 0074 4FF4A002 	 mov r2,#5242880
 902 0078 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 903              	.L37:
 242:../Libraries/XMCLib/src/xmc_dac.c ****   }
 243:../Libraries/XMCLib/src/xmc_dac.c **** 
 244:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 904              	 .loc 2 244 0
 905 007c FB7D     	 ldrb r3,[r7,#23]
 245:../Libraries/XMCLib/src/xmc_dac.c **** }
 906              	 .loc 2 245 0
 907 007e 1846     	 mov r0,r3
 908 0080 1837     	 adds r7,r7,#24
 909              	 .cfi_def_cfa_offset 8
 910 0082 BD46     	 mov sp,r7
 911              	 .cfi_def_cfa_register 13
 912              	 
 913 0084 80BD     	 pop {r7,pc}
 914              	 .cfi_endproc
 915              	.LFE211:
 917 0086 00BF     	 .section .text.XMC_DAC_CH_StartPatternMode,"ax",%progbits
 918              	 .align 2
 919              	 .global XMC_DAC_CH_StartPatternMode
 920              	 .thumb
 921              	 .thumb_func
 923              	XMC_DAC_CH_StartPatternMode:
 924              	.LFB212:
 246:../Libraries/XMCLib/src/xmc_dac.c **** 
 247:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Pattern Mode. */
 248:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartPatternMode(XMC_DAC_t *const dac,
 249:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const uint8_t channel,
 250:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const uint8_t *const pattern,
 251:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const XMC_DAC_CH_PATTERN_SIGN_OUTPUT_t sign_output,
 252:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const XMC_DAC_CH_TRIGGER_t trigger,
 253:../Libraries/XMCLib/src/xmc_dac.c ****                                                 const uint32_t frequency)
 254:../Libraries/XMCLib/src/xmc_dac.c **** {
 925              	 .loc 2 254 0
 926              	 .cfi_startproc
 927              	 
 928              	 
 929 0000 80B5     	 push {r7,lr}
 930              	 .cfi_def_cfa_offset 8
 931              	 .cfi_offset 7,-8
 932              	 .cfi_offset 14,-4
 933 0002 86B0     	 sub sp,sp,#24
 934              	 .cfi_def_cfa_offset 32
 935 0004 00AF     	 add r7,sp,#0
 936              	 .cfi_def_cfa_register 7
 937 0006 F860     	 str r0,[r7,#12]
 938 0008 7A60     	 str r2,[r7,#4]
 939 000a 1A46     	 mov r2,r3
 940 000c 0B46     	 mov r3,r1
 941 000e FB72     	 strb r3,[r7,#11]
 942 0010 1346     	 mov r3,r2
 943 0012 BB72     	 strb r3,[r7,#10]
 255:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 944              	 .loc 2 255 0
 945 0014 0023     	 movs r3,#0
 946 0016 FB75     	 strb r3,[r7,#23]
 256:../Libraries/XMCLib/src/xmc_dac.c **** 
 257:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 258:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID
 259:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartPatternMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 260:../Libraries/XMCLib/src/xmc_dac.c **** 
 261:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 947              	 .loc 2 261 0
 948 0018 FB7A     	 ldrb r3,[r7,#11]
 949 001a F868     	 ldr r0,[r7,#12]
 950 001c 1946     	 mov r1,r3
 951 001e 0022     	 movs r2,#0
 952 0020 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 262:../Libraries/XMCLib/src/xmc_dac.c **** 
 263:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 953              	 .loc 2 263 0
 954 0024 3B6A     	 ldr r3,[r7,#32]
 955 0026 002B     	 cmp r3,#0
 956 0028 09D1     	 bne .L40
 264:../Libraries/XMCLib/src/xmc_dac.c ****   {
 265:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency * XMC_DAC_SAMPLES_PER_PERIOD);
 957              	 .loc 2 265 0
 958 002a 7B6A     	 ldr r3,[r7,#36]
 959 002c 5B01     	 lsls r3,r3,#5
 960 002e FA7A     	 ldrb r2,[r7,#11]
 961 0030 F868     	 ldr r0,[r7,#12]
 962 0032 1146     	 mov r1,r2
 963 0034 1A46     	 mov r2,r3
 964 0036 FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 965 003a 0346     	 mov r3,r0
 966 003c FB75     	 strb r3,[r7,#23]
 967              	.L40:
 266:../Libraries/XMCLib/src/xmc_dac.c ****   }
 267:../Libraries/XMCLib/src/xmc_dac.c **** 
 268:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 968              	 .loc 2 268 0
 969 003e FB7D     	 ldrb r3,[r7,#23]
 970 0040 002B     	 cmp r3,#0
 971 0042 20D1     	 bne .L41
 269:../Libraries/XMCLib/src/xmc_dac.c ****   {
 270:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetPattern(dac, channel, pattern);
 972              	 .loc 2 270 0
 973 0044 FB7A     	 ldrb r3,[r7,#11]
 974 0046 F868     	 ldr r0,[r7,#12]
 975 0048 1946     	 mov r1,r3
 976 004a 7A68     	 ldr r2,[r7,#4]
 977 004c FFF7FEFF 	 bl XMC_DAC_CH_SetPattern
 271:../Libraries/XMCLib/src/xmc_dac.c ****     if (XMC_DAC_CH_PATTERN_SIGN_OUTPUT_ENABLED == sign_output)
 978              	 .loc 2 271 0
 979 0050 BB7A     	 ldrb r3,[r7,#10]
 980 0052 012B     	 cmp r3,#1
 981 0054 05D1     	 bne .L42
 272:../Libraries/XMCLib/src/xmc_dac.c ****     {
 273:../Libraries/XMCLib/src/xmc_dac.c ****       XMC_DAC_CH_EnablePatternSignOutput(dac, channel);
 982              	 .loc 2 273 0
 983 0056 FB7A     	 ldrb r3,[r7,#11]
 984 0058 F868     	 ldr r0,[r7,#12]
 985 005a 1946     	 mov r1,r3
 986 005c FFF7FEFF 	 bl XMC_DAC_CH_EnablePatternSignOutput
 987 0060 04E0     	 b .L43
 988              	.L42:
 274:../Libraries/XMCLib/src/xmc_dac.c ****     }
 275:../Libraries/XMCLib/src/xmc_dac.c ****     else
 276:../Libraries/XMCLib/src/xmc_dac.c ****     {
 277:../Libraries/XMCLib/src/xmc_dac.c ****       XMC_DAC_CH_DisablePatternSignOutput(dac, channel);
 989              	 .loc 2 277 0
 990 0062 FB7A     	 ldrb r3,[r7,#11]
 991 0064 F868     	 ldr r0,[r7,#12]
 992 0066 1946     	 mov r1,r3
 993 0068 FFF7FEFF 	 bl XMC_DAC_CH_DisablePatternSignOutput
 994              	.L43:
 278:../Libraries/XMCLib/src/xmc_dac.c ****     }
 279:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 995              	 .loc 2 279 0
 996 006c FB7A     	 ldrb r3,[r7,#11]
 997 006e F868     	 ldr r0,[r7,#12]
 998 0070 1946     	 mov r1,r3
 999 0072 3A6A     	 ldr r2,[r7,#32]
 1000 0074 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 280:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_PATTERN);
 1001              	 .loc 2 280 0
 1002 0078 FB7A     	 ldrb r3,[r7,#11]
 1003 007a F868     	 ldr r0,[r7,#12]
 1004 007c 1946     	 mov r1,r3
 1005 007e 4FF44012 	 mov r2,#3145728
 1006 0082 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 1007              	.L41:
 281:../Libraries/XMCLib/src/xmc_dac.c ****   }
 282:../Libraries/XMCLib/src/xmc_dac.c **** 
 283:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 1008              	 .loc 2 283 0
 1009 0086 FB7D     	 ldrb r3,[r7,#23]
 284:../Libraries/XMCLib/src/xmc_dac.c **** }
 1010              	 .loc 2 284 0
 1011 0088 1846     	 mov r0,r3
 1012 008a 1837     	 adds r7,r7,#24
 1013              	 .cfi_def_cfa_offset 8
 1014 008c BD46     	 mov sp,r7
 1015              	 .cfi_def_cfa_register 13
 1016              	 
 1017 008e 80BD     	 pop {r7,pc}
 1018              	 .cfi_endproc
 1019              	.LFE212:
 1021              	 .section .text.XMC_DAC_CH_StartNoiseMode,"ax",%progbits
 1022              	 .align 2
 1023              	 .global XMC_DAC_CH_StartNoiseMode
 1024              	 .thumb
 1025              	 .thumb_func
 1027              	XMC_DAC_CH_StartNoiseMode:
 1028              	.LFB213:
 285:../Libraries/XMCLib/src/xmc_dac.c **** 
 286:../Libraries/XMCLib/src/xmc_dac.c **** /* API to start the operation in Noise Mode. */
 287:../Libraries/XMCLib/src/xmc_dac.c **** XMC_DAC_CH_STATUS_t XMC_DAC_CH_StartNoiseMode(XMC_DAC_t *const dac,
 288:../Libraries/XMCLib/src/xmc_dac.c ****                                               const uint8_t channel,
 289:../Libraries/XMCLib/src/xmc_dac.c ****                                               const XMC_DAC_CH_TRIGGER_t trigger,
 290:../Libraries/XMCLib/src/xmc_dac.c ****                                               const uint32_t frequency)
 291:../Libraries/XMCLib/src/xmc_dac.c **** {
 1029              	 .loc 2 291 0
 1030              	 .cfi_startproc
 1031              	 
 1032              	 
 1033 0000 80B5     	 push {r7,lr}
 1034              	 .cfi_def_cfa_offset 8
 1035              	 .cfi_offset 7,-8
 1036              	 .cfi_offset 14,-4
 1037 0002 86B0     	 sub sp,sp,#24
 1038              	 .cfi_def_cfa_offset 32
 1039 0004 00AF     	 add r7,sp,#0
 1040              	 .cfi_def_cfa_register 7
 1041 0006 F860     	 str r0,[r7,#12]
 1042 0008 7A60     	 str r2,[r7,#4]
 1043 000a 3B60     	 str r3,[r7]
 1044 000c 0B46     	 mov r3,r1
 1045 000e FB72     	 strb r3,[r7,#11]
 292:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_STATUS_t status = XMC_DAC_CH_STATUS_OK;
 1046              	 .loc 2 292 0
 1047 0010 0023     	 movs r3,#0
 1048 0012 FB75     	 strb r3,[r7,#23]
 293:../Libraries/XMCLib/src/xmc_dac.c **** 
 294:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 295:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(c
 296:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_StartNoiseMode: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 297:../Libraries/XMCLib/src/xmc_dac.c **** 
 298:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_IDLE);
 1049              	 .loc 2 298 0
 1050 0014 FB7A     	 ldrb r3,[r7,#11]
 1051 0016 F868     	 ldr r0,[r7,#12]
 1052 0018 1946     	 mov r1,r3
 1053 001a 0022     	 movs r2,#0
 1054 001c FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 299:../Libraries/XMCLib/src/xmc_dac.c **** 
 300:../Libraries/XMCLib/src/xmc_dac.c ****   if (trigger == XMC_DAC_CH_TRIGGER_INTERNAL)
 1055              	 .loc 2 300 0
 1056 0020 7B68     	 ldr r3,[r7,#4]
 1057 0022 002B     	 cmp r3,#0
 1058 0024 07D1     	 bne .L46
 301:../Libraries/XMCLib/src/xmc_dac.c ****   {
 302:../Libraries/XMCLib/src/xmc_dac.c ****     status = XMC_DAC_CH_SetFrequency(dac, channel, frequency);
 1059              	 .loc 2 302 0
 1060 0026 FB7A     	 ldrb r3,[r7,#11]
 1061 0028 F868     	 ldr r0,[r7,#12]
 1062 002a 1946     	 mov r1,r3
 1063 002c 3A68     	 ldr r2,[r7]
 1064 002e FFF7FEFF 	 bl XMC_DAC_CH_SetFrequency
 1065 0032 0346     	 mov r3,r0
 1066 0034 FB75     	 strb r3,[r7,#23]
 1067              	.L46:
 303:../Libraries/XMCLib/src/xmc_dac.c ****   }
 304:../Libraries/XMCLib/src/xmc_dac.c **** 
 305:../Libraries/XMCLib/src/xmc_dac.c ****   if (status == XMC_DAC_CH_STATUS_OK)
 1068              	 .loc 2 305 0
 1069 0036 FB7D     	 ldrb r3,[r7,#23]
 1070 0038 002B     	 cmp r3,#0
 1071 003a 0CD1     	 bne .L47
 306:../Libraries/XMCLib/src/xmc_dac.c ****   {
 307:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetTrigger(dac, channel, trigger);
 1072              	 .loc 2 307 0
 1073 003c FB7A     	 ldrb r3,[r7,#11]
 1074 003e F868     	 ldr r0,[r7,#12]
 1075 0040 1946     	 mov r1,r3
 1076 0042 7A68     	 ldr r2,[r7,#4]
 1077 0044 FFF7FEFF 	 bl XMC_DAC_CH_SetTrigger
 308:../Libraries/XMCLib/src/xmc_dac.c ****     XMC_DAC_CH_SetMode(dac, channel, XMC_DAC_CH_MODE_NOISE);
 1078              	 .loc 2 308 0
 1079 0048 FB7A     	 ldrb r3,[r7,#11]
 1080 004a F868     	 ldr r0,[r7,#12]
 1081 004c 1946     	 mov r1,r3
 1082 004e 4FF48002 	 mov r2,#4194304
 1083 0052 FFF7FEFF 	 bl XMC_DAC_CH_SetMode
 1084              	.L47:
 309:../Libraries/XMCLib/src/xmc_dac.c ****   }
 310:../Libraries/XMCLib/src/xmc_dac.c **** 
 311:../Libraries/XMCLib/src/xmc_dac.c ****   return status;
 1085              	 .loc 2 311 0
 1086 0056 FB7D     	 ldrb r3,[r7,#23]
 312:../Libraries/XMCLib/src/xmc_dac.c **** }
 1087              	 .loc 2 312 0
 1088 0058 1846     	 mov r0,r3
 1089 005a 1837     	 adds r7,r7,#24
 1090              	 .cfi_def_cfa_offset 8
 1091 005c BD46     	 mov sp,r7
 1092              	 .cfi_def_cfa_register 13
 1093              	 
 1094 005e 80BD     	 pop {r7,pc}
 1095              	 .cfi_endproc
 1096              	.LFE213:
 1098              	 .section .text.XMC_DAC_CH_SetPattern,"ax",%progbits
 1099              	 .align 2
 1100              	 .global XMC_DAC_CH_SetPattern
 1101              	 .thumb
 1102              	 .thumb_func
 1104              	XMC_DAC_CH_SetPattern:
 1105              	.LFB214:
 313:../Libraries/XMCLib/src/xmc_dac.c **** 
 314:../Libraries/XMCLib/src/xmc_dac.c **** /* API to write the pattern data table. */
 315:../Libraries/XMCLib/src/xmc_dac.c **** void XMC_DAC_CH_SetPattern(XMC_DAC_t *const dac, uint8_t channel, const uint8_t *const data)
 316:../Libraries/XMCLib/src/xmc_dac.c **** {
 1106              	 .loc 2 316 0
 1107              	 .cfi_startproc
 1108              	 
 1109              	 
 1110              	 
 1111 0000 80B4     	 push {r7}
 1112              	 .cfi_def_cfa_offset 4
 1113              	 .cfi_offset 7,-4
 1114 0002 87B0     	 sub sp,sp,#28
 1115              	 .cfi_def_cfa_offset 32
 1116 0004 00AF     	 add r7,sp,#0
 1117              	 .cfi_def_cfa_register 7
 1118 0006 F860     	 str r0,[r7,#12]
 1119 0008 0B46     	 mov r3,r1
 1120 000a 7A60     	 str r2,[r7,#4]
 1121 000c FB72     	 strb r3,[r7,#11]
 317:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t index;
 318:../Libraries/XMCLib/src/xmc_dac.c ****   uint32_t temp;
 319:../Libraries/XMCLib/src/xmc_dac.c **** 
 320:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: dac parameter not valid\n", XMC_DAC_IS_DAC_VALID(dac));
 321:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: channel parameter not valid\n", XMC_DAC_IS_CHANNEL_VALID(chann
 322:../Libraries/XMCLib/src/xmc_dac.c ****   XMC_ASSERT("XMC_DAC_CH_SetPattern: dac module not enabled\n", XMC_DAC_IsEnabled(dac));
 323:../Libraries/XMCLib/src/xmc_dac.c **** 
 324:../Libraries/XMCLib/src/xmc_dac.c ****   temp = data[0U];
 1122              	 .loc 2 324 0
 1123 000e 7B68     	 ldr r3,[r7,#4]
 1124 0010 1B78     	 ldrb r3,[r3]
 1125 0012 3B61     	 str r3,[r7,#16]
 325:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1126              	 .loc 2 325 0
 1127 0014 0123     	 movs r3,#1
 1128 0016 7B61     	 str r3,[r7,#20]
 1129 0018 10E0     	 b .L50
 1130              	.L51:
 326:../Libraries/XMCLib/src/xmc_dac.c ****   {
 327:../Libraries/XMCLib/src/xmc_dac.c ****     temp |= (uint32_t)data[index] << (index * XMC_DAC_DAC0PATL_PAT_BITSIZE);
 1131              	 .loc 2 327 0 discriminator 3
 1132 001a 7A68     	 ldr r2,[r7,#4]
 1133 001c 7B69     	 ldr r3,[r7,#20]
 1134 001e 1344     	 add r3,r3,r2
 1135 0020 1B78     	 ldrb r3,[r3]
 1136 0022 1946     	 mov r1,r3
 1137 0024 7A69     	 ldr r2,[r7,#20]
 1138 0026 1346     	 mov r3,r2
 1139 0028 9B00     	 lsls r3,r3,#2
 1140 002a 1344     	 add r3,r3,r2
 1141 002c 01FA03F3 	 lsl r3,r1,r3
 1142 0030 3A69     	 ldr r2,[r7,#16]
 1143 0032 1343     	 orrs r3,r3,r2
 1144 0034 3B61     	 str r3,[r7,#16]
 325:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1145              	 .loc 2 325 0 discriminator 3
 1146 0036 7B69     	 ldr r3,[r7,#20]
 1147 0038 0133     	 adds r3,r3,#1
 1148 003a 7B61     	 str r3,[r7,#20]
 1149              	.L50:
 325:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1150              	 .loc 2 325 0 is_stmt 0 discriminator 1
 1151 003c 7B69     	 ldr r3,[r7,#20]
 1152 003e 052B     	 cmp r3,#5
 1153 0040 EBD9     	 bls .L51
 328:../Libraries/XMCLib/src/xmc_dac.c ****   }
 329:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACPAT[channel].low = temp;
 1154              	 .loc 2 329 0 is_stmt 1
 1155 0042 FA7A     	 ldrb r2,[r7,#11]
 1156 0044 FB68     	 ldr r3,[r7,#12]
 1157 0046 0432     	 adds r2,r2,#4
 1158 0048 3969     	 ldr r1,[r7,#16]
 1159 004a 43F83210 	 str r1,[r3,r2,lsl#3]
 330:../Libraries/XMCLib/src/xmc_dac.c **** 
 331:../Libraries/XMCLib/src/xmc_dac.c ****   temp = data[6U];
 1160              	 .loc 2 331 0
 1161 004e 7B68     	 ldr r3,[r7,#4]
 1162 0050 0633     	 adds r3,r3,#6
 1163 0052 1B78     	 ldrb r3,[r3]
 1164 0054 3B61     	 str r3,[r7,#16]
 332:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1165              	 .loc 2 332 0
 1166 0056 0123     	 movs r3,#1
 1167 0058 7B61     	 str r3,[r7,#20]
 1168 005a 11E0     	 b .L52
 1169              	.L53:
 333:../Libraries/XMCLib/src/xmc_dac.c ****   {
 334:../Libraries/XMCLib/src/xmc_dac.c ****     temp |= (uint32_t)data[index + 6U] << (index * XMC_DAC_DAC0PATL_PAT_BITSIZE);
 1170              	 .loc 2 334 0 discriminator 3
 1171 005c 7B69     	 ldr r3,[r7,#20]
 1172 005e 0633     	 adds r3,r3,#6
 1173 0060 7A68     	 ldr r2,[r7,#4]
 1174 0062 1344     	 add r3,r3,r2
 1175 0064 1B78     	 ldrb r3,[r3]
 1176 0066 1946     	 mov r1,r3
 1177 0068 7A69     	 ldr r2,[r7,#20]
 1178 006a 1346     	 mov r3,r2
 1179 006c 9B00     	 lsls r3,r3,#2
 1180 006e 1344     	 add r3,r3,r2
 1181 0070 01FA03F3 	 lsl r3,r1,r3
 1182 0074 3A69     	 ldr r2,[r7,#16]
 1183 0076 1343     	 orrs r3,r3,r2
 1184 0078 3B61     	 str r3,[r7,#16]
 332:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1185              	 .loc 2 332 0 discriminator 3
 1186 007a 7B69     	 ldr r3,[r7,#20]
 1187 007c 0133     	 adds r3,r3,#1
 1188 007e 7B61     	 str r3,[r7,#20]
 1189              	.L52:
 332:../Libraries/XMCLib/src/xmc_dac.c ****   for(index = 1U; index < 6U; ++index)
 1190              	 .loc 2 332 0 is_stmt 0 discriminator 1
 1191 0080 7B69     	 ldr r3,[r7,#20]
 1192 0082 052B     	 cmp r3,#5
 1193 0084 EAD9     	 bls .L53
 335:../Libraries/XMCLib/src/xmc_dac.c ****   }
 336:../Libraries/XMCLib/src/xmc_dac.c ****   dac->DACPAT[channel].high = temp;
 1194              	 .loc 2 336 0 is_stmt 1
 1195 0086 FB7A     	 ldrb r3,[r7,#11]
 1196 0088 FA68     	 ldr r2,[r7,#12]
 1197 008a 0433     	 adds r3,r3,#4
 1198 008c DB00     	 lsls r3,r3,#3
 1199 008e 1344     	 add r3,r3,r2
 1200 0090 3A69     	 ldr r2,[r7,#16]
 1201 0092 5A60     	 str r2,[r3,#4]
 337:../Libraries/XMCLib/src/xmc_dac.c **** }
 1202              	 .loc 2 337 0
 1203 0094 1C37     	 adds r7,r7,#28
 1204              	 .cfi_def_cfa_offset 4
 1205 0096 BD46     	 mov sp,r7
 1206              	 .cfi_def_cfa_register 13
 1207              	 
 1208 0098 5DF8047B 	 ldr r7,[sp],#4
 1209              	 .cfi_restore 7
 1210              	 .cfi_def_cfa_offset 0
 1211 009c 7047     	 bx lr
 1212              	 .cfi_endproc
 1213              	.LFE214:
 1215 009e 00BF     	 .text
 1216              	.Letext0:
 1217              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1218              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1219              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 1220              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 1221              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 1222              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dac.c
    {standard input}:20     .text.XMC_DAC_CH_EnableOutput:00000000 $t
    {standard input}:24     .text.XMC_DAC_CH_EnableOutput:00000000 XMC_DAC_CH_EnableOutput
    {standard input}:68     .text.XMC_DAC_CH_EnablePatternSignOutput:00000000 $t
    {standard input}:72     .text.XMC_DAC_CH_EnablePatternSignOutput:00000000 XMC_DAC_CH_EnablePatternSignOutput
    {standard input}:115    .text.XMC_DAC_CH_DisablePatternSignOutput:00000000 $t
    {standard input}:119    .text.XMC_DAC_CH_DisablePatternSignOutput:00000000 XMC_DAC_CH_DisablePatternSignOutput
    {standard input}:162    .text.XMC_DAC_CH_SetRampStart:00000000 $t
    {standard input}:166    .text.XMC_DAC_CH_SetRampStart:00000000 XMC_DAC_CH_SetRampStart
    {standard input}:207    .text.XMC_DAC_CH_SetRampStop:00000000 $t
    {standard input}:211    .text.XMC_DAC_CH_SetRampStop:00000000 XMC_DAC_CH_SetRampStop
    {standard input}:263    .text.XMC_DAC_CH_SetTrigger:00000000 $t
    {standard input}:267    .text.XMC_DAC_CH_SetTrigger:00000000 XMC_DAC_CH_SetTrigger
    {standard input}:313    .text.XMC_DAC_CH_SetMode:00000000 $t
    {standard input}:317    .text.XMC_DAC_CH_SetMode:00000000 XMC_DAC_CH_SetMode
    {standard input}:363    .text.XMC_DAC_Enable:00000000 $t
    {standard input}:368    .text.XMC_DAC_Enable:00000000 XMC_DAC_Enable
    {standard input}:397    .text.XMC_DAC_Enable:00000014 $d
    {standard input}:402    .text.XMC_DAC_Disable:00000000 $t
    {standard input}:407    .text.XMC_DAC_Disable:00000000 XMC_DAC_Disable
    {standard input}:435    .text.XMC_DAC_Disable:00000014 $d
    {standard input}:440    .text.XMC_DAC_IsEnabled:00000000 $t
    {standard input}:445    .text.XMC_DAC_IsEnabled:00000000 XMC_DAC_IsEnabled
    {standard input}:491    .text.XMC_DAC_IsEnabled:0000002c $d
    {standard input}:496    .text.XMC_DAC_CH_Init:00000000 $t
    {standard input}:501    .text.XMC_DAC_CH_Init:00000000 XMC_DAC_CH_Init
    {standard input}:559    .text.XMC_DAC_CH_SetFrequency:00000000 $t
    {standard input}:564    .text.XMC_DAC_CH_SetFrequency:00000000 XMC_DAC_CH_SetFrequency
    {standard input}:639    .text.XMC_DAC_CH_SetRampFrequency:00000000 $t
    {standard input}:644    .text.XMC_DAC_CH_SetRampFrequency:00000000 XMC_DAC_CH_SetRampFrequency
    {standard input}:703    .text.XMC_DAC_CH_StartSingleValueMode:00000000 $t
    {standard input}:708    .text.XMC_DAC_CH_StartSingleValueMode:00000000 XMC_DAC_CH_StartSingleValueMode
    {standard input}:745    .text.XMC_DAC_CH_StartDataMode:00000000 $t
    {standard input}:750    .text.XMC_DAC_CH_StartDataMode:00000000 XMC_DAC_CH_StartDataMode
    {standard input}:822    .text.XMC_DAC_CH_StartRampMode:00000000 $t
    {standard input}:827    .text.XMC_DAC_CH_StartRampMode:00000000 XMC_DAC_CH_StartRampMode
    {standard input}:918    .text.XMC_DAC_CH_StartPatternMode:00000000 $t
    {standard input}:923    .text.XMC_DAC_CH_StartPatternMode:00000000 XMC_DAC_CH_StartPatternMode
    {standard input}:1104   .text.XMC_DAC_CH_SetPattern:00000000 XMC_DAC_CH_SetPattern
    {standard input}:1022   .text.XMC_DAC_CH_StartNoiseMode:00000000 $t
    {standard input}:1027   .text.XMC_DAC_CH_StartNoiseMode:00000000 XMC_DAC_CH_StartNoiseMode
    {standard input}:1099   .text.XMC_DAC_CH_SetPattern:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_GetPeripheralClockFrequency
