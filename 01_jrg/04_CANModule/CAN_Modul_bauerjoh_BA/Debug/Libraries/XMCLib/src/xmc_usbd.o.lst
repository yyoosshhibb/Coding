   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
  20              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  21              	 .align 2
  24              	XMC_USBD_EP_OUT_BUFFERSIZE:
  25 0000 00000000 	 .space 28
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              	 .global XMC_USBD_EP_IN_BUFFERSIZE
  27              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  28              	 .align 2
  31              	XMC_USBD_EP_IN_BUFFERSIZE:
  32 0000 00000000 	 .space 28
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              	 .comm xmc_device,520,4
  34              	 .section USB_RAM,"aw",%progbits
  35              	 .align 2
  38              	XMC_USBD_EP_OUT_BUFFER:
  39 0000 00000000 	 .space 1792
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              	 .align 2
  43              	XMC_USBD_EP_IN_BUFFER:
  44 0700 00000000 	 .space 1792
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              	 .comm usbd_init,4,4
  46              	 .global Driver_USBD0
  47              	 .section .rodata.Driver_USBD0,"a",%progbits
  48              	 .align 2
  51              	Driver_USBD0:
  52 0000 00000000 	 .word XMC_USBD_GetCapabilities
  53 0004 00000000 	 .word XMC_USBD_Init
  54 0008 00000000 	 .word XMC_USBD_Uninitialize
  55 000c 00000000 	 .word XMC_USBD_DeviceConnect
  56 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  57 0014 00000000 	 .word XMC_USBD_DeviceGetState
  58 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  59 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  60 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  61 0024 00000000 	 .word XMC_USBD_EndpointStall
  62 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  63 002c 00000000 	 .word XMC_USBD_EndpointRead
  64 0030 00000000 	 .word XMC_USBD_EndpointWrite
  65 0034 00000000 	 .word XMC_USBD_EndpointAbort
  66 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  67 003c 00000000 	 .word XMC_USBD_IsEnumDone
  68              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  69              	 .align 2
  70              	 .global XMC_USBD_lDeviceActive
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_USBD_lDeviceActive:
  75              	.LFB175:
  76              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 105:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 108:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 110:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 112:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 114:../Libraries/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 117:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 119:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 123:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 127:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../Libraries/XMCLib/src/xmc_usbd.c **** 
 129:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../Libraries/XMCLib/src/xmc_usbd.c **** 
 150:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 151:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 153:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../Libraries/XMCLib/src/xmc_usbd.c **** {
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../Libraries/XMCLib/src/xmc_usbd.c **** };
 172:../Libraries/XMCLib/src/xmc_usbd.c **** 
 173:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 174:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 176:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 180:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** {
  77              	 .loc 1 181 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 85B0     	 sub sp,sp,#20
  86              	 .cfi_def_cfa_offset 24
  87 0004 00AF     	 add r7,sp,#0
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
 182:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  90              	 .loc 1 183 0
  91 0008 0023     	 movs r3,#0
  92 000a BB73     	 strb r3,[r7,#14]
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  93              	 .loc 1 184 0
  94 000c 0023     	 movs r3,#0
  95 000e FB73     	 strb r3,[r7,#15]
  96 0010 1EE0     	 b .L2
  97              	.L5:
 185:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 186:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
  98              	 .loc 1 186 0
  99 0012 FB7B     	 ldrb r3,[r7,#15]
 100 0014 144A     	 ldr r2,.L7
 101 0016 3421     	 movs r1,#52
 102 0018 01FB03F3 	 mul r3,r1,r3
 103 001c 1344     	 add r3,r3,r2
 104 001e 5B68     	 ldr r3,[r3,#4]
 105 0020 DB08     	 lsrs r3,r3,#3
 106 0022 03F00103 	 and r3,r3,#1
 107 0026 DBB2     	 uxtb r3,r3
 108 0028 002B     	 cmp r3,#0
 109 002a 0CD1     	 bne .L3
 110              	 .loc 1 186 0 is_stmt 0 discriminator 1
 111 002c FB7B     	 ldrb r3,[r7,#15]
 112 002e 0E4A     	 ldr r2,.L7
 113 0030 3421     	 movs r1,#52
 114 0032 01FB03F3 	 mul r3,r1,r3
 115 0036 1344     	 add r3,r3,r2
 116 0038 5B68     	 ldr r3,[r3,#4]
 117 003a 1B09     	 lsrs r3,r3,#4
 118 003c 03F00103 	 and r3,r3,#1
 119 0040 DBB2     	 uxtb r3,r3
 120 0042 002B     	 cmp r3,#0
 121 0044 01D0     	 beq .L4
 122              	.L3:
 187:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 188:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 123              	 .loc 1 188 0 is_stmt 1
 124 0046 0123     	 movs r3,#1
 125 0048 BB73     	 strb r3,[r7,#14]
 126              	.L4:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 127              	 .loc 1 184 0 discriminator 2
 128 004a FB7B     	 ldrb r3,[r7,#15]
 129 004c 0133     	 adds r3,r3,#1
 130 004e FB73     	 strb r3,[r7,#15]
 131              	.L2:
 184:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 132              	 .loc 1 184 0 is_stmt 0 discriminator 1
 133 0050 7B68     	 ldr r3,[r7,#4]
 134 0052 1B7B     	 ldrb r3,[r3,#12]
 135 0054 FA7B     	 ldrb r2,[r7,#15]
 136 0056 9A42     	 cmp r2,r3
 137 0058 DBD3     	 bcc .L5
 189:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 191:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 138              	 .loc 1 191 0 is_stmt 1
 139 005a BB7B     	 ldrb r3,[r7,#14]
 192:../Libraries/XMCLib/src/xmc_usbd.c **** }
 140              	 .loc 1 192 0
 141 005c 1846     	 mov r0,r3
 142 005e 1437     	 adds r7,r7,#20
 143              	 .cfi_def_cfa_offset 4
 144 0060 BD46     	 mov sp,r7
 145              	 .cfi_def_cfa_register 13
 146              	 
 147 0062 5DF8047B 	 ldr r7,[sp],#4
 148              	 .cfi_restore 7
 149              	 .cfi_def_cfa_offset 0
 150 0066 7047     	 bx lr
 151              	.L8:
 152              	 .align 2
 153              	.L7:
 154 0068 00000000 	 .word xmc_device
 155              	 .cfi_endproc
 156              	.LFE175:
 158              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 159              	 .align 2
 160              	 .thumb
 161              	 .thumb_func
 163              	XMC_USBD_lReadFifo:
 164              	.LFB176:
 193:../Libraries/XMCLib/src/xmc_usbd.c **** 
 194:../Libraries/XMCLib/src/xmc_usbd.c **** 
 195:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 196:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 198:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 202:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 205:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../Libraries/XMCLib/src/xmc_usbd.c **** {
 165              	 .loc 1 206 0
 166              	 .cfi_startproc
 167              	 
 168              	 
 169              	 
 170 0000 80B4     	 push {r7}
 171              	 .cfi_def_cfa_offset 4
 172              	 .cfi_offset 7,-4
 173 0002 8BB0     	 sub sp,sp,#44
 174              	 .cfi_def_cfa_offset 48
 175 0004 00AF     	 add r7,sp,#0
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
 178 0008 3960     	 str r1,[r7]
 207:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 179              	 .loc 1 207 0
 180 000a 7B68     	 ldr r3,[r7,#4]
 181 000c 3422     	 movs r2,#52
 182 000e 02FB03F3 	 mul r3,r2,r3
 183 0012 344A     	 ldr r2,.L16
 184 0014 1344     	 add r3,r3,r2
 185 0016 3B62     	 str r3,[r7,#32]
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 186              	 .loc 1 211 0
 187 0018 324B     	 ldr r3,.L16
 188 001a D3F8E031 	 ldr r3,[r3,#480]
 189 001e FB61     	 str r3,[r7,#28]
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 190              	 .loc 1 214 0
 191 0020 304A     	 ldr r2,.L16
 192 0022 7B68     	 ldr r3,[r7,#4]
 193 0024 7033     	 adds r3,r3,#112
 194 0026 9B00     	 lsls r3,r3,#2
 195 0028 1344     	 add r3,r3,r2
 196 002a 5B68     	 ldr r3,[r3,#4]
 197 002c 1B68     	 ldr r3,[r3]
 198 002e FB60     	 str r3,[r7,#12]
 215:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 199              	 .loc 1 215 0
 200 0030 3B68     	 ldr r3,[r7]
 201 0032 9B08     	 lsrs r3,r3,#2
 202 0034 BB61     	 str r3,[r7,#24]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 203              	 .loc 1 216 0
 204 0036 BB69     	 ldr r3,[r7,#24]
 205 0038 9B00     	 lsls r3,r3,#2
 206 003a 7B61     	 str r3,[r7,#20]
 217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 207              	 .loc 1 218 0
 208 003c 7B7B     	 ldrb r3,[r7,#13]
 209 003e 23F07F03 	 bic r3,r3,#127
 210 0042 DBB2     	 uxtb r3,r3
 211 0044 002B     	 cmp r3,#0
 212 0046 48D0     	 beq .L9
 219:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 222:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 213              	 .loc 1 222 0
 214 0048 3B6A     	 ldr r3,[r7,#32]
 215 004a 5B6A     	 ldr r3,[r3,#36]
 216 004c 002B     	 cmp r3,#0
 217 004e 44D0     	 beq .L9
 223:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 224:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 226:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 227:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
 218              	 .loc 1 229 0
 219 0050 0023     	 movs r3,#0
 220 0052 7B62     	 str r3,[r7,#36]
 221 0054 0AE0     	 b .L11
 222              	.L12:
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 231:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
 223              	 .loc 1 231 0 discriminator 3
 224 0056 3B6A     	 ldr r3,[r7,#32]
 225 0058 5A6A     	 ldr r2,[r3,#36]
 226 005a 7B6A     	 ldr r3,[r7,#36]
 227 005c 9B00     	 lsls r3,r3,#2
 228 005e 1344     	 add r3,r3,r2
 229 0060 FA69     	 ldr r2,[r7,#28]
 230 0062 1268     	 ldr r2,[r2]
 231 0064 1A60     	 str r2,[r3]
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 232              	 .loc 1 229 0 discriminator 3
 233 0066 7B6A     	 ldr r3,[r7,#36]
 234 0068 0133     	 adds r3,r3,#1
 235 006a 7B62     	 str r3,[r7,#36]
 236              	.L11:
 229:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 237              	 .loc 1 229 0 is_stmt 0 discriminator 1
 238 006c 7A6A     	 ldr r2,[r7,#36]
 239 006e BB69     	 ldr r3,[r7,#24]
 240 0070 9A42     	 cmp r2,r3
 241 0072 F0D3     	 bcc .L12
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 233:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
 242              	 .loc 1 234 0 is_stmt 1
 243 0074 3A68     	 ldr r2,[r7]
 244 0076 7B69     	 ldr r3,[r7,#20]
 245 0078 9A42     	 cmp r2,r3
 246 007a 22D0     	 beq .L13
 235:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 236:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 247              	 .loc 1 236 0
 248 007c FB69     	 ldr r3,[r7,#28]
 249 007e 1B68     	 ldr r3,[r3]
 250 0080 3B61     	 str r3,[r7,#16]
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 251              	 .loc 1 237 0
 252 0082 0023     	 movs r3,#0
 253 0084 7B62     	 str r3,[r7,#36]
 254 0086 16E0     	 b .L14
 255              	.L15:
 238:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 239:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 256              	 .loc 1 239 0 discriminator 3
 257 0088 3B6A     	 ldr r3,[r7,#32]
 258 008a 5A6A     	 ldr r2,[r3,#36]
 259 008c BB69     	 ldr r3,[r7,#24]
 260 008e 9900     	 lsls r1,r3,#2
 261 0090 7B6A     	 ldr r3,[r7,#36]
 262 0092 0B44     	 add r3,r3,r1
 263 0094 1344     	 add r3,r3,r2
 264 0096 7A6A     	 ldr r2,[r7,#36]
 265 0098 D200     	 lsls r2,r2,#3
 266 009a 1146     	 mov r1,r2
 267 009c FF22     	 movs r2,#255
 268 009e 02FA01F1 	 lsl r1,r2,r1
 269 00a2 3A69     	 ldr r2,[r7,#16]
 270 00a4 0A40     	 ands r2,r2,r1
 271 00a6 796A     	 ldr r1,[r7,#36]
 272 00a8 C900     	 lsls r1,r1,#3
 273 00aa CA40     	 lsrs r2,r2,r1
 274 00ac D2B2     	 uxtb r2,r2
 275 00ae 1A70     	 strb r2,[r3]
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 276              	 .loc 1 237 0 discriminator 3
 277 00b0 7B6A     	 ldr r3,[r7,#36]
 278 00b2 0133     	 adds r3,r3,#1
 279 00b4 7B62     	 str r3,[r7,#36]
 280              	.L14:
 237:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 281              	 .loc 1 237 0 is_stmt 0 discriminator 1
 282 00b6 7A69     	 ldr r2,[r7,#20]
 283 00b8 7B6A     	 ldr r3,[r7,#36]
 284 00ba 1A44     	 add r2,r2,r3
 285 00bc 3B68     	 ldr r3,[r7]
 286 00be 9A42     	 cmp r2,r3
 287 00c0 E2D3     	 bcc .L15
 288              	.L13:
 240:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 241:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 242:../Libraries/XMCLib/src/xmc_usbd.c **** 
 243:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 289              	 .loc 1 244 0 is_stmt 1
 290 00c2 3B6A     	 ldr r3,[r7,#32]
 291 00c4 DA6A     	 ldr r2,[r3,#44]
 292 00c6 3B68     	 ldr r3,[r7]
 293 00c8 1A44     	 add r2,r2,r3
 294 00ca 3B6A     	 ldr r3,[r7,#32]
 295 00cc DA62     	 str r2,[r3,#44]
 245:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 296              	 .loc 1 245 0
 297 00ce 3B6A     	 ldr r3,[r7,#32]
 298 00d0 5A6A     	 ldr r2,[r3,#36]
 299 00d2 3B68     	 ldr r3,[r7]
 300 00d4 1A44     	 add r2,r2,r3
 301 00d6 3B6A     	 ldr r3,[r7,#32]
 302 00d8 5A62     	 str r2,[r3,#36]
 303              	.L9:
 246:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 247:../Libraries/XMCLib/src/xmc_usbd.c **** }
 304              	 .loc 1 247 0
 305 00da 2C37     	 adds r7,r7,#44
 306              	 .cfi_def_cfa_offset 4
 307 00dc BD46     	 mov sp,r7
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 00de 5DF8047B 	 ldr r7,[sp],#4
 311              	 .cfi_restore 7
 312              	 .cfi_def_cfa_offset 0
 313 00e2 7047     	 bx lr
 314              	.L17:
 315              	 .align 2
 316              	.L16:
 317 00e4 00000000 	 .word xmc_device
 318              	 .cfi_endproc
 319              	.LFE176:
 321              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 322              	 .align 2
 323              	 .thumb
 324              	 .thumb_func
 326              	XMC_USBD_lWriteFifo:
 327              	.LFB177:
 248:../Libraries/XMCLib/src/xmc_usbd.c **** 
 249:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 250:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 252:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 255:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 258:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../Libraries/XMCLib/src/xmc_usbd.c **** {
 328              	 .loc 1 259 0
 329              	 .cfi_startproc
 330              	 
 331              	 
 332              	 
 333 0000 80B4     	 push {r7}
 334              	 .cfi_def_cfa_offset 4
 335              	 .cfi_offset 7,-4
 336 0002 89B0     	 sub sp,sp,#36
 337              	 .cfi_def_cfa_offset 40
 338 0004 00AF     	 add r7,sp,#0
 339              	 .cfi_def_cfa_register 7
 340 0006 7860     	 str r0,[r7,#4]
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 341              	 .loc 1 266 0
 342 0008 7B68     	 ldr r3,[r7,#4]
 343 000a 1B78     	 ldrb r3,[r3]
 344 000c C3F30303 	 ubfx r3,r3,#0,#4
 345 0010 DBB2     	 uxtb r3,r3
 346 0012 234A     	 ldr r2,.L25
 347 0014 7833     	 adds r3,r3,#120
 348 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 349 001a FB60     	 str r3,[r7,#12]
 267:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 350              	 .loc 1 267 0
 351 001c 7B68     	 ldr r3,[r7,#4]
 352 001e 1B78     	 ldrb r3,[r3]
 353 0020 C3F30303 	 ubfx r3,r3,#0,#4
 354 0024 DBB2     	 uxtb r3,r3
 355 0026 1E4A     	 ldr r2,.L25
 356 0028 6A33     	 adds r3,r3,#106
 357 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 358 002e 9B69     	 ldr r3,[r3,#24]
 359 0030 BB60     	 str r3,[r7,#8]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 360              	 .loc 1 269 0
 361 0032 7B68     	 ldr r3,[r7,#4]
 362 0034 9A6A     	 ldr r2,[r3,#40]
 363 0036 7B68     	 ldr r3,[r7,#4]
 364 0038 DB6A     	 ldr r3,[r3,#44]
 365 003a D31A     	 subs r3,r2,r3
 366 003c FB61     	 str r3,[r7,#28]
 270:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 367              	 .loc 1 270 0
 368 003e FB69     	 ldr r3,[r7,#28]
 369 0040 002B     	 cmp r3,#0
 370 0042 02D1     	 bne .L19
 271:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 371              	 .loc 1 272 0
 372 0044 0023     	 movs r3,#0
 373 0046 7B61     	 str r3,[r7,#20]
 374 0048 23E0     	 b .L20
 375              	.L19:
 273:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 274:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 275:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 376              	 .loc 1 277 0
 377 004a FB69     	 ldr r3,[r7,#28]
 378 004c 0333     	 adds r3,r3,#3
 379 004e 9B08     	 lsrs r3,r3,#2
 380 0050 BB61     	 str r3,[r7,#24]
 278:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 381              	 .loc 1 278 0
 382 0052 3B89     	 ldrh r3,[r7,#8]
 383 0054 1A46     	 mov r2,r3
 384 0056 BB69     	 ldr r3,[r7,#24]
 385 0058 9A42     	 cmp r2,r3
 386 005a 04D2     	 bcs .L21
 279:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 280:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 387              	 .loc 1 280 0
 388 005c 3B89     	 ldrh r3,[r7,#8]
 389 005e BB61     	 str r3,[r7,#24]
 281:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 390              	 .loc 1 281 0
 391 0060 BB69     	 ldr r3,[r7,#24]
 392 0062 9B00     	 lsls r3,r3,#2
 393 0064 FB61     	 str r3,[r7,#28]
 394              	.L21:
 282:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 283:../Libraries/XMCLib/src/xmc_usbd.c **** 
 284:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 395              	 .loc 1 285 0
 396 0066 0023     	 movs r3,#0
 397 0068 3B61     	 str r3,[r7,#16]
 398 006a 0CE0     	 b .L22
 399              	.L23:
 286:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 287:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 400              	 .loc 1 287 0 discriminator 3
 401 006c 7B68     	 ldr r3,[r7,#4]
 402 006e 5B6A     	 ldr r3,[r3,#36]
 403 0070 1A68     	 ldr r2,[r3]
 404 0072 FB68     	 ldr r3,[r7,#12]
 405 0074 1A60     	 str r2,[r3]
 288:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 406              	 .loc 1 288 0 discriminator 3
 407 0076 3B69     	 ldr r3,[r7,#16]
 408 0078 0133     	 adds r3,r3,#1
 409 007a 3B61     	 str r3,[r7,#16]
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 410              	 .loc 1 285 0 discriminator 3
 411 007c 7B68     	 ldr r3,[r7,#4]
 412 007e 5B6A     	 ldr r3,[r3,#36]
 413 0080 1A1D     	 adds r2,r3,#4
 414 0082 7B68     	 ldr r3,[r7,#4]
 415 0084 5A62     	 str r2,[r3,#36]
 416              	.L22:
 285:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 417              	 .loc 1 285 0 is_stmt 0 discriminator 1
 418 0086 3A69     	 ldr r2,[r7,#16]
 419 0088 BB69     	 ldr r3,[r7,#24]
 420 008a 9A42     	 cmp r2,r3
 421 008c EED3     	 bcc .L23
 289:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 290:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 422              	 .loc 1 290 0 is_stmt 1
 423 008e FB69     	 ldr r3,[r7,#28]
 424 0090 7B61     	 str r3,[r7,#20]
 425              	.L20:
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 426              	 .loc 1 292 0
 427 0092 7B69     	 ldr r3,[r7,#20]
 293:../Libraries/XMCLib/src/xmc_usbd.c **** }
 428              	 .loc 1 293 0
 429 0094 1846     	 mov r0,r3
 430 0096 2437     	 adds r7,r7,#36
 431              	 .cfi_def_cfa_offset 4
 432 0098 BD46     	 mov sp,r7
 433              	 .cfi_def_cfa_register 13
 434              	 
 435 009a 5DF8047B 	 ldr r7,[sp],#4
 436              	 .cfi_restore 7
 437              	 .cfi_def_cfa_offset 0
 438 009e 7047     	 bx lr
 439              	.L26:
 440              	 .align 2
 441              	.L25:
 442 00a0 00000000 	 .word xmc_device
 443              	 .cfi_endproc
 444              	.LFE177:
 446              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 447              	 .align 2
 448              	 .thumb
 449              	 .thumb_func
 451              	XMC_USBD_lFlushTXFifo:
 452              	.LFB178:
 294:../Libraries/XMCLib/src/xmc_usbd.c **** 
 295:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 296:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 298:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 300:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 302:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../Libraries/XMCLib/src/xmc_usbd.c **** {
 453              	 .loc 1 303 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457              	 
 458 0000 80B4     	 push {r7}
 459              	 .cfi_def_cfa_offset 4
 460              	 .cfi_offset 7,-4
 461 0002 85B0     	 sub sp,sp,#20
 462              	 .cfi_def_cfa_offset 24
 463 0004 00AF     	 add r7,sp,#0
 464              	 .cfi_def_cfa_register 7
 465 0006 0346     	 mov r3,r0
 466 0008 FB71     	 strb r3,[r7,#7]
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 467              	 .loc 1 306 0
 468 000a 0023     	 movs r3,#0
 469 000c BB60     	 str r3,[r7,#8]
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 470              	 .loc 1 308 0
 471 000e BB68     	 ldr r3,[r7,#8]
 472 0010 43F02003 	 orr r3,r3,#32
 473 0014 BB60     	 str r3,[r7,#8]
 309:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 474              	 .loc 1 309 0
 475 0016 FB79     	 ldrb r3,[r7,#7]
 476 0018 03F01F03 	 and r3,r3,#31
 477 001c DBB2     	 uxtb r3,r3
 478 001e 03F01F03 	 and r3,r3,#31
 479 0022 9B01     	 lsls r3,r3,#6
 480 0024 BA68     	 ldr r2,[r7,#8]
 481 0026 22F4F862 	 bic r2,r2,#1984
 482 002a 1343     	 orrs r3,r3,r2
 483 002c BB60     	 str r3,[r7,#8]
 310:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 484              	 .loc 1 310 0
 485 002e 144B     	 ldr r3,.L32
 486 0030 D3F8A031 	 ldr r3,[r3,#416]
 487 0034 BA68     	 ldr r2,[r7,#8]
 488 0036 1A61     	 str r2,[r3,#16]
 311:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 489              	 .loc 1 311 0
 490 0038 0023     	 movs r3,#0
 491 003a FB60     	 str r3,[r7,#12]
 492 003c 02E0     	 b .L28
 493              	.L29:
 494              	 .loc 1 311 0 is_stmt 0 discriminator 3
 495 003e FB68     	 ldr r3,[r7,#12]
 496 0040 0133     	 adds r3,r3,#1
 497 0042 FB60     	 str r3,[r7,#12]
 498              	.L28:
 499              	 .loc 1 311 0 discriminator 1
 500 0044 FB68     	 ldr r3,[r7,#12]
 501 0046 B3F57A7F 	 cmp r3,#1000
 502 004a F8D3     	 bcc .L29
 503              	.L30:
 312:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 313:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 314:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 504              	 .loc 1 314 0 is_stmt 1 discriminator 1
 505 004c 0C4B     	 ldr r3,.L32
 506 004e D3F8A031 	 ldr r3,[r3,#416]
 507 0052 1B69     	 ldr r3,[r3,#16]
 508 0054 BB60     	 str r3,[r7,#8]
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 509              	 .loc 1 315 0 discriminator 1
 510 0056 BB68     	 ldr r3,[r7,#8]
 511 0058 5B09     	 lsrs r3,r3,#5
 512 005a 03F00103 	 and r3,r3,#1
 513 005e DBB2     	 uxtb r3,r3
 514 0060 002B     	 cmp r3,#0
 515 0062 F3D1     	 bne .L30
 316:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 516              	 .loc 1 316 0
 517 0064 0023     	 movs r3,#0
 518 0066 FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 519              	 .loc 1 317 0
 520 0068 00BF     	 nop
 521              	.L31:
 522              	 .loc 1 317 0 is_stmt 0 discriminator 1
 523 006a FB68     	 ldr r3,[r7,#12]
 524 006c 5A1C     	 adds r2,r3,#1
 525 006e FA60     	 str r2,[r7,#12]
 526 0070 B3F57A7F 	 cmp r3,#1000
 527 0074 F9D3     	 bcc .L31
 318:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 319:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 321:../Libraries/XMCLib/src/xmc_usbd.c **** }
 528              	 .loc 1 321 0 is_stmt 1
 529 0076 1437     	 adds r7,r7,#20
 530              	 .cfi_def_cfa_offset 4
 531 0078 BD46     	 mov sp,r7
 532              	 .cfi_def_cfa_register 13
 533              	 
 534 007a 5DF8047B 	 ldr r7,[sp],#4
 535              	 .cfi_restore 7
 536              	 .cfi_def_cfa_offset 0
 537 007e 7047     	 bx lr
 538              	.L33:
 539              	 .align 2
 540              	.L32:
 541 0080 00000000 	 .word xmc_device
 542              	 .cfi_endproc
 543              	.LFE178:
 545              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 546              	 .align 2
 547              	 .thumb
 548              	 .thumb_func
 550              	XMC_USBD_lFlushRXFifo:
 551              	.LFB179:
 322:../Libraries/XMCLib/src/xmc_usbd.c **** 
 323:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 324:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 326:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../Libraries/XMCLib/src/xmc_usbd.c **** {
 552              	 .loc 1 327 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	 .cfi_def_cfa_offset 4
 559              	 .cfi_offset 7,-4
 560 0002 83B0     	 sub sp,sp,#12
 561              	 .cfi_def_cfa_offset 16
 562 0004 00AF     	 add r7,sp,#0
 563              	 .cfi_def_cfa_register 7
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 331:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 564              	 .loc 1 331 0
 565 0006 0023     	 movs r3,#0
 566 0008 3B60     	 str r3,[r7]
 332:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 567              	 .loc 1 332 0
 568 000a 3B68     	 ldr r3,[r7]
 569 000c 43F01003 	 orr r3,r3,#16
 570 0010 3B60     	 str r3,[r7]
 333:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 571              	 .loc 1 334 0
 572 0012 144B     	 ldr r3,.L39
 573 0014 D3F8A031 	 ldr r3,[r3,#416]
 574 0018 3A68     	 ldr r2,[r7]
 575 001a 1A61     	 str r2,[r3,#16]
 576              	.L37:
 335:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 337:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 577              	 .loc 1 337 0
 578 001c 0023     	 movs r3,#0
 579 001e 7B60     	 str r3,[r7,#4]
 580 0020 02E0     	 b .L35
 581              	.L36:
 582              	 .loc 1 337 0 is_stmt 0 discriminator 3
 583 0022 7B68     	 ldr r3,[r7,#4]
 584 0024 0133     	 adds r3,r3,#1
 585 0026 7B60     	 str r3,[r7,#4]
 586              	.L35:
 587              	 .loc 1 337 0 discriminator 1
 588 0028 7B68     	 ldr r3,[r7,#4]
 589 002a B3F57A7F 	 cmp r3,#1000
 590 002e F8D3     	 bcc .L36
 338:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 591              	 .loc 1 338 0 is_stmt 1
 592 0030 0C4B     	 ldr r3,.L39
 593 0032 D3F8A031 	 ldr r3,[r3,#416]
 594 0036 1B69     	 ldr r3,[r3,#16]
 595 0038 3B60     	 str r3,[r7]
 339:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 596              	 .loc 1 339 0
 597 003a 3B68     	 ldr r3,[r7]
 598 003c 1B09     	 lsrs r3,r3,#4
 599 003e 03F00103 	 and r3,r3,#1
 600 0042 DBB2     	 uxtb r3,r3
 601 0044 002B     	 cmp r3,#0
 602 0046 E9D1     	 bne .L37
 340:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 603              	 .loc 1 340 0
 604 0048 0023     	 movs r3,#0
 605 004a 7B60     	 str r3,[r7,#4]
 341:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 606              	 .loc 1 341 0
 607 004c 00BF     	 nop
 608              	.L38:
 609              	 .loc 1 341 0 is_stmt 0 discriminator 1
 610 004e 7B68     	 ldr r3,[r7,#4]
 611 0050 5A1C     	 adds r2,r3,#1
 612 0052 7A60     	 str r2,[r7,#4]
 613 0054 B3F57A7F 	 cmp r3,#1000
 614 0058 F9D3     	 bcc .L38
 342:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 343:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 345:../Libraries/XMCLib/src/xmc_usbd.c **** }
 615              	 .loc 1 345 0 is_stmt 1
 616 005a 0C37     	 adds r7,r7,#12
 617              	 .cfi_def_cfa_offset 4
 618 005c BD46     	 mov sp,r7
 619              	 .cfi_def_cfa_register 13
 620              	 
 621 005e 5DF8047B 	 ldr r7,[sp],#4
 622              	 .cfi_restore 7
 623              	 .cfi_def_cfa_offset 0
 624 0062 7047     	 bx lr
 625              	.L40:
 626              	 .align 2
 627              	.L39:
 628 0064 00000000 	 .word xmc_device
 629              	 .cfi_endproc
 630              	.LFE179:
 632              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 633              	 .align 2
 634              	 .thumb
 635              	 .thumb_func
 637              	XMC_USBD_lAssignTXFifo:
 638              	.LFB180:
 346:../Libraries/XMCLib/src/xmc_usbd.c **** 
 347:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 348:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 350:../Libraries/XMCLib/src/xmc_usbd.c **** 
 351:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 352:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 354:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 356:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 358:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 639              	 .loc 1 359 0
 640              	 .cfi_startproc
 641              	 
 642              	 
 643              	 
 644 0000 80B4     	 push {r7}
 645              	 .cfi_def_cfa_offset 4
 646              	 .cfi_offset 7,-4
 647 0002 83B0     	 sub sp,sp,#12
 648              	 .cfi_def_cfa_offset 16
 649 0004 00AF     	 add r7,sp,#0
 650              	 .cfi_def_cfa_register 7
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 651              	 .loc 1 360 0
 652 0006 0123     	 movs r3,#1
 653 0008 FB80     	 strh r3,[r7,#6]
 361:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 654              	 .loc 1 361 0
 655 000a 0023     	 movs r3,#0
 656 000c 7B71     	 strb r3,[r7,#5]
 362:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 657              	 .loc 1 362 0
 658 000e 0023     	 movs r3,#0
 659 0010 3B71     	 strb r3,[r7,#4]
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 660              	 .loc 1 363 0
 661 0012 05E0     	 b .L42
 662              	.L44:
 364:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 365:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 663              	 .loc 1 365 0
 664 0014 FB88     	 ldrh r3,[r7,#6]
 665 0016 5B00     	 lsls r3,r3,#1
 666 0018 FB80     	 strh r3,[r7,#6]
 366:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 667              	 .loc 1 366 0
 668 001a 7B79     	 ldrb r3,[r7,#5]
 669 001c 0133     	 adds r3,r3,#1
 670 001e 7B71     	 strb r3,[r7,#5]
 671              	.L42:
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 672              	 .loc 1 363 0
 673 0020 7B79     	 ldrb r3,[r7,#5]
 674 0022 062B     	 cmp r3,#6
 675 0024 07D8     	 bhi .L43
 363:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 676              	 .loc 1 363 0 is_stmt 0 discriminator 1
 677 0026 114B     	 ldr r3,.L47
 678 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 679 002c FB88     	 ldrh r3,[r7,#6]
 680 002e 1340     	 ands r3,r3,r2
 681 0030 9BB2     	 uxth r3,r3
 682 0032 002B     	 cmp r3,#0
 683 0034 EED1     	 bne .L44
 684              	.L43:
 367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 368:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 685              	 .loc 1 368 0 is_stmt 1
 686 0036 0D4B     	 ldr r3,.L47
 687 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 688 003c FB88     	 ldrh r3,[r7,#6]
 689 003e 1340     	 ands r3,r3,r2
 690 0040 9BB2     	 uxth r3,r3
 691 0042 002B     	 cmp r3,#0
 692 0044 0AD1     	 bne .L45
 369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 370:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 693              	 .loc 1 370 0
 694 0046 094B     	 ldr r3,.L47
 695 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 696 004c FB88     	 ldrh r3,[r7,#6]
 697 004e 1343     	 orrs r3,r3,r2
 698 0050 9AB2     	 uxth r2,r3
 699 0052 064B     	 ldr r3,.L47
 700 0054 A3F8FC21 	 strh r2,[r3,#508]
 371:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 701              	 .loc 1 371 0
 702 0058 7B79     	 ldrb r3,[r7,#5]
 703 005a 3B71     	 strb r3,[r7,#4]
 704              	.L45:
 372:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 373:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 705              	 .loc 1 373 0
 706 005c 3B79     	 ldrb r3,[r7,#4]
 374:../Libraries/XMCLib/src/xmc_usbd.c **** }
 707              	 .loc 1 374 0
 708 005e 1846     	 mov r0,r3
 709 0060 0C37     	 adds r7,r7,#12
 710              	 .cfi_def_cfa_offset 4
 711 0062 BD46     	 mov sp,r7
 712              	 .cfi_def_cfa_register 13
 713              	 
 714 0064 5DF8047B 	 ldr r7,[sp],#4
 715              	 .cfi_restore 7
 716              	 .cfi_def_cfa_offset 0
 717 0068 7047     	 bx lr
 718              	.L48:
 719 006a 00BF     	 .align 2
 720              	.L47:
 721 006c 00000000 	 .word xmc_device
 722              	 .cfi_endproc
 723              	.LFE180:
 725              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 726              	 .align 2
 727              	 .thumb
 728              	 .thumb_func
 730              	XMC_USBD_lUnassignFifo:
 731              	.LFB181:
 375:../Libraries/XMCLib/src/xmc_usbd.c **** 
 376:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 382:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../Libraries/XMCLib/src/xmc_usbd.c **** {
 732              	 .loc 1 383 0
 733              	 .cfi_startproc
 734              	 
 735              	 
 736              	 
 737 0000 80B4     	 push {r7}
 738              	 .cfi_def_cfa_offset 4
 739              	 .cfi_offset 7,-4
 740 0002 83B0     	 sub sp,sp,#12
 741              	 .cfi_def_cfa_offset 16
 742 0004 00AF     	 add r7,sp,#0
 743              	 .cfi_def_cfa_register 7
 744 0006 0346     	 mov r3,r0
 745 0008 FB71     	 strb r3,[r7,#7]
 384:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 746              	 .loc 1 384 0
 747 000a 0A4B     	 ldr r3,.L50
 748 000c B3F8FC21 	 ldrh r2,[r3,#508]
 749 0010 FB79     	 ldrb r3,[r7,#7]
 750 0012 0121     	 movs r1,#1
 751 0014 01FA03F3 	 lsl r3,r1,r3
 752 0018 9BB2     	 uxth r3,r3
 753 001a DB43     	 mvns r3,r3
 754 001c 9BB2     	 uxth r3,r3
 755 001e 1340     	 ands r3,r3,r2
 756 0020 9AB2     	 uxth r2,r3
 757 0022 044B     	 ldr r3,.L50
 758 0024 A3F8FC21 	 strh r2,[r3,#508]
 385:../Libraries/XMCLib/src/xmc_usbd.c **** }
 759              	 .loc 1 385 0
 760 0028 0C37     	 adds r7,r7,#12
 761              	 .cfi_def_cfa_offset 4
 762 002a BD46     	 mov sp,r7
 763              	 .cfi_def_cfa_register 13
 764              	 
 765 002c 5DF8047B 	 ldr r7,[sp],#4
 766              	 .cfi_restore 7
 767              	 .cfi_def_cfa_offset 0
 768 0030 7047     	 bx lr
 769              	.L51:
 770 0032 00BF     	 .align 2
 771              	.L50:
 772 0034 00000000 	 .word xmc_device
 773              	 .cfi_endproc
 774              	.LFE181:
 776              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 777              	 .align 2
 778              	 .thumb
 779              	 .thumb_func
 781              	XMC_USBD_lStartReadXfer:
 782              	.LFB182:
 386:../Libraries/XMCLib/src/xmc_usbd.c **** 
 387:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 388:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 390:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 393:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 396:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 398:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../Libraries/XMCLib/src/xmc_usbd.c **** {
 783              	 .loc 1 399 0
 784              	 .cfi_startproc
 785              	 
 786              	 
 787              	 
 788 0000 80B4     	 push {r7}
 789              	 .cfi_def_cfa_offset 4
 790              	 .cfi_offset 7,-4
 791 0002 87B0     	 sub sp,sp,#28
 792              	 .cfi_def_cfa_offset 32
 793 0004 00AF     	 add r7,sp,#0
 794              	 .cfi_def_cfa_register 7
 795 0006 7860     	 str r0,[r7,#4]
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 403:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 796              	 .loc 1 403 0
 797 0008 0023     	 movs r3,#0
 798 000a 3B61     	 str r3,[r7,#16]
 404:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 799              	 .loc 1 404 0
 800 000c 7B68     	 ldr r3,[r7,#4]
 801 000e 1A6B     	 ldr r2,[r3,#48]
 802 0010 7B68     	 ldr r3,[r7,#4]
 803 0012 9B6A     	 ldr r3,[r3,#40]
 804 0014 D31A     	 subs r3,r2,r3
 805 0016 7A68     	 ldr r2,[r7,#4]
 806 0018 9268     	 ldr r2,[r2,#8]
 807 001a C2F31202 	 ubfx r2,r2,#0,#19
 808 001e 9342     	 cmp r3,r2
 809 0020 09D9     	 bls .L53
 405:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 810              	 .loc 1 406 0
 811 0022 7B68     	 ldr r3,[r7,#4]
 812 0024 9B6A     	 ldr r3,[r3,#40]
 813 0026 7A68     	 ldr r2,[r7,#4]
 814 0028 9268     	 ldr r2,[r2,#8]
 815 002a C2F31202 	 ubfx r2,r2,#0,#19
 816 002e 1A44     	 add r2,r2,r3
 817 0030 7B68     	 ldr r3,[r7,#4]
 818 0032 9A62     	 str r2,[r3,#40]
 819 0034 03E0     	 b .L54
 820              	.L53:
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 821              	 .loc 1 410 0
 822 0036 7B68     	 ldr r3,[r7,#4]
 823 0038 1A6B     	 ldr r2,[r3,#48]
 824 003a 7B68     	 ldr r3,[r7,#4]
 825 003c 9A62     	 str r2,[r3,#40]
 826              	.L54:
 411:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 412:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 827              	 .loc 1 412 0
 828 003e 7B68     	 ldr r3,[r7,#4]
 829 0040 1B78     	 ldrb r3,[r3]
 830 0042 03F00F03 	 and r3,r3,#15
 831 0046 DBB2     	 uxtb r3,r3
 832 0048 002B     	 cmp r3,#0
 833 004a 19D1     	 bne .L55
 834              	.LBB2:
 413:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 414:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 835              	 .loc 1 416 0
 836 004c 07F11003 	 add r3,r7,#16
 837 0050 7B61     	 str r3,[r7,#20]
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 838              	 .loc 1 417 0
 839 0052 7A69     	 ldr r2,[r7,#20]
 840 0054 9378     	 ldrb r3,[r2,#2]
 841 0056 0121     	 movs r1,#1
 842 0058 61F3C403 	 bfi r3,r1,#3,#2
 843 005c 9370     	 strb r3,[r2,#2]
 418:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 844              	 .loc 1 418 0
 845 005e 7A69     	 ldr r2,[r7,#20]
 846 0060 D378     	 ldrb r3,[r2,#3]
 847 0062 43F06003 	 orr r3,r3,#96
 848 0066 D370     	 strb r3,[r2,#3]
 419:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 849              	 .loc 1 419 0
 850 0068 7B68     	 ldr r3,[r7,#4]
 851 006a 1B6B     	 ldr r3,[r3,#48]
 852 006c DBB2     	 uxtb r3,r3
 853 006e 03F07F03 	 and r3,r3,#127
 854 0072 D9B2     	 uxtb r1,r3
 855 0074 7A69     	 ldr r2,[r7,#20]
 856 0076 1378     	 ldrb r3,[r2]
 857 0078 61F30603 	 bfi r3,r1,#0,#7
 858 007c 1370     	 strb r3,[r2]
 859              	.LBE2:
 860 007e 33E0     	 b .L56
 861              	.L55:
 420:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 421:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 423:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 862              	 .loc 1 424 0
 863 0080 7B68     	 ldr r3,[r7,#4]
 864 0082 9B6A     	 ldr r3,[r3,#40]
 865 0084 002B     	 cmp r3,#0
 866 0086 09D1     	 bne .L57
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 867              	 .loc 1 426 0
 868 0088 3B69     	 ldr r3,[r7,#16]
 869 008a 6FF31203 	 bfc r3,#0,#19
 870 008e 3B61     	 str r3,[r7,#16]
 427:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 871              	 .loc 1 427 0
 872 0090 7B8A     	 ldrh r3,[r7,#18]
 873 0092 0122     	 movs r2,#1
 874 0094 62F3CC03 	 bfi r3,r2,#3,#10
 875 0098 7B82     	 strh r3,[r7,#18]
 876 009a 25E0     	 b .L56
 877              	.L57:
 428:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 429:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 430:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 431:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 878              	 .loc 1 432 0
 879 009c 7B68     	 ldr r3,[r7,#4]
 880 009e 9A6A     	 ldr r2,[r3,#40]
 881 00a0 7B68     	 ldr r3,[r7,#4]
 882 00a2 DB6A     	 ldr r3,[r3,#44]
 883 00a4 D31A     	 subs r3,r2,r3
 884 00a6 7A68     	 ldr r2,[r7,#4]
 885 00a8 5268     	 ldr r2,[r2,#4]
 886 00aa C2F3C622 	 ubfx r2,r2,#11,#7
 887 00ae D2B2     	 uxtb r2,r2
 888 00b0 1344     	 add r3,r3,r2
 889 00b2 013B     	 subs r3,r3,#1
 890 00b4 7A68     	 ldr r2,[r7,#4]
 891 00b6 5268     	 ldr r2,[r2,#4]
 892 00b8 C2F3C622 	 ubfx r2,r2,#11,#7
 893 00bc D2B2     	 uxtb r2,r2
 894 00be B3FBF2F3 	 udiv r3,r3,r2
 895 00c2 9BB2     	 uxth r3,r3
 896 00c4 C3F30903 	 ubfx r3,r3,#0,#10
 897 00c8 9AB2     	 uxth r2,r3
 898 00ca 7B8A     	 ldrh r3,[r7,#18]
 899 00cc 62F3CC03 	 bfi r3,r2,#3,#10
 900 00d0 7B82     	 strh r3,[r7,#18]
 433:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 901              	 .loc 1 433 0
 902 00d2 7B68     	 ldr r3,[r7,#4]
 903 00d4 9A6A     	 ldr r2,[r3,#40]
 904 00d6 7B68     	 ldr r3,[r7,#4]
 905 00d8 DB6A     	 ldr r3,[r3,#44]
 906 00da D31A     	 subs r3,r2,r3
 907 00dc C3F31202 	 ubfx r2,r3,#0,#19
 908 00e0 3B69     	 ldr r3,[r7,#16]
 909 00e2 62F31203 	 bfi r3,r2,#0,#19
 910 00e6 3B61     	 str r3,[r7,#16]
 911              	.L56:
 434:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 435:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 436:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 912              	 .loc 1 436 0
 913 00e8 214B     	 ldr r3,.L59
 914 00ea 1B68     	 ldr r3,[r3]
 915 00ec 5B7B     	 ldrb r3,[r3,#13]
 916 00ee 002B     	 cmp r3,#0
 917 00f0 0CD1     	 bne .L58
 437:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 438:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 918              	 .loc 1 439 0
 919 00f2 7B68     	 ldr r3,[r7,#4]
 920 00f4 1B78     	 ldrb r3,[r3]
 921 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 922 00fa DBB2     	 uxtb r3,r3
 923 00fc 1D4A     	 ldr r2,.L59+4
 924 00fe 7033     	 adds r3,r3,#112
 925 0100 9B00     	 lsls r3,r3,#2
 926 0102 1344     	 add r3,r3,r2
 927 0104 5B68     	 ldr r3,[r3,#4]
 928 0106 7A68     	 ldr r2,[r7,#4]
 929 0108 526A     	 ldr r2,[r2,#36]
 930 010a 5A61     	 str r2,[r3,#20]
 931              	.L58:
 440:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 441:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 932              	 .loc 1 442 0
 933 010c 7B68     	 ldr r3,[r7,#4]
 934 010e 1B78     	 ldrb r3,[r3]
 935 0110 C3F30303 	 ubfx r3,r3,#0,#4
 936 0114 DBB2     	 uxtb r3,r3
 937 0116 174A     	 ldr r2,.L59+4
 938 0118 7033     	 adds r3,r3,#112
 939 011a 9B00     	 lsls r3,r3,#2
 940 011c 1344     	 add r3,r3,r2
 941 011e 5B68     	 ldr r3,[r3,#4]
 942 0120 3A69     	 ldr r2,[r7,#16]
 943 0122 1A61     	 str r2,[r3,#16]
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  
 444:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 944              	 .loc 1 444 0
 945 0124 7B68     	 ldr r3,[r7,#4]
 946 0126 1B78     	 ldrb r3,[r3]
 947 0128 C3F30303 	 ubfx r3,r3,#0,#4
 948 012c DBB2     	 uxtb r3,r3
 949 012e 114A     	 ldr r2,.L59+4
 950 0130 7033     	 adds r3,r3,#112
 951 0132 9B00     	 lsls r3,r3,#2
 952 0134 1344     	 add r3,r3,r2
 953 0136 5B68     	 ldr r3,[r3,#4]
 954 0138 1B68     	 ldr r3,[r3]
 955 013a FB60     	 str r3,[r7,#12]
 445:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 956              	 .loc 1 445 0
 957 013c FB7B     	 ldrb r3,[r7,#15]
 958 013e 43F00403 	 orr r3,r3,#4
 959 0142 FB73     	 strb r3,[r7,#15]
 446:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 960              	 .loc 1 446 0
 961 0144 FB7B     	 ldrb r3,[r7,#15]
 962 0146 43F08003 	 orr r3,r3,#128
 963 014a FB73     	 strb r3,[r7,#15]
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 964              	 .loc 1 447 0
 965 014c 7B68     	 ldr r3,[r7,#4]
 966 014e 1B78     	 ldrb r3,[r3]
 967 0150 C3F30303 	 ubfx r3,r3,#0,#4
 968 0154 DBB2     	 uxtb r3,r3
 969 0156 074A     	 ldr r2,.L59+4
 970 0158 7033     	 adds r3,r3,#112
 971 015a 9B00     	 lsls r3,r3,#2
 972 015c 1344     	 add r3,r3,r2
 973 015e 5B68     	 ldr r3,[r3,#4]
 974 0160 FA68     	 ldr r2,[r7,#12]
 975 0162 1A60     	 str r2,[r3]
 448:../Libraries/XMCLib/src/xmc_usbd.c **** }
 976              	 .loc 1 448 0
 977 0164 1C37     	 adds r7,r7,#28
 978              	 .cfi_def_cfa_offset 4
 979 0166 BD46     	 mov sp,r7
 980              	 .cfi_def_cfa_register 13
 981              	 
 982 0168 5DF8047B 	 ldr r7,[sp],#4
 983              	 .cfi_restore 7
 984              	 .cfi_def_cfa_offset 0
 985 016c 7047     	 bx lr
 986              	.L60:
 987 016e 00BF     	 .align 2
 988              	.L59:
 989 0170 00000000 	 .word usbd_init
 990 0174 00000000 	 .word xmc_device
 991              	 .cfi_endproc
 992              	.LFE182:
 994              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 995              	 .align 2
 996              	 .thumb
 997              	 .thumb_func
 999              	XMC_USBD_lStartWriteXfer:
 1000              	.LFB183:
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 
 450:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 451:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 453:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 456:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 458:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1001              	 .loc 1 459 0
 1002              	 .cfi_startproc
 1003              	 
 1004              	 
 1005              	 
 1006 0000 80B4     	 push {r7}
 1007              	 .cfi_def_cfa_offset 4
 1008              	 .cfi_offset 7,-4
 1009 0002 85B0     	 sub sp,sp,#20
 1010              	 .cfi_def_cfa_offset 24
 1011 0004 00AF     	 add r7,sp,#0
 1012              	 .cfi_def_cfa_register 7
 1013 0006 7860     	 str r0,[r7,#4]
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 463:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 1014              	 .loc 1 463 0
 1015 0008 0023     	 movs r3,#0
 1016 000a FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1017              	 .loc 1 464 0
 1018 000c 7B68     	 ldr r3,[r7,#4]
 1019 000e 1B78     	 ldrb r3,[r3]
 1020 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1021 0014 DBB2     	 uxtb r3,r3
 1022 0016 5D4A     	 ldr r2,.L69
 1023 0018 6A33     	 adds r3,r3,#106
 1024 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1025 001e 1B68     	 ldr r3,[r3]
 1026 0020 BB60     	 str r3,[r7,#8]
 465:../Libraries/XMCLib/src/xmc_usbd.c **** 
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1027              	 .loc 1 466 0
 1028 0022 7B68     	 ldr r3,[r7,#4]
 1029 0024 1A6B     	 ldr r2,[r3,#48]
 1030 0026 7B68     	 ldr r3,[r7,#4]
 1031 0028 9B6A     	 ldr r3,[r3,#40]
 1032 002a D31A     	 subs r3,r2,r3
 1033 002c 7A68     	 ldr r2,[r7,#4]
 1034 002e 9268     	 ldr r2,[r2,#8]
 1035 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1036 0034 9342     	 cmp r3,r2
 1037 0036 04D2     	 bcs .L62
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1038              	 .loc 1 468 0
 1039 0038 7B68     	 ldr r3,[r7,#4]
 1040 003a 1A6B     	 ldr r2,[r3,#48]
 1041 003c 7B68     	 ldr r3,[r7,#4]
 1042 003e 9A62     	 str r2,[r3,#40]
 1043 0040 08E0     	 b .L63
 1044              	.L62:
 469:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 470:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 471:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 472:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1045              	 .loc 1 472 0
 1046 0042 7B68     	 ldr r3,[r7,#4]
 1047 0044 9B6A     	 ldr r3,[r3,#40]
 1048 0046 7A68     	 ldr r2,[r7,#4]
 1049 0048 9268     	 ldr r2,[r2,#8]
 1050 004a C2F31202 	 ubfx r2,r2,#0,#19
 1051 004e 1A44     	 add r2,r2,r3
 1052 0050 7B68     	 ldr r3,[r7,#4]
 1053 0052 9A62     	 str r2,[r3,#40]
 1054              	.L63:
 473:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1055              	 .loc 1 474 0
 1056 0054 7B68     	 ldr r3,[r7,#4]
 1057 0056 9B6A     	 ldr r3,[r3,#40]
 1058 0058 002B     	 cmp r3,#0
 1059 005a 09D1     	 bne .L64
 475:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1060              	 .loc 1 476 0
 1061 005c FB68     	 ldr r3,[r7,#12]
 1062 005e 6FF31203 	 bfc r3,#0,#19
 1063 0062 FB60     	 str r3,[r7,#12]
 477:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1064              	 .loc 1 477 0
 1065 0064 FB89     	 ldrh r3,[r7,#14]
 1066 0066 0122     	 movs r2,#1
 1067 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1068 006c FB81     	 strh r3,[r7,#14]
 1069 006e 6AE0     	 b .L65
 1070              	.L64:
 478:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 479:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 480:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1071              	 .loc 1 481 0
 1072 0070 7B68     	 ldr r3,[r7,#4]
 1073 0072 1B78     	 ldrb r3,[r3]
 1074 0074 03F00F03 	 and r3,r3,#15
 1075 0078 DBB2     	 uxtb r3,r3
 1076 007a 002B     	 cmp r3,#0
 1077 007c 10D1     	 bne .L66
 482:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1078              	 .loc 1 483 0
 1079 007e FB89     	 ldrh r3,[r7,#14]
 1080 0080 0122     	 movs r2,#1
 1081 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1082 0086 FB81     	 strh r3,[r7,#14]
 484:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1083              	 .loc 1 485 0
 1084 0088 7B68     	 ldr r3,[r7,#4]
 1085 008a 9A6A     	 ldr r2,[r3,#40]
 1086 008c 7B68     	 ldr r3,[r7,#4]
 1087 008e DB6A     	 ldr r3,[r3,#44]
 1088 0090 D31A     	 subs r3,r2,r3
 1089 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1090 0096 FB68     	 ldr r3,[r7,#12]
 1091 0098 62F31203 	 bfi r3,r2,#0,#19
 1092 009c FB60     	 str r3,[r7,#12]
 1093 009e 2BE0     	 b .L67
 1094              	.L66:
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 487:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 488:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 489:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 1095              	 .loc 1 489 0
 1096 00a0 7B68     	 ldr r3,[r7,#4]
 1097 00a2 9A6A     	 ldr r2,[r3,#40]
 1098 00a4 7B68     	 ldr r3,[r7,#4]
 1099 00a6 DB6A     	 ldr r3,[r3,#44]
 1100 00a8 D31A     	 subs r3,r2,r3
 1101 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1102 00ae FB68     	 ldr r3,[r7,#12]
 1103 00b0 62F31203 	 bfi r3,r2,#0,#19
 1104 00b4 FB60     	 str r3,[r7,#12]
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1105              	 .loc 1 490 0
 1106 00b6 7B68     	 ldr r3,[r7,#4]
 1107 00b8 9B6A     	 ldr r3,[r3,#40]
 1108 00ba 9AB2     	 uxth r2,r3
 1109 00bc 7B68     	 ldr r3,[r7,#4]
 1110 00be DB6A     	 ldr r3,[r3,#44]
 1111 00c0 9BB2     	 uxth r3,r3
 1112 00c2 D31A     	 subs r3,r2,r3
 1113 00c4 9BB2     	 uxth r3,r3
 1114 00c6 1A46     	 mov r2,r3
 1115 00c8 7B68     	 ldr r3,[r7,#4]
 1116 00ca 5B68     	 ldr r3,[r3,#4]
 1117 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1118 00d0 DBB2     	 uxtb r3,r3
 1119 00d2 9BB2     	 uxth r3,r3
 1120 00d4 013B     	 subs r3,r3,#1
 1121 00d6 9BB2     	 uxth r3,r3
 1122 00d8 1344     	 add r3,r3,r2
 491:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 1123              	 .loc 1 491 0
 1124 00da 7A68     	 ldr r2,[r7,#4]
 1125 00dc 5268     	 ldr r2,[r2,#4]
 1126 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1127 00e2 D2B2     	 uxtb r2,r2
 490:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1128              	 .loc 1 490 0
 1129 00e4 93FBF2F3 	 sdiv r3,r3,r2
 1130 00e8 9BB2     	 uxth r3,r3
 1131 00ea C3F30903 	 ubfx r3,r3,#0,#10
 1132 00ee 9AB2     	 uxth r2,r3
 1133 00f0 FB89     	 ldrh r3,[r7,#14]
 1134 00f2 62F3CC03 	 bfi r3,r2,#3,#10
 1135 00f6 FB81     	 strh r3,[r7,#14]
 1136              	.L67:
 492:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 493:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1137              	 .loc 1 493 0
 1138 00f8 254B     	 ldr r3,.L69+4
 1139 00fa 1B68     	 ldr r3,[r3]
 1140 00fc 5B7B     	 ldrb r3,[r3,#13]
 1141 00fe 002B     	 cmp r3,#0
 1142 0100 0BD1     	 bne .L68
 494:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 495:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1143              	 .loc 1 496 0
 1144 0102 7B68     	 ldr r3,[r7,#4]
 1145 0104 1B78     	 ldrb r3,[r3]
 1146 0106 C3F30303 	 ubfx r3,r3,#0,#4
 1147 010a DBB2     	 uxtb r3,r3
 1148 010c 1F4A     	 ldr r2,.L69
 1149 010e 6A33     	 adds r3,r3,#106
 1150 0110 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1151 0114 7A68     	 ldr r2,[r7,#4]
 1152 0116 526A     	 ldr r2,[r2,#36]
 1153 0118 5A61     	 str r2,[r3,#20]
 1154              	.L68:
 497:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 498:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1155              	 .loc 1 498 0
 1156 011a 1D4B     	 ldr r3,.L69+4
 1157 011c 1B68     	 ldr r3,[r3]
 1158 011e 5B7B     	 ldrb r3,[r3,#13]
 1159 0120 012B     	 cmp r3,#1
 1160 0122 10D1     	 bne .L65
 499:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 500:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 1161              	 .loc 1 501 0
 1162 0124 194B     	 ldr r3,.L69
 1163 0126 D3F8A431 	 ldr r3,[r3,#420]
 1164 012a 184A     	 ldr r2,.L69
 1165 012c D2F8A421 	 ldr r2,[r2,#420]
 1166 0130 516B     	 ldr r1,[r2,#52]
 1167 0132 7A68     	 ldr r2,[r7,#4]
 1168 0134 1278     	 ldrb r2,[r2]
 1169 0136 C2F30302 	 ubfx r2,r2,#0,#4
 1170 013a D2B2     	 uxtb r2,r2
 1171 013c 1046     	 mov r0,r2
 1172 013e 0122     	 movs r2,#1
 1173 0140 8240     	 lsls r2,r2,r0
 1174 0142 0A43     	 orrs r2,r2,r1
 1175 0144 5A63     	 str r2,[r3,#52]
 1176              	.L65:
 502:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 503:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 504:../Libraries/XMCLib/src/xmc_usbd.c **** 
 505:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1177              	 .loc 1 506 0
 1178 0146 7B68     	 ldr r3,[r7,#4]
 1179 0148 1B78     	 ldrb r3,[r3]
 1180 014a C3F30303 	 ubfx r3,r3,#0,#4
 1181 014e DBB2     	 uxtb r3,r3
 1182 0150 0E4A     	 ldr r2,.L69
 1183 0152 6A33     	 adds r3,r3,#106
 1184 0154 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1185 0158 FA68     	 ldr r2,[r7,#12]
 1186 015a 1A61     	 str r2,[r3,#16]
 507:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1187              	 .loc 1 507 0
 1188 015c FB7A     	 ldrb r3,[r7,#11]
 1189 015e 43F08003 	 orr r3,r3,#128
 1190 0162 FB72     	 strb r3,[r7,#11]
 508:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1191              	 .loc 1 508 0
 1192 0164 FB7A     	 ldrb r3,[r7,#11]
 1193 0166 43F00403 	 orr r3,r3,#4
 1194 016a FB72     	 strb r3,[r7,#11]
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1195              	 .loc 1 509 0
 1196 016c 7B68     	 ldr r3,[r7,#4]
 1197 016e 1B78     	 ldrb r3,[r3]
 1198 0170 C3F30303 	 ubfx r3,r3,#0,#4
 1199 0174 DBB2     	 uxtb r3,r3
 1200 0176 054A     	 ldr r2,.L69
 1201 0178 6A33     	 adds r3,r3,#106
 1202 017a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1203 017e BA68     	 ldr r2,[r7,#8]
 1204 0180 1A60     	 str r2,[r3]
 510:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1205              	 .loc 1 510 0
 1206 0182 1437     	 adds r7,r7,#20
 1207              	 .cfi_def_cfa_offset 4
 1208 0184 BD46     	 mov sp,r7
 1209              	 .cfi_def_cfa_register 13
 1210              	 
 1211 0186 5DF8047B 	 ldr r7,[sp],#4
 1212              	 .cfi_restore 7
 1213              	 .cfi_def_cfa_offset 0
 1214 018a 7047     	 bx lr
 1215              	.L70:
 1216              	 .align 2
 1217              	.L69:
 1218 018c 00000000 	 .word xmc_device
 1219 0190 00000000 	 .word usbd_init
 1220              	 .cfi_endproc
 1221              	.LFE183:
 1223              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1224              	 .align 2
 1225              	 .thumb
 1226              	 .thumb_func
 1228              	XMC_USBD_lHandleUSBReset:
 1229              	.LFB184:
 511:../Libraries/XMCLib/src/xmc_usbd.c **** 
 512:../Libraries/XMCLib/src/xmc_usbd.c **** 
 513:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 514:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 516:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 520:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1230              	 .loc 1 521 0
 1231              	 .cfi_startproc
 1232              	 
 1233              	 
 1234 0000 80B5     	 push {r7,lr}
 1235              	 .cfi_def_cfa_offset 8
 1236              	 .cfi_offset 7,-8
 1237              	 .cfi_offset 14,-4
 1238 0002 88B0     	 sub sp,sp,#32
 1239              	 .cfi_def_cfa_offset 40
 1240 0004 00AF     	 add r7,sp,#0
 1241              	 .cfi_def_cfa_register 7
 1242 0006 7860     	 str r0,[r7,#4]
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 529:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1243              	 .loc 1 530 0
 1244 0008 4F4B     	 ldr r3,.L77
 1245 000a D3F8A431 	 ldr r3,[r3,#420]
 1246 000e 5B68     	 ldr r3,[r3,#4]
 1247 0010 7B61     	 str r3,[r7,#20]
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1248              	 .loc 1 531 0
 1249 0012 3B7D     	 ldrb r3,[r7,#20]
 1250 0014 43F00103 	 orr r3,r3,#1
 1251 0018 3B75     	 strb r3,[r7,#20]
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1252              	 .loc 1 532 0
 1253 001a 4B4B     	 ldr r3,.L77
 1254 001c D3F8A431 	 ldr r3,[r3,#420]
 1255 0020 7A69     	 ldr r2,[r7,#20]
 1256 0022 5A60     	 str r2,[r3,#4]
 533:../Libraries/XMCLib/src/xmc_usbd.c **** 
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 1257              	 .loc 1 535 0
 1258 0024 0023     	 movs r3,#0
 1259 0026 FB61     	 str r3,[r7,#28]
 1260 0028 1AE0     	 b .L72
 1261              	.L73:
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 537:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1262              	 .loc 1 537 0 discriminator 3
 1263 002a 474A     	 ldr r2,.L77
 1264 002c FB69     	 ldr r3,[r7,#28]
 1265 002e 7033     	 adds r3,r3,#112
 1266 0030 9B00     	 lsls r3,r3,#2
 1267 0032 1344     	 add r3,r3,r2
 1268 0034 5B68     	 ldr r3,[r3,#4]
 1269 0036 1B68     	 ldr r3,[r3]
 1270 0038 BB61     	 str r3,[r7,#24]
 538:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 1271              	 .loc 1 538 0 discriminator 3
 1272 003a FB7E     	 ldrb r3,[r7,#27]
 1273 003c 43F00803 	 orr r3,r3,#8
 1274 0040 FB76     	 strb r3,[r7,#27]
 539:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 1275              	 .loc 1 539 0 discriminator 3
 1276 0042 BB7E     	 ldrb r3,[r7,#26]
 1277 0044 6FF34513 	 bfc r3,#5,#1
 1278 0048 BB76     	 strb r3,[r7,#26]
 540:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1279              	 .loc 1 540 0 discriminator 3
 1280 004a 3F4A     	 ldr r2,.L77
 1281 004c FB69     	 ldr r3,[r7,#28]
 1282 004e 7033     	 adds r3,r3,#112
 1283 0050 9B00     	 lsls r3,r3,#2
 1284 0052 1344     	 add r3,r3,r2
 1285 0054 5B68     	 ldr r3,[r3,#4]
 1286 0056 BA69     	 ldr r2,[r7,#24]
 1287 0058 1A60     	 str r2,[r3]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1288              	 .loc 1 535 0 discriminator 3
 1289 005a FB69     	 ldr r3,[r7,#28]
 1290 005c 0133     	 adds r3,r3,#1
 1291 005e FB61     	 str r3,[r7,#28]
 1292              	.L72:
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1293              	 .loc 1 535 0 is_stmt 0 discriminator 1
 1294 0060 FB69     	 ldr r3,[r7,#28]
 1295 0062 062B     	 cmp r3,#6
 1296 0064 E1D9     	 bls .L73
 541:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 542:../Libraries/XMCLib/src/xmc_usbd.c **** 
 543:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1297              	 .loc 1 545 0 is_stmt 1
 1298 0066 384B     	 ldr r3,.L77
 1299 0068 D3F8A031 	 ldr r3,[r3,#416]
 1300 006c 4022     	 movs r2,#64
 1301 006e 5A62     	 str r2,[r3,#36]
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1302              	 .loc 1 547 0
 1303 0070 0023     	 movs r3,#0
 1304 0072 3B61     	 str r3,[r7,#16]
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1305              	 .loc 1 548 0
 1306 0074 1023     	 movs r3,#16
 1307 0076 7B82     	 strh r3,[r7,#18]
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1308              	 .loc 1 549 0
 1309 0078 4023     	 movs r3,#64
 1310 007a 3B82     	 strh r3,[r7,#16]
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1311              	 .loc 1 550 0
 1312 007c 324B     	 ldr r3,.L77
 1313 007e D3F8A031 	 ldr r3,[r3,#416]
 1314 0082 3A69     	 ldr r2,[r7,#16]
 1315 0084 9A62     	 str r2,[r3,#40]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 1316              	 .loc 1 552 0
 1317 0086 0123     	 movs r3,#1
 1318 0088 FB61     	 str r3,[r7,#28]
 1319 008a 11E0     	 b .L74
 1320              	.L75:
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 554:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 1321              	 .loc 1 554 0 discriminator 3
 1322 008c 2E4B     	 ldr r3,.L77
 1323 008e D3F8A011 	 ldr r1,[r3,#416]
 1324 0092 FB69     	 ldr r3,[r7,#28]
 1325 0094 013B     	 subs r3,r3,#1
 1326 0096 FA69     	 ldr r2,[r7,#28]
 1327 0098 0432     	 adds r2,r2,#4
 1328 009a 9201     	 lsls r2,r2,#6
 1329 009c 9208     	 lsrs r2,r2,#2
 1330 009e 42F48012 	 orr r2,r2,#1048576
 1331 00a2 4033     	 adds r3,r3,#64
 1332 00a4 9B00     	 lsls r3,r3,#2
 1333 00a6 0B44     	 add r3,r3,r1
 1334 00a8 5A60     	 str r2,[r3,#4]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1335              	 .loc 1 552 0 discriminator 3
 1336 00aa FB69     	 ldr r3,[r7,#28]
 1337 00ac 0133     	 adds r3,r3,#1
 1338 00ae FB61     	 str r3,[r7,#28]
 1339              	.L74:
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1340              	 .loc 1 552 0 is_stmt 0 discriminator 1
 1341 00b0 FB69     	 ldr r3,[r7,#28]
 1342 00b2 062B     	 cmp r3,#6
 1343 00b4 EAD9     	 bls .L75
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 556:../Libraries/XMCLib/src/xmc_usbd.c **** 
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1344              	 .loc 1 558 0 is_stmt 1
 1345 00b6 1020     	 movs r0,#16
 1346 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 559:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1347              	 .loc 1 559 0
 1348 00bc 0020     	 movs r0,#0
 1349 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1350              	 .loc 1 560 0
 1351 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1352              	 .loc 1 563 0
 1353 00c6 0023     	 movs r3,#0
 1354 00c8 FB60     	 str r3,[r7,#12]
 564:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1355              	 .loc 1 564 0
 1356 00ca 3B7B     	 ldrb r3,[r7,#12]
 1357 00cc 43F00103 	 orr r3,r3,#1
 1358 00d0 3B73     	 strb r3,[r7,#12]
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1359              	 .loc 1 565 0
 1360 00d2 BB7B     	 ldrb r3,[r7,#14]
 1361 00d4 43F00103 	 orr r3,r3,#1
 1362 00d8 BB73     	 strb r3,[r7,#14]
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1363              	 .loc 1 566 0
 1364 00da 1B4B     	 ldr r3,.L77
 1365 00dc D3F8A431 	 ldr r3,[r3,#420]
 1366 00e0 FA68     	 ldr r2,[r7,#12]
 1367 00e2 DA61     	 str r2,[r3,#28]
 567:../Libraries/XMCLib/src/xmc_usbd.c **** 
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1368              	 .loc 1 570 0
 1369 00e4 0F20     	 movs r0,#15
 1370 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 571:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../Libraries/XMCLib/src/xmc_usbd.c **** 
 573:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1371              	 .loc 1 574 0
 1372 00ea 0F20     	 movs r0,#15
 1373 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../Libraries/XMCLib/src/xmc_usbd.c **** 
 577:../Libraries/XMCLib/src/xmc_usbd.c **** 
 578:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1374              	 .loc 1 579 0
 1375 00f0 154B     	 ldr r3,.L77
 1376 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1377 00f6 1B68     	 ldr r3,[r3]
 1378 00f8 BB60     	 str r3,[r7,#8]
 580:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1379              	 .loc 1 580 0
 1380 00fa 3B89     	 ldrh r3,[r7,#8]
 1381 00fc 6FF30A13 	 bfc r3,#4,#7
 1382 0100 3B81     	 strh r3,[r7,#8]
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1383              	 .loc 1 581 0
 1384 0102 114B     	 ldr r3,.L77
 1385 0104 D3F8A431 	 ldr r3,[r3,#420]
 1386 0108 BA68     	 ldr r2,[r7,#8]
 1387 010a 1A60     	 str r2,[r3]
 582:../Libraries/XMCLib/src/xmc_usbd.c **** 
 583:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1388              	 .loc 1 583 0
 1389 010c 7B68     	 ldr r3,[r7,#4]
 1390 010e 5B7B     	 ldrb r3,[r3,#13]
 1391 0110 012B     	 cmp r3,#1
 1392 0112 04D1     	 bne .L76
 584:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 585:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1393              	 .loc 1 586 0
 1394 0114 0C4B     	 ldr r3,.L77
 1395 0116 D3F8A431 	 ldr r3,[r3,#420]
 1396 011a 0022     	 movs r2,#0
 1397 011c 5A63     	 str r2,[r3,#52]
 1398              	.L76:
 587:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 588:../Libraries/XMCLib/src/xmc_usbd.c **** 
 589:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1399              	 .loc 1 589 0
 1400 011e 0A4B     	 ldr r3,.L77
 1401 0120 5A68     	 ldr r2,[r3,#4]
 1402 0122 22F01002 	 bic r2,r2,#16
 1403 0126 5A60     	 str r2,[r3,#4]
 590:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1404              	 .loc 1 590 0
 1405 0128 074B     	 ldr r3,.L77
 1406 012a 5A68     	 ldr r2,[r3,#4]
 1407 012c 22F00802 	 bic r2,r2,#8
 1408 0130 5A60     	 str r2,[r3,#4]
 591:../Libraries/XMCLib/src/xmc_usbd.c **** 
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1409              	 .loc 1 592 0
 1410 0132 054B     	 ldr r3,.L77
 1411 0134 D3F80032 	 ldr r3,[r3,#512]
 1412 0138 0420     	 movs r0,#4
 1413 013a 9847     	 blx r3
 593:../Libraries/XMCLib/src/xmc_usbd.c **** 
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1414              	 .loc 1 595 0
 1415 013c 0420     	 movs r0,#4
 1416 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 596:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1417              	 .loc 1 596 0
 1418 0142 2037     	 adds r7,r7,#32
 1419              	 .cfi_def_cfa_offset 8
 1420 0144 BD46     	 mov sp,r7
 1421              	 .cfi_def_cfa_register 13
 1422              	 
 1423 0146 80BD     	 pop {r7,pc}
 1424              	.L78:
 1425              	 .align 2
 1426              	.L77:
 1427 0148 00000000 	 .word xmc_device
 1428              	 .cfi_endproc
 1429              	.LFE184:
 1431              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1432              	 .align 2
 1433              	 .thumb
 1434              	 .thumb_func
 1436              	XMC_USBD_lHandleOTGInt:
 1437              	.LFB185:
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 
 598:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 599:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../Libraries/XMCLib/src/xmc_usbd.c **** *
 601:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../Libraries/XMCLib/src/xmc_usbd.c **** */
 603:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1438              	 .loc 1 604 0
 1439              	 .cfi_startproc
 1440              	 
 1441              	 
 1442 0000 80B5     	 push {r7,lr}
 1443              	 .cfi_def_cfa_offset 8
 1444              	 .cfi_offset 7,-8
 1445              	 .cfi_offset 14,-4
 1446 0002 82B0     	 sub sp,sp,#8
 1447              	 .cfi_def_cfa_offset 16
 1448 0004 00AF     	 add r7,sp,#0
 1449              	 .cfi_def_cfa_register 7
 605:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1450              	 .loc 1 606 0
 1451 0006 0F4B     	 ldr r3,.L81
 1452 0008 D3F8A031 	 ldr r3,[r3,#416]
 1453 000c 5B68     	 ldr r3,[r3,#4]
 1454 000e 7B60     	 str r3,[r7,#4]
 607:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1455              	 .loc 1 607 0
 1456 0010 3B79     	 ldrb r3,[r7,#4]
 1457 0012 03F00403 	 and r3,r3,#4
 1458 0016 DBB2     	 uxtb r3,r3
 1459 0018 002B     	 cmp r3,#0
 1460 001a 0BD0     	 beq .L80
 608:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 609:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 1461              	 .loc 1 609 0
 1462 001c 094A     	 ldr r2,.L81
 1463 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1464 0022 6FF38203 	 bfc r3,#2,#1
 1465 0026 82F8FE31 	 strb r3,[r2,#510]
 610:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1466              	 .loc 1 610 0
 1467 002a 064B     	 ldr r3,.L81
 1468 002c D3F80032 	 ldr r3,[r3,#512]
 1469 0030 0120     	 movs r0,#1
 1470 0032 9847     	 blx r3
 1471              	.L80:
 611:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1472              	 .loc 1 612 0
 1473 0034 7B68     	 ldr r3,[r7,#4]
 1474 0036 1846     	 mov r0,r3
 1475 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 613:../Libraries/XMCLib/src/xmc_usbd.c **** 
 614:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1476              	 .loc 1 614 0
 1477 003c 0837     	 adds r7,r7,#8
 1478              	 .cfi_def_cfa_offset 8
 1479 003e BD46     	 mov sp,r7
 1480              	 .cfi_def_cfa_register 13
 1481              	 
 1482 0040 80BD     	 pop {r7,pc}
 1483              	.L82:
 1484 0042 00BF     	 .align 2
 1485              	.L81:
 1486 0044 00000000 	 .word xmc_device
 1487              	 .cfi_endproc
 1488              	.LFE185:
 1490              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1491              	 .align 2
 1492              	 .thumb
 1493              	 .thumb_func
 1495              	XMC_USBD_lHandleEnumDone:
 1496              	.LFB186:
 615:../Libraries/XMCLib/src/xmc_usbd.c **** 
 616:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 617:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 619:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 621:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1497              	 .loc 1 622 0
 1498              	 .cfi_startproc
 1499              	 
 1500              	 
 1501 0000 80B5     	 push {r7,lr}
 1502              	 .cfi_def_cfa_offset 8
 1503              	 .cfi_offset 7,-8
 1504              	 .cfi_offset 14,-4
 1505 0002 82B0     	 sub sp,sp,#8
 1506              	 .cfi_def_cfa_offset 16
 1507 0004 00AF     	 add r7,sp,#0
 1508              	 .cfi_def_cfa_register 7
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 1509              	 .loc 1 628 0
 1510 0006 1B4B     	 ldr r3,.L84
 1511 0008 D3F8A831 	 ldr r3,[r3,#424]
 1512 000c 1B68     	 ldr r3,[r3]
 1513 000e 7B60     	 str r3,[r7,#4]
 629:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1514              	 .loc 1 629 0
 1515 0010 BB88     	 ldrh r3,[r7,#4]
 1516 0012 6FF30A03 	 bfc r3,#0,#11
 1517 0016 BB80     	 strh r3,[r7,#4]
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1518              	 .loc 1 630 0
 1519 0018 164B     	 ldr r3,.L84
 1520 001a D3F8A831 	 ldr r3,[r3,#424]
 1521 001e 7A68     	 ldr r2,[r7,#4]
 1522 0020 1A60     	 str r2,[r3]
 631:../Libraries/XMCLib/src/xmc_usbd.c **** 
 632:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1523              	 .loc 1 633 0
 1524 0022 144A     	 ldr r2,.L84
 1525 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1526 0028 43F00103 	 orr r3,r3,#1
 1527 002c 82F8FE31 	 strb r3,[r2,#510]
 634:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1528              	 .loc 1 634 0
 1529 0030 104A     	 ldr r2,.L84
 1530 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1531 0036 43F00403 	 orr r3,r3,#4
 1532 003a 82F8FE31 	 strb r3,[r2,#510]
 635:../Libraries/XMCLib/src/xmc_usbd.c **** 
 636:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1533              	 .loc 1 636 0
 1534 003e 0D4B     	 ldr r3,.L84
 1535 0040 D3F80032 	 ldr r3,[r3,#512]
 1536 0044 0220     	 movs r0,#2
 1537 0046 9847     	 blx r3
 637:../Libraries/XMCLib/src/xmc_usbd.c **** 
 638:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1538              	 .loc 1 639 0
 1539 0048 0A4B     	 ldr r3,.L84
 1540 004a D3F8A031 	 ldr r3,[r3,#416]
 1541 004e DB68     	 ldr r3,[r3,#12]
 1542 0050 3B60     	 str r3,[r7]
 640:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1543              	 .loc 1 640 0
 1544 0052 7B78     	 ldrb r3,[r7,#1]
 1545 0054 0922     	 movs r2,#9
 1546 0056 62F38503 	 bfi r3,r2,#2,#4
 1547 005a 7B70     	 strb r3,[r7,#1]
 641:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1548              	 .loc 1 641 0
 1549 005c 054B     	 ldr r3,.L84
 1550 005e D3F8A031 	 ldr r3,[r3,#416]
 1551 0062 3A68     	 ldr r2,[r7]
 1552 0064 DA60     	 str r2,[r3,#12]
 642:../Libraries/XMCLib/src/xmc_usbd.c **** 
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1553              	 .loc 1 644 0
 1554 0066 0B20     	 movs r0,#11
 1555 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 645:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1556              	 .loc 1 645 0
 1557 006c 0837     	 adds r7,r7,#8
 1558              	 .cfi_def_cfa_offset 8
 1559 006e BD46     	 mov sp,r7
 1560              	 .cfi_def_cfa_register 13
 1561              	 
 1562 0070 80BD     	 pop {r7,pc}
 1563              	.L85:
 1564 0072 00BF     	 .align 2
 1565              	.L84:
 1566 0074 00000000 	 .word xmc_device
 1567              	 .cfi_endproc
 1568              	.LFE186:
 1570              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1571              	 .align 2
 1572              	 .thumb
 1573              	 .thumb_func
 1575              	XMC_USBD_lHandleOEPInt:
 1576              	.LFB187:
 646:../Libraries/XMCLib/src/xmc_usbd.c **** 
 647:../Libraries/XMCLib/src/xmc_usbd.c **** 
 648:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 649:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 651:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 654:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1577              	 .loc 1 655 0
 1578              	 .cfi_startproc
 1579              	 
 1580              	 
 1581 0000 80B5     	 push {r7,lr}
 1582              	 .cfi_def_cfa_offset 8
 1583              	 .cfi_offset 7,-8
 1584              	 .cfi_offset 14,-4
 1585 0002 8CB0     	 sub sp,sp,#48
 1586              	 .cfi_def_cfa_offset 56
 1587 0004 00AF     	 add r7,sp,#0
 1588              	 .cfi_def_cfa_register 7
 1589 0006 7860     	 str r0,[r7,#4]
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 667:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1590              	 .loc 1 667 0
 1591 0008 6A4B     	 ldr r3,.L97
 1592 000a D3F8A431 	 ldr r3,[r3,#420]
 1593 000e 9B69     	 ldr r3,[r3,#24]
 1594 0010 FB61     	 str r3,[r7,#28]
 668:../Libraries/XMCLib/src/xmc_usbd.c ****   
 669:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1595              	 .loc 1 669 0
 1596 0012 684B     	 ldr r3,.L97
 1597 0014 D3F8A431 	 ldr r3,[r3,#420]
 1598 0018 DB69     	 ldr r3,[r3,#28]
 1599 001a BB61     	 str r3,[r7,#24]
 670:../Libraries/XMCLib/src/xmc_usbd.c ****   
 671:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 1600              	 .loc 1 671 0
 1601 001c 654B     	 ldr r3,.L97
 1602 001e D3F8A431 	 ldr r3,[r3,#420]
 1603 0022 5B69     	 ldr r3,[r3,#20]
 1604 0024 7B61     	 str r3,[r7,#20]
 672:../Libraries/XMCLib/src/xmc_usbd.c ****   
 673:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1605              	 .loc 1 673 0
 1606 0026 FA8B     	 ldrh r2,[r7,#30]
 1607 0028 7B8B     	 ldrh r3,[r7,#26]
 1608 002a 1340     	 ands r3,r3,r2
 1609 002c BB85     	 strh r3,[r7,#44]
 674:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1610              	 .loc 1 674 0
 1611 002e 0023     	 movs r3,#0
 1612 0030 87F82F30 	 strb r3,[r7,#47]
 675:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1613              	 .loc 1 675 0
 1614 0034 0023     	 movs r3,#0
 1615 0036 FB60     	 str r3,[r7,#12]
 676:../Libraries/XMCLib/src/xmc_usbd.c ****  
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1616              	 .loc 1 677 0
 1617 0038 AEE0     	 b .L87
 1618              	.L96:
 678:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 679:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1619              	 .loc 1 679 0
 1620 003a BA8D     	 ldrh r2,[r7,#44]
 1621 003c 97F82F30 	 ldrb r3,[r7,#47]
 1622 0040 42FA03F3 	 asr r3,r2,r3
 1623 0044 7B85     	 strh r3,[r7,#42]
 680:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1624              	 .loc 1 680 0
 1625 0046 7B8D     	 ldrh r3,[r7,#42]
 1626 0048 03F00103 	 and r3,r3,#1
 1627 004c 3B85     	 strh r3,[r7,#40]
 681:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1628              	 .loc 1 681 0
 1629 004e 3B8D     	 ldrh r3,[r7,#40]
 1630 0050 002B     	 cmp r3,#0
 1631 0052 00F09C80 	 beq .L88
 682:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 683:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1632              	 .loc 1 684 0
 1633 0056 97F82F30 	 ldrb r3,[r7,#47]
 1634 005a 3422     	 movs r2,#52
 1635 005c 02FB03F3 	 mul r3,r2,r3
 1636 0060 544A     	 ldr r2,.L97
 1637 0062 1344     	 add r3,r3,r2
 1638 0064 7B62     	 str r3,[r7,#36]
 685:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1639              	 .loc 1 685 0
 1640 0066 97F82F30 	 ldrb r3,[r7,#47]
 1641 006a 524A     	 ldr r2,.L97
 1642 006c 7033     	 adds r3,r3,#112
 1643 006e 9B00     	 lsls r3,r3,#2
 1644 0070 1344     	 add r3,r3,r2
 1645 0072 5B68     	 ldr r3,[r3,#4]
 1646 0074 9A68     	 ldr r2,[r3,#8]
 1647 0076 7B69     	 ldr r3,[r7,#20]
 1648 0078 1340     	 ands r3,r3,r2
 1649 007a 3B61     	 str r3,[r7,#16]
 686:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1650              	 .loc 1 686 0
 1651 007c 7B68     	 ldr r3,[r7,#4]
 1652 007e 5B7B     	 ldrb r3,[r3,#13]
 1653 0080 002B     	 cmp r3,#0
 1654 0082 08D1     	 bne .L89
 687:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 688:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1655              	 .loc 1 688 0
 1656 0084 97F82F30 	 ldrb r3,[r7,#47]
 1657 0088 4A4A     	 ldr r2,.L97
 1658 008a 7033     	 adds r3,r3,#112
 1659 008c 9B00     	 lsls r3,r3,#2
 1660 008e 1344     	 add r3,r3,r2
 1661 0090 5B68     	 ldr r3,[r3,#4]
 1662 0092 1B69     	 ldr r3,[r3,#16]
 1663 0094 FB60     	 str r3,[r7,#12]
 1664              	.L89:
 689:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1665              	 .loc 1 691 0
 1666 0096 3B7C     	 ldrb r3,[r7,#16]
 1667 0098 03F00803 	 and r3,r3,#8
 1668 009c DBB2     	 uxtb r3,r3
 1669 009e 002B     	 cmp r3,#0
 1670 00a0 33D0     	 beq .L90
 692:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 693:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1671              	 .loc 1 694 0
 1672 00a2 7A6A     	 ldr r2,[r7,#36]
 1673 00a4 1379     	 ldrb r3,[r2,#4]
 1674 00a6 6FF34513 	 bfc r3,#5,#1
 1675 00aa 1371     	 strb r3,[r2,#4]
 695:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1676              	 .loc 1 695 0
 1677 00ac 7B68     	 ldr r3,[r7,#4]
 1678 00ae 5B7B     	 ldrb r3,[r3,#13]
 1679 00b0 002B     	 cmp r3,#0
 1680 00b2 0ED1     	 bne .L91
 696:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 697:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1681              	 .loc 1 699 0
 1682 00b4 07F10C03 	 add r3,r7,#12
 1683 00b8 DB78     	 ldrb r3,[r3,#3]
 1684 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1685 00be DBB2     	 uxtb r3,r3
 1686 00c0 1A46     	 mov r2,r3
 698:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1687              	 .loc 1 698 0
 1688 00c2 1346     	 mov r3,r2
 1689 00c4 5B07     	 lsls r3,r3,#29
 1690 00c6 9B1A     	 subs r3,r3,r2
 1691 00c8 DB00     	 lsls r3,r3,#3
 1692 00ca 03F11802 	 add r2,r3,#24
 1693 00ce 7B6A     	 ldr r3,[r7,#36]
 1694 00d0 1A61     	 str r2,[r3,#16]
 1695              	.L91:
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 701:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1696              	 .loc 1 701 0
 1697 00d2 7B68     	 ldr r3,[r7,#4]
 1698 00d4 5B7B     	 ldrb r3,[r3,#13]
 1699 00d6 012B     	 cmp r3,#1
 1700 00d8 06D1     	 bne .L92
 702:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 703:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 1701              	 .loc 1 703 0
 1702 00da 7B6A     	 ldr r3,[r7,#36]
 1703 00dc 1A69     	 ldr r2,[r3,#16]
 1704 00de 7B6A     	 ldr r3,[r7,#36]
 1705 00e0 DB6A     	 ldr r3,[r3,#44]
 1706 00e2 1A44     	 add r2,r2,r3
 1707 00e4 7B6A     	 ldr r3,[r7,#36]
 1708 00e6 1A61     	 str r2,[r3,#16]
 1709              	.L92:
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 705:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 1710              	 .loc 1 705 0
 1711 00e8 7B6A     	 ldr r3,[r7,#36]
 1712 00ea 5A68     	 ldr r2,[r3,#4]
 1713 00ec 22F01002 	 bic r2,r2,#16
 1714 00f0 5A60     	 str r2,[r3,#4]
 706:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1715              	 .loc 1 706 0
 1716 00f2 304B     	 ldr r3,.L97
 1717 00f4 D3F80432 	 ldr r3,[r3,#516]
 1718 00f8 0020     	 movs r0,#0
 1719 00fa 0021     	 movs r1,#0
 1720 00fc 9847     	 blx r3
 707:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 1721              	 .loc 1 708 0
 1722 00fe 97F82F30 	 ldrb r3,[r7,#47]
 1723 0102 0820     	 movs r0,#8
 1724 0104 1946     	 mov r1,r3
 1725 0106 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1726              	.L90:
 709:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 710:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1727              	 .loc 1 710 0
 1728 010a 3B7C     	 ldrb r3,[r7,#16]
 1729 010c 03F00103 	 and r3,r3,#1
 1730 0110 DBB2     	 uxtb r3,r3
 1731 0112 002B     	 cmp r3,#0
 1732 0114 34D0     	 beq .L93
 711:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1733              	 .loc 1 712 0
 1734 0116 7B68     	 ldr r3,[r7,#4]
 1735 0118 5B7B     	 ldrb r3,[r3,#13]
 1736 011a 002B     	 cmp r3,#0
 1737 011c 15D1     	 bne .L94
 1738              	.LBB3:
 713:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 714:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1739              	 .loc 1 714 0
 1740 011e 7B6A     	 ldr r3,[r7,#36]
 1741 0120 9A6A     	 ldr r2,[r3,#40]
 1742 0122 7B6A     	 ldr r3,[r7,#36]
 1743 0124 DB6A     	 ldr r3,[r3,#44]
 1744 0126 D31A     	 subs r3,r2,r3
 1745 0128 FA68     	 ldr r2,[r7,#12]
 1746 012a C2F31202 	 ubfx r2,r2,#0,#19
 1747 012e 9B1A     	 subs r3,r3,r2
 1748 0130 3B62     	 str r3,[r7,#32]
 715:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1749              	 .loc 1 715 0
 1750 0132 7B6A     	 ldr r3,[r7,#36]
 1751 0134 DA6A     	 ldr r2,[r3,#44]
 1752 0136 3B6A     	 ldr r3,[r7,#32]
 1753 0138 1A44     	 add r2,r2,r3
 1754 013a 7B6A     	 ldr r3,[r7,#36]
 1755 013c DA62     	 str r2,[r3,#44]
 716:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1756              	 .loc 1 716 0
 1757 013e 7B6A     	 ldr r3,[r7,#36]
 1758 0140 5A6A     	 ldr r2,[r3,#36]
 1759 0142 3B6A     	 ldr r3,[r7,#32]
 1760 0144 1A44     	 add r2,r2,r3
 1761 0146 7B6A     	 ldr r3,[r7,#36]
 1762 0148 5A62     	 str r2,[r3,#36]
 1763              	.L94:
 1764              	.LBE3:
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 718:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1765              	 .loc 1 718 0
 1766 014a 7B6A     	 ldr r3,[r7,#36]
 1767 014c 1A6B     	 ldr r2,[r3,#48]
 1768 014e 7B6A     	 ldr r3,[r7,#36]
 1769 0150 9B6A     	 ldr r3,[r3,#40]
 1770 0152 9A42     	 cmp r2,r3
 1771 0154 11D1     	 bne .L95
 719:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 720:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1772              	 .loc 1 720 0
 1773 0156 7B6A     	 ldr r3,[r7,#36]
 1774 0158 DA6A     	 ldr r2,[r3,#44]
 1775 015a 7B6A     	 ldr r3,[r7,#36]
 1776 015c 1A61     	 str r2,[r3,#16]
 721:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1777              	 .loc 1 721 0
 1778 015e 7B6A     	 ldr r3,[r7,#36]
 1779 0160 5A68     	 ldr r2,[r3,#4]
 1780 0162 22F01002 	 bic r2,r2,#16
 1781 0166 5A60     	 str r2,[r3,#4]
 722:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 1782              	 .loc 1 722 0
 1783 0168 124B     	 ldr r3,.L97
 1784 016a D3F80432 	 ldr r3,[r3,#516]
 1785 016e 97F82F20 	 ldrb r2,[r7,#47]
 1786 0172 1046     	 mov r0,r2
 1787 0174 0121     	 movs r1,#1
 1788 0176 9847     	 blx r3
 1789 0178 02E0     	 b .L93
 1790              	.L95:
 723:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 724:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 725:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 726:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1791              	 .loc 1 726 0
 1792 017a 786A     	 ldr r0,[r7,#36]
 1793 017c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1794              	.L93:
 727:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 728:../Libraries/XMCLib/src/xmc_usbd.c **** 
 729:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 730:../Libraries/XMCLib/src/xmc_usbd.c **** 
 731:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 1795              	 .loc 1 731 0
 1796 0180 3A69     	 ldr r2,[r7,#16]
 1797 0182 97F82F30 	 ldrb r3,[r7,#47]
 1798 0186 1046     	 mov r0,r2
 1799 0188 1946     	 mov r1,r3
 1800 018a FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1801              	.L88:
 732:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 733:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1802              	 .loc 1 733 0
 1803 018e 97F82F30 	 ldrb r3,[r7,#47]
 1804 0192 0133     	 adds r3,r3,#1
 1805 0194 87F82F30 	 strb r3,[r7,#47]
 1806              	.L87:
 677:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1807              	 .loc 1 677 0
 1808 0198 BA8D     	 ldrh r2,[r7,#44]
 1809 019a 97F82F30 	 ldrb r3,[r7,#47]
 1810 019e 42FA03F3 	 asr r3,r2,r3
 1811 01a2 002B     	 cmp r3,#0
 1812 01a4 7FF449AF 	 bne .L96
 734:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 735:../Libraries/XMCLib/src/xmc_usbd.c **** 
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 1813              	 .loc 1 737 0
 1814 01a8 0D20     	 movs r0,#13
 1815 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 738:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1816              	 .loc 1 738 0
 1817 01ae 3037     	 adds r7,r7,#48
 1818              	 .cfi_def_cfa_offset 8
 1819 01b0 BD46     	 mov sp,r7
 1820              	 .cfi_def_cfa_register 13
 1821              	 
 1822 01b2 80BD     	 pop {r7,pc}
 1823              	.L98:
 1824              	 .align 2
 1825              	.L97:
 1826 01b4 00000000 	 .word xmc_device
 1827              	 .cfi_endproc
 1828              	.LFE187:
 1830              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 1831              	 .align 2
 1832              	 .thumb
 1833              	 .thumb_func
 1835              	XMC_USBD_lHandleIEPInt:
 1836              	.LFB188:
 739:../Libraries/XMCLib/src/xmc_usbd.c **** 
 740:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 741:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 743:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 746:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1837              	 .loc 1 747 0
 1838              	 .cfi_startproc
 1839              	 
 1840              	 
 1841 0000 80B5     	 push {r7,lr}
 1842              	 .cfi_def_cfa_offset 8
 1843              	 .cfi_offset 7,-8
 1844              	 .cfi_offset 14,-4
 1845 0002 8CB0     	 sub sp,sp,#48
 1846              	 .cfi_def_cfa_offset 56
 1847 0004 00AF     	 add r7,sp,#0
 1848              	 .cfi_def_cfa_register 7
 1849 0006 7860     	 str r0,[r7,#4]
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 759:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1850              	 .loc 1 759 0
 1851 0008 6A4B     	 ldr r3,.L109
 1852 000a D3F8A431 	 ldr r3,[r3,#420]
 1853 000e 9B69     	 ldr r3,[r3,#24]
 1854 0010 7B61     	 str r3,[r7,#20]
 760:../Libraries/XMCLib/src/xmc_usbd.c ****   
 761:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 1855              	 .loc 1 761 0
 1856 0012 684B     	 ldr r3,.L109
 1857 0014 D3F8A431 	 ldr r3,[r3,#420]
 1858 0018 1B69     	 ldr r3,[r3,#16]
 1859 001a 3B61     	 str r3,[r7,#16]
 762:../Libraries/XMCLib/src/xmc_usbd.c ****   
 763:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 1860              	 .loc 1 763 0
 1861 001c 0023     	 movs r3,#0
 1862 001e BB60     	 str r3,[r7,#8]
 764:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 1863              	 .loc 1 764 0
 1864 0020 BB8A     	 ldrh r3,[r7,#20]
 1865 0022 BB85     	 strh r3,[r7,#44]
 765:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1866              	 .loc 1 765 0
 1867 0024 0023     	 movs r3,#0
 1868 0026 87F82F30 	 strb r3,[r7,#47]
 766:../Libraries/XMCLib/src/xmc_usbd.c ****   
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1869              	 .loc 1 767 0
 1870 002a B5E0     	 b .L100
 1871              	.L108:
 768:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 769:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 1872              	 .loc 1 769 0
 1873 002c BA8D     	 ldrh r2,[r7,#44]
 1874 002e 97F82F30 	 ldrb r3,[r7,#47]
 1875 0032 42FA03F3 	 asr r3,r2,r3
 1876 0036 7B85     	 strh r3,[r7,#42]
 770:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 1877              	 .loc 1 770 0
 1878 0038 7B8D     	 ldrh r3,[r7,#42]
 1879 003a 03F00103 	 and r3,r3,#1
 1880 003e 3B85     	 strh r3,[r7,#40]
 771:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 1881              	 .loc 1 771 0
 1882 0040 3B8D     	 ldrh r3,[r7,#40]
 1883 0042 002B     	 cmp r3,#0
 1884 0044 00F0A380 	 beq .L101
 772:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1885              	 .loc 1 773 0
 1886 0048 97F82F30 	 ldrb r3,[r7,#47]
 1887 004c 3422     	 movs r2,#52
 1888 004e 02FB03F3 	 mul r3,r2,r3
 1889 0052 584A     	 ldr r2,.L109
 1890 0054 1344     	 add r3,r3,r2
 1891 0056 7B62     	 str r3,[r7,#36]
 774:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 1892              	 .loc 1 774 0
 1893 0058 97F82F30 	 ldrb r3,[r7,#47]
 1894 005c 554A     	 ldr r2,.L109
 1895 005e 6A33     	 adds r3,r3,#106
 1896 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1897 0064 9B68     	 ldr r3,[r3,#8]
 1898 0066 3B62     	 str r3,[r7,#32]
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 1899              	 .loc 1 776 0
 1900 0068 524B     	 ldr r3,.L109
 1901 006a D3F8A431 	 ldr r3,[r3,#420]
 1902 006e 5B6B     	 ldr r3,[r3,#52]
 1903 0070 7A6A     	 ldr r2,[r7,#36]
 1904 0072 1278     	 ldrb r2,[r2]
 1905 0074 C2F30302 	 ubfx r2,r2,#0,#4
 1906 0078 D2B2     	 uxtb r2,r2
 1907 007a D340     	 lsrs r3,r3,r2
 777:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 1908              	 .loc 1 777 0
 1909 007c DB01     	 lsls r3,r3,#7
 1910 007e DAB2     	 uxtb r2,r3
 1911 0080 3B69     	 ldr r3,[r7,#16]
 1912 0082 1A43     	 orrs r2,r2,r3
 775:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 1913              	 .loc 1 775 0
 1914 0084 3B6A     	 ldr r3,[r7,#32]
 1915 0086 1340     	 ands r3,r3,r2
 1916 0088 FB60     	 str r3,[r7,#12]
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1917              	 .loc 1 778 0
 1918 008a 7B68     	 ldr r3,[r7,#4]
 1919 008c 5B7B     	 ldrb r3,[r3,#13]
 1920 008e 002B     	 cmp r3,#0
 1921 0090 07D1     	 bne .L102
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 780:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 1922              	 .loc 1 780 0
 1923 0092 97F82F30 	 ldrb r3,[r7,#47]
 1924 0096 474A     	 ldr r2,.L109
 1925 0098 6A33     	 adds r3,r3,#106
 1926 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1927 009e 1B69     	 ldr r3,[r3,#16]
 1928 00a0 BB60     	 str r3,[r7,#8]
 1929              	.L102:
 781:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 782:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1930              	 .loc 1 782 0
 1931 00a2 7B68     	 ldr r3,[r7,#4]
 1932 00a4 5B7B     	 ldrb r3,[r3,#13]
 1933 00a6 012B     	 cmp r3,#1
 1934 00a8 15D1     	 bne .L103
 783:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 784:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 1935              	 .loc 1 784 0
 1936 00aa 3B7B     	 ldrb r3,[r7,#12]
 1937 00ac 23F07F03 	 bic r3,r3,#127
 1938 00b0 DBB2     	 uxtb r3,r3
 1939 00b2 002B     	 cmp r3,#0
 1940 00b4 0FD0     	 beq .L103
 1941              	.LBB4:
 785:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 1942              	 .loc 1 787 0
 1943 00b6 786A     	 ldr r0,[r7,#36]
 1944 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 1945 00bc F861     	 str r0,[r7,#28]
 788:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1946              	 .loc 1 788 0
 1947 00be 7B6A     	 ldr r3,[r7,#36]
 1948 00c0 DA6A     	 ldr r2,[r3,#44]
 1949 00c2 FB69     	 ldr r3,[r7,#28]
 1950 00c4 1A44     	 add r2,r2,r3
 1951 00c6 7B6A     	 ldr r3,[r7,#36]
 1952 00c8 DA62     	 str r2,[r3,#44]
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1953              	 .loc 1 789 0
 1954 00ca 7B6A     	 ldr r3,[r7,#36]
 1955 00cc 5A6A     	 ldr r2,[r3,#36]
 1956 00ce FB69     	 ldr r3,[r7,#28]
 1957 00d0 1A44     	 add r2,r2,r3
 1958 00d2 7B6A     	 ldr r3,[r7,#36]
 1959 00d4 5A62     	 str r2,[r3,#36]
 1960              	.L103:
 1961              	.LBE4:
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 792:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 1962              	 .loc 1 792 0
 1963 00d6 3B7B     	 ldrb r3,[r7,#12]
 1964 00d8 03F00103 	 and r3,r3,#1
 1965 00dc DBB2     	 uxtb r3,r3
 1966 00de 002B     	 cmp r3,#0
 1967 00e0 4ED0     	 beq .L104
 793:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 794:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1968              	 .loc 1 794 0
 1969 00e2 7B68     	 ldr r3,[r7,#4]
 1970 00e4 5B7B     	 ldrb r3,[r3,#13]
 1971 00e6 002B     	 cmp r3,#0
 1972 00e8 1DD1     	 bne .L105
 795:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 1973              	 .loc 1 797 0
 1974 00ea 7A89     	 ldrh r2,[r7,#10]
 1975 00ec 41F6F873 	 movw r3,#8184
 1976 00f0 1340     	 ands r3,r3,r2
 1977 00f2 9BB2     	 uxth r3,r3
 1978 00f4 002B     	 cmp r3,#0
 1979 00f6 16D1     	 bne .L105
 1980              	 .loc 1 797 0 is_stmt 0 discriminator 1
 1981 00f8 BB68     	 ldr r3,[r7,#8]
 1982 00fa C3F31203 	 ubfx r3,r3,#0,#19
 1983 00fe 002B     	 cmp r3,#0
 1984 0100 11D1     	 bne .L105
 1985              	.LBB5:
 798:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 799:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 1986              	 .loc 1 799 0 is_stmt 1
 1987 0102 7B6A     	 ldr r3,[r7,#36]
 1988 0104 9A6A     	 ldr r2,[r3,#40]
 1989 0106 7B6A     	 ldr r3,[r7,#36]
 1990 0108 DB6A     	 ldr r3,[r3,#44]
 1991 010a D31A     	 subs r3,r2,r3
 1992 010c BB61     	 str r3,[r7,#24]
 800:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 1993              	 .loc 1 800 0
 1994 010e 7B6A     	 ldr r3,[r7,#36]
 1995 0110 DA6A     	 ldr r2,[r3,#44]
 1996 0112 BB69     	 ldr r3,[r7,#24]
 1997 0114 1A44     	 add r2,r2,r3
 1998 0116 7B6A     	 ldr r3,[r7,#36]
 1999 0118 DA62     	 str r2,[r3,#44]
 801:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2000              	 .loc 1 801 0
 2001 011a 7B6A     	 ldr r3,[r7,#36]
 2002 011c 5A6A     	 ldr r2,[r3,#36]
 2003 011e BB69     	 ldr r3,[r7,#24]
 2004 0120 1A44     	 add r2,r2,r3
 2005 0122 7B6A     	 ldr r3,[r7,#36]
 2006 0124 5A62     	 str r2,[r3,#36]
 2007              	.L105:
 2008              	.LBE5:
 802:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 804:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 2009              	 .loc 1 804 0
 2010 0126 7B6A     	 ldr r3,[r7,#36]
 2011 0128 1A6B     	 ldr r2,[r3,#48]
 2012 012a 7B6A     	 ldr r3,[r7,#36]
 2013 012c 9B6A     	 ldr r3,[r3,#40]
 2014 012e 9A42     	 cmp r2,r3
 2015 0130 23D1     	 bne .L106
 805:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 806:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2016              	 .loc 1 806 0
 2017 0132 7B6A     	 ldr r3,[r7,#36]
 2018 0134 5A68     	 ldr r2,[r3,#4]
 2019 0136 22F00802 	 bic r2,r2,#8
 2020 013a 5A60     	 str r2,[r3,#4]
 807:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2021              	 .loc 1 807 0
 2022 013c 7B68     	 ldr r3,[r7,#4]
 2023 013e 5B7B     	 ldrb r3,[r3,#13]
 2024 0140 012B     	 cmp r3,#1
 2025 0142 0ED1     	 bne .L107
 808:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 809:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2026              	 .loc 1 810 0
 2027 0144 1B4B     	 ldr r3,.L109
 2028 0146 D3F8A431 	 ldr r3,[r3,#420]
 811:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2029              	 .loc 1 811 0
 2030 014a 1A4A     	 ldr r2,.L109
 2031 014c D2F8A421 	 ldr r2,[r2,#420]
 2032 0150 516B     	 ldr r1,[r2,#52]
 2033 0152 97F82F20 	 ldrb r2,[r7,#47]
 2034 0156 0120     	 movs r0,#1
 2035 0158 00FA02F2 	 lsl r2,r0,r2
 2036 015c D243     	 mvns r2,r2
 2037 015e 0A40     	 ands r2,r2,r1
 810:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2038              	 .loc 1 810 0
 2039 0160 5A63     	 str r2,[r3,#52]
 2040              	.L107:
 812:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 813:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 2041              	 .loc 1 813 0
 2042 0162 144B     	 ldr r3,.L109
 2043 0164 D3F80432 	 ldr r3,[r3,#516]
 2044 0168 97F82F20 	 ldrb r2,[r7,#47]
 2045 016c 62F07F02 	 orn r2,r2,#127
 2046 0170 D2B2     	 uxtb r2,r2
 2047 0172 1046     	 mov r0,r2
 2048 0174 0221     	 movs r1,#2
 2049 0176 9847     	 blx r3
 2050 0178 02E0     	 b .L104
 2051              	.L106:
 814:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 815:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 816:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 817:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2052              	 .loc 1 818 0
 2053 017a 786A     	 ldr r0,[r7,#36]
 2054 017c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2055              	.L104:
 819:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 820:../Libraries/XMCLib/src/xmc_usbd.c **** 
 821:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 822:../Libraries/XMCLib/src/xmc_usbd.c **** 
 823:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 2056              	 .loc 1 823 0
 2057 0180 FA68     	 ldr r2,[r7,#12]
 2058 0182 97F82F30 	 ldrb r3,[r7,#47]
 2059 0186 1046     	 mov r0,r2
 2060 0188 1946     	 mov r1,r3
 2061 018a FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2062              	.L101:
 824:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 825:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2063              	 .loc 1 825 0
 2064 018e 97F82F30 	 ldrb r3,[r7,#47]
 2065 0192 0133     	 adds r3,r3,#1
 2066 0194 87F82F30 	 strb r3,[r7,#47]
 2067              	.L100:
 767:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2068              	 .loc 1 767 0
 2069 0198 BA8D     	 ldrh r2,[r7,#44]
 2070 019a 97F82F30 	 ldrb r3,[r7,#47]
 2071 019e 42FA03F3 	 asr r3,r2,r3
 2072 01a2 002B     	 cmp r3,#0
 2073 01a4 7FF442AF 	 bne .L108
 826:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2074              	 .loc 1 827 0
 2075 01a8 0E20     	 movs r0,#14
 2076 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 828:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2077              	 .loc 1 828 0
 2078 01ae 3037     	 adds r7,r7,#48
 2079              	 .cfi_def_cfa_offset 8
 2080 01b0 BD46     	 mov sp,r7
 2081              	 .cfi_def_cfa_register 13
 2082              	 
 2083 01b2 80BD     	 pop {r7,pc}
 2084              	.L110:
 2085              	 .align 2
 2086              	.L109:
 2087 01b4 00000000 	 .word xmc_device
 2088              	 .cfi_endproc
 2089              	.LFE188:
 2091              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2092              	 .align 2
 2093              	 .thumb
 2094              	 .thumb_func
 2096              	XMC_USBD_lHandleRxFLvl:
 2097              	.LFB189:
 829:../Libraries/XMCLib/src/xmc_usbd.c **** 
 830:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 831:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 833:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 835:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2098              	 .loc 1 836 0
 2099              	 .cfi_startproc
 2100              	 
 2101              	 
 2102 0000 80B5     	 push {r7,lr}
 2103              	 .cfi_def_cfa_offset 8
 2104              	 .cfi_offset 7,-8
 2105              	 .cfi_offset 14,-4
 2106 0002 82B0     	 sub sp,sp,#8
 2107              	 .cfi_def_cfa_offset 16
 2108 0004 00AF     	 add r7,sp,#0
 2109              	 .cfi_def_cfa_register 7
 837:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2110              	 .loc 1 838 0
 2111 0006 1D4B     	 ldr r3,.L121
 2112 0008 D3F8A031 	 ldr r3,[r3,#416]
 2113 000c 1B6A     	 ldr r3,[r3,#32]
 2114 000e 7B60     	 str r3,[r7,#4]
 839:../Libraries/XMCLib/src/xmc_usbd.c **** 
 840:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2115              	 .loc 1 840 0
 2116 0010 BB79     	 ldrb r3,[r7,#6]
 2117 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2118 0016 DBB2     	 uxtb r3,r3
 2119 0018 013B     	 subs r3,r3,#1
 2120 001a 052B     	 cmp r3,#5
 2121 001c 2AD8     	 bhi .L120
 2122 001e 01A2     	 adr r2,.L114
 2123 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2124              	 .p2align 2
 2125              	.L114:
 2126 0024 75000000 	 .word .L120+1
 2127 0028 3D000000 	 .word .L115+1
 2128 002c 75000000 	 .word .L120+1
 2129 0030 75000000 	 .word .L120+1
 2130 0034 75000000 	 .word .L120+1
 2131 0038 59000000 	 .word .L118+1
 2132              	 .p2align 1
 2133              	.L115:
 841:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 842:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 844:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 846:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2134              	 .loc 1 847 0
 2135 003c 3B79     	 ldrb r3,[r7,#4]
 2136 003e C3F30303 	 ubfx r3,r3,#0,#4
 2137 0042 DBB2     	 uxtb r3,r3
 2138 0044 1A46     	 mov r2,r3
 2139 0046 BB88     	 ldrh r3,[r7,#4]
 2140 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2141 004c 9BB2     	 uxth r3,r3
 2142 004e 1046     	 mov r0,r2
 2143 0050 1946     	 mov r1,r3
 2144 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 848:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2145              	 .loc 1 848 0
 2146 0056 0EE0     	 b .L111
 2147              	.L118:
 849:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2148              	 .loc 1 850 0
 2149 0058 3B79     	 ldrb r3,[r7,#4]
 2150 005a C3F30303 	 ubfx r3,r3,#0,#4
 2151 005e DBB2     	 uxtb r3,r3
 2152 0060 1A46     	 mov r2,r3
 2153 0062 BB88     	 ldrh r3,[r7,#4]
 2154 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2155 0068 9BB2     	 uxth r3,r3
 2156 006a 1046     	 mov r0,r2
 2157 006c 1946     	 mov r1,r3
 2158 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2159              	 .loc 1 851 0
 2160 0072 00E0     	 b .L111
 2161              	.L120:
 852:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 854:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 855:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2162              	 .loc 1 855 0
 2163 0074 00BF     	 nop
 2164              	.L111:
 856:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 857:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2165              	 .loc 1 858 0
 2166 0076 0837     	 adds r7,r7,#8
 2167              	 .cfi_def_cfa_offset 8
 2168 0078 BD46     	 mov sp,r7
 2169              	 .cfi_def_cfa_register 13
 2170              	 
 2171 007a 80BD     	 pop {r7,pc}
 2172              	.L122:
 2173              	 .align 2
 2174              	.L121:
 2175 007c 00000000 	 .word xmc_device
 2176              	 .cfi_endproc
 2177              	.LFE189:
 2179              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2180              	 .align 2
 2181              	 .global XMC_USBD_IRQHandler
 2182              	 .thumb
 2183              	 .thumb_func
 2185              	XMC_USBD_IRQHandler:
 2186              	.LFB190:
 859:../Libraries/XMCLib/src/xmc_usbd.c **** 
 860:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 861:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 863:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 866:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2187              	 .loc 1 867 0
 2188              	 .cfi_startproc
 2189              	 
 2190              	 
 2191 0000 80B5     	 push {r7,lr}
 2192              	 .cfi_def_cfa_offset 8
 2193              	 .cfi_offset 7,-8
 2194              	 .cfi_offset 14,-4
 2195 0002 84B0     	 sub sp,sp,#16
 2196              	 .cfi_def_cfa_offset 24
 2197 0004 00AF     	 add r7,sp,#0
 2198              	 .cfi_def_cfa_register 7
 2199 0006 7860     	 str r0,[r7,#4]
 868:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 871:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2200              	 .loc 1 871 0
 2201 0008 4F4B     	 ldr r3,.L135
 2202 000a D3F8A031 	 ldr r3,[r3,#416]
 2203 000e 9B69     	 ldr r3,[r3,#24]
 2204 0010 FB60     	 str r3,[r7,#12]
 872:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2205              	 .loc 1 872 0
 2206 0012 4D4B     	 ldr r3,.L135
 2207 0014 D3F8A031 	 ldr r3,[r3,#416]
 2208 0018 5A69     	 ldr r2,[r3,#20]
 2209 001a FB68     	 ldr r3,[r7,#12]
 2210 001c 1340     	 ands r3,r3,r2
 2211 001e BB60     	 str r3,[r7,#8]
 873:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 874:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2212              	 .loc 1 874 0
 2213 0020 3B7A     	 ldrb r3,[r7,#8]
 2214 0022 03F00803 	 and r3,r3,#8
 2215 0026 DBB2     	 uxtb r3,r3
 2216 0028 002B     	 cmp r3,#0
 2217 002a 07D0     	 beq .L124
 875:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2218              	 .loc 1 876 0
 2219 002c 464B     	 ldr r3,.L135
 2220 002e D3F80032 	 ldr r3,[r3,#512]
 2221 0032 0920     	 movs r0,#9
 2222 0034 9847     	 blx r3
 877:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2223              	 .loc 1 877 0
 2224 0036 0920     	 movs r0,#9
 2225 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2226              	.L124:
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2227              	 .loc 1 879 0
 2228 003c 7B68     	 ldr r3,[r7,#4]
 2229 003e 5B7B     	 ldrb r3,[r3,#13]
 2230 0040 012B     	 cmp r3,#1
 2231 0042 19D1     	 bne .L125
 880:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 881:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2232              	 .loc 1 881 0
 2233 0044 3B7A     	 ldrb r3,[r7,#8]
 2234 0046 03F01003 	 and r3,r3,#16
 2235 004a DBB2     	 uxtb r3,r3
 2236 004c 002B     	 cmp r3,#0
 2237 004e 13D0     	 beq .L125
 882:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 883:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2238              	 .loc 1 884 0
 2239 0050 3B7B     	 ldrb r3,[r7,#12]
 2240 0052 6FF30413 	 bfc r3,#4,#1
 2241 0056 3B73     	 strb r3,[r7,#12]
 885:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2242              	 .loc 1 885 0
 2243 0058 3B4B     	 ldr r3,.L135
 2244 005a D3F8A031 	 ldr r3,[r3,#416]
 2245 005e FA68     	 ldr r2,[r7,#12]
 2246 0060 9A61     	 str r2,[r3,#24]
 886:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2247              	 .loc 1 886 0
 2248 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 887:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2249              	 .loc 1 887 0
 2250 0066 3B7B     	 ldrb r3,[r7,#12]
 2251 0068 43F01003 	 orr r3,r3,#16
 2252 006c 3B73     	 strb r3,[r7,#12]
 888:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2253              	 .loc 1 888 0
 2254 006e 364B     	 ldr r3,.L135
 2255 0070 D3F8A031 	 ldr r3,[r3,#416]
 2256 0074 FA68     	 ldr r2,[r7,#12]
 2257 0076 9A61     	 str r2,[r3,#24]
 2258              	.L125:
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 890:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2259              	 .loc 1 891 0
 2260 0078 7B7A     	 ldrb r3,[r7,#9]
 2261 007a 03F00403 	 and r3,r3,#4
 2262 007e DBB2     	 uxtb r3,r3
 2263 0080 002B     	 cmp r3,#0
 2264 0082 02D0     	 beq .L126
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 893:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2265              	 .loc 1 893 0
 2266 0084 0A20     	 movs r0,#10
 2267 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2268              	.L126:
 894:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 895:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2269              	 .loc 1 895 0
 2270 008a 7B7A     	 ldrb r3,[r7,#9]
 2271 008c 03F00803 	 and r3,r3,#8
 2272 0090 DBB2     	 uxtb r3,r3
 2273 0092 002B     	 cmp r3,#0
 2274 0094 07D0     	 beq .L127
 896:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 897:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2275              	 .loc 1 897 0
 2276 0096 2C4B     	 ldr r3,.L135
 2277 0098 D3F80032 	 ldr r3,[r3,#512]
 2278 009c 0620     	 movs r0,#6
 2279 009e 9847     	 blx r3
 898:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2280              	 .loc 1 898 0
 2281 00a0 0620     	 movs r0,#6
 2282 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2283              	.L127:
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 900:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2284              	 .loc 1 900 0
 2285 00a6 FB7A     	 ldrb r3,[r7,#11]
 2286 00a8 23F07F03 	 bic r3,r3,#127
 2287 00ac DBB2     	 uxtb r3,r3
 2288 00ae 002B     	 cmp r3,#0
 2289 00b0 07D0     	 beq .L128
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 902:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2290              	 .loc 1 902 0
 2291 00b2 254B     	 ldr r3,.L135
 2292 00b4 D3F80032 	 ldr r3,[r3,#512]
 2293 00b8 0820     	 movs r0,#8
 2294 00ba 9847     	 blx r3
 903:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2295              	 .loc 1 903 0
 2296 00bc 0820     	 movs r0,#8
 2297 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2298              	.L128:
 904:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2299              	 .loc 1 905 0
 2300 00c2 FB7A     	 ldrb r3,[r7,#11]
 2301 00c4 03F04003 	 and r3,r3,#64
 2302 00c8 DBB2     	 uxtb r3,r3
 2303 00ca 002B     	 cmp r3,#0
 2304 00cc 0ED0     	 beq .L129
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 907:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2305              	 .loc 1 907 0
 2306 00ce 1E4A     	 ldr r2,.L135
 2307 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2308 00d4 43F00403 	 orr r3,r3,#4
 2309 00d8 82F8FE31 	 strb r3,[r2,#510]
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2310              	 .loc 1 908 0
 2311 00dc 1A4B     	 ldr r3,.L135
 2312 00de D3F80032 	 ldr r3,[r3,#512]
 2313 00e2 0020     	 movs r0,#0
 2314 00e4 9847     	 blx r3
 909:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2315              	 .loc 1 909 0
 2316 00e6 0020     	 movs r0,#0
 2317 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2318              	.L129:
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2319              	 .loc 1 911 0
 2320 00ec 7B7A     	 ldrb r3,[r7,#9]
 2321 00ee 03F01003 	 and r3,r3,#16
 2322 00f2 DBB2     	 uxtb r3,r3
 2323 00f4 002B     	 cmp r3,#0
 2324 00f6 02D0     	 beq .L130
 912:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 913:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2325              	 .loc 1 913 0
 2326 00f8 7868     	 ldr r0,[r7,#4]
 2327 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2328              	.L130:
 914:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2329              	 .loc 1 915 0
 2330 00fe 7B7A     	 ldrb r3,[r7,#9]
 2331 0100 03F02003 	 and r3,r3,#32
 2332 0104 DBB2     	 uxtb r3,r3
 2333 0106 002B     	 cmp r3,#0
 2334 0108 01D0     	 beq .L131
 916:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 917:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2335              	 .loc 1 917 0
 2336 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2337              	.L131:
 918:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 919:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2338              	 .loc 1 919 0
 2339 010e BB7A     	 ldrb r3,[r7,#10]
 2340 0110 03F00403 	 and r3,r3,#4
 2341 0114 DBB2     	 uxtb r3,r3
 2342 0116 002B     	 cmp r3,#0
 2343 0118 02D0     	 beq .L132
 920:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 921:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2344              	 .loc 1 921 0
 2345 011a 7868     	 ldr r0,[r7,#4]
 2346 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2347              	.L132:
 922:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 923:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2348              	 .loc 1 923 0
 2349 0120 BB7A     	 ldrb r3,[r7,#10]
 2350 0122 03F00803 	 and r3,r3,#8
 2351 0126 DBB2     	 uxtb r3,r3
 2352 0128 002B     	 cmp r3,#0
 2353 012a 02D0     	 beq .L133
 924:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 925:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 2354              	 .loc 1 925 0
 2355 012c 7868     	 ldr r0,[r7,#4]
 2356 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2357              	.L133:
 926:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 927:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 2358              	 .loc 1 927 0
 2359 0132 3B7A     	 ldrb r3,[r7,#8]
 2360 0134 03F00403 	 and r3,r3,#4
 2361 0138 DBB2     	 uxtb r3,r3
 2362 013a 002B     	 cmp r3,#0
 2363 013c 01D0     	 beq .L123
 928:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 929:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 2364              	 .loc 1 929 0
 2365 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2366              	.L123:
 930:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 931:../Libraries/XMCLib/src/xmc_usbd.c **** 
 932:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2367              	 .loc 1 932 0
 2368 0142 1037     	 adds r7,r7,#16
 2369              	 .cfi_def_cfa_offset 8
 2370 0144 BD46     	 mov sp,r7
 2371              	 .cfi_def_cfa_register 13
 2372              	 
 2373 0146 80BD     	 pop {r7,pc}
 2374              	.L136:
 2375              	 .align 2
 2376              	.L135:
 2377 0148 00000000 	 .word xmc_device
 2378              	 .cfi_endproc
 2379              	.LFE190:
 2381              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2382              	 .align 2
 2383              	 .global XMC_USBD_Enable
 2384              	 .thumb
 2385              	 .thumb_func
 2387              	XMC_USBD_Enable:
 2388              	.LFB191:
 933:../Libraries/XMCLib/src/xmc_usbd.c **** 
 934:../Libraries/XMCLib/src/xmc_usbd.c **** 
 935:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2389              	 .loc 1 942 0
 2390              	 .cfi_startproc
 2391              	 
 2392              	 
 2393 0000 80B5     	 push {r7,lr}
 2394              	 .cfi_def_cfa_offset 8
 2395              	 .cfi_offset 7,-8
 2396              	 .cfi_offset 14,-4
 2397 0002 00AF     	 add r7,sp,#0
 2398              	 .cfi_def_cfa_register 7
 943:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 945:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 946:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2399              	 .loc 1 947 0
 2400 0004 0248     	 ldr r0,.L138
 2401 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2402              	 .loc 1 948 0
 2403 000a FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 949:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2404              	 .loc 1 949 0
 2405 000e 80BD     	 pop {r7,pc}
 2406              	.L139:
 2407              	 .align 2
 2408              	.L138:
 2409 0010 80000020 	 .word 536871040
 2410              	 .cfi_endproc
 2411              	.LFE191:
 2413              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2414              	 .align 2
 2415              	 .global XMC_USBD_Disable
 2416              	 .thumb
 2417              	 .thumb_func
 2419              	XMC_USBD_Disable:
 2420              	.LFB192:
 950:../Libraries/XMCLib/src/xmc_usbd.c **** 
 951:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 952:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 954:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2421              	 .loc 1 955 0
 2422              	 .cfi_startproc
 2423              	 
 2424              	 
 2425 0000 80B5     	 push {r7,lr}
 2426              	 .cfi_def_cfa_offset 8
 2427              	 .cfi_offset 7,-8
 2428              	 .cfi_offset 14,-4
 2429 0002 00AF     	 add r7,sp,#0
 2430              	 .cfi_def_cfa_register 7
 956:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2431              	 .loc 1 957 0
 2432 0004 0248     	 ldr r0,.L141
 2433 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 958:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 960:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 961:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2434              	 .loc 1 961 0
 2435 000a FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 962:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2436              	 .loc 1 962 0
 2437 000e 80BD     	 pop {r7,pc}
 2438              	.L142:
 2439              	 .align 2
 2440              	.L141:
 2441 0010 80000020 	 .word 536871040
 2442              	 .cfi_endproc
 2443              	.LFE192:
 2445              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2446              	 .align 2
 2447              	 .global XMC_USBD_ClearEvent
 2448              	 .thumb
 2449              	 .thumb_func
 2451              	XMC_USBD_ClearEvent:
 2452              	.LFB193:
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 
 964:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 965:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 967:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2453              	 .loc 1 968 0
 2454              	 .cfi_startproc
 2455              	 
 2456              	 
 2457              	 
 2458 0000 80B4     	 push {r7}
 2459              	 .cfi_def_cfa_offset 4
 2460              	 .cfi_offset 7,-4
 2461 0002 85B0     	 sub sp,sp,#20
 2462              	 .cfi_def_cfa_offset 24
 2463 0004 00AF     	 add r7,sp,#0
 2464              	 .cfi_def_cfa_register 7
 2465 0006 0346     	 mov r3,r0
 2466 0008 FB71     	 strb r3,[r7,#7]
 969:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2467              	 .loc 1 970 0
 2468 000a 0023     	 movs r3,#0
 2469 000c FB60     	 str r3,[r7,#12]
 971:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 2470              	 .loc 1 971 0
 2471 000e FB79     	 ldrb r3,[r7,#7]
 2472 0010 0D2B     	 cmp r3,#13
 2473 0012 4CD8     	 bhi .L156
 2474 0014 01A2     	 adr r2,.L146
 2475 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2476 001a 00BF     	 .p2align 2
 2477              	.L146:
 2478 001c 55000000 	 .word .L145+1
 2479 0020 AF000000 	 .word .L156+1
 2480 0024 AF000000 	 .word .L156+1
 2481 0028 AF000000 	 .word .L156+1
 2482 002c 5F000000 	 .word .L147+1
 2483 0030 AF000000 	 .word .L156+1
 2484 0034 69000000 	 .word .L148+1
 2485 0038 73000000 	 .word .L149+1
 2486 003c 7D000000 	 .word .L150+1
 2487 0040 87000000 	 .word .L151+1
 2488 0044 91000000 	 .word .L152+1
 2489 0048 9B000000 	 .word .L153+1
 2490 004c AF000000 	 .word .L156+1
 2491 0050 A5000000 	 .word .L154+1
 2492              	 .p2align 1
 2493              	.L145:
 972:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 2494              	 .loc 1 974 0
 2495 0054 FB7B     	 ldrb r3,[r7,#15]
 2496 0056 43F04003 	 orr r3,r3,#64
 2497 005a FB73     	 strb r3,[r7,#15]
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2498              	 .loc 1 975 0
 2499 005c 28E0     	 b .L155
 2500              	.L147:
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 2501              	 .loc 1 977 0
 2502 005e 7B7B     	 ldrb r3,[r7,#13]
 2503 0060 43F01003 	 orr r3,r3,#16
 2504 0064 7B73     	 strb r3,[r7,#13]
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2505              	 .loc 1 978 0
 2506 0066 23E0     	 b .L155
 2507              	.L148:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 2508              	 .loc 1 980 0
 2509 0068 7B7B     	 ldrb r3,[r7,#13]
 2510 006a 43F00803 	 orr r3,r3,#8
 2511 006e 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2512              	 .loc 1 981 0
 2513 0070 1EE0     	 b .L155
 2514              	.L149:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2515              	 .loc 1 983 0
 2516 0072 FB7B     	 ldrb r3,[r7,#15]
 2517 0074 43F08003 	 orr r3,r3,#128
 2518 0078 FB73     	 strb r3,[r7,#15]
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2519              	 .loc 1 984 0
 2520 007a 19E0     	 b .L155
 2521              	.L150:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2522              	 .loc 1 986 0
 2523 007c FB7B     	 ldrb r3,[r7,#15]
 2524 007e 43F08003 	 orr r3,r3,#128
 2525 0082 FB73     	 strb r3,[r7,#15]
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2526              	 .loc 1 987 0
 2527 0084 14E0     	 b .L155
 2528              	.L151:
 988:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 2529              	 .loc 1 989 0
 2530 0086 3B7B     	 ldrb r3,[r7,#12]
 2531 0088 43F00803 	 orr r3,r3,#8
 2532 008c 3B73     	 strb r3,[r7,#12]
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2533              	 .loc 1 990 0
 2534 008e 0FE0     	 b .L155
 2535              	.L152:
 991:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 2536              	 .loc 1 992 0
 2537 0090 7B7B     	 ldrb r3,[r7,#13]
 2538 0092 43F00403 	 orr r3,r3,#4
 2539 0096 7B73     	 strb r3,[r7,#13]
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2540              	 .loc 1 993 0
 2541 0098 0AE0     	 b .L155
 2542              	.L153:
 994:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 2543              	 .loc 1 995 0
 2544 009a 7B7B     	 ldrb r3,[r7,#13]
 2545 009c 43F02003 	 orr r3,r3,#32
 2546 00a0 7B73     	 strb r3,[r7,#13]
 996:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2547              	 .loc 1 996 0
 2548 00a2 05E0     	 b .L155
 2549              	.L154:
 997:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 2550              	 .loc 1 998 0
 2551 00a4 BB7B     	 ldrb r3,[r7,#14]
 2552 00a6 43F00803 	 orr r3,r3,#8
 2553 00aa BB73     	 strb r3,[r7,#14]
 999:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2554              	 .loc 1 999 0
 2555 00ac 00E0     	 b .L155
 2556              	.L156:
1000:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
1001:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
 2557              	 .loc 1 1001 0
 2558 00ae 00BF     	 nop
 2559              	.L155:
1002:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
 2560              	 .loc 1 1003 0
 2561 00b0 044B     	 ldr r3,.L157
 2562 00b2 D3F8A031 	 ldr r3,[r3,#416]
 2563 00b6 FA68     	 ldr r2,[r7,#12]
 2564 00b8 5A61     	 str r2,[r3,#20]
1004:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2565              	 .loc 1 1004 0
 2566 00ba 1437     	 adds r7,r7,#20
 2567              	 .cfi_def_cfa_offset 4
 2568 00bc BD46     	 mov sp,r7
 2569              	 .cfi_def_cfa_register 13
 2570              	 
 2571 00be 5DF8047B 	 ldr r7,[sp],#4
 2572              	 .cfi_restore 7
 2573              	 .cfi_def_cfa_offset 0
 2574 00c2 7047     	 bx lr
 2575              	.L158:
 2576              	 .align 2
 2577              	.L157:
 2578 00c4 00000000 	 .word xmc_device
 2579              	 .cfi_endproc
 2580              	.LFE193:
 2582              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2583              	 .align 2
 2584              	 .thumb
 2585              	 .thumb_func
 2587              	XMC_USBD_lClearEventOTG:
 2588              	.LFB194:
1005:../Libraries/XMCLib/src/xmc_usbd.c **** 
1006:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1007:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1009:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2589              	 .loc 1 1010 0
 2590              	 .cfi_startproc
 2591              	 
 2592              	 
 2593              	 
 2594 0000 80B4     	 push {r7}
 2595              	 .cfi_def_cfa_offset 4
 2596              	 .cfi_offset 7,-4
 2597 0002 85B0     	 sub sp,sp,#20
 2598              	 .cfi_def_cfa_offset 24
 2599 0004 00AF     	 add r7,sp,#0
 2600              	 .cfi_def_cfa_register 7
 2601 0006 7860     	 str r0,[r7,#4]
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2602              	 .loc 1 1011 0
 2603 0008 0023     	 movs r3,#0
 2604 000a FB60     	 str r3,[r7,#12]
1012:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2605              	 .loc 1 1012 0
 2606 000c 7B68     	 ldr r3,[r7,#4]
 2607 000e FB60     	 str r3,[r7,#12]
1013:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2608              	 .loc 1 1013 0
 2609 0010 044B     	 ldr r3,.L160
 2610 0012 D3F8A031 	 ldr r3,[r3,#416]
 2611 0016 FA68     	 ldr r2,[r7,#12]
 2612 0018 5A60     	 str r2,[r3,#4]
1014:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2613              	 .loc 1 1014 0
 2614 001a 1437     	 adds r7,r7,#20
 2615              	 .cfi_def_cfa_offset 4
 2616 001c BD46     	 mov sp,r7
 2617              	 .cfi_def_cfa_register 13
 2618              	 
 2619 001e 5DF8047B 	 ldr r7,[sp],#4
 2620              	 .cfi_restore 7
 2621              	 .cfi_def_cfa_offset 0
 2622 0022 7047     	 bx lr
 2623              	.L161:
 2624              	 .align 2
 2625              	.L160:
 2626 0024 00000000 	 .word xmc_device
 2627              	 .cfi_endproc
 2628              	.LFE194:
 2630              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2631              	 .align 2
 2632              	 .global XMC_USBD_ClearEventINEP
 2633              	 .thumb
 2634              	 .thumb_func
 2636              	XMC_USBD_ClearEventINEP:
 2637              	.LFB195:
1015:../Libraries/XMCLib/src/xmc_usbd.c **** 
1016:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1017:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1019:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2638              	 .loc 1 1020 0
 2639              	 .cfi_startproc
 2640              	 
 2641              	 
 2642              	 
 2643 0000 80B4     	 push {r7}
 2644              	 .cfi_def_cfa_offset 4
 2645              	 .cfi_offset 7,-4
 2646 0002 85B0     	 sub sp,sp,#20
 2647              	 .cfi_def_cfa_offset 24
 2648 0004 00AF     	 add r7,sp,#0
 2649              	 .cfi_def_cfa_register 7
 2650 0006 7860     	 str r0,[r7,#4]
 2651 0008 0B46     	 mov r3,r1
 2652 000a FB70     	 strb r3,[r7,#3]
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2653              	 .loc 1 1022 0
 2654 000c 7B68     	 ldr r3,[r7,#4]
 2655 000e FB60     	 str r3,[r7,#12]
1023:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2656              	 .loc 1 1023 0
 2657 0010 FB78     	 ldrb r3,[r7,#3]
 2658 0012 054A     	 ldr r2,.L163
 2659 0014 6A33     	 adds r3,r3,#106
 2660 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2661 001a FA68     	 ldr r2,[r7,#12]
 2662 001c 9A60     	 str r2,[r3,#8]
1024:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2663              	 .loc 1 1024 0
 2664 001e 1437     	 adds r7,r7,#20
 2665              	 .cfi_def_cfa_offset 4
 2666 0020 BD46     	 mov sp,r7
 2667              	 .cfi_def_cfa_register 13
 2668              	 
 2669 0022 5DF8047B 	 ldr r7,[sp],#4
 2670              	 .cfi_restore 7
 2671              	 .cfi_def_cfa_offset 0
 2672 0026 7047     	 bx lr
 2673              	.L164:
 2674              	 .align 2
 2675              	.L163:
 2676 0028 00000000 	 .word xmc_device
 2677              	 .cfi_endproc
 2678              	.LFE195:
 2680              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2681              	 .align 2
 2682              	 .global XMC_USBD_ClearEventOUTEP
 2683              	 .thumb
 2684              	 .thumb_func
 2686              	XMC_USBD_ClearEventOUTEP:
 2687              	.LFB196:
1025:../Libraries/XMCLib/src/xmc_usbd.c **** 
1026:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1027:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1029:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2688              	 .loc 1 1030 0
 2689              	 .cfi_startproc
 2690              	 
 2691              	 
 2692              	 
 2693 0000 80B4     	 push {r7}
 2694              	 .cfi_def_cfa_offset 4
 2695              	 .cfi_offset 7,-4
 2696 0002 85B0     	 sub sp,sp,#20
 2697              	 .cfi_def_cfa_offset 24
 2698 0004 00AF     	 add r7,sp,#0
 2699              	 .cfi_def_cfa_register 7
 2700 0006 7860     	 str r0,[r7,#4]
 2701 0008 0B46     	 mov r3,r1
 2702 000a FB70     	 strb r3,[r7,#3]
1031:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2703              	 .loc 1 1032 0
 2704 000c 7B68     	 ldr r3,[r7,#4]
 2705 000e FB60     	 str r3,[r7,#12]
1033:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2706              	 .loc 1 1033 0
 2707 0010 FB78     	 ldrb r3,[r7,#3]
 2708 0012 064A     	 ldr r2,.L166
 2709 0014 7033     	 adds r3,r3,#112
 2710 0016 9B00     	 lsls r3,r3,#2
 2711 0018 1344     	 add r3,r3,r2
 2712 001a 5B68     	 ldr r3,[r3,#4]
 2713 001c FA68     	 ldr r2,[r7,#12]
 2714 001e 9A60     	 str r2,[r3,#8]
1034:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2715              	 .loc 1 1034 0
 2716 0020 1437     	 adds r7,r7,#20
 2717              	 .cfi_def_cfa_offset 4
 2718 0022 BD46     	 mov sp,r7
 2719              	 .cfi_def_cfa_register 13
 2720              	 
 2721 0024 5DF8047B 	 ldr r7,[sp],#4
 2722              	 .cfi_restore 7
 2723              	 .cfi_def_cfa_offset 0
 2724 0028 7047     	 bx lr
 2725              	.L167:
 2726 002a 00BF     	 .align 2
 2727              	.L166:
 2728 002c 00000000 	 .word xmc_device
 2729              	 .cfi_endproc
 2730              	.LFE196:
 2732              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2733              	 .align 2
 2734              	 .global XMC_USBD_EnableEventOUTEP
 2735              	 .thumb
 2736              	 .thumb_func
 2738              	XMC_USBD_EnableEventOUTEP:
 2739              	.LFB197:
1035:../Libraries/XMCLib/src/xmc_usbd.c **** 
1036:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1037:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1039:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2740              	 .loc 1 1040 0
 2741              	 .cfi_startproc
 2742              	 
 2743              	 
 2744              	 
 2745 0000 80B4     	 push {r7}
 2746              	 .cfi_def_cfa_offset 4
 2747              	 .cfi_offset 7,-4
 2748 0002 85B0     	 sub sp,sp,#20
 2749              	 .cfi_def_cfa_offset 24
 2750 0004 00AF     	 add r7,sp,#0
 2751              	 .cfi_def_cfa_register 7
 2752 0006 7860     	 str r0,[r7,#4]
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
 2753              	 .loc 1 1042 0
 2754 0008 7B68     	 ldr r3,[r7,#4]
 2755 000a FB60     	 str r3,[r7,#12]
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
 2756              	 .loc 1 1043 0
 2757 000c 074B     	 ldr r3,.L169
 2758 000e D3F8A431 	 ldr r3,[r3,#420]
 2759 0012 064A     	 ldr r2,.L169
 2760 0014 D2F8A421 	 ldr r2,[r2,#420]
 2761 0018 5169     	 ldr r1,[r2,#20]
 2762 001a FA68     	 ldr r2,[r7,#12]
 2763 001c 0A43     	 orrs r2,r2,r1
 2764 001e 5A61     	 str r2,[r3,#20]
1044:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2765              	 .loc 1 1044 0
 2766 0020 1437     	 adds r7,r7,#20
 2767              	 .cfi_def_cfa_offset 4
 2768 0022 BD46     	 mov sp,r7
 2769              	 .cfi_def_cfa_register 13
 2770              	 
 2771 0024 5DF8047B 	 ldr r7,[sp],#4
 2772              	 .cfi_restore 7
 2773              	 .cfi_def_cfa_offset 0
 2774 0028 7047     	 bx lr
 2775              	.L170:
 2776 002a 00BF     	 .align 2
 2777              	.L169:
 2778 002c 00000000 	 .word xmc_device
 2779              	 .cfi_endproc
 2780              	.LFE197:
 2782              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2783              	 .align 2
 2784              	 .global XMC_USBD_EnableEventINEP
 2785              	 .thumb
 2786              	 .thumb_func
 2788              	XMC_USBD_EnableEventINEP:
 2789              	.LFB198:
1045:../Libraries/XMCLib/src/xmc_usbd.c **** 
1046:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1047:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1049:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2790              	 .loc 1 1050 0
 2791              	 .cfi_startproc
 2792              	 
 2793              	 
 2794              	 
 2795 0000 80B4     	 push {r7}
 2796              	 .cfi_def_cfa_offset 4
 2797              	 .cfi_offset 7,-4
 2798 0002 85B0     	 sub sp,sp,#20
 2799              	 .cfi_def_cfa_offset 24
 2800 0004 00AF     	 add r7,sp,#0
 2801              	 .cfi_def_cfa_register 7
 2802 0006 7860     	 str r0,[r7,#4]
1051:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
 2803              	 .loc 1 1052 0
 2804 0008 7B68     	 ldr r3,[r7,#4]
 2805 000a FB60     	 str r3,[r7,#12]
1053:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
 2806              	 .loc 1 1053 0
 2807 000c 074B     	 ldr r3,.L172
 2808 000e D3F8A431 	 ldr r3,[r3,#420]
 2809 0012 064A     	 ldr r2,.L172
 2810 0014 D2F8A421 	 ldr r2,[r2,#420]
 2811 0018 1169     	 ldr r1,[r2,#16]
 2812 001a FA68     	 ldr r2,[r7,#12]
 2813 001c 0A43     	 orrs r2,r2,r1
 2814 001e 1A61     	 str r2,[r3,#16]
1054:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2815              	 .loc 1 1054 0
 2816 0020 1437     	 adds r7,r7,#20
 2817              	 .cfi_def_cfa_offset 4
 2818 0022 BD46     	 mov sp,r7
 2819              	 .cfi_def_cfa_register 13
 2820              	 
 2821 0024 5DF8047B 	 ldr r7,[sp],#4
 2822              	 .cfi_restore 7
 2823              	 .cfi_def_cfa_offset 0
 2824 0028 7047     	 bx lr
 2825              	.L173:
 2826 002a 00BF     	 .align 2
 2827              	.L172:
 2828 002c 00000000 	 .word xmc_device
 2829              	 .cfi_endproc
 2830              	.LFE198:
 2832              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 2833              	 .align 2
 2834              	 .global XMC_USBD_GetCapabilities
 2835              	 .thumb
 2836              	 .thumb_func
 2838              	XMC_USBD_GetCapabilities:
 2839              	.LFB199:
1055:../Libraries/XMCLib/src/xmc_usbd.c **** 
1056:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1057:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1059:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2840              	 .loc 1 1060 0
 2841              	 .cfi_startproc
 2842              	 
 2843              	 
 2844              	 
 2845 0000 80B4     	 push {r7}
 2846              	 .cfi_def_cfa_offset 4
 2847              	 .cfi_offset 7,-4
 2848 0002 83B0     	 sub sp,sp,#12
 2849              	 .cfi_def_cfa_offset 16
 2850 0004 00AF     	 add r7,sp,#0
 2851              	 .cfi_def_cfa_register 7
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
 2852              	 .loc 1 1061 0
 2853 0006 0023     	 movs r3,#0
 2854 0008 7B60     	 str r3,[r7,#4]
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 2855              	 .loc 1 1062 0
 2856 000a 3B79     	 ldrb r3,[r7,#4]
 2857 000c 43F00403 	 orr r3,r3,#4
 2858 0010 3B71     	 strb r3,[r7,#4]
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 2859              	 .loc 1 1063 0
 2860 0012 3B79     	 ldrb r3,[r7,#4]
 2861 0014 43F00803 	 orr r3,r3,#8
 2862 0018 3B71     	 strb r3,[r7,#4]
1064:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
 2863              	 .loc 1 1065 0
 2864 001a 3B79     	 ldrb r3,[r7,#4]
 2865 001c 43F00203 	 orr r3,r3,#2
 2866 0020 3B71     	 strb r3,[r7,#4]
1066:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
 2867              	 .loc 1 1066 0
 2868 0022 3B79     	 ldrb r3,[r7,#4]
 2869 0024 43F00103 	 orr r3,r3,#1
 2870 0028 3B71     	 strb r3,[r7,#4]
1067:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1068:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
1069:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
1070:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1071:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 2871              	 .loc 1 1071 0
 2872 002a 3B79     	 ldrb r3,[r7,#4]
 2873 002c 6FF34513 	 bfc r3,#5,#1
 2874 0030 3B71     	 strb r3,[r7,#4]
1072:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 2875              	 .loc 1 1072 0
 2876 0032 7B79     	 ldrb r3,[r7,#5]
 2877 0034 43F00103 	 orr r3,r3,#1
 2878 0038 7B71     	 strb r3,[r7,#5]
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 2879              	 .loc 1 1073 0
 2880 003a 3B79     	 ldrb r3,[r7,#4]
 2881 003c 43F01003 	 orr r3,r3,#16
 2882 0040 3B71     	 strb r3,[r7,#4]
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 2883              	 .loc 1 1074 0
 2884 0042 3B79     	 ldrb r3,[r7,#4]
 2885 0044 43F08003 	 orr r3,r3,#128
 2886 0048 3B71     	 strb r3,[r7,#4]
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 2887              	 .loc 1 1075 0
 2888 004a 3B79     	 ldrb r3,[r7,#4]
 2889 004c 43F04003 	 orr r3,r3,#64
 2890 0050 3B71     	 strb r3,[r7,#4]
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 2891              	 .loc 1 1076 0
 2892 0052 7B68     	 ldr r3,[r7,#4]
 2893 0054 6FF35F23 	 bfc r3,#9,#23
 2894 0058 7B60     	 str r3,[r7,#4]
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 2895              	 .loc 1 1077 0
 2896 005a 7B68     	 ldr r3,[r7,#4]
1078:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2897              	 .loc 1 1078 0
 2898 005c 1846     	 mov r0,r3
 2899 005e 0C37     	 adds r7,r7,#12
 2900              	 .cfi_def_cfa_offset 4
 2901 0060 BD46     	 mov sp,r7
 2902              	 .cfi_def_cfa_register 13
 2903              	 
 2904 0062 5DF8047B 	 ldr r7,[sp],#4
 2905              	 .cfi_restore 7
 2906              	 .cfi_def_cfa_offset 0
 2907 0066 7047     	 bx lr
 2908              	 .cfi_endproc
 2909              	.LFE199:
 2911              	 .section .text.XMC_USBD_Init,"ax",%progbits
 2912              	 .align 2
 2913              	 .global XMC_USBD_Init
 2914              	 .thumb
 2915              	 .thumb_func
 2917              	XMC_USBD_Init:
 2918              	.LFB200:
1079:../Libraries/XMCLib/src/xmc_usbd.c **** 
1080:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1081:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1083:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2919              	 .loc 1 1084 0
 2920              	 .cfi_startproc
 2921              	 
 2922              	 
 2923 0000 80B5     	 push {r7,lr}
 2924              	 .cfi_def_cfa_offset 8
 2925              	 .cfi_offset 7,-8
 2926              	 .cfi_offset 14,-4
 2927 0002 8AB0     	 sub sp,sp,#40
 2928              	 .cfi_def_cfa_offset 48
 2929 0004 00AF     	 add r7,sp,#0
 2930              	 .cfi_def_cfa_register 7
 2931 0006 7860     	 str r0,[r7,#4]
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 2932              	 .loc 1 1096 0
 2933 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1097:../Libraries/XMCLib/src/xmc_usbd.c ****   
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 2934              	 .loc 1 1098 0
 2935 000c 874A     	 ldr r2,.L189
 2936 000e 7B68     	 ldr r3,[r7,#4]
 2937 0010 1360     	 str r3,[r2]
1099:../Libraries/XMCLib/src/xmc_usbd.c **** 
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 2938              	 .loc 1 1101 0
 2939 0012 0023     	 movs r3,#0
 2940 0014 7B62     	 str r3,[r7,#36]
 2941 0016 0CE0     	 b .L177
 2942              	.L178:
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1103:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 2943              	 .loc 1 1103 0 discriminator 3
 2944 0018 854A     	 ldr r2,.L189+4
 2945 001a 7B6A     	 ldr r3,[r7,#36]
 2946 001c 4021     	 movs r1,#64
 2947 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 2948              	 .loc 1 1104 0 discriminator 3
 2949 0022 844A     	 ldr r2,.L189+8
 2950 0024 7B6A     	 ldr r3,[r7,#36]
 2951 0026 4021     	 movs r1,#64
 2952 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2953              	 .loc 1 1101 0 discriminator 3
 2954 002c 7B6A     	 ldr r3,[r7,#36]
 2955 002e 0133     	 adds r3,r3,#1
 2956 0030 7B62     	 str r3,[r7,#36]
 2957              	.L177:
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2958              	 .loc 1 1101 0 is_stmt 0 discriminator 1
 2959 0032 7B6A     	 ldr r3,[r7,#36]
 2960 0034 062B     	 cmp r3,#6
 2961 0036 EFD9     	 bls .L178
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1106:../Libraries/XMCLib/src/xmc_usbd.c **** 
1107:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
 2962              	 .loc 1 1108 0 is_stmt 1
 2963 0038 7F48     	 ldr r0,.L189+12
 2964 003a 0021     	 movs r1,#0
 2965 003c 4FF40272 	 mov r2,#520
 2966 0040 FFF7FEFF 	 bl memset
1109:../Libraries/XMCLib/src/xmc_usbd.c **** 
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 2967              	 .loc 1 1111 0
 2968 0044 7B68     	 ldr r3,[r7,#4]
 2969 0046 5B68     	 ldr r3,[r3,#4]
 2970 0048 7B4A     	 ldr r2,.L189+12
 2971 004a C2F80032 	 str r3,[r2,#512]
1112:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 2972              	 .loc 1 1112 0
 2973 004e 7B68     	 ldr r3,[r7,#4]
 2974 0050 9B68     	 ldr r3,[r3,#8]
 2975 0052 794A     	 ldr r2,.L189+12
 2976 0054 C2F80432 	 str r3,[r2,#516]
1113:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 2977              	 .loc 1 1113 0
 2978 0058 7B68     	 ldr r3,[r7,#4]
 2979 005a 1B68     	 ldr r3,[r3]
 2980 005c 3B62     	 str r3,[r7,#32]
1114:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
 2981              	 .loc 1 1115 0
 2982 005e 7B68     	 ldr r3,[r7,#4]
 2983 0060 1B68     	 ldr r3,[r3]
 2984 0062 754A     	 ldr r2,.L189+12
 2985 0064 C2F8A031 	 str r3,[r2,#416]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 2986              	 .loc 1 1116 0
 2987 0068 3B6A     	 ldr r3,[r7,#32]
 2988 006a 03F50063 	 add r3,r3,#2048
 2989 006e 724A     	 ldr r2,.L189+12
 2990 0070 C2F8A431 	 str r3,[r2,#420]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 2991              	 .loc 1 1117 0
 2992 0074 0023     	 movs r3,#0
 2993 0076 7B62     	 str r3,[r7,#36]
 2994 0078 0CE0     	 b .L179
 2995              	.L180:
1118:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
 2996              	 .loc 1 1119 0 discriminator 3
 2997 007a 7B6A     	 ldr r3,[r7,#36]
 2998 007c 4833     	 adds r3,r3,#72
 2999 007e 5B01     	 lsls r3,r3,#5
 3000 0080 3A6A     	 ldr r2,[r7,#32]
 3001 0082 1A44     	 add r2,r2,r3
 3002 0084 6C49     	 ldr r1,.L189+12
 3003 0086 7B6A     	 ldr r3,[r7,#36]
 3004 0088 6A33     	 adds r3,r3,#106
 3005 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3006              	 .loc 1 1117 0 discriminator 3
 3007 008e 7B6A     	 ldr r3,[r7,#36]
 3008 0090 0133     	 adds r3,r3,#1
 3009 0092 7B62     	 str r3,[r7,#36]
 3010              	.L179:
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3011              	 .loc 1 1117 0 is_stmt 0 discriminator 1
 3012 0094 7B6A     	 ldr r3,[r7,#36]
 3013 0096 062B     	 cmp r3,#6
 3014 0098 EFD9     	 bls .L180
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3015              	 .loc 1 1122 0 is_stmt 1
 3016 009a 0023     	 movs r3,#0
 3017 009c 7B62     	 str r3,[r7,#36]
 3018 009e 0DE0     	 b .L181
 3019              	.L182:
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3020              	 .loc 1 1125 0 discriminator 3
 3021 00a0 7B6A     	 ldr r3,[r7,#36]
 3022 00a2 5833     	 adds r3,r3,#88
 3023 00a4 5B01     	 lsls r3,r3,#5
 3024 00a6 3A6A     	 ldr r2,[r7,#32]
 3025 00a8 1A44     	 add r2,r2,r3
1124:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3026              	 .loc 1 1124 0 discriminator 3
 3027 00aa 6349     	 ldr r1,.L189+12
 3028 00ac 7B6A     	 ldr r3,[r7,#36]
 3029 00ae 7033     	 adds r3,r3,#112
 3030 00b0 9B00     	 lsls r3,r3,#2
 3031 00b2 0B44     	 add r3,r3,r1
 3032 00b4 5A60     	 str r2,[r3,#4]
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3033              	 .loc 1 1122 0 discriminator 3
 3034 00b6 7B6A     	 ldr r3,[r7,#36]
 3035 00b8 0133     	 adds r3,r3,#1
 3036 00ba 7B62     	 str r3,[r7,#36]
 3037              	.L181:
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3038              	 .loc 1 1122 0 is_stmt 0 discriminator 1
 3039 00bc 7B6A     	 ldr r3,[r7,#36]
 3040 00be 062B     	 cmp r3,#6
 3041 00c0 EED9     	 bls .L182
1126:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
 3042              	 .loc 1 1128 0 is_stmt 1
 3043 00c2 0023     	 movs r3,#0
 3044 00c4 7B62     	 str r3,[r7,#36]
 3045 00c6 0CE0     	 b .L183
 3046              	.L184:
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3047              	 .loc 1 1131 0 discriminator 3
 3048 00c8 7B6A     	 ldr r3,[r7,#36]
 3049 00ca 0133     	 adds r3,r3,#1
 3050 00cc 1B03     	 lsls r3,r3,#12
 3051 00ce 3A6A     	 ldr r2,[r7,#32]
 3052 00d0 1A44     	 add r2,r2,r3
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3053              	 .loc 1 1130 0 discriminator 3
 3054 00d2 5949     	 ldr r1,.L189+12
 3055 00d4 7B6A     	 ldr r3,[r7,#36]
 3056 00d6 7833     	 adds r3,r3,#120
 3057 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3058              	 .loc 1 1128 0 discriminator 3
 3059 00dc 7B6A     	 ldr r3,[r7,#36]
 3060 00de 0133     	 adds r3,r3,#1
 3061 00e0 7B62     	 str r3,[r7,#36]
 3062              	.L183:
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3063              	 .loc 1 1128 0 is_stmt 0 discriminator 1
 3064 00e2 7B6A     	 ldr r3,[r7,#36]
 3065 00e4 062B     	 cmp r3,#6
 3066 00e6 EFD9     	 bls .L184
1132:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3067              	 .loc 1 1137 0 is_stmt 1
 3068 00e8 534B     	 ldr r3,.L189+12
 3069 00ea D3F8A031 	 ldr r3,[r3,#416]
 3070 00ee 9B68     	 ldr r3,[r3,#8]
 3071 00f0 FB61     	 str r3,[r7,#28]
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3072              	 .loc 1 1138 0
 3073 00f2 3B7F     	 ldrb r3,[r7,#28]
 3074 00f4 43F00103 	 orr r3,r3,#1
 3075 00f8 3B77     	 strb r3,[r7,#28]
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3076              	 .loc 1 1139 0
 3077 00fa 3B7F     	 ldrb r3,[r7,#28]
 3078 00fc 43F08003 	 orr r3,r3,#128
 3079 0100 3B77     	 strb r3,[r7,#28]
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3080              	 .loc 1 1140 0
 3081 0102 7B68     	 ldr r3,[r7,#4]
 3082 0104 5B7B     	 ldrb r3,[r3,#13]
 3083 0106 002B     	 cmp r3,#0
 3084 0108 04D1     	 bne .L185
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1142:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3085              	 .loc 1 1143 0
 3086 010a 3B7F     	 ldrb r3,[r7,#28]
 3087 010c 43F02003 	 orr r3,r3,#32
 3088 0110 3B77     	 strb r3,[r7,#28]
 3089 0112 03E0     	 b .L186
 3090              	.L185:
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1147:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3091              	 .loc 1 1147 0
 3092 0114 3B7F     	 ldrb r3,[r7,#28]
 3093 0116 6FF34513 	 bfc r3,#5,#1
 3094 011a 3B77     	 strb r3,[r7,#28]
 3095              	.L186:
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3096              	 .loc 1 1149 0
 3097 011c 464B     	 ldr r3,.L189+12
 3098 011e D3F8A031 	 ldr r3,[r3,#416]
 3099 0122 FA69     	 ldr r2,[r7,#28]
 3100 0124 9A60     	 str r2,[r3,#8]
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
 3101              	 .loc 1 1151 0
 3102 0126 444B     	 ldr r3,.L189+12
 3103 0128 D3F8A031 	 ldr r3,[r3,#416]
 3104 012c DB68     	 ldr r3,[r3,#12]
 3105 012e BB61     	 str r3,[r7,#24]
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3106              	 .loc 1 1152 0
 3107 0130 FB7E     	 ldrb r3,[r7,#27]
 3108 0132 43F04003 	 orr r3,r3,#64
 3109 0136 FB76     	 strb r3,[r7,#27]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3110              	 .loc 1 1153 0
 3111 0138 7B7E     	 ldrb r3,[r7,#25]
 3112 013a 43F00103 	 orr r3,r3,#1
 3113 013e 7B76     	 strb r3,[r7,#25]
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3114              	 .loc 1 1154 0
 3115 0140 3D4B     	 ldr r3,.L189+12
 3116 0142 D3F8A031 	 ldr r3,[r3,#416]
 3117 0146 BA69     	 ldr r2,[r7,#24]
 3118 0148 DA60     	 str r2,[r3,#12]
1155:../Libraries/XMCLib/src/xmc_usbd.c **** 
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3119              	 .loc 1 1158 0
 3120 014a 3B4B     	 ldr r3,.L189+12
 3121 014c D3F8A431 	 ldr r3,[r3,#420]
 3122 0150 1B68     	 ldr r3,[r3]
 3123 0152 7B61     	 str r3,[r7,#20]
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3124              	 .loc 1 1159 0
 3125 0154 3B7D     	 ldrb r3,[r7,#20]
 3126 0156 43F00303 	 orr r3,r3,#3
 3127 015a 3B75     	 strb r3,[r7,#20]
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3128              	 .loc 1 1160 0
 3129 015c BB7D     	 ldrb r3,[r7,#22]
 3130 015e 6FF3C713 	 bfc r3,#7,#1
 3131 0162 BB75     	 strb r3,[r7,#22]
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3132              	 .loc 1 1161 0
 3133 0164 344B     	 ldr r3,.L189+12
 3134 0166 D3F8A431 	 ldr r3,[r3,#420]
 3135 016a 7A69     	 ldr r2,[r7,#20]
 3136 016c 1A60     	 str r2,[r3]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3137              	 .loc 1 1163 0
 3138 016e 324B     	 ldr r3,.L189+12
 3139 0170 D3F8A431 	 ldr r3,[r3,#420]
 3140 0174 5B68     	 ldr r3,[r3,#4]
 3141 0176 3B61     	 str r3,[r7,#16]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3142              	 .loc 1 1164 0
 3143 0178 3B7C     	 ldrb r3,[r7,#16]
 3144 017a 43F00203 	 orr r3,r3,#2
 3145 017e 3B74     	 strb r3,[r7,#16]
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3146              	 .loc 1 1166 0
 3147 0180 2D4B     	 ldr r3,.L189+12
 3148 0182 D3F8A431 	 ldr r3,[r3,#420]
 3149 0186 3A69     	 ldr r2,[r7,#16]
 3150 0188 5A60     	 str r2,[r3,#4]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3151              	 .loc 1 1168 0
 3152 018a 1020     	 movs r0,#16
 3153 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3154              	 .loc 1 1169 0
 3155 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3156              	 .loc 1 1172 0
 3157 0194 284B     	 ldr r3,.L189+12
 3158 0196 D3F8A031 	 ldr r3,[r3,#416]
 3159 019a 0022     	 movs r2,#0
 3160 019c 9A61     	 str r2,[r3,#24]
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3161              	 .loc 1 1173 0
 3162 019e 264B     	 ldr r3,.L189+12
 3163 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3164 01a4 4FF0FF32 	 mov r2,#-1
 3165 01a8 5A61     	 str r2,[r3,#20]
1174:../Libraries/XMCLib/src/xmc_usbd.c ****  
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3166              	 .loc 1 1175 0
 3167 01aa 0023     	 movs r3,#0
 3168 01ac FB60     	 str r3,[r7,#12]
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3169              	 .loc 1 1177 0
 3170 01ae 3B7B     	 ldrb r3,[r7,#12]
 3171 01b0 43F00203 	 orr r3,r3,#2
 3172 01b4 3B73     	 strb r3,[r7,#12]
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3173              	 .loc 1 1178 0
 3174 01b6 3B7B     	 ldrb r3,[r7,#12]
 3175 01b8 43F00403 	 orr r3,r3,#4
 3176 01bc 3B73     	 strb r3,[r7,#12]
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3177              	 .loc 1 1179 0
 3178 01be FB7B     	 ldrb r3,[r7,#15]
 3179 01c0 43F04003 	 orr r3,r3,#64
 3180 01c4 FB73     	 strb r3,[r7,#15]
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3181              	 .loc 1 1181 0
 3182 01c6 7B7B     	 ldrb r3,[r7,#13]
 3183 01c8 43F01003 	 orr r3,r3,#16
 3184 01cc 7B73     	 strb r3,[r7,#13]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3185              	 .loc 1 1182 0
 3186 01ce 7B7B     	 ldrb r3,[r7,#13]
 3187 01d0 43F02003 	 orr r3,r3,#32
 3188 01d4 7B73     	 strb r3,[r7,#13]
1183:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3189              	 .loc 1 1183 0
 3190 01d6 7B7B     	 ldrb r3,[r7,#13]
 3191 01d8 43F00403 	 orr r3,r3,#4
 3192 01dc 7B73     	 strb r3,[r7,#13]
1184:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3193              	 .loc 1 1184 0
 3194 01de 7B7B     	 ldrb r3,[r7,#13]
 3195 01e0 43F00803 	 orr r3,r3,#8
 3196 01e4 7B73     	 strb r3,[r7,#13]
1185:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3197              	 .loc 1 1185 0
 3198 01e6 FB7B     	 ldrb r3,[r7,#15]
 3199 01e8 43F08003 	 orr r3,r3,#128
 3200 01ec FB73     	 strb r3,[r7,#15]
1186:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3201              	 .loc 1 1186 0
 3202 01ee 3B7B     	 ldrb r3,[r7,#12]
 3203 01f0 43F00803 	 orr r3,r3,#8
 3204 01f4 3B73     	 strb r3,[r7,#12]
1187:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3205              	 .loc 1 1187 0
 3206 01f6 7B68     	 ldr r3,[r7,#4]
 3207 01f8 5B7B     	 ldrb r3,[r3,#13]
 3208 01fa 012B     	 cmp r3,#1
 3209 01fc 03D1     	 bne .L187
1188:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1189:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3210              	 .loc 1 1189 0
 3211 01fe 3B7B     	 ldrb r3,[r7,#12]
 3212 0200 43F01003 	 orr r3,r3,#16
 3213 0204 3B73     	 strb r3,[r7,#12]
 3214              	.L187:
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3215              	 .loc 1 1191 0
 3216 0206 BB7B     	 ldrb r3,[r7,#14]
 3217 0208 43F00803 	 orr r3,r3,#8
 3218 020c BB73     	 strb r3,[r7,#14]
1192:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3219              	 .loc 1 1192 0
 3220 020e BB7B     	 ldrb r3,[r7,#14]
 3221 0210 43F00403 	 orr r3,r3,#4
 3222 0214 BB73     	 strb r3,[r7,#14]
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3223              	 .loc 1 1193 0
 3224 0216 084B     	 ldr r3,.L189+12
 3225 0218 D3F8A031 	 ldr r3,[r3,#416]
 3226 021c FA68     	 ldr r2,[r7,#12]
 3227 021e 9A61     	 str r2,[r3,#24]
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3228              	 .loc 1 1194 0
 3229 0220 0023     	 movs r3,#0
1195:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3230              	 .loc 1 1195 0
 3231 0222 1846     	 mov r0,r3
 3232 0224 2837     	 adds r7,r7,#40
 3233              	 .cfi_def_cfa_offset 8
 3234 0226 BD46     	 mov sp,r7
 3235              	 .cfi_def_cfa_register 13
 3236              	 
 3237 0228 80BD     	 pop {r7,pc}
 3238              	.L190:
 3239 022a 00BF     	 .align 2
 3240              	.L189:
 3241 022c 00000000 	 .word usbd_init
 3242 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3243 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3244 0238 00000000 	 .word xmc_device
 3245              	 .cfi_endproc
 3246              	.LFE200:
 3248              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3249              	 .align 2
 3250              	 .global XMC_USBD_Uninitialize
 3251              	 .thumb
 3252              	 .thumb_func
 3254              	XMC_USBD_Uninitialize:
 3255              	.LFB201:
1196:../Libraries/XMCLib/src/xmc_usbd.c **** 
1197:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1198:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1200:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3256              	 .loc 1 1201 0
 3257              	 .cfi_startproc
 3258              	 
 3259              	 
 3260 0000 80B5     	 push {r7,lr}
 3261              	 .cfi_def_cfa_offset 8
 3262              	 .cfi_offset 7,-8
 3263              	 .cfi_offset 14,-4
 3264 0002 82B0     	 sub sp,sp,#8
 3265              	 .cfi_def_cfa_offset 16
 3266 0004 00AF     	 add r7,sp,#0
 3267              	 .cfi_def_cfa_register 7
1202:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3268              	 .loc 1 1204 0
 3269 0006 0C4B     	 ldr r3,.L193
 3270 0008 D3F8A431 	 ldr r3,[r3,#420]
 3271 000c 5B68     	 ldr r3,[r3,#4]
 3272 000e 7B60     	 str r3,[r7,#4]
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3273              	 .loc 1 1205 0
 3274 0010 3B79     	 ldrb r3,[r7,#4]
 3275 0012 43F00203 	 orr r3,r3,#2
 3276 0016 3B71     	 strb r3,[r7,#4]
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3277              	 .loc 1 1206 0
 3278 0018 074B     	 ldr r3,.L193
 3279 001a D3F8A431 	 ldr r3,[r3,#420]
 3280 001e 7A68     	 ldr r2,[r7,#4]
 3281 0020 5A60     	 str r2,[r3,#4]
1207:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
 3282              	 .loc 1 1208 0
 3283 0022 0548     	 ldr r0,.L193
 3284 0024 0021     	 movs r1,#0
 3285 0026 4FF40272 	 mov r2,#520
 3286 002a FFF7FEFF 	 bl memset
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3287              	 .loc 1 1209 0
 3288 002e 0023     	 movs r3,#0
1210:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3289              	 .loc 1 1210 0
 3290 0030 1846     	 mov r0,r3
 3291 0032 0837     	 adds r7,r7,#8
 3292              	 .cfi_def_cfa_offset 8
 3293 0034 BD46     	 mov sp,r7
 3294              	 .cfi_def_cfa_register 13
 3295              	 
 3296 0036 80BD     	 pop {r7,pc}
 3297              	.L194:
 3298              	 .align 2
 3299              	.L193:
 3300 0038 00000000 	 .word xmc_device
 3301              	 .cfi_endproc
 3302              	.LFE201:
 3304              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3305              	 .align 2
 3306              	 .global XMC_USBD_DeviceConnect
 3307              	 .thumb
 3308              	 .thumb_func
 3310              	XMC_USBD_DeviceConnect:
 3311              	.LFB202:
1211:../Libraries/XMCLib/src/xmc_usbd.c **** 
1212:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1213:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1215:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3312              	 .loc 1 1216 0
 3313              	 .cfi_startproc
 3314              	 
 3315              	 
 3316              	 
 3317 0000 80B4     	 push {r7}
 3318              	 .cfi_def_cfa_offset 4
 3319              	 .cfi_offset 7,-4
 3320 0002 83B0     	 sub sp,sp,#12
 3321              	 .cfi_def_cfa_offset 16
 3322 0004 00AF     	 add r7,sp,#0
 3323              	 .cfi_def_cfa_register 7
1217:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3324              	 .loc 1 1219 0
 3325 0006 0A4B     	 ldr r3,.L197
 3326 0008 D3F8A431 	 ldr r3,[r3,#420]
 3327 000c 5B68     	 ldr r3,[r3,#4]
 3328 000e 7B60     	 str r3,[r7,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3329              	 .loc 1 1220 0
 3330 0010 3B79     	 ldrb r3,[r7,#4]
 3331 0012 6FF34103 	 bfc r3,#1,#1
 3332 0016 3B71     	 strb r3,[r7,#4]
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3333              	 .loc 1 1221 0
 3334 0018 054B     	 ldr r3,.L197
 3335 001a D3F8A431 	 ldr r3,[r3,#420]
 3336 001e 7A68     	 ldr r2,[r7,#4]
 3337 0020 5A60     	 str r2,[r3,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3338              	 .loc 1 1222 0
 3339 0022 0023     	 movs r3,#0
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3340              	 .loc 1 1223 0
 3341 0024 1846     	 mov r0,r3
 3342 0026 0C37     	 adds r7,r7,#12
 3343              	 .cfi_def_cfa_offset 4
 3344 0028 BD46     	 mov sp,r7
 3345              	 .cfi_def_cfa_register 13
 3346              	 
 3347 002a 5DF8047B 	 ldr r7,[sp],#4
 3348              	 .cfi_restore 7
 3349              	 .cfi_def_cfa_offset 0
 3350 002e 7047     	 bx lr
 3351              	.L198:
 3352              	 .align 2
 3353              	.L197:
 3354 0030 00000000 	 .word xmc_device
 3355              	 .cfi_endproc
 3356              	.LFE202:
 3358              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3359              	 .align 2
 3360              	 .global XMC_USBD_DeviceDisconnect
 3361              	 .thumb
 3362              	 .thumb_func
 3364              	XMC_USBD_DeviceDisconnect:
 3365              	.LFB203:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3366              	 .loc 1 1229 0
 3367              	 .cfi_startproc
 3368              	 
 3369              	 
 3370              	 
 3371 0000 80B4     	 push {r7}
 3372              	 .cfi_def_cfa_offset 4
 3373              	 .cfi_offset 7,-4
 3374 0002 83B0     	 sub sp,sp,#12
 3375              	 .cfi_def_cfa_offset 16
 3376 0004 00AF     	 add r7,sp,#0
 3377              	 .cfi_def_cfa_register 7
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3378              	 .loc 1 1231 0
 3379 0006 0A4B     	 ldr r3,.L201
 3380 0008 D3F8A431 	 ldr r3,[r3,#420]
 3381 000c 5B68     	 ldr r3,[r3,#4]
 3382 000e 7B60     	 str r3,[r7,#4]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3383              	 .loc 1 1232 0
 3384 0010 3B79     	 ldrb r3,[r7,#4]
 3385 0012 43F00203 	 orr r3,r3,#2
 3386 0016 3B71     	 strb r3,[r7,#4]
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3387              	 .loc 1 1233 0
 3388 0018 054B     	 ldr r3,.L201
 3389 001a D3F8A431 	 ldr r3,[r3,#420]
 3390 001e 7A68     	 ldr r2,[r7,#4]
 3391 0020 5A60     	 str r2,[r3,#4]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3392              	 .loc 1 1234 0
 3393 0022 0023     	 movs r3,#0
1235:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3394              	 .loc 1 1235 0
 3395 0024 1846     	 mov r0,r3
 3396 0026 0C37     	 adds r7,r7,#12
 3397              	 .cfi_def_cfa_offset 4
 3398 0028 BD46     	 mov sp,r7
 3399              	 .cfi_def_cfa_register 13
 3400              	 
 3401 002a 5DF8047B 	 ldr r7,[sp],#4
 3402              	 .cfi_restore 7
 3403              	 .cfi_def_cfa_offset 0
 3404 002e 7047     	 bx lr
 3405              	.L202:
 3406              	 .align 2
 3407              	.L201:
 3408 0030 00000000 	 .word xmc_device
 3409              	 .cfi_endproc
 3410              	.LFE203:
 3412              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3413              	 .align 2
 3414              	 .global XMC_USBD_DeviceGetState
 3415              	 .thumb
 3416              	 .thumb_func
 3418              	XMC_USBD_DeviceGetState:
 3419              	.LFB204:
1236:../Libraries/XMCLib/src/xmc_usbd.c **** 
1237:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1238:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1240:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3420              	 .loc 1 1241 0
 3421              	 .cfi_startproc
 3422              	 
 3423              	 
 3424 0000 80B5     	 push {r7,lr}
 3425              	 .cfi_def_cfa_offset 8
 3426              	 .cfi_offset 7,-8
 3427              	 .cfi_offset 14,-4
 3428 0002 84B0     	 sub sp,sp,#16
 3429              	 .cfi_def_cfa_offset 24
 3430 0004 00AF     	 add r7,sp,#0
 3431              	 .cfi_def_cfa_register 7
 3432 0006 7860     	 str r0,[r7,#4]
1242:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 3433              	 .loc 1 1242 0
 3434 0008 0023     	 movs r3,#0
 3435 000a FB60     	 str r3,[r7,#12]
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3436              	 .loc 1 1243 0
 3437 000c 3B7B     	 ldrb r3,[r7,#12]
 3438 000e 0122     	 movs r2,#1
 3439 0010 62F3C403 	 bfi r3,r2,#3,#2
 3440 0014 3B73     	 strb r3,[r7,#12]
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3441              	 .loc 1 1244 0
 3442 0016 124B     	 ldr r3,.L205
 3443 0018 93F8FE31 	 ldrb r3,[r3,#510]
 3444 001c C3F30003 	 ubfx r3,r3,#0,#1
 3445 0020 DAB2     	 uxtb r2,r3
 3446 0022 3B7B     	 ldrb r3,[r7,#12]
 3447 0024 62F34103 	 bfi r3,r2,#1,#1
 3448 0028 3B73     	 strb r3,[r7,#12]
1245:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3449              	 .loc 1 1245 0
 3450 002a 7868     	 ldr r0,[r7,#4]
 3451 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3452 0030 0346     	 mov r3,r0
 3453 0032 03F00103 	 and r3,r3,#1
 3454 0036 DAB2     	 uxtb r2,r3
 3455 0038 3B7B     	 ldrb r3,[r7,#12]
 3456 003a 62F38203 	 bfi r3,r2,#2,#1
 3457 003e 3B73     	 strb r3,[r7,#12]
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3458              	 .loc 1 1246 0
 3459 0040 074B     	 ldr r3,.L205
 3460 0042 93F8FE31 	 ldrb r3,[r3,#510]
 3461 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3462 004a DAB2     	 uxtb r2,r3
 3463 004c 3B7B     	 ldrb r3,[r7,#12]
 3464 004e 62F30003 	 bfi r3,r2,#0,#1
 3465 0052 3B73     	 strb r3,[r7,#12]
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 3466              	 .loc 1 1247 0
 3467 0054 FB68     	 ldr r3,[r7,#12]
1248:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3468              	 .loc 1 1248 0
 3469 0056 1846     	 mov r0,r3
 3470 0058 1037     	 adds r7,r7,#16
 3471              	 .cfi_def_cfa_offset 8
 3472 005a BD46     	 mov sp,r7
 3473              	 .cfi_def_cfa_register 13
 3474              	 
 3475 005c 80BD     	 pop {r7,pc}
 3476              	.L206:
 3477 005e 00BF     	 .align 2
 3478              	.L205:
 3479 0060 00000000 	 .word xmc_device
 3480              	 .cfi_endproc
 3481              	.LFE204:
 3483              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3484              	 .align 2
 3485              	 .global XMC_USBD_EndpointReadStart
 3486              	 .thumb
 3487              	 .thumb_func
 3489              	XMC_USBD_EndpointReadStart:
 3490              	.LFB205:
1249:../Libraries/XMCLib/src/xmc_usbd.c **** 
1250:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1251:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1253:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3491              	 .loc 1 1254 0
 3492              	 .cfi_startproc
 3493              	 
 3494              	 
 3495 0000 80B5     	 push {r7,lr}
 3496              	 .cfi_def_cfa_offset 8
 3497              	 .cfi_offset 7,-8
 3498              	 .cfi_offset 14,-4
 3499 0002 84B0     	 sub sp,sp,#16
 3500              	 .cfi_def_cfa_offset 24
 3501 0004 00AF     	 add r7,sp,#0
 3502              	 .cfi_def_cfa_register 7
 3503 0006 0346     	 mov r3,r0
 3504 0008 3960     	 str r1,[r7]
 3505 000a FB71     	 strb r3,[r7,#7]
1255:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3506              	 .loc 1 1255 0
 3507 000c FB79     	 ldrb r3,[r7,#7]
 3508 000e 03F00F03 	 and r3,r3,#15
 3509 0012 3422     	 movs r2,#52
 3510 0014 02FB03F3 	 mul r3,r2,r3
 3511 0018 1B4A     	 ldr r2,.L213
 3512 001a 1344     	 add r3,r3,r2
 3513 001c BB60     	 str r3,[r7,#8]
1256:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1258:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3514              	 .loc 1 1258 0
 3515 001e BB68     	 ldr r3,[r7,#8]
 3516 0020 5B68     	 ldr r3,[r3,#4]
 3517 0022 1B09     	 lsrs r3,r3,#4
 3518 0024 03F00103 	 and r3,r3,#1
 3519 0028 DBB2     	 uxtb r3,r3
 3520 002a 002B     	 cmp r3,#0
 3521 002c 06D1     	 bne .L208
 3522              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 3523 002e BB68     	 ldr r3,[r7,#8]
 3524 0030 1B79     	 ldrb r3,[r3,#4]
 3525 0032 03F00403 	 and r3,r3,#4
 3526 0036 DBB2     	 uxtb r3,r3
 3527 0038 002B     	 cmp r3,#0
 3528 003a 02D1     	 bne .L209
 3529              	.L208:
1259:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3530              	 .loc 1 1260 0 is_stmt 1
 3531 003c 0123     	 movs r3,#1
 3532 003e FB73     	 strb r3,[r7,#15]
 3533 0040 1CE0     	 b .L210
 3534              	.L209:
1261:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1262:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1263:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3535              	 .loc 1 1265 0
 3536 0042 BB68     	 ldr r3,[r7,#8]
 3537 0044 5A69     	 ldr r2,[r3,#20]
 3538 0046 3B68     	 ldr r3,[r7]
 3539 0048 9A42     	 cmp r2,r3
 3540 004a 02D2     	 bcs .L211
1266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1267:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3541              	 .loc 1 1267 0
 3542 004c BB68     	 ldr r3,[r7,#8]
 3543 004e 5B69     	 ldr r3,[r3,#20]
 3544 0050 3B60     	 str r3,[r7]
 3545              	.L211:
1268:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1269:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3546              	 .loc 1 1270 0
 3547 0052 BB68     	 ldr r3,[r7,#8]
 3548 0054 3A68     	 ldr r2,[r7]
 3549 0056 1A63     	 str r2,[r3,#48]
1271:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3550              	 .loc 1 1271 0
 3551 0058 BB68     	 ldr r3,[r7,#8]
 3552 005a 0022     	 movs r2,#0
 3553 005c DA62     	 str r2,[r3,#44]
1272:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3554              	 .loc 1 1272 0
 3555 005e BB68     	 ldr r3,[r7,#8]
 3556 0060 0022     	 movs r2,#0
 3557 0062 9A62     	 str r2,[r3,#40]
1273:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3558              	 .loc 1 1273 0
 3559 0064 BB68     	 ldr r3,[r7,#8]
 3560 0066 DA68     	 ldr r2,[r3,#12]
 3561 0068 BB68     	 ldr r3,[r7,#8]
 3562 006a 5A62     	 str r2,[r3,#36]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3563              	 .loc 1 1274 0
 3564 006c BB68     	 ldr r3,[r7,#8]
 3565 006e 0022     	 movs r2,#0
 3566 0070 1A61     	 str r2,[r3,#16]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3567              	 .loc 1 1275 0
 3568 0072 B868     	 ldr r0,[r7,#8]
 3569 0074 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1276:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 3570              	 .loc 1 1276 0
 3571 0078 0023     	 movs r3,#0
 3572 007a FB73     	 strb r3,[r7,#15]
 3573              	.L210:
1277:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3574              	 .loc 1 1278 0
 3575 007c FB7B     	 ldrb r3,[r7,#15]
1279:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3576              	 .loc 1 1279 0
 3577 007e 1846     	 mov r0,r3
 3578 0080 1037     	 adds r7,r7,#16
 3579              	 .cfi_def_cfa_offset 8
 3580 0082 BD46     	 mov sp,r7
 3581              	 .cfi_def_cfa_register 13
 3582              	 
 3583 0084 80BD     	 pop {r7,pc}
 3584              	.L214:
 3585 0086 00BF     	 .align 2
 3586              	.L213:
 3587 0088 00000000 	 .word xmc_device
 3588              	 .cfi_endproc
 3589              	.LFE205:
 3591              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3592              	 .align 2
 3593              	 .global XMC_USBD_EndpointRead
 3594              	 .thumb
 3595              	 .thumb_func
 3597              	XMC_USBD_EndpointRead:
 3598              	.LFB206:
1280:../Libraries/XMCLib/src/xmc_usbd.c **** 
1281:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1282:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1284:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3599              	 .loc 1 1285 0
 3600              	 .cfi_startproc
 3601              	 
 3602              	 
 3603 0000 80B5     	 push {r7,lr}
 3604              	 .cfi_def_cfa_offset 8
 3605              	 .cfi_offset 7,-8
 3606              	 .cfi_offset 14,-4
 3607 0002 86B0     	 sub sp,sp,#24
 3608              	 .cfi_def_cfa_offset 32
 3609 0004 00AF     	 add r7,sp,#0
 3610              	 .cfi_def_cfa_register 7
 3611 0006 0346     	 mov r3,r0
 3612 0008 B960     	 str r1,[r7,#8]
 3613 000a 7A60     	 str r2,[r7,#4]
 3614 000c FB73     	 strb r3,[r7,#15]
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3615              	 .loc 1 1286 0
 3616 000e FB7B     	 ldrb r3,[r7,#15]
 3617 0010 3422     	 movs r2,#52
 3618 0012 02FB03F3 	 mul r3,r2,r3
 3619 0016 174A     	 ldr r2,.L220
 3620 0018 1344     	 add r3,r3,r2
 3621 001a 7B61     	 str r3,[r7,#20]
1287:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3622              	 .loc 1 1287 0
 3623 001c 7B69     	 ldr r3,[r7,#20]
 3624 001e 1A69     	 ldr r2,[r3,#16]
 3625 0020 7B68     	 ldr r3,[r7,#4]
 3626 0022 9A42     	 cmp r2,r3
 3627 0024 02D2     	 bcs .L216
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1289:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 3628              	 .loc 1 1289 0
 3629 0026 7B69     	 ldr r3,[r7,#20]
 3630 0028 1B69     	 ldr r3,[r3,#16]
 3631 002a 7B60     	 str r3,[r7,#4]
 3632              	.L216:
1290:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1291:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
 3633              	 .loc 1 1291 0
 3634 002c 7B69     	 ldr r3,[r7,#20]
 3635 002e DA68     	 ldr r2,[r3,#12]
 3636 0030 7B69     	 ldr r3,[r7,#20]
 3637 0032 9B69     	 ldr r3,[r3,#24]
 3638 0034 1344     	 add r3,r3,r2
 3639 0036 B868     	 ldr r0,[r7,#8]
 3640 0038 1946     	 mov r1,r3
 3641 003a 7A68     	 ldr r2,[r7,#4]
 3642 003c FFF7FEFF 	 bl memcpy
1292:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 3643              	 .loc 1 1292 0
 3644 0040 7B69     	 ldr r3,[r7,#20]
 3645 0042 1A69     	 ldr r2,[r3,#16]
 3646 0044 7B68     	 ldr r3,[r7,#4]
 3647 0046 D21A     	 subs r2,r2,r3
 3648 0048 7B69     	 ldr r3,[r7,#20]
 3649 004a 1A61     	 str r2,[r3,#16]
1293:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 3650              	 .loc 1 1293 0
 3651 004c 7B69     	 ldr r3,[r7,#20]
 3652 004e 1B69     	 ldr r3,[r3,#16]
 3653 0050 002B     	 cmp r3,#0
 3654 0052 06D0     	 beq .L217
1294:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1295:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 3655              	 .loc 1 1295 0
 3656 0054 7B69     	 ldr r3,[r7,#20]
 3657 0056 9A69     	 ldr r2,[r3,#24]
 3658 0058 7B68     	 ldr r3,[r7,#4]
 3659 005a 1A44     	 add r2,r2,r3
 3660 005c 7B69     	 ldr r3,[r7,#20]
 3661 005e 9A61     	 str r2,[r3,#24]
 3662 0060 02E0     	 b .L218
 3663              	.L217:
1296:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1299:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 3664              	 .loc 1 1299 0
 3665 0062 7B69     	 ldr r3,[r7,#20]
 3666 0064 0022     	 movs r2,#0
 3667 0066 9A61     	 str r2,[r3,#24]
 3668              	.L218:
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1301:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 3669              	 .loc 1 1301 0
 3670 0068 7B68     	 ldr r3,[r7,#4]
1302:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3671              	 .loc 1 1302 0
 3672 006a 1846     	 mov r0,r3
 3673 006c 1837     	 adds r7,r7,#24
 3674              	 .cfi_def_cfa_offset 8
 3675 006e BD46     	 mov sp,r7
 3676              	 .cfi_def_cfa_register 13
 3677              	 
 3678 0070 80BD     	 pop {r7,pc}
 3679              	.L221:
 3680 0072 00BF     	 .align 2
 3681              	.L220:
 3682 0074 00000000 	 .word xmc_device
 3683              	 .cfi_endproc
 3684              	.LFE206:
 3686              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 3687              	 .align 2
 3688              	 .global XMC_USBD_EndpointWrite
 3689              	 .thumb
 3690              	 .thumb_func
 3692              	XMC_USBD_EndpointWrite:
 3693              	.LFB207:
1303:../Libraries/XMCLib/src/xmc_usbd.c **** 
1304:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1305:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1307:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3694              	 .loc 1 1308 0
 3695              	 .cfi_startproc
 3696              	 
 3697              	 
 3698 0000 80B5     	 push {r7,lr}
 3699              	 .cfi_def_cfa_offset 8
 3700              	 .cfi_offset 7,-8
 3701              	 .cfi_offset 14,-4
 3702 0002 86B0     	 sub sp,sp,#24
 3703              	 .cfi_def_cfa_offset 32
 3704 0004 00AF     	 add r7,sp,#0
 3705              	 .cfi_def_cfa_register 7
 3706 0006 0346     	 mov r3,r0
 3707 0008 B960     	 str r1,[r7,#8]
 3708 000a 7A60     	 str r2,[r7,#4]
 3709 000c FB73     	 strb r3,[r7,#15]
1309:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3710              	 .loc 1 1309 0
 3711 000e FB7B     	 ldrb r3,[r7,#15]
 3712 0010 03F00F03 	 and r3,r3,#15
 3713 0014 3422     	 movs r2,#52
 3714 0016 02FB03F3 	 mul r3,r2,r3
 3715 001a 224A     	 ldr r2,.L228
 3716 001c 1344     	 add r3,r3,r2
 3717 001e 3B61     	 str r3,[r7,#16]
1310:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 3718              	 .loc 1 1311 0
 3719 0020 3B69     	 ldr r3,[r7,#16]
 3720 0022 1B79     	 ldrb r3,[r3,#4]
 3721 0024 03F00403 	 and r3,r3,#4
 3722 0028 DBB2     	 uxtb r3,r3
 3723 002a 002B     	 cmp r3,#0
 3724 002c 02D1     	 bne .L223
1312:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 3725              	 .loc 1 1313 0
 3726 002e 0123     	 movs r3,#1
 3727 0030 7B61     	 str r3,[r7,#20]
 3728 0032 31E0     	 b .L224
 3729              	.L223:
1314:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1315:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 3730              	 .loc 1 1315 0
 3731 0034 3B69     	 ldr r3,[r7,#16]
 3732 0036 5B68     	 ldr r3,[r3,#4]
 3733 0038 DB08     	 lsrs r3,r3,#3
 3734 003a 03F00103 	 and r3,r3,#1
 3735 003e DBB2     	 uxtb r3,r3
 3736 0040 012B     	 cmp r3,#1
 3737 0042 02D1     	 bne .L225
1316:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
 3738              	 .loc 1 1317 0
 3739 0044 0023     	 movs r3,#0
 3740 0046 7B61     	 str r3,[r7,#20]
 3741 0048 26E0     	 b .L224
 3742              	.L225:
1318:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1319:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1320:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 3743              	 .loc 1 1321 0
 3744 004a 3B69     	 ldr r3,[r7,#16]
 3745 004c 1A6A     	 ldr r2,[r3,#32]
 3746 004e 7B68     	 ldr r3,[r7,#4]
 3747 0050 9A42     	 cmp r2,r3
 3748 0052 02D2     	 bcs .L226
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1323:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 3749              	 .loc 1 1323 0
 3750 0054 3B69     	 ldr r3,[r7,#16]
 3751 0056 1B6A     	 ldr r3,[r3,#32]
 3752 0058 7B60     	 str r3,[r7,#4]
 3753              	.L226:
1324:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
 3754              	 .loc 1 1326 0
 3755 005a 3B69     	 ldr r3,[r7,#16]
 3756 005c DB69     	 ldr r3,[r3,#28]
 3757 005e 1846     	 mov r0,r3
 3758 0060 B968     	 ldr r1,[r7,#8]
 3759 0062 7A68     	 ldr r2,[r7,#4]
 3760 0064 FFF7FEFF 	 bl memcpy
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 3761              	 .loc 1 1327 0
 3762 0068 3B69     	 ldr r3,[r7,#16]
 3763 006a DA69     	 ldr r2,[r3,#28]
 3764 006c 3B69     	 ldr r3,[r7,#16]
 3765 006e 5A62     	 str r2,[r3,#36]
1328:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 3766              	 .loc 1 1328 0
 3767 0070 3B69     	 ldr r3,[r7,#16]
 3768 0072 7A68     	 ldr r2,[r7,#4]
 3769 0074 1A63     	 str r2,[r3,#48]
1329:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3770              	 .loc 1 1330 0
 3771 0076 3B69     	 ldr r3,[r7,#16]
 3772 0078 0022     	 movs r2,#0
 3773 007a 9A62     	 str r2,[r3,#40]
1331:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3774              	 .loc 1 1331 0
 3775 007c 3B69     	 ldr r3,[r7,#16]
 3776 007e 0022     	 movs r2,#0
 3777 0080 DA62     	 str r2,[r3,#44]
1332:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 3778              	 .loc 1 1332 0
 3779 0082 3B69     	 ldr r3,[r7,#16]
 3780 0084 5A68     	 ldr r2,[r3,#4]
 3781 0086 42F00802 	 orr r2,r2,#8
 3782 008a 5A60     	 str r2,[r3,#4]
1333:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 3783              	 .loc 1 1334 0
 3784 008c 3869     	 ldr r0,[r7,#16]
 3785 008e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1335:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 3786              	 .loc 1 1335 0
 3787 0092 3B69     	 ldr r3,[r7,#16]
 3788 0094 1B6B     	 ldr r3,[r3,#48]
 3789 0096 7B61     	 str r3,[r7,#20]
 3790              	.L224:
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1337:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3791              	 .loc 1 1337 0
 3792 0098 7B69     	 ldr r3,[r7,#20]
1338:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3793              	 .loc 1 1338 0
 3794 009a 1846     	 mov r0,r3
 3795 009c 1837     	 adds r7,r7,#24
 3796              	 .cfi_def_cfa_offset 8
 3797 009e BD46     	 mov sp,r7
 3798              	 .cfi_def_cfa_register 13
 3799              	 
 3800 00a0 80BD     	 pop {r7,pc}
 3801              	.L229:
 3802 00a2 00BF     	 .align 2
 3803              	.L228:
 3804 00a4 00000000 	 .word xmc_device
 3805              	 .cfi_endproc
 3806              	.LFE207:
 3808              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 3809              	 .align 2
 3810              	 .global XMC_USBD_DeviceSetAddress
 3811              	 .thumb
 3812              	 .thumb_func
 3814              	XMC_USBD_DeviceSetAddress:
 3815              	.LFB208:
1339:../Libraries/XMCLib/src/xmc_usbd.c **** 
1340:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1341:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1343:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3816              	 .loc 1 1344 0
 3817              	 .cfi_startproc
 3818              	 
 3819              	 
 3820              	 
 3821 0000 80B4     	 push {r7}
 3822              	 .cfi_def_cfa_offset 4
 3823              	 .cfi_offset 7,-4
 3824 0002 85B0     	 sub sp,sp,#20
 3825              	 .cfi_def_cfa_offset 24
 3826 0004 00AF     	 add r7,sp,#0
 3827              	 .cfi_def_cfa_register 7
 3828 0006 0346     	 mov r3,r0
 3829 0008 0A46     	 mov r2,r1
 3830 000a FB71     	 strb r3,[r7,#7]
 3831 000c 1346     	 mov r3,r2
 3832 000e BB71     	 strb r3,[r7,#6]
1345:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 3833              	 .loc 1 1346 0
 3834 0010 0D4B     	 ldr r3,.L233
 3835 0012 D3F8A431 	 ldr r3,[r3,#420]
 3836 0016 1B68     	 ldr r3,[r3]
 3837 0018 FB60     	 str r3,[r7,#12]
1347:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 3838              	 .loc 1 1347 0
 3839 001a BB79     	 ldrb r3,[r7,#6]
 3840 001c 002B     	 cmp r3,#0
 3841 001e 0CD1     	 bne .L231
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1349:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 3842              	 .loc 1 1349 0
 3843 0020 FB79     	 ldrb r3,[r7,#7]
 3844 0022 03F07F03 	 and r3,r3,#127
 3845 0026 DAB2     	 uxtb r2,r3
 3846 0028 BB89     	 ldrh r3,[r7,#12]
 3847 002a 62F30A13 	 bfi r3,r2,#4,#7
 3848 002e BB81     	 strh r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 3849              	 .loc 1 1350 0
 3850 0030 054B     	 ldr r3,.L233
 3851 0032 D3F8A431 	 ldr r3,[r3,#420]
 3852 0036 FA68     	 ldr r2,[r7,#12]
 3853 0038 1A60     	 str r2,[r3]
 3854              	.L231:
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1352:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 3855              	 .loc 1 1352 0
 3856 003a 0023     	 movs r3,#0
1353:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3857              	 .loc 1 1353 0
 3858 003c 1846     	 mov r0,r3
 3859 003e 1437     	 adds r7,r7,#20
 3860              	 .cfi_def_cfa_offset 4
 3861 0040 BD46     	 mov sp,r7
 3862              	 .cfi_def_cfa_register 13
 3863              	 
 3864 0042 5DF8047B 	 ldr r7,[sp],#4
 3865              	 .cfi_restore 7
 3866              	 .cfi_def_cfa_offset 0
 3867 0046 7047     	 bx lr
 3868              	.L234:
 3869              	 .align 2
 3870              	.L233:
 3871 0048 00000000 	 .word xmc_device
 3872              	 .cfi_endproc
 3873              	.LFE208:
 3875              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 3876              	 .align 2
 3877              	 .global XMC_USBD_EndpointStall
 3878              	 .thumb
 3879              	 .thumb_func
 3881              	XMC_USBD_EndpointStall:
 3882              	.LFB209:
1354:../Libraries/XMCLib/src/xmc_usbd.c **** 
1355:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1356:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1358:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3883              	 .loc 1 1359 0
 3884              	 .cfi_startproc
 3885              	 
 3886              	 
 3887              	 
 3888 0000 80B4     	 push {r7}
 3889              	 .cfi_def_cfa_offset 4
 3890              	 .cfi_offset 7,-4
 3891 0002 85B0     	 sub sp,sp,#20
 3892              	 .cfi_def_cfa_offset 24
 3893 0004 00AF     	 add r7,sp,#0
 3894              	 .cfi_def_cfa_register 7
 3895 0006 0346     	 mov r3,r0
 3896 0008 0A46     	 mov r2,r1
 3897 000a FB71     	 strb r3,[r7,#7]
 3898 000c 1346     	 mov r3,r2
 3899 000e BB71     	 strb r3,[r7,#6]
1360:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 3900              	 .loc 1 1361 0
 3901 0010 FB79     	 ldrb r3,[r7,#7]
 3902 0012 03F00F03 	 and r3,r3,#15
 3903 0016 3422     	 movs r2,#52
 3904 0018 02FB03F3 	 mul r3,r2,r3
 3905 001c 4A4A     	 ldr r2,.L243
 3906 001e 1344     	 add r3,r3,r2
 3907 0020 FB60     	 str r3,[r7,#12]
1362:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 3908              	 .loc 1 1362 0
 3909 0022 BB79     	 ldrb r3,[r7,#6]
 3910 0024 002B     	 cmp r3,#0
 3911 0026 40D0     	 beq .L236
1363:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1364:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 3912              	 .loc 1 1364 0
 3913 0028 FB79     	 ldrb r3,[r7,#7]
 3914 002a 5BB2     	 sxtb r3,r3
 3915 002c 002B     	 cmp r3,#0
 3916 002e 1ADA     	 bge .L237
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1366:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 3917              	 .loc 1 1367 0
 3918 0030 FB68     	 ldr r3,[r7,#12]
 3919 0032 1B78     	 ldrb r3,[r3]
 3920 0034 C3F30303 	 ubfx r3,r3,#0,#4
 3921 0038 DBB2     	 uxtb r3,r3
 3922 003a 434A     	 ldr r2,.L243
 3923 003c 6A33     	 adds r3,r3,#106
 3924 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3925 0042 1B68     	 ldr r3,[r3]
 3926 0044 BB60     	 str r3,[r7,#8]
1368:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 3927              	 .loc 1 1368 0
 3928 0046 BB7A     	 ldrb r3,[r7,#10]
 3929 0048 43F02003 	 orr r3,r3,#32
 3930 004c BB72     	 strb r3,[r7,#10]
1369:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 3931              	 .loc 1 1369 0
 3932 004e FB68     	 ldr r3,[r7,#12]
 3933 0050 1B78     	 ldrb r3,[r3]
 3934 0052 C3F30303 	 ubfx r3,r3,#0,#4
 3935 0056 DBB2     	 uxtb r3,r3
 3936 0058 3B4A     	 ldr r2,.L243
 3937 005a 6A33     	 adds r3,r3,#106
 3938 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3939 0060 BA68     	 ldr r2,[r7,#8]
 3940 0062 1A60     	 str r2,[r3]
 3941 0064 1BE0     	 b .L238
 3942              	.L237:
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1371:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1372:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1373:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 3943              	 .loc 1 1374 0
 3944 0066 FB68     	 ldr r3,[r7,#12]
 3945 0068 1B78     	 ldrb r3,[r3]
 3946 006a C3F30303 	 ubfx r3,r3,#0,#4
 3947 006e DBB2     	 uxtb r3,r3
 3948 0070 354A     	 ldr r2,.L243
 3949 0072 7033     	 adds r3,r3,#112
 3950 0074 9B00     	 lsls r3,r3,#2
 3951 0076 1344     	 add r3,r3,r2
 3952 0078 5B68     	 ldr r3,[r3,#4]
 3953 007a 1B68     	 ldr r3,[r3]
 3954 007c BB60     	 str r3,[r7,#8]
1375:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 3955              	 .loc 1 1375 0
 3956 007e BB7A     	 ldrb r3,[r7,#10]
 3957 0080 43F02003 	 orr r3,r3,#32
 3958 0084 BB72     	 strb r3,[r7,#10]
1376:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 3959              	 .loc 1 1376 0
 3960 0086 FB68     	 ldr r3,[r7,#12]
 3961 0088 1B78     	 ldrb r3,[r3]
 3962 008a C3F30303 	 ubfx r3,r3,#0,#4
 3963 008e DBB2     	 uxtb r3,r3
 3964 0090 2D4A     	 ldr r2,.L243
 3965 0092 7033     	 adds r3,r3,#112
 3966 0094 9B00     	 lsls r3,r3,#2
 3967 0096 1344     	 add r3,r3,r2
 3968 0098 5B68     	 ldr r3,[r3,#4]
 3969 009a BA68     	 ldr r2,[r7,#8]
 3970 009c 1A60     	 str r2,[r3]
 3971              	.L238:
1377:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1378:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 3972              	 .loc 1 1378 0
 3973 009e FA68     	 ldr r2,[r7,#12]
 3974 00a0 1379     	 ldrb r3,[r2,#4]
 3975 00a2 43F02003 	 orr r3,r3,#32
 3976 00a6 1371     	 strb r3,[r2,#4]
 3977 00a8 47E0     	 b .L239
 3978              	.L236:
1379:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1380:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1381:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1382:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 3979              	 .loc 1 1383 0
 3980 00aa FB79     	 ldrb r3,[r7,#7]
 3981 00ac 5BB2     	 sxtb r3,r3
 3982 00ae 002B     	 cmp r3,#0
 3983 00b0 1EDA     	 bge .L240
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 3984              	 .loc 1 1385 0
 3985 00b2 FB68     	 ldr r3,[r7,#12]
 3986 00b4 1B78     	 ldrb r3,[r3]
 3987 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 3988 00ba DBB2     	 uxtb r3,r3
 3989 00bc 224A     	 ldr r2,.L243
 3990 00be 6A33     	 adds r3,r3,#106
 3991 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3992 00c4 1B68     	 ldr r3,[r3]
 3993 00c6 BB60     	 str r3,[r7,#8]
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 3994              	 .loc 1 1386 0
 3995 00c8 BB7A     	 ldrb r3,[r7,#10]
 3996 00ca 6FF34513 	 bfc r3,#5,#1
 3997 00ce BB72     	 strb r3,[r7,#10]
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 3998              	 .loc 1 1387 0
 3999 00d0 FB7A     	 ldrb r3,[r7,#11]
 4000 00d2 43F01003 	 orr r3,r3,#16
 4001 00d6 FB72     	 strb r3,[r7,#11]
1388:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4002              	 .loc 1 1388 0
 4003 00d8 FB68     	 ldr r3,[r7,#12]
 4004 00da 1B78     	 ldrb r3,[r3]
 4005 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4006 00e0 DBB2     	 uxtb r3,r3
 4007 00e2 194A     	 ldr r2,.L243
 4008 00e4 6A33     	 adds r3,r3,#106
 4009 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4010 00ea BA68     	 ldr r2,[r7,#8]
 4011 00ec 1A60     	 str r2,[r3]
 4012 00ee 1FE0     	 b .L241
 4013              	.L240:
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1390:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1391:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1392:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4014              	 .loc 1 1392 0
 4015 00f0 FB68     	 ldr r3,[r7,#12]
 4016 00f2 1B78     	 ldrb r3,[r3]
 4017 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4018 00f8 DBB2     	 uxtb r3,r3
 4019 00fa 134A     	 ldr r2,.L243
 4020 00fc 7033     	 adds r3,r3,#112
 4021 00fe 9B00     	 lsls r3,r3,#2
 4022 0100 1344     	 add r3,r3,r2
 4023 0102 5B68     	 ldr r3,[r3,#4]
 4024 0104 1B68     	 ldr r3,[r3]
 4025 0106 BB60     	 str r3,[r7,#8]
1393:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4026              	 .loc 1 1393 0
 4027 0108 BB7A     	 ldrb r3,[r7,#10]
 4028 010a 6FF34513 	 bfc r3,#5,#1
 4029 010e BB72     	 strb r3,[r7,#10]
1394:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4030              	 .loc 1 1394 0
 4031 0110 FB7A     	 ldrb r3,[r7,#11]
 4032 0112 43F01003 	 orr r3,r3,#16
 4033 0116 FB72     	 strb r3,[r7,#11]
1395:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4034              	 .loc 1 1395 0
 4035 0118 FB68     	 ldr r3,[r7,#12]
 4036 011a 1B78     	 ldrb r3,[r3]
 4037 011c C3F30303 	 ubfx r3,r3,#0,#4
 4038 0120 DBB2     	 uxtb r3,r3
 4039 0122 094A     	 ldr r2,.L243
 4040 0124 7033     	 adds r3,r3,#112
 4041 0126 9B00     	 lsls r3,r3,#2
 4042 0128 1344     	 add r3,r3,r2
 4043 012a 5B68     	 ldr r3,[r3,#4]
 4044 012c BA68     	 ldr r2,[r7,#8]
 4045 012e 1A60     	 str r2,[r3]
 4046              	.L241:
1396:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1397:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 4047              	 .loc 1 1397 0
 4048 0130 FA68     	 ldr r2,[r7,#12]
 4049 0132 1379     	 ldrb r3,[r2,#4]
 4050 0134 6FF34513 	 bfc r3,#5,#1
 4051 0138 1371     	 strb r3,[r2,#4]
 4052              	.L239:
1398:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1399:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4053              	 .loc 1 1399 0
 4054 013a 0023     	 movs r3,#0
1400:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4055              	 .loc 1 1400 0
 4056 013c 1846     	 mov r0,r3
 4057 013e 1437     	 adds r7,r7,#20
 4058              	 .cfi_def_cfa_offset 4
 4059 0140 BD46     	 mov sp,r7
 4060              	 .cfi_def_cfa_register 13
 4061              	 
 4062 0142 5DF8047B 	 ldr r7,[sp],#4
 4063              	 .cfi_restore 7
 4064              	 .cfi_def_cfa_offset 0
 4065 0146 7047     	 bx lr
 4066              	.L244:
 4067              	 .align 2
 4068              	.L243:
 4069 0148 00000000 	 .word xmc_device
 4070              	 .cfi_endproc
 4071              	.LFE209:
 4073              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4074              	 .align 2
 4075              	 .global XMC_USBD_EndpointAbort
 4076              	 .thumb
 4077              	 .thumb_func
 4079              	XMC_USBD_EndpointAbort:
 4080              	.LFB210:
1401:../Libraries/XMCLib/src/xmc_usbd.c **** 
1402:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1403:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1405:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 4081              	 .loc 1 1405 0
 4082              	 .cfi_startproc
 4083              	 
 4084              	 
 4085              	 
 4086 0000 80B4     	 push {r7}
 4087              	 .cfi_def_cfa_offset 4
 4088              	 .cfi_offset 7,-4
 4089 0002 85B0     	 sub sp,sp,#20
 4090              	 .cfi_def_cfa_offset 24
 4091 0004 00AF     	 add r7,sp,#0
 4092              	 .cfi_def_cfa_register 7
 4093 0006 0346     	 mov r3,r0
 4094 0008 FB71     	 strb r3,[r7,#7]
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4095              	 .loc 1 1406 0
 4096 000a FB79     	 ldrb r3,[r7,#7]
 4097 000c 03F00F03 	 and r3,r3,#15
 4098 0010 3422     	 movs r2,#52
 4099 0012 02FB03F3 	 mul r3,r2,r3
 4100 0016 1B4A     	 ldr r2,.L249
 4101 0018 1344     	 add r3,r3,r2
 4102 001a FB60     	 str r3,[r7,#12]
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4103              	 .loc 1 1407 0
 4104 001c FB68     	 ldr r3,[r7,#12]
 4105 001e 1B78     	 ldrb r3,[r3]
 4106 0020 23F07F03 	 bic r3,r3,#127
 4107 0024 DBB2     	 uxtb r3,r3
 4108 0026 002B     	 cmp r3,#0
 4109 0028 04D0     	 beq .L246
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1409:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4110              	 .loc 1 1409 0
 4111 002a FB68     	 ldr r3,[r7,#12]
 4112 002c 5A68     	 ldr r2,[r3,#4]
 4113 002e 22F00802 	 bic r2,r2,#8
 4114 0032 5A60     	 str r2,[r3,#4]
 4115              	.L246:
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1411:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4116              	 .loc 1 1411 0
 4117 0034 FB68     	 ldr r3,[r7,#12]
 4118 0036 1B78     	 ldrb r3,[r3]
 4119 0038 23F07F03 	 bic r3,r3,#127
 4120 003c DBB2     	 uxtb r3,r3
 4121 003e 002B     	 cmp r3,#0
 4122 0040 04D1     	 bne .L247
1412:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1413:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4123              	 .loc 1 1413 0
 4124 0042 FB68     	 ldr r3,[r7,#12]
 4125 0044 5A68     	 ldr r2,[r3,#4]
 4126 0046 22F01002 	 bic r2,r2,#16
 4127 004a 5A60     	 str r2,[r3,#4]
 4128              	.L247:
1414:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1415:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4129              	 .loc 1 1415 0
 4130 004c FA68     	 ldr r2,[r7,#12]
 4131 004e 1379     	 ldrb r3,[r2,#4]
 4132 0050 6FF34513 	 bfc r3,#5,#1
 4133 0054 1371     	 strb r3,[r2,#4]
1416:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4134              	 .loc 1 1416 0
 4135 0056 FB68     	 ldr r3,[r7,#12]
 4136 0058 0022     	 movs r2,#0
 4137 005a 1A61     	 str r2,[r3,#16]
1417:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4138              	 .loc 1 1417 0
 4139 005c FB68     	 ldr r3,[r7,#12]
 4140 005e 0022     	 movs r2,#0
 4141 0060 9A61     	 str r2,[r3,#24]
1418:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4142              	 .loc 1 1418 0
 4143 0062 FB68     	 ldr r3,[r7,#12]
 4144 0064 0022     	 movs r2,#0
 4145 0066 9A62     	 str r2,[r3,#40]
1419:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4146              	 .loc 1 1419 0
 4147 0068 FB68     	 ldr r3,[r7,#12]
 4148 006a 0022     	 movs r2,#0
 4149 006c DA62     	 str r2,[r3,#44]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4150              	 .loc 1 1420 0
 4151 006e FB68     	 ldr r3,[r7,#12]
 4152 0070 0022     	 movs r2,#0
 4153 0072 1A63     	 str r2,[r3,#48]
1421:../Libraries/XMCLib/src/xmc_usbd.c **** 
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4154              	 .loc 1 1422 0
 4155 0074 0023     	 movs r3,#0
1423:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4156              	 .loc 1 1423 0
 4157 0076 1846     	 mov r0,r3
 4158 0078 1437     	 adds r7,r7,#20
 4159              	 .cfi_def_cfa_offset 4
 4160 007a BD46     	 mov sp,r7
 4161              	 .cfi_def_cfa_register 13
 4162              	 
 4163 007c 5DF8047B 	 ldr r7,[sp],#4
 4164              	 .cfi_restore 7
 4165              	 .cfi_def_cfa_offset 0
 4166 0080 7047     	 bx lr
 4167              	.L250:
 4168 0082 00BF     	 .align 2
 4169              	.L249:
 4170 0084 00000000 	 .word xmc_device
 4171              	 .cfi_endproc
 4172              	.LFE210:
 4174              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4175              	 .align 2
 4176              	 .global XMC_USBD_EndpointConfigure
 4177              	 .thumb
 4178              	 .thumb_func
 4180              	XMC_USBD_EndpointConfigure:
 4181              	.LFB211:
1424:../Libraries/XMCLib/src/xmc_usbd.c **** 
1425:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1426:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1428:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4182              	 .loc 1 1431 0
 4183              	 .cfi_startproc
 4184              	 
 4185              	 
 4186 0000 80B5     	 push {r7,lr}
 4187              	 .cfi_def_cfa_offset 8
 4188              	 .cfi_offset 7,-8
 4189              	 .cfi_offset 14,-4
 4190 0002 86B0     	 sub sp,sp,#24
 4191              	 .cfi_def_cfa_offset 32
 4192 0004 00AF     	 add r7,sp,#0
 4193              	 .cfi_def_cfa_register 7
 4194 0006 0346     	 mov r3,r0
 4195 0008 FB71     	 strb r3,[r7,#7]
 4196 000a 0B46     	 mov r3,r1
 4197 000c BB71     	 strb r3,[r7,#6]
 4198 000e 1346     	 mov r3,r2
 4199 0010 BB80     	 strh r3,[r7,#4]
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4200              	 .loc 1 1434 0
 4201 0012 984B     	 ldr r3,.L277
 4202 0014 D3F8A431 	 ldr r3,[r3,#420]
 4203 0018 DB69     	 ldr r3,[r3,#28]
 4204 001a 3B61     	 str r3,[r7,#16]
1435:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4205              	 .loc 1 1435 0
 4206 001c FB79     	 ldrb r3,[r7,#7]
 4207 001e 03F00F03 	 and r3,r3,#15
 4208 0022 3422     	 movs r2,#52
 4209 0024 02FB03F3 	 mul r3,r2,r3
 4210 0028 924A     	 ldr r2,.L277
 4211 002a 1344     	 add r3,r3,r2
 4212 002c 7B61     	 str r3,[r7,#20]
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4213              	 .loc 1 1436 0
 4214 002e 7869     	 ldr r0,[r7,#20]
 4215 0030 0021     	 movs r1,#0
 4216 0032 3422     	 movs r2,#52
 4217 0034 FFF7FEFF 	 bl memset
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4218              	 .loc 1 1438 0
 4219 0038 7B69     	 ldr r3,[r7,#20]
 4220 003a FA79     	 ldrb r2,[r7,#7]
 4221 003c 1A70     	 strb r2,[r3]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4222              	 .loc 1 1439 0
 4223 003e 7A69     	 ldr r2,[r7,#20]
 4224 0040 1379     	 ldrb r3,[r2,#4]
 4225 0042 43F00403 	 orr r3,r3,#4
 4226 0046 1371     	 strb r3,[r2,#4]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4227              	 .loc 1 1440 0
 4228 0048 BB88     	 ldrh r3,[r7,#4]
 4229 004a DBB2     	 uxtb r3,r3
 4230 004c 03F07F03 	 and r3,r3,#127
 4231 0050 D9B2     	 uxtb r1,r3
 4232 0052 7A69     	 ldr r2,[r7,#20]
 4233 0054 5368     	 ldr r3,[r2,#4]
 4234 0056 61F3D123 	 bfi r3,r1,#11,#7
 4235 005a 5360     	 str r3,[r2,#4]
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4236              	 .loc 1 1441 0
 4237 005c 7B69     	 ldr r3,[r7,#20]
 4238 005e 1B78     	 ldrb r3,[r3]
 4239 0060 002B     	 cmp r3,#0
 4240 0062 07D0     	 beq .L252
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1443:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4241              	 .loc 1 1443 0
 4242 0064 7A69     	 ldr r2,[r7,#20]
 4243 0066 9368     	 ldr r3,[r2,#8]
 4244 0068 4FF6C071 	 movw r1,#65472
 4245 006c 61F31203 	 bfi r3,r1,#0,#19
 4246 0070 9360     	 str r3,[r2,#8]
 4247 0072 05E0     	 b .L253
 4248              	.L252:
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1446:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4249              	 .loc 1 1447 0
 4250 0074 7A69     	 ldr r2,[r7,#20]
 4251 0076 9368     	 ldr r3,[r2,#8]
 4252 0078 4021     	 movs r1,#64
 4253 007a 61F31203 	 bfi r3,r1,#0,#19
 4254 007e 9360     	 str r3,[r2,#8]
 4255              	.L253:
1448:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1449:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4256              	 .loc 1 1450 0
 4257 0080 7B69     	 ldr r3,[r7,#20]
 4258 0082 1B78     	 ldrb r3,[r3]
 4259 0084 C3F30303 	 ubfx r3,r3,#0,#4
 4260 0088 DBB2     	 uxtb r3,r3
 4261 008a 1B02     	 lsls r3,r3,#8
 4262 008c 7A4A     	 ldr r2,.L277+4
 4263 008e 1A44     	 add r2,r2,r3
 4264 0090 7B69     	 ldr r3,[r7,#20]
 4265 0092 DA61     	 str r2,[r3,#28]
1451:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4266              	 .loc 1 1451 0
 4267 0094 7B69     	 ldr r3,[r7,#20]
 4268 0096 1B78     	 ldrb r3,[r3]
 4269 0098 C3F30303 	 ubfx r3,r3,#0,#4
 4270 009c DBB2     	 uxtb r3,r3
 4271 009e 1B02     	 lsls r3,r3,#8
 4272 00a0 764A     	 ldr r2,.L277+8
 4273 00a2 1A44     	 add r2,r2,r3
 4274 00a4 7B69     	 ldr r3,[r7,#20]
 4275 00a6 DA60     	 str r2,[r3,#12]
1452:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4276              	 .loc 1 1453 0
 4277 00a8 7B69     	 ldr r3,[r7,#20]
 4278 00aa 1B78     	 ldrb r3,[r3]
 4279 00ac C3F30303 	 ubfx r3,r3,#0,#4
 4280 00b0 DBB2     	 uxtb r3,r3
 4281 00b2 1A46     	 mov r2,r3
 4282 00b4 724B     	 ldr r3,.L277+12
 4283 00b6 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4284 00ba 7B69     	 ldr r3,[r7,#20]
 4285 00bc 1A62     	 str r2,[r3,#32]
1454:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4286              	 .loc 1 1454 0
 4287 00be 7B69     	 ldr r3,[r7,#20]
 4288 00c0 1B78     	 ldrb r3,[r3]
 4289 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4290 00c6 DBB2     	 uxtb r3,r3
 4291 00c8 1A46     	 mov r2,r3
 4292 00ca 6E4B     	 ldr r3,.L277+16
 4293 00cc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4294 00d0 7B69     	 ldr r3,[r7,#20]
 4295 00d2 5A61     	 str r2,[r3,#20]
1455:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4296              	 .loc 1 1456 0
 4297 00d4 7B69     	 ldr r3,[r7,#20]
 4298 00d6 1B78     	 ldrb r3,[r3]
 4299 00d8 23F07F03 	 bic r3,r3,#127
 4300 00dc DBB2     	 uxtb r3,r3
 4301 00de 002B     	 cmp r3,#0
 4302 00e0 02D1     	 bne .L254
 4303              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 4304 00e2 BB79     	 ldrb r3,[r7,#6]
 4305 00e4 002B     	 cmp r3,#0
 4306 00e6 7AD1     	 bne .L255
 4307              	.L254:
 4308              	.LBB6:
1457:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1458:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4309              	 .loc 1 1459 0 is_stmt 1
 4310 00e8 7B69     	 ldr r3,[r7,#20]
 4311 00ea 1B78     	 ldrb r3,[r3]
 4312 00ec C3F30303 	 ubfx r3,r3,#0,#4
 4313 00f0 DBB2     	 uxtb r3,r3
 4314 00f2 604A     	 ldr r2,.L277
 4315 00f4 6A33     	 adds r3,r3,#106
 4316 00f6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4317 00fa 1B68     	 ldr r3,[r3]
 4318 00fc FB60     	 str r3,[r7,#12]
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4319              	 .loc 1 1461 0
 4320 00fe 7B7B     	 ldrb r3,[r7,#13]
 4321 0100 43F08003 	 orr r3,r3,#128
 4322 0104 7B73     	 strb r3,[r7,#13]
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4323              	 .loc 1 1463 0
 4324 0106 BB79     	 ldrb r3,[r7,#6]
 4325 0108 03F00303 	 and r3,r3,#3
 4326 010c DAB2     	 uxtb r2,r3
 4327 010e BB7B     	 ldrb r3,[r7,#14]
 4328 0110 62F38303 	 bfi r3,r2,#2,#2
 4329 0114 BB73     	 strb r3,[r7,#14]
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4330              	 .loc 1 1465 0
 4331 0116 BB79     	 ldrb r3,[r7,#6]
 4332 0118 002B     	 cmp r3,#0
 4333 011a 24D1     	 bne .L256
1466:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4334              	 .loc 1 1467 0
 4335 011c BB88     	 ldrh r3,[r7,#4]
 4336 011e 102B     	 cmp r3,#16
 4337 0120 14D0     	 beq .L258
 4338 0122 102B     	 cmp r3,#16
 4339 0124 02DC     	 bgt .L259
 4340 0126 082B     	 cmp r3,#8
 4341 0128 16D0     	 beq .L260
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4342              	 .loc 1 1482 0
 4343 012a 1BE0     	 b .L263
 4344              	.L259:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4345              	 .loc 1 1467 0
 4346 012c 202B     	 cmp r3,#32
 4347 012e 07D0     	 beq .L261
 4348 0130 402B     	 cmp r3,#64
 4349 0132 00D0     	 beq .L262
 4350              	 .loc 1 1482 0
 4351 0134 16E0     	 b .L263
 4352              	.L262:
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4353              	 .loc 1 1470 0
 4354 0136 BB89     	 ldrh r3,[r7,#12]
 4355 0138 6FF30A03 	 bfc r3,#0,#11
 4356 013c BB81     	 strh r3,[r7,#12]
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4357              	 .loc 1 1471 0
 4358 013e 11E0     	 b .L263
 4359              	.L261:
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4360              	 .loc 1 1473 0
 4361 0140 BB89     	 ldrh r3,[r7,#12]
 4362 0142 0122     	 movs r2,#1
 4363 0144 62F30A03 	 bfi r3,r2,#0,#11
 4364 0148 BB81     	 strh r3,[r7,#12]
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4365              	 .loc 1 1474 0
 4366 014a 0BE0     	 b .L263
 4367              	.L258:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4368              	 .loc 1 1476 0
 4369 014c BB89     	 ldrh r3,[r7,#12]
 4370 014e 0222     	 movs r2,#2
 4371 0150 62F30A03 	 bfi r3,r2,#0,#11
 4372 0154 BB81     	 strh r3,[r7,#12]
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4373              	 .loc 1 1477 0
 4374 0156 05E0     	 b .L263
 4375              	.L260:
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4376              	 .loc 1 1479 0
 4377 0158 BB89     	 ldrh r3,[r7,#12]
 4378 015a 0322     	 movs r2,#3
 4379 015c 62F30A03 	 bfi r3,r2,#0,#11
 4380 0160 BB81     	 strh r3,[r7,#12]
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4381              	 .loc 1 1480 0
 4382 0162 00BF     	 nop
 4383              	.L263:
 4384 0164 07E0     	 b .L264
 4385              	.L256:
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1486:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1487:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4386              	 .loc 1 1487 0
 4387 0166 BB88     	 ldrh r3,[r7,#4]
 4388 0168 C3F30A03 	 ubfx r3,r3,#0,#11
 4389 016c 9AB2     	 uxth r2,r3
 4390 016e BB89     	 ldrh r3,[r7,#12]
 4391 0170 62F30A03 	 bfi r3,r2,#0,#11
 4392 0174 BB81     	 strh r3,[r7,#12]
 4393              	.L264:
1488:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1489:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4394              	 .loc 1 1490 0 discriminator 2
 4395 0176 FB7B     	 ldrb r3,[r7,#15]
 4396 0178 43F01003 	 orr r3,r3,#16
 4397 017c FB73     	 strb r3,[r7,#15]
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
 4398              	 .loc 1 1492 0 discriminator 2
 4399 017e BB7B     	 ldrb r3,[r7,#14]
 4400 0180 6FF34513 	 bfc r3,#5,#1
 4401 0184 BB73     	 strb r3,[r7,#14]
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4402              	 .loc 1 1494 0 discriminator 2
 4403 0186 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4404 018a 0346     	 mov r3,r0
 4405 018c 03F00F03 	 and r3,r3,#15
 4406 0190 D9B2     	 uxtb r1,r3
 4407 0192 7A69     	 ldr r2,[r7,#20]
 4408 0194 9388     	 ldrh r3,[r2,#4]
 4409 0196 61F38913 	 bfi r3,r1,#6,#4
 4410 019a 9380     	 strh r3,[r2,#4]
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 4411              	 .loc 1 1495 0 discriminator 2
 4412 019c 7B69     	 ldr r3,[r7,#20]
 4413 019e 9B88     	 ldrh r3,[r3,#4]
 4414 01a0 C3F38313 	 ubfx r3,r3,#6,#4
 4415 01a4 DAB2     	 uxtb r2,r3
 4416 01a6 FB89     	 ldrh r3,[r7,#14]
 4417 01a8 62F38913 	 bfi r3,r2,#6,#4
 4418 01ac FB81     	 strh r3,[r7,#14]
1496:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 4419              	 .loc 1 1496 0 discriminator 2
 4420 01ae 7B69     	 ldr r3,[r7,#20]
 4421 01b0 1B78     	 ldrb r3,[r3]
 4422 01b2 C3F30303 	 ubfx r3,r3,#0,#4
 4423 01b6 DBB2     	 uxtb r3,r3
 4424 01b8 2E4A     	 ldr r2,.L277
 4425 01ba 6A33     	 adds r3,r3,#106
 4426 01bc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4427 01c0 FA68     	 ldr r2,[r7,#12]
 4428 01c2 1A60     	 str r2,[r3]
1497:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 4429              	 .loc 1 1497 0 discriminator 2
 4430 01c4 3A8A     	 ldrh r2,[r7,#16]
 4431 01c6 7B69     	 ldr r3,[r7,#20]
 4432 01c8 1B78     	 ldrb r3,[r3]
 4433 01ca C3F30303 	 ubfx r3,r3,#0,#4
 4434 01ce DBB2     	 uxtb r3,r3
 4435 01d0 1946     	 mov r1,r3
 4436 01d2 0123     	 movs r3,#1
 4437 01d4 8B40     	 lsls r3,r3,r1
 4438 01d6 9BB2     	 uxth r3,r3
 4439 01d8 1343     	 orrs r3,r3,r2
 4440 01da 9BB2     	 uxth r3,r3
 4441 01dc 3B82     	 strh r3,[r7,#16]
 4442              	.L255:
 4443              	.LBE6:
1498:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1499:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4444              	 .loc 1 1499 0
 4445 01de 7B69     	 ldr r3,[r7,#20]
 4446 01e0 1B78     	 ldrb r3,[r3]
 4447 01e2 23F07F03 	 bic r3,r3,#127
 4448 01e6 DBB2     	 uxtb r3,r3
 4449 01e8 002B     	 cmp r3,#0
 4450 01ea 02D0     	 beq .L265
 4451              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 4452 01ec BB79     	 ldrb r3,[r7,#6]
 4453 01ee 002B     	 cmp r3,#0
 4454 01f0 73D1     	 bne .L266
 4455              	.L265:
 4456              	.LBB7:
1500:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1501:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4457              	 .loc 1 1503 0 is_stmt 1
 4458 01f2 7B69     	 ldr r3,[r7,#20]
 4459 01f4 1B78     	 ldrb r3,[r3]
 4460 01f6 C3F30303 	 ubfx r3,r3,#0,#4
 4461 01fa DBB2     	 uxtb r3,r3
 4462 01fc 1D4A     	 ldr r2,.L277
 4463 01fe 7033     	 adds r3,r3,#112
 4464 0200 9B00     	 lsls r3,r3,#2
 4465 0202 1344     	 add r3,r3,r2
 4466 0204 5B68     	 ldr r3,[r3,#4]
 4467 0206 1B68     	 ldr r3,[r3]
 4468 0208 BB60     	 str r3,[r7,#8]
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4469              	 .loc 1 1505 0
 4470 020a 7B7A     	 ldrb r3,[r7,#9]
 4471 020c 43F08003 	 orr r3,r3,#128
 4472 0210 7B72     	 strb r3,[r7,#9]
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4473              	 .loc 1 1507 0
 4474 0212 BB79     	 ldrb r3,[r7,#6]
 4475 0214 03F00303 	 and r3,r3,#3
 4476 0218 DAB2     	 uxtb r2,r3
 4477 021a BB7A     	 ldrb r3,[r7,#10]
 4478 021c 62F38303 	 bfi r3,r2,#2,#2
 4479 0220 BB72     	 strb r3,[r7,#10]
1508:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4480              	 .loc 1 1509 0
 4481 0222 BB79     	 ldrb r3,[r7,#6]
 4482 0224 002B     	 cmp r3,#0
 4483 0226 2FD1     	 bne .L267
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4484              	 .loc 1 1511 0
 4485 0228 BB88     	 ldrh r3,[r7,#4]
 4486 022a 102B     	 cmp r3,#16
 4487 022c 14D0     	 beq .L269
 4488 022e 102B     	 cmp r3,#16
 4489 0230 02DC     	 bgt .L270
 4490 0232 082B     	 cmp r3,#8
 4491 0234 16D0     	 beq .L271
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4492              	 .loc 1 1526 0
 4493 0236 1BE0     	 b .L274
 4494              	.L270:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4495              	 .loc 1 1511 0
 4496 0238 202B     	 cmp r3,#32
 4497 023a 07D0     	 beq .L272
 4498 023c 402B     	 cmp r3,#64
 4499 023e 00D0     	 beq .L273
 4500              	 .loc 1 1526 0
 4501 0240 16E0     	 b .L274
 4502              	.L273:
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4503              	 .loc 1 1514 0
 4504 0242 3B89     	 ldrh r3,[r7,#8]
 4505 0244 6FF30A03 	 bfc r3,#0,#11
 4506 0248 3B81     	 strh r3,[r7,#8]
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4507              	 .loc 1 1515 0
 4508 024a 11E0     	 b .L274
 4509              	.L272:
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4510              	 .loc 1 1517 0
 4511 024c 3B89     	 ldrh r3,[r7,#8]
 4512 024e 0122     	 movs r2,#1
 4513 0250 62F30A03 	 bfi r3,r2,#0,#11
 4514 0254 3B81     	 strh r3,[r7,#8]
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4515              	 .loc 1 1518 0
 4516 0256 0BE0     	 b .L274
 4517              	.L269:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4518              	 .loc 1 1520 0
 4519 0258 3B89     	 ldrh r3,[r7,#8]
 4520 025a 0222     	 movs r2,#2
 4521 025c 62F30A03 	 bfi r3,r2,#0,#11
 4522 0260 3B81     	 strh r3,[r7,#8]
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4523              	 .loc 1 1521 0
 4524 0262 05E0     	 b .L274
 4525              	.L271:
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4526              	 .loc 1 1523 0
 4527 0264 3B89     	 ldrh r3,[r7,#8]
 4528 0266 0322     	 movs r2,#3
 4529 0268 62F30A03 	 bfi r3,r2,#0,#11
 4530 026c 3B81     	 strh r3,[r7,#8]
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4531              	 .loc 1 1524 0
 4532 026e 00BF     	 nop
 4533              	.L274:
 4534 0270 12E0     	 b .L275
 4535              	.L278:
 4536 0272 00BF     	 .align 2
 4537              	.L277:
 4538 0274 00000000 	 .word xmc_device
 4539 0278 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 4540 027c 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 4541 0280 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 4542 0284 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 4543              	.L267:
1527:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1528:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1529:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1530:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4544              	 .loc 1 1531 0
 4545 0288 BB88     	 ldrh r3,[r7,#4]
 4546 028a C3F30A03 	 ubfx r3,r3,#0,#11
 4547 028e 9AB2     	 uxth r2,r3
 4548 0290 3B89     	 ldrh r3,[r7,#8]
 4549 0292 62F30A03 	 bfi r3,r2,#0,#11
 4550 0296 3B81     	 strh r3,[r7,#8]
 4551              	.L275:
1532:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1533:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4552              	 .loc 1 1534 0 discriminator 4
 4553 0298 FB7A     	 ldrb r3,[r7,#11]
 4554 029a 43F01003 	 orr r3,r3,#16
 4555 029e FB72     	 strb r3,[r7,#11]
1535:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
 4556              	 .loc 1 1536 0 discriminator 4
 4557 02a0 BB7A     	 ldrb r3,[r7,#10]
 4558 02a2 6FF34513 	 bfc r3,#5,#1
 4559 02a6 BB72     	 strb r3,[r7,#10]
1537:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 4560              	 .loc 1 1537 0 discriminator 4
 4561 02a8 7B69     	 ldr r3,[r7,#20]
 4562 02aa 1B78     	 ldrb r3,[r3]
 4563 02ac C3F30303 	 ubfx r3,r3,#0,#4
 4564 02b0 DBB2     	 uxtb r3,r3
 4565 02b2 0F4A     	 ldr r2,.L279
 4566 02b4 7033     	 adds r3,r3,#112
 4567 02b6 9B00     	 lsls r3,r3,#2
 4568 02b8 1344     	 add r3,r3,r2
 4569 02ba 5B68     	 ldr r3,[r3,#4]
 4570 02bc BA68     	 ldr r2,[r7,#8]
 4571 02be 1A60     	 str r2,[r3]
1538:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 4572              	 .loc 1 1538 0 discriminator 4
 4573 02c0 7A8A     	 ldrh r2,[r7,#18]
 4574 02c2 7B69     	 ldr r3,[r7,#20]
 4575 02c4 1B78     	 ldrb r3,[r3]
 4576 02c6 C3F30303 	 ubfx r3,r3,#0,#4
 4577 02ca DBB2     	 uxtb r3,r3
 4578 02cc 1946     	 mov r1,r3
 4579 02ce 0123     	 movs r3,#1
 4580 02d0 8B40     	 lsls r3,r3,r1
 4581 02d2 9BB2     	 uxth r3,r3
 4582 02d4 1343     	 orrs r3,r3,r2
 4583 02d6 9BB2     	 uxth r3,r3
 4584 02d8 7B82     	 strh r3,[r7,#18]
 4585              	.L266:
 4586              	.LBE7:
1539:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1540:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 4587              	 .loc 1 1540 0
 4588 02da 054B     	 ldr r3,.L279
 4589 02dc D3F8A431 	 ldr r3,[r3,#420]
 4590 02e0 3A69     	 ldr r2,[r7,#16]
 4591 02e2 DA61     	 str r2,[r3,#28]
1541:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4592              	 .loc 1 1541 0
 4593 02e4 0023     	 movs r3,#0
1542:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4594              	 .loc 1 1542 0
 4595 02e6 1846     	 mov r0,r3
 4596 02e8 1837     	 adds r7,r7,#24
 4597              	 .cfi_def_cfa_offset 8
 4598 02ea BD46     	 mov sp,r7
 4599              	 .cfi_def_cfa_register 13
 4600              	 
 4601 02ec 80BD     	 pop {r7,pc}
 4602              	.L280:
 4603 02ee 00BF     	 .align 2
 4604              	.L279:
 4605 02f0 00000000 	 .word xmc_device
 4606              	 .cfi_endproc
 4607              	.LFE211:
 4609              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 4610              	 .align 2
 4611              	 .global XMC_USBD_EndpointUnconfigure
 4612              	 .thumb
 4613              	 .thumb_func
 4615              	XMC_USBD_EndpointUnconfigure:
 4616              	.LFB212:
1543:../Libraries/XMCLib/src/xmc_usbd.c **** 
1544:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1545:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1547:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4617              	 .loc 1 1548 0
 4618              	 .cfi_startproc
 4619              	 
 4620              	 
 4621 0000 80B5     	 push {r7,lr}
 4622              	 .cfi_def_cfa_offset 8
 4623              	 .cfi_offset 7,-8
 4624              	 .cfi_offset 14,-4
 4625 0002 88B0     	 sub sp,sp,#32
 4626              	 .cfi_def_cfa_offset 40
 4627 0004 00AF     	 add r7,sp,#0
 4628              	 .cfi_def_cfa_register 7
 4629 0006 0346     	 mov r3,r0
 4630 0008 FB71     	 strb r3,[r7,#7]
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4631              	 .loc 1 1549 0
 4632 000a FB79     	 ldrb r3,[r7,#7]
 4633 000c 03F00F03 	 and r3,r3,#15
 4634 0010 3422     	 movs r2,#52
 4635 0012 02FB03F3 	 mul r3,r2,r3
 4636 0016 544A     	 ldr r2,.L289
 4637 0018 1344     	 add r3,r3,r2
 4638 001a BB61     	 str r3,[r7,#24]
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
 4639              	 .loc 1 1554 0
 4640 001c 0023     	 movs r3,#0
 4641 001e 3B61     	 str r3,[r7,#16]
1555:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4642              	 .loc 1 1555 0
 4643 0020 514B     	 ldr r3,.L289
 4644 0022 D3F8A431 	 ldr r3,[r3,#420]
 4645 0026 DB69     	 ldr r3,[r3,#28]
 4646 0028 FB60     	 str r3,[r7,#12]
1556:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 4647              	 .loc 1 1556 0
 4648 002a BB69     	 ldr r3,[r7,#24]
 4649 002c 1B78     	 ldrb r3,[r3]
 4650 002e C3F30303 	 ubfx r3,r3,#0,#4
 4651 0032 DBB2     	 uxtb r3,r3
 4652 0034 1A46     	 mov r2,r3
 4653 0036 0123     	 movs r3,#1
 4654 0038 9340     	 lsls r3,r3,r2
 4655 003a 7B61     	 str r3,[r7,#20]
1557:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4656              	 .loc 1 1558 0
 4657 003c BB69     	 ldr r3,[r7,#24]
 4658 003e 1B79     	 ldrb r3,[r3,#4]
 4659 0040 03F00403 	 and r3,r3,#4
 4660 0044 DBB2     	 uxtb r3,r3
 4661 0046 002B     	 cmp r3,#0
 4662 0048 02D1     	 bne .L282
1559:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1560:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
 4663              	 .loc 1 1560 0
 4664 004a 0123     	 movs r3,#1
 4665 004c FB77     	 strb r3,[r7,#31]
 4666 004e 85E0     	 b .L283
 4667              	.L282:
1561:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1562:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1563:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 4668              	 .loc 1 1565 0
 4669 0050 7B7C     	 ldrb r3,[r7,#17]
 4670 0052 6FF3C713 	 bfc r3,#7,#1
 4671 0056 7B74     	 strb r3,[r7,#17]
1566:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 4672              	 .loc 1 1566 0
 4673 0058 FB7C     	 ldrb r3,[r7,#19]
 4674 005a 43F04003 	 orr r3,r3,#64
 4675 005e FB74     	 strb r3,[r7,#19]
1567:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 4676              	 .loc 1 1567 0
 4677 0060 FB7C     	 ldrb r3,[r7,#19]
 4678 0062 43F00803 	 orr r3,r3,#8
 4679 0066 FB74     	 strb r3,[r7,#19]
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 4680              	 .loc 1 1568 0
 4681 0068 BB7C     	 ldrb r3,[r7,#18]
 4682 006a 6FF34513 	 bfc r3,#5,#1
 4683 006e BB74     	 strb r3,[r7,#18]
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 4684              	 .loc 1 1569 0
 4685 0070 BA69     	 ldr r2,[r7,#24]
 4686 0072 1379     	 ldrb r3,[r2,#4]
 4687 0074 6FF38203 	 bfc r3,#2,#1
 4688 0078 1371     	 strb r3,[r2,#4]
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 4689              	 .loc 1 1570 0
 4690 007a BA69     	 ldr r2,[r7,#24]
 4691 007c 1379     	 ldrb r3,[r2,#4]
 4692 007e 6FF34513 	 bfc r3,#5,#1
 4693 0082 1371     	 strb r3,[r2,#4]
1571:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 4694              	 .loc 1 1571 0
 4695 0084 BB69     	 ldr r3,[r7,#24]
 4696 0086 5A68     	 ldr r2,[r3,#4]
 4697 0088 22F01002 	 bic r2,r2,#16
 4698 008c 5A60     	 str r2,[r3,#4]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 4699              	 .loc 1 1572 0
 4700 008e BB69     	 ldr r3,[r7,#24]
 4701 0090 5A68     	 ldr r2,[r3,#4]
 4702 0092 22F00802 	 bic r2,r2,#8
 4703 0096 5A60     	 str r2,[r3,#4]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4704              	 .loc 1 1574 0
 4705 0098 BB69     	 ldr r3,[r7,#24]
 4706 009a 1B78     	 ldrb r3,[r3]
 4707 009c 23F07F03 	 bic r3,r3,#127
 4708 00a0 DBB2     	 uxtb r3,r3
 4709 00a2 002B     	 cmp r3,#0
 4710 00a4 06D1     	 bne .L284
 4711              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 4712 00a6 BB69     	 ldr r3,[r7,#24]
 4713 00a8 1B79     	 ldrb r3,[r3,#4]
 4714 00aa 03F00303 	 and r3,r3,#3
 4715 00ae DBB2     	 uxtb r3,r3
 4716 00b0 002B     	 cmp r3,#0
 4717 00b2 12D1     	 bne .L285
 4718              	.L284:
1575:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4719              	 .loc 1 1577 0 is_stmt 1
 4720 00b4 BB69     	 ldr r3,[r7,#24]
 4721 00b6 1B78     	 ldrb r3,[r3]
 4722 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 4723 00bc DBB2     	 uxtb r3,r3
 4724 00be 2A4A     	 ldr r2,.L289
 4725 00c0 6A33     	 adds r3,r3,#106
 4726 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4727 00c6 3A69     	 ldr r2,[r7,#16]
 4728 00c8 1A60     	 str r2,[r3]
1578:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 4729              	 .loc 1 1579 0
 4730 00ca BA89     	 ldrh r2,[r7,#12]
 4731 00cc 7B69     	 ldr r3,[r7,#20]
 4732 00ce 9BB2     	 uxth r3,r3
 4733 00d0 DB43     	 mvns r3,r3
 4734 00d2 9BB2     	 uxth r3,r3
 4735 00d4 1340     	 ands r3,r3,r2
 4736 00d6 9BB2     	 uxth r3,r3
 4737 00d8 BB81     	 strh r3,[r7,#12]
 4738              	.L285:
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1581:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4739              	 .loc 1 1581 0
 4740 00da BB69     	 ldr r3,[r7,#24]
 4741 00dc 1B78     	 ldrb r3,[r3]
 4742 00de 23F07F03 	 bic r3,r3,#127
 4743 00e2 DBB2     	 uxtb r3,r3
 4744 00e4 002B     	 cmp r3,#0
 4745 00e6 06D0     	 beq .L286
 4746              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 4747 00e8 BB69     	 ldr r3,[r7,#24]
 4748 00ea 1B79     	 ldrb r3,[r3,#4]
 4749 00ec 03F00303 	 and r3,r3,#3
 4750 00f0 DBB2     	 uxtb r3,r3
 4751 00f2 002B     	 cmp r3,#0
 4752 00f4 23D1     	 bne .L287
 4753              	.L286:
1582:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1583:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4754              	 .loc 1 1583 0 is_stmt 1
 4755 00f6 BB69     	 ldr r3,[r7,#24]
 4756 00f8 1B78     	 ldrb r3,[r3]
 4757 00fa C3F30303 	 ubfx r3,r3,#0,#4
 4758 00fe DBB2     	 uxtb r3,r3
 4759 0100 194A     	 ldr r2,.L289
 4760 0102 7033     	 adds r3,r3,#112
 4761 0104 9B00     	 lsls r3,r3,#2
 4762 0106 1344     	 add r3,r3,r2
 4763 0108 5B68     	 ldr r3,[r3,#4]
 4764 010a 3A69     	 ldr r2,[r7,#16]
 4765 010c 1A60     	 str r2,[r3]
1584:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 4766              	 .loc 1 1584 0
 4767 010e FA89     	 ldrh r2,[r7,#14]
 4768 0110 7B69     	 ldr r3,[r7,#20]
 4769 0112 9BB2     	 uxth r3,r3
 4770 0114 DB43     	 mvns r3,r3
 4771 0116 9BB2     	 uxth r3,r3
 4772 0118 1340     	 ands r3,r3,r2
 4773 011a 9BB2     	 uxth r3,r3
 4774 011c FB81     	 strh r3,[r7,#14]
1585:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 4775              	 .loc 1 1585 0
 4776 011e 134B     	 ldr r3,.L289+4
 4777 0120 1B68     	 ldr r3,[r3]
 4778 0122 5B7B     	 ldrb r3,[r3,#13]
 4779 0124 012B     	 cmp r3,#1
 4780 0126 0AD1     	 bne .L287
1586:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1587:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 4781              	 .loc 1 1587 0
 4782 0128 0F4B     	 ldr r3,.L289
 4783 012a D3F8A431 	 ldr r3,[r3,#420]
 4784 012e 0E4A     	 ldr r2,.L289
 4785 0130 D2F8A421 	 ldr r2,[r2,#420]
 4786 0134 516B     	 ldr r1,[r2,#52]
 4787 0136 7A69     	 ldr r2,[r7,#20]
 4788 0138 D243     	 mvns r2,r2
 4789 013a 0A40     	 ands r2,r2,r1
 4790 013c 5A63     	 str r2,[r3,#52]
 4791              	.L287:
1588:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1589:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1590:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 4792              	 .loc 1 1590 0
 4793 013e 0A4B     	 ldr r3,.L289
 4794 0140 D3F8A431 	 ldr r3,[r3,#420]
 4795 0144 FA68     	 ldr r2,[r7,#12]
 4796 0146 DA61     	 str r2,[r3,#28]
1591:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 4797              	 .loc 1 1591 0
 4798 0148 BB69     	 ldr r3,[r7,#24]
 4799 014a 9B88     	 ldrh r3,[r3,#4]
 4800 014c C3F38313 	 ubfx r3,r3,#6,#4
 4801 0150 DBB2     	 uxtb r3,r3
 4802 0152 1846     	 mov r0,r3
 4803 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1592:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 4804              	 .loc 1 1592 0
 4805 0158 0023     	 movs r3,#0
 4806 015a FB77     	 strb r3,[r7,#31]
 4807              	.L283:
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4808              	 .loc 1 1594 0
 4809 015c FB7F     	 ldrb r3,[r7,#31]
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4810              	 .loc 1 1595 0
 4811 015e 1846     	 mov r0,r3
 4812 0160 2037     	 adds r7,r7,#32
 4813              	 .cfi_def_cfa_offset 8
 4814 0162 BD46     	 mov sp,r7
 4815              	 .cfi_def_cfa_register 13
 4816              	 
 4817 0164 80BD     	 pop {r7,pc}
 4818              	.L290:
 4819 0166 00BF     	 .align 2
 4820              	.L289:
 4821 0168 00000000 	 .word xmc_device
 4822 016c 00000000 	 .word usbd_init
 4823              	 .cfi_endproc
 4824              	.LFE212:
 4826              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 4827              	 .align 2
 4828              	 .global XMC_USBD_GetFrameNumber
 4829              	 .thumb
 4830              	 .thumb_func
 4832              	XMC_USBD_GetFrameNumber:
 4833              	.LFB213:
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1600:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4834              	 .loc 1 1601 0
 4835              	 .cfi_startproc
 4836              	 
 4837              	 
 4838              	 
 4839 0000 80B4     	 push {r7}
 4840              	 .cfi_def_cfa_offset 4
 4841              	 .cfi_offset 7,-4
 4842 0002 83B0     	 sub sp,sp,#12
 4843              	 .cfi_def_cfa_offset 16
 4844 0004 00AF     	 add r7,sp,#0
 4845              	 .cfi_def_cfa_register 7
1602:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 4846              	 .loc 1 1604 0
 4847 0006 084B     	 ldr r3,.L293
 4848 0008 D3F8A431 	 ldr r3,[r3,#420]
 4849 000c 9B68     	 ldr r3,[r3,#8]
 4850 000e 3B60     	 str r3,[r7]
1605:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 4851              	 .loc 1 1605 0
 4852 0010 3B68     	 ldr r3,[r7]
 4853 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 4854 0016 9BB2     	 uxth r3,r3
 4855 0018 FB80     	 strh r3,[r7,#6]
1606:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 4856              	 .loc 1 1606 0
 4857 001a FB88     	 ldrh r3,[r7,#6]
1607:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4858              	 .loc 1 1607 0
 4859 001c 1846     	 mov r0,r3
 4860 001e 0C37     	 adds r7,r7,#12
 4861              	 .cfi_def_cfa_offset 4
 4862 0020 BD46     	 mov sp,r7
 4863              	 .cfi_def_cfa_register 13
 4864              	 
 4865 0022 5DF8047B 	 ldr r7,[sp],#4
 4866              	 .cfi_restore 7
 4867              	 .cfi_def_cfa_offset 0
 4868 0026 7047     	 bx lr
 4869              	.L294:
 4870              	 .align 2
 4871              	.L293:
 4872 0028 00000000 	 .word xmc_device
 4873              	 .cfi_endproc
 4874              	.LFE213:
 4876              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 4877              	 .align 2
 4878              	 .global XMC_USBD_IsEnumDone
 4879              	 .thumb
 4880              	 .thumb_func
 4882              	XMC_USBD_IsEnumDone:
 4883              	.LFB214:
1608:../Libraries/XMCLib/src/xmc_usbd.c **** 
1609:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1610:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1614:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4884              	 .loc 1 1615 0
 4885              	 .cfi_startproc
 4886              	 
 4887              	 
 4888              	 
 4889 0000 80B4     	 push {r7}
 4890              	 .cfi_def_cfa_offset 4
 4891              	 .cfi_offset 7,-4
 4892 0002 00AF     	 add r7,sp,#0
 4893              	 .cfi_def_cfa_register 7
1616:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 4894              	 .loc 1 1616 0
 4895 0004 0B4B     	 ldr r3,.L299
 4896 0006 93F8FE31 	 ldrb r3,[r3,#510]
 4897 000a 03F00103 	 and r3,r3,#1
 4898 000e DBB2     	 uxtb r3,r3
 4899 0010 002B     	 cmp r3,#0
 4900 0012 09D0     	 beq .L296
 4901              	 .loc 1 1616 0 is_stmt 0 discriminator 1
 4902 0014 074B     	 ldr r3,.L299
 4903 0016 93F8FE31 	 ldrb r3,[r3,#510]
 4904 001a 03F00403 	 and r3,r3,#4
 4905 001e DBB2     	 uxtb r3,r3
 4906 0020 002B     	 cmp r3,#0
 4907 0022 01D0     	 beq .L296
 4908              	 .loc 1 1616 0 discriminator 3
 4909 0024 0123     	 movs r3,#1
 4910 0026 00E0     	 b .L297
 4911              	.L296:
 4912              	 .loc 1 1616 0 discriminator 4
 4913 0028 0023     	 movs r3,#0
 4914              	.L297:
1617:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4915              	 .loc 1 1617 0 is_stmt 1 discriminator 6
 4916 002a 1846     	 mov r0,r3
 4917 002c BD46     	 mov sp,r7
 4918              	 .cfi_def_cfa_register 13
 4919              	 
 4920 002e 5DF8047B 	 ldr r7,[sp],#4
 4921              	 .cfi_restore 7
 4922              	 .cfi_def_cfa_offset 0
 4923 0032 7047     	 bx lr
 4924              	.L300:
 4925              	 .align 2
 4926              	.L299:
 4927 0034 00000000 	 .word xmc_device
 4928              	 .cfi_endproc
 4929              	.LFE214:
 4931              	 .text
 4932              	.Letext0:
 4933              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4934              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4935              	 .file 4 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 4936              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 4937              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc4_scu.h"
 4938              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/XMCLib/inc/xmc_usbd.h"
 4939              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/cmsis_gcc.h"
 4940              	 .file 9 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Include/core_cm4.h"
 4941              	 .file 10 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/04_CANModule/CAN_Modul_keckvale_AH/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:24     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:21     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:31     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:28     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                            *COM*:00000208 xmc_device
    {standard input}:35     USB_RAM:00000000 $d
    {standard input}:38     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:43     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
                            *COM*:00000004 usbd_init
    {standard input}:51     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:48     .rodata.Driver_USBD0:00000000 $d
    {standard input}:2838   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:2917   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3254   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3310   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3364   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3418   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:3814   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4180   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:4615   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:3881   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3489   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3597   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:3692   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4079   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:4832   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:4882   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:69     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:74     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:154    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:159    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:163    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:317    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:322    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:326    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:442    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:447    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:451    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:541    .text.XMC_USBD_lFlushTXFifo:00000080 $d
    {standard input}:546    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:550    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:628    .text.XMC_USBD_lFlushRXFifo:00000064 $d
    {standard input}:633    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:637    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:721    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:726    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:730    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:772    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:777    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:781    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:989    .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:995    .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:999    .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1218   .text.XMC_USBD_lStartWriteXfer:0000018c $d
    {standard input}:1224   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1228   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2738   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2788   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2451   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1427   .text.XMC_USBD_lHandleUSBReset:00000148 $d
    {standard input}:1432   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1436   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2587   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1486   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1491   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1495   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1566   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1571   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1575   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2686   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:1826   .text.XMC_USBD_lHandleOEPInt:000001b4 $d
    {standard input}:1831   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:1835   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2636   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2087   .text.XMC_USBD_lHandleIEPInt:000001b4 $d
    {standard input}:2092   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2096   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2126   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2132   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2175   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2180   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2185   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2377   .text.XMC_USBD_IRQHandler:00000148 $d
    {standard input}:2382   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2387   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2409   .text.XMC_USBD_Enable:00000010 $d
    {standard input}:2414   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2419   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2441   .text.XMC_USBD_Disable:00000010 $d
    {standard input}:2446   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2478   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2492   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2578   .text.XMC_USBD_ClearEvent:000000c4 $d
    {standard input}:2583   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2626   .text.XMC_USBD_lClearEventOTG:00000024 $d
    {standard input}:2631   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2676   .text.XMC_USBD_ClearEventINEP:00000028 $d
    {standard input}:2681   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2728   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:2733   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2778   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:2783   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2828   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:2833   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:2912   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3241   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3249   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3300   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3305   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3354   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3359   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3408   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:3413   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3479   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3484   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3587   .text.XMC_USBD_EndpointReadStart:00000088 $d
    {standard input}:3592   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:3682   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:3687   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:3804   .text.XMC_USBD_EndpointWrite:000000a4 $d
    {standard input}:3809   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:3871   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:3876   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4069   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4074   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4170   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4175   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:4538   .text.XMC_USBD_EndpointConfigure:00000274 $d
    {standard input}:4545   .text.XMC_USBD_EndpointConfigure:00000288 $t
    {standard input}:4605   .text.XMC_USBD_EndpointConfigure:000002f0 $d
    {standard input}:4610   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:4821   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:4827   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:4872   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:4877   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:4927   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_POWER_DisableUsb
memset
memcpy
