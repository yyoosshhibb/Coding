   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "rtGetNaN.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global __aeabi_f2d
  20              	 .section .text.rtGetNaN,"ax",%progbits
  21              	 .align 2
  22              	 .global rtGetNaN
  23              	 .thumb
  24              	 .thumb_func
  26              	rtGetNaN:
  27              	.LFB0:
  28              	 .file 1 "../Simulink/rtGetNaN.c"
   1:../Simulink/rtGetNaN.c **** /*
   2:../Simulink/rtGetNaN.c ****  * Academic License - for use in teaching, academic research, and meeting
   3:../Simulink/rtGetNaN.c ****  * course requirements at degree granting institutions only.  Not for
   4:../Simulink/rtGetNaN.c ****  * government, commercial, or other organizational use.
   5:../Simulink/rtGetNaN.c ****  *
   6:../Simulink/rtGetNaN.c ****  * File: rtGetNaN.c
   7:../Simulink/rtGetNaN.c ****  *
   8:../Simulink/rtGetNaN.c ****  * Code generated for Simulink model : VCU.
   9:../Simulink/rtGetNaN.c ****  * Model version      : 1.313
  10:../Simulink/rtGetNaN.c ****  * Simulink Coder version    : 8.14 (R2018a) 06-Feb-2018
  11:../Simulink/rtGetNaN.c ****  * TLC version       : 8.14 (Feb 22 2018)
  12:../Simulink/rtGetNaN.c ****  * C/C++ source code generated on  : Sun Jul 25 17:15:57 2021
  13:../Simulink/rtGetNaN.c ****  *
  14:../Simulink/rtGetNaN.c ****  * Target selection: Infineon_XMC_Family.tlc
  15:../Simulink/rtGetNaN.c ****  * Embedded hardware selection: ARM Compatible->ARM Cortex
  16:../Simulink/rtGetNaN.c ****  * Code generation objectives: Unspecified
  17:../Simulink/rtGetNaN.c ****  * Validation result: Not run
  18:../Simulink/rtGetNaN.c ****  */
  19:../Simulink/rtGetNaN.c **** 
  20:../Simulink/rtGetNaN.c **** /*
  21:../Simulink/rtGetNaN.c ****  * Abstract:
  22:../Simulink/rtGetNaN.c ****  *      Function to initialize non-finite, NaN
  23:../Simulink/rtGetNaN.c ****  */
  24:../Simulink/rtGetNaN.c **** #include "rtGetNaN.h"
  25:../Simulink/rtGetNaN.c **** #define NumBitsPerChar                 8U
  26:../Simulink/rtGetNaN.c **** 
  27:../Simulink/rtGetNaN.c **** /*
  28:../Simulink/rtGetNaN.c ****  * Initialize rtNaN needed by the generated code.
  29:../Simulink/rtGetNaN.c ****  * NaN is initialized as non-signaling. Assumes IEEE.
  30:../Simulink/rtGetNaN.c ****  */
  31:../Simulink/rtGetNaN.c **** real_T rtGetNaN(void)
  32:../Simulink/rtGetNaN.c **** {
  29              	 .loc 1 32 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33 0000 80B5     	 push {r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 86B0     	 sub sp,sp,#24
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 32
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  33:../Simulink/rtGetNaN.c ****   size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);
  44              	 .loc 1 33 0
  45 0006 4023     	 movs r3,#64
  46 0008 FB60     	 str r3,[r7,#12]
  34:../Simulink/rtGetNaN.c ****   real_T nan = 0.0;
  47              	 .loc 1 34 0
  48 000a 4FF00002 	 mov r2,#0
  49 000e 4FF00003 	 mov r3,#0
  50 0012 C7E90423 	 strd r2,[r7,#16]
  35:../Simulink/rtGetNaN.c ****   if (bitsPerReal == 32U) {
  51              	 .loc 1 35 0
  52 0016 FB68     	 ldr r3,[r7,#12]
  53 0018 202B     	 cmp r3,#32
  54 001a 0AD1     	 bne .L2
  36:../Simulink/rtGetNaN.c ****     nan = rtGetNaNF();
  55              	 .loc 1 36 0
  56 001c FFF7FEFF 	 bl rtGetNaNF
  57 0020 0346     	 mov r3,r0
  58 0022 1846     	 mov r0,r3
  59 0024 FFF7FEFF 	 bl __aeabi_f2d
  60 0028 0246     	 mov r2,r0
  61 002a 0B46     	 mov r3,r1
  62 002c C7E90423 	 strd r2,[r7,#16]
  63 0030 07E0     	 b .L3
  64              	.L2:
  65              	.LBB2:
  37:../Simulink/rtGetNaN.c ****   } else {
  38:../Simulink/rtGetNaN.c ****     union {
  39:../Simulink/rtGetNaN.c ****       LittleEndianIEEEDouble bitVal;
  40:../Simulink/rtGetNaN.c ****       real_T fltVal;
  41:../Simulink/rtGetNaN.c ****     } tmpVal;
  42:../Simulink/rtGetNaN.c **** 
  43:../Simulink/rtGetNaN.c ****     tmpVal.bitVal.words.wordH = 0xFFF80000U;
  66              	 .loc 1 43 0
  67 0032 074B     	 ldr r3,.L5
  68 0034 7B60     	 str r3,[r7,#4]
  44:../Simulink/rtGetNaN.c ****     tmpVal.bitVal.words.wordL = 0x00000000U;
  69              	 .loc 1 44 0
  70 0036 0023     	 movs r3,#0
  71 0038 3B60     	 str r3,[r7]
  45:../Simulink/rtGetNaN.c ****     nan = tmpVal.fltVal;
  72              	 .loc 1 45 0
  73 003a D7E90023 	 ldrd r2,[r7]
  74 003e C7E90423 	 strd r2,[r7,#16]
  75              	.L3:
  76              	.LBE2:
  46:../Simulink/rtGetNaN.c ****   }
  47:../Simulink/rtGetNaN.c **** 
  48:../Simulink/rtGetNaN.c ****   return nan;
  77              	 .loc 1 48 0
  78 0042 D7E90423 	 ldrd r2,[r7,#16]
  49:../Simulink/rtGetNaN.c **** }
  79              	 .loc 1 49 0
  80 0046 1046     	 mov r0,r2
  81 0048 1946     	 mov r1,r3
  82 004a 1837     	 adds r7,r7,#24
  83              	.LCFI3:
  84              	 .cfi_def_cfa_offset 8
  85 004c BD46     	 mov sp,r7
  86              	.LCFI4:
  87              	 .cfi_def_cfa_register 13
  88              	 
  89 004e 80BD     	 pop {r7,pc}
  90              	.L6:
  91              	 .align 2
  92              	.L5:
  93 0050 0000F8FF 	 .word -524288
  94              	 .cfi_endproc
  95              	.LFE0:
  97              	 .section .text.rtGetNaNF,"ax",%progbits
  98              	 .align 2
  99              	 .global rtGetNaNF
 100              	 .thumb
 101              	 .thumb_func
 103              	rtGetNaNF:
 104              	.LFB1:
  50:../Simulink/rtGetNaN.c **** 
  51:../Simulink/rtGetNaN.c **** /*
  52:../Simulink/rtGetNaN.c ****  * Initialize rtNaNF needed by the generated code.
  53:../Simulink/rtGetNaN.c ****  * NaN is initialized as non-signaling. Assumes IEEE.
  54:../Simulink/rtGetNaN.c ****  */
  55:../Simulink/rtGetNaN.c **** real32_T rtGetNaNF(void)
  56:../Simulink/rtGetNaN.c **** {
 105              	 .loc 1 56 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109              	 
 110 0000 80B4     	 push {r7}
 111              	.LCFI5:
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 83B0     	 sub sp,sp,#12
 115              	.LCFI6:
 116              	 .cfi_def_cfa_offset 16
 117 0004 00AF     	 add r7,sp,#0
 118              	.LCFI7:
 119              	 .cfi_def_cfa_register 7
  57:../Simulink/rtGetNaN.c ****   IEEESingle nanF = { { 0 } };
 120              	 .loc 1 57 0
 121 0006 4FF00003 	 mov r3,#0
 122 000a 7B60     	 str r3,[r7,#4]
  58:../Simulink/rtGetNaN.c **** 
  59:../Simulink/rtGetNaN.c ****   nanF.wordL.wordLuint = 0xFFC00000U;
 123              	 .loc 1 59 0
 124 000c 044B     	 ldr r3,.L9
 125 000e 7B60     	 str r3,[r7,#4]
  60:../Simulink/rtGetNaN.c ****   return nanF.wordL.wordLreal;
 126              	 .loc 1 60 0
 127 0010 7B68     	 ldr r3,[r7,#4]
  61:../Simulink/rtGetNaN.c **** }
 128              	 .loc 1 61 0
 129 0012 1846     	 mov r0,r3
 130 0014 0C37     	 adds r7,r7,#12
 131              	.LCFI8:
 132              	 .cfi_def_cfa_offset 4
 133 0016 BD46     	 mov sp,r7
 134              	.LCFI9:
 135              	 .cfi_def_cfa_register 13
 136              	 
 137 0018 5DF8047B 	 ldr r7,[sp],#4
 138              	.LCFI10:
 139              	 .cfi_restore 7
 140              	 .cfi_def_cfa_offset 0
 141 001c 7047     	 bx lr
 142              	.L10:
 143 001e 00BF     	 .align 2
 144              	.L9:
 145 0020 0000C0FF 	 .word -4194304
 146              	 .cfi_endproc
 147              	.LFE1:
 149              	 .text
 150              	.Letext0:
 151              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 152              	 .file 3 "../Simulink/rtwtypes.h"
 153              	 .file 4 "../Simulink/rt_nonfinite.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rtGetNaN.c
    {standard input}:21     .text.rtGetNaN:00000000 $t
    {standard input}:26     .text.rtGetNaN:00000000 rtGetNaN
    {standard input}:103    .text.rtGetNaNF:00000000 rtGetNaNF
    {standard input}:93     .text.rtGetNaN:00000050 $d
    {standard input}:98     .text.rtGetNaNF:00000000 $t
    {standard input}:145    .text.rtGetNaNF:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
