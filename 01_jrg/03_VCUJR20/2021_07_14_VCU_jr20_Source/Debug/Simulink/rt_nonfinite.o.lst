   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "rt_nonfinite.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm rtInf,8,8
  20              	 .comm rtMinusInf,8,8
  21              	 .comm rtNaN,8,8
  22              	 .comm rtInfF,4,4
  23              	 .comm rtMinusInfF,4,4
  24              	 .comm rtNaNF,4,4
  25              	 .section .text.rt_InitInfAndNaN,"ax",%progbits
  26              	 .align 2
  27              	 .global rt_InitInfAndNaN
  28              	 .thumb
  29              	 .thumb_func
  31              	rt_InitInfAndNaN:
  32              	.LFB0:
  33              	 .file 1 "../Simulink/rt_nonfinite.c"
   1:../Simulink/rt_nonfinite.c **** /*
   2:../Simulink/rt_nonfinite.c ****  * Academic License - for use in teaching, academic research, and meeting
   3:../Simulink/rt_nonfinite.c ****  * course requirements at degree granting institutions only.  Not for
   4:../Simulink/rt_nonfinite.c ****  * government, commercial, or other organizational use.
   5:../Simulink/rt_nonfinite.c ****  *
   6:../Simulink/rt_nonfinite.c ****  * File: rt_nonfinite.c
   7:../Simulink/rt_nonfinite.c ****  *
   8:../Simulink/rt_nonfinite.c ****  * Code generated for Simulink model : VCU.
   9:../Simulink/rt_nonfinite.c ****  * Model version      : 1.312
  10:../Simulink/rt_nonfinite.c ****  * Simulink Coder version    : 8.14 (R2018a) 06-Feb-2018
  11:../Simulink/rt_nonfinite.c ****  * TLC version       : 8.14 (Feb 22 2018)
  12:../Simulink/rt_nonfinite.c ****  * C/C++ source code generated on  : Wed Jul 14 18:29:54 2021
  13:../Simulink/rt_nonfinite.c ****  *
  14:../Simulink/rt_nonfinite.c ****  * Target selection: Infineon_XMC_Family.tlc
  15:../Simulink/rt_nonfinite.c ****  * Embedded hardware selection: ARM Compatible->ARM Cortex
  16:../Simulink/rt_nonfinite.c ****  * Code generation objectives: Unspecified
  17:../Simulink/rt_nonfinite.c ****  * Validation result: Not run
  18:../Simulink/rt_nonfinite.c ****  */
  19:../Simulink/rt_nonfinite.c **** 
  20:../Simulink/rt_nonfinite.c **** /*
  21:../Simulink/rt_nonfinite.c ****  * Abstract:
  22:../Simulink/rt_nonfinite.c ****  *      Function to initialize non-finites,
  23:../Simulink/rt_nonfinite.c ****  *      (Inf, NaN and -Inf).
  24:../Simulink/rt_nonfinite.c ****  */
  25:../Simulink/rt_nonfinite.c **** #include "rt_nonfinite.h"
  26:../Simulink/rt_nonfinite.c **** #include "rtGetNaN.h"
  27:../Simulink/rt_nonfinite.c **** #include "rtGetInf.h"
  28:../Simulink/rt_nonfinite.c **** 
  29:../Simulink/rt_nonfinite.c **** real_T rtInf;
  30:../Simulink/rt_nonfinite.c **** real_T rtMinusInf;
  31:../Simulink/rt_nonfinite.c **** real_T rtNaN;
  32:../Simulink/rt_nonfinite.c **** real32_T rtInfF;
  33:../Simulink/rt_nonfinite.c **** real32_T rtMinusInfF;
  34:../Simulink/rt_nonfinite.c **** real32_T rtNaNF;
  35:../Simulink/rt_nonfinite.c **** 
  36:../Simulink/rt_nonfinite.c **** /*
  37:../Simulink/rt_nonfinite.c ****  * Initialize the rtInf, rtMinusInf, and rtNaN needed by the
  38:../Simulink/rt_nonfinite.c ****  * generated code. NaN is initialized as non-signaling. Assumes IEEE.
  39:../Simulink/rt_nonfinite.c ****  */
  40:../Simulink/rt_nonfinite.c **** void rt_InitInfAndNaN(size_t realSize)
  41:../Simulink/rt_nonfinite.c **** {
  34              	 .loc 1 41 0
  35              	 .cfi_startproc
  36              	 
  37              	 
  38 0000 80B5     	 push {r7,lr}
  39              	.LCFI0:
  40              	 .cfi_def_cfa_offset 8
  41              	 .cfi_offset 7,-8
  42              	 .cfi_offset 14,-4
  43 0002 82B0     	 sub sp,sp,#8
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 16
  46 0004 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0006 7860     	 str r0,[r7,#4]
  42:../Simulink/rt_nonfinite.c ****   (void) (realSize);
  43:../Simulink/rt_nonfinite.c ****   rtNaN = rtGetNaN();
  50              	 .loc 1 43 0
  51 0008 FFF7FEFF 	 bl rtGetNaN
  52 000c 0246     	 mov r2,r0
  53 000e 0B46     	 mov r3,r1
  54 0010 1149     	 ldr r1,.L2
  55 0012 C1E90023 	 strd r2,[r1]
  44:../Simulink/rt_nonfinite.c ****   rtNaNF = rtGetNaNF();
  56              	 .loc 1 44 0
  57 0016 FFF7FEFF 	 bl rtGetNaNF
  58 001a 0246     	 mov r2,r0
  59 001c 0F4B     	 ldr r3,.L2+4
  60 001e 1A60     	 str r2,[r3]
  45:../Simulink/rt_nonfinite.c ****   rtInf = rtGetInf();
  61              	 .loc 1 45 0
  62 0020 FFF7FEFF 	 bl rtGetInf
  63 0024 0246     	 mov r2,r0
  64 0026 0B46     	 mov r3,r1
  65 0028 0D49     	 ldr r1,.L2+8
  66 002a C1E90023 	 strd r2,[r1]
  46:../Simulink/rt_nonfinite.c ****   rtInfF = rtGetInfF();
  67              	 .loc 1 46 0
  68 002e FFF7FEFF 	 bl rtGetInfF
  69 0032 0246     	 mov r2,r0
  70 0034 0B4B     	 ldr r3,.L2+12
  71 0036 1A60     	 str r2,[r3]
  47:../Simulink/rt_nonfinite.c ****   rtMinusInf = rtGetMinusInf();
  72              	 .loc 1 47 0
  73 0038 FFF7FEFF 	 bl rtGetMinusInf
  74 003c 0246     	 mov r2,r0
  75 003e 0B46     	 mov r3,r1
  76 0040 0949     	 ldr r1,.L2+16
  77 0042 C1E90023 	 strd r2,[r1]
  48:../Simulink/rt_nonfinite.c ****   rtMinusInfF = rtGetMinusInfF();
  78              	 .loc 1 48 0
  79 0046 FFF7FEFF 	 bl rtGetMinusInfF
  80 004a 0246     	 mov r2,r0
  81 004c 074B     	 ldr r3,.L2+20
  82 004e 1A60     	 str r2,[r3]
  49:../Simulink/rt_nonfinite.c **** }
  83              	 .loc 1 49 0
  84 0050 0837     	 adds r7,r7,#8
  85              	.LCFI3:
  86              	 .cfi_def_cfa_offset 8
  87 0052 BD46     	 mov sp,r7
  88              	.LCFI4:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 0054 80BD     	 pop {r7,pc}
  92              	.L3:
  93 0056 00BF     	 .align 2
  94              	.L2:
  95 0058 00000000 	 .word rtNaN
  96 005c 00000000 	 .word rtNaNF
  97 0060 00000000 	 .word rtInf
  98 0064 00000000 	 .word rtInfF
  99 0068 00000000 	 .word rtMinusInf
 100 006c 00000000 	 .word rtMinusInfF
 101              	 .cfi_endproc
 102              	.LFE0:
 104              	 .global __aeabi_dcmpeq
 105              	 .section .text.rtIsInf,"ax",%progbits
 106              	 .align 2
 107              	 .global rtIsInf
 108              	 .thumb
 109              	 .thumb_func
 111              	rtIsInf:
 112              	.LFB1:
  50:../Simulink/rt_nonfinite.c **** 
  51:../Simulink/rt_nonfinite.c **** /* Test if value is infinite */
  52:../Simulink/rt_nonfinite.c **** boolean_T rtIsInf(real_T value)
  53:../Simulink/rt_nonfinite.c **** {
 113              	 .loc 1 53 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117 0000 80B5     	 push {r7,lr}
 118              	.LCFI5:
 119              	 .cfi_def_cfa_offset 8
 120              	 .cfi_offset 7,-8
 121              	 .cfi_offset 14,-4
 122 0002 82B0     	 sub sp,sp,#8
 123              	.LCFI6:
 124              	 .cfi_def_cfa_offset 16
 125 0004 00AF     	 add r7,sp,#0
 126              	.LCFI7:
 127              	 .cfi_def_cfa_register 7
 128 0006 C7E90001 	 strd r0,[r7]
  54:../Simulink/rt_nonfinite.c ****   return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);
 129              	 .loc 1 54 0
 130 000a 0D4B     	 ldr r3,.L11
 131 000c D3E90023 	 ldrd r2,[r3]
 132 0010 D7E90001 	 ldrd r0,[r7]
 133 0014 FFF7FEFF 	 bl __aeabi_dcmpeq
 134 0018 0346     	 mov r3,r0
 135 001a 002B     	 cmp r3,#0
 136 001c 09D1     	 bne .L5
 137              	 .loc 1 54 0 is_stmt 0 discriminator 2
 138 001e 094B     	 ldr r3,.L11+4
 139 0020 D3E90023 	 ldrd r2,[r3]
 140 0024 D7E90001 	 ldrd r0,[r7]
 141 0028 FFF7FEFF 	 bl __aeabi_dcmpeq
 142 002c 0346     	 mov r3,r0
 143 002e 002B     	 cmp r3,#0
 144 0030 01D0     	 beq .L10
 145              	.L5:
 146              	 .loc 1 54 0 discriminator 3
 147 0032 0123     	 movs r3,#1
 148 0034 00E0     	 b .L8
 149              	.L10:
 150              	 .loc 1 54 0 discriminator 4
 151 0036 0023     	 movs r3,#0
 152              	.L8:
  55:../Simulink/rt_nonfinite.c **** }
 153              	 .loc 1 55 0 is_stmt 1 discriminator 6
 154 0038 1846     	 mov r0,r3
 155 003a 0837     	 adds r7,r7,#8
 156              	.LCFI8:
 157              	 .cfi_def_cfa_offset 8
 158 003c BD46     	 mov sp,r7
 159              	.LCFI9:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 003e 80BD     	 pop {r7,pc}
 163              	.L12:
 164              	 .align 2
 165              	.L11:
 166 0040 00000000 	 .word rtInf
 167 0044 00000000 	 .word rtMinusInf
 168              	 .cfi_endproc
 169              	.LFE1:
 171              	 .section .text.rtIsInfF,"ax",%progbits
 172              	 .align 2
 173              	 .global rtIsInfF
 174              	 .thumb
 175              	 .thumb_func
 177              	rtIsInfF:
 178              	.LFB2:
  56:../Simulink/rt_nonfinite.c **** 
  57:../Simulink/rt_nonfinite.c **** /* Test if single-precision value is infinite */
  58:../Simulink/rt_nonfinite.c **** boolean_T rtIsInfF(real32_T value)
  59:../Simulink/rt_nonfinite.c **** {
 179              	 .loc 1 59 0
 180              	 .cfi_startproc
 181              	 
 182              	 
 183              	 
 184 0000 80B4     	 push {r7}
 185              	.LCFI10:
 186              	 .cfi_def_cfa_offset 4
 187              	 .cfi_offset 7,-4
 188 0002 83B0     	 sub sp,sp,#12
 189              	.LCFI11:
 190              	 .cfi_def_cfa_offset 16
 191 0004 00AF     	 add r7,sp,#0
 192              	.LCFI12:
 193              	 .cfi_def_cfa_register 7
 194 0006 7860     	 str r0,[r7,#4]
  60:../Simulink/rt_nonfinite.c ****   return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);
 195              	 .loc 1 60 0
 196 0008 0E4B     	 ldr r3,.L18
 197 000a D3ED007A 	 flds s15,[r3]
 198 000e 97ED017A 	 flds s14,[r7,#4]
 199 0012 B4EE677A 	 fcmps s14,s15
 200 0016 F1EE10FA 	 fmstat
 201 001a 09D0     	 beq .L14
 202              	 .loc 1 60 0 is_stmt 0 discriminator 2
 203 001c 0A4B     	 ldr r3,.L18+4
 204 001e D3ED007A 	 flds s15,[r3]
 205 0022 97ED017A 	 flds s14,[r7,#4]
 206 0026 B4EE677A 	 fcmps s14,s15
 207 002a F1EE10FA 	 fmstat
 208 002e 01D1     	 bne .L15
 209              	.L14:
 210              	 .loc 1 60 0 discriminator 3
 211 0030 0123     	 movs r3,#1
 212 0032 00E0     	 b .L16
 213              	.L15:
 214              	 .loc 1 60 0 discriminator 4
 215 0034 0023     	 movs r3,#0
 216              	.L16:
  61:../Simulink/rt_nonfinite.c **** }
 217              	 .loc 1 61 0 is_stmt 1 discriminator 6
 218 0036 1846     	 mov r0,r3
 219 0038 0C37     	 adds r7,r7,#12
 220              	.LCFI13:
 221              	 .cfi_def_cfa_offset 4
 222 003a BD46     	 mov sp,r7
 223              	.LCFI14:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 003c 5DF8047B 	 ldr r7,[sp],#4
 227              	.LCFI15:
 228              	 .cfi_restore 7
 229              	 .cfi_def_cfa_offset 0
 230 0040 7047     	 bx lr
 231              	.L19:
 232 0042 00BF     	 .align 2
 233              	.L18:
 234 0044 00000000 	 .word rtInfF
 235 0048 00000000 	 .word rtMinusInfF
 236              	 .cfi_endproc
 237              	.LFE2:
 239              	 .section .text.rtIsNaN,"ax",%progbits
 240              	 .align 2
 241              	 .global rtIsNaN
 242              	 .thumb
 243              	 .thumb_func
 245              	rtIsNaN:
 246              	.LFB3:
  62:../Simulink/rt_nonfinite.c **** 
  63:../Simulink/rt_nonfinite.c **** /* Test if value is not a number */
  64:../Simulink/rt_nonfinite.c **** boolean_T rtIsNaN(real_T value)
  65:../Simulink/rt_nonfinite.c **** {
 247              	 .loc 1 65 0
 248              	 .cfi_startproc
 249              	 
 250              	 
 251 0000 80B5     	 push {r7,lr}
 252              	.LCFI16:
 253              	 .cfi_def_cfa_offset 8
 254              	 .cfi_offset 7,-8
 255              	 .cfi_offset 14,-4
 256 0002 82B0     	 sub sp,sp,#8
 257              	.LCFI17:
 258              	 .cfi_def_cfa_offset 16
 259 0004 00AF     	 add r7,sp,#0
 260              	.LCFI18:
 261              	 .cfi_def_cfa_register 7
 262 0006 C7E90001 	 strd r0,[r7]
  66:../Simulink/rt_nonfinite.c ****   return (boolean_T)((value!=value) ? 1U : 0U);
 263              	 .loc 1 66 0
 264 000a D7E90001 	 ldrd r0,[r7]
 265 000e D7E90023 	 ldrd r2,[r7]
 266 0012 FFF7FEFF 	 bl __aeabi_dcmpeq
 267 0016 0346     	 mov r3,r0
 268 0018 002B     	 cmp r3,#0
 269 001a 01D1     	 bne .L26
 270              	 .loc 1 66 0 is_stmt 0 discriminator 1
 271 001c 0123     	 movs r3,#1
 272 001e 00E0     	 b .L23
 273              	.L26:
 274              	 .loc 1 66 0 discriminator 2
 275 0020 0023     	 movs r3,#0
 276              	.L23:
  67:../Simulink/rt_nonfinite.c **** }
 277              	 .loc 1 67 0 is_stmt 1 discriminator 4
 278 0022 1846     	 mov r0,r3
 279 0024 0837     	 adds r7,r7,#8
 280              	.LCFI19:
 281              	 .cfi_def_cfa_offset 8
 282 0026 BD46     	 mov sp,r7
 283              	.LCFI20:
 284              	 .cfi_def_cfa_register 13
 285              	 
 286 0028 80BD     	 pop {r7,pc}
 287              	 .cfi_endproc
 288              	.LFE3:
 290 002a 00BF     	 .section .text.rtIsNaNF,"ax",%progbits
 291              	 .align 2
 292              	 .global rtIsNaNF
 293              	 .thumb
 294              	 .thumb_func
 296              	rtIsNaNF:
 297              	.LFB4:
  68:../Simulink/rt_nonfinite.c **** 
  69:../Simulink/rt_nonfinite.c **** /* Test if single-precision value is not a number */
  70:../Simulink/rt_nonfinite.c **** boolean_T rtIsNaNF(real32_T value)
  71:../Simulink/rt_nonfinite.c **** {
 298              	 .loc 1 71 0
 299              	 .cfi_startproc
 300              	 
 301              	 
 302              	 
 303 0000 80B4     	 push {r7}
 304              	.LCFI21:
 305              	 .cfi_def_cfa_offset 4
 306              	 .cfi_offset 7,-4
 307 0002 83B0     	 sub sp,sp,#12
 308              	.LCFI22:
 309              	 .cfi_def_cfa_offset 16
 310 0004 00AF     	 add r7,sp,#0
 311              	.LCFI23:
 312              	 .cfi_def_cfa_register 7
 313 0006 7860     	 str r0,[r7,#4]
  72:../Simulink/rt_nonfinite.c ****   return (boolean_T)(((value!=value) ? 1U : 0U));
 314              	 .loc 1 72 0
 315 0008 97ED017A 	 flds s14,[r7,#4]
 316 000c D7ED017A 	 flds s15,[r7,#4]
 317 0010 B4EE677A 	 fcmps s14,s15
 318 0014 F1EE10FA 	 fmstat
 319 0018 01D0     	 beq .L28
 320              	 .loc 1 72 0 is_stmt 0 discriminator 1
 321 001a 0123     	 movs r3,#1
 322 001c 00E0     	 b .L29
 323              	.L28:
 324              	 .loc 1 72 0 discriminator 2
 325 001e 0023     	 movs r3,#0
 326              	.L29:
  73:../Simulink/rt_nonfinite.c **** }
 327              	 .loc 1 73 0 is_stmt 1 discriminator 4
 328 0020 1846     	 mov r0,r3
 329 0022 0C37     	 adds r7,r7,#12
 330              	.LCFI24:
 331              	 .cfi_def_cfa_offset 4
 332 0024 BD46     	 mov sp,r7
 333              	.LCFI25:
 334              	 .cfi_def_cfa_register 13
 335              	 
 336 0026 5DF8047B 	 ldr r7,[sp],#4
 337              	.LCFI26:
 338              	 .cfi_restore 7
 339              	 .cfi_def_cfa_offset 0
 340 002a 7047     	 bx lr
 341              	 .cfi_endproc
 342              	.LFE4:
 344              	 .text
 345              	.Letext0:
 346              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 347              	 .file 3 "../Simulink/rtwtypes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rt_nonfinite.c
                            *COM*:00000008 rtInf
                            *COM*:00000008 rtMinusInf
                            *COM*:00000008 rtNaN
                            *COM*:00000004 rtInfF
                            *COM*:00000004 rtMinusInfF
                            *COM*:00000004 rtNaNF
    {standard input}:26     .text.rt_InitInfAndNaN:00000000 $t
    {standard input}:31     .text.rt_InitInfAndNaN:00000000 rt_InitInfAndNaN
    {standard input}:95     .text.rt_InitInfAndNaN:00000058 $d
    {standard input}:106    .text.rtIsInf:00000000 $t
    {standard input}:111    .text.rtIsInf:00000000 rtIsInf
    {standard input}:166    .text.rtIsInf:00000040 $d
    {standard input}:172    .text.rtIsInfF:00000000 $t
    {standard input}:177    .text.rtIsInfF:00000000 rtIsInfF
    {standard input}:234    .text.rtIsInfF:00000044 $d
    {standard input}:240    .text.rtIsNaN:00000000 $t
    {standard input}:245    .text.rtIsNaN:00000000 rtIsNaN
    {standard input}:291    .text.rtIsNaNF:00000000 $t
    {standard input}:296    .text.rtIsNaNF:00000000 rtIsNaNF
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
rtGetNaN
rtGetNaNF
rtGetInf
rtGetInfF
rtGetMinusInf
rtGetMinusInfF
__aeabi_dcmpeq
