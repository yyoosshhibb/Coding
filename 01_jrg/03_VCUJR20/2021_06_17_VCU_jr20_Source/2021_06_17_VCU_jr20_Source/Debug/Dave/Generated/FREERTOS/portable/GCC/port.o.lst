   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "port.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .data.uxCriticalNesting,"aw",%progbits
  20              	 .align 2
  23              	uxCriticalNesting:
  24 0000 AAAAAAAA 	 .word -1431655766
  25              	 .section .bss.ucMaxSysCallPriority,"aw",%nobits
  28              	ucMaxSysCallPriority:
  29 0000 00       	 .space 1
  30              	 .section .bss.ulMaxPRIGROUPValue,"aw",%nobits
  31              	 .align 2
  34              	ulMaxPRIGROUPValue:
  35 0000 00000000 	 .space 4
  36              	 .section .rodata.pcInterruptPriorityRegisters,"a",%progbits
  37              	 .align 2
  40              	pcInterruptPriorityRegisters:
  41 0000 F0E300E0 	 .word -536812560
  42              	 .section .text.pxPortInitialiseStack,"ax",%progbits
  43              	 .align 2
  44              	 .global pxPortInitialiseStack
  45              	 .thumb
  46              	 .thumb_func
  48              	pxPortInitialiseStack:
  49              	.LFB137:
  50              	 .file 1 "../Dave/Generated/FREERTOS/portable/GCC/port.c"
   1:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
   2:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * FreeRTOS Kernel V10.2.1
   3:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *
   5:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * the Software without restriction, including without limitation the rights to
   8:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * subject to the following conditions:
  11:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *
  12:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * copies or substantial portions of the Software.
  14:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *
  15:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *
  22:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * http://www.FreeRTOS.org
  23:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * http://aws.amazon.com/freertos
  24:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *
  25:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * 1 tab == 4 spaces!
  26:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
  27:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  28:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if defined( __GNUC__ )
  29:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  30:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------
  31:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Implementation of functions defined in portable.h for the ARM CM4F port.
  32:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  *----------------------------------------------------------*/
  33:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  34:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Scheduler includes. */
  35:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #include "FREERTOS/FreeRTOS.h"
  36:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #include "FREERTOS/task.h"
  37:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  38:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if (FREERTOS_MPU_SUPPORT == 0)
  39:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  40:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #ifndef __VFP_FP__
  41:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#error This port can only be used when the project options are configured to enable hardware float
  42:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif
  43:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  44:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #ifndef configSYSTICK_CLOCK_HZ
  45:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  46:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  47:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  48:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #else
  49:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  50:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	as the core. */
  51:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  52:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif
  53:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  54:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Constants required to manipulate the core.  Registers first... */
  55:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  56:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  57:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  58:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  59:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* ...then bits in the registers. */
  60:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  61:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
  62:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
  63:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
  64:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
  65:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  66:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  67:../Dave/Generated/FREERTOS/portable/GCC/port.c **** r0p1 port. */
  68:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portCPUID							( * ( ( volatile uint32_t * ) 0xE000ed00 ) )
  69:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portCORTEX_M7_r0p1_ID				( 0x410FC271UL )
  70:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portCORTEX_M7_r0p0_ID				( 0x410FC270UL )
  71:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  72:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
  73:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
  74:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  75:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Constants required to check the validity of an interrupt priority. */
  76:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
  77:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
  78:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
  79:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
  80:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
  81:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
  82:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
  83:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portPRIGROUP_SHIFT					( 8UL )
  84:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  85:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  86:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portVECTACTIVE_MASK					( 0xFFUL )
  87:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  88:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Constants required to manipulate the VFP. */
  89:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portFPCCR							( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating point context control re
  90:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portASPEN_AND_LSPEN_BITS			( 0x3UL << 30UL )
  91:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  92:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Constants required to set up the initial stack. */
  93:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portINITIAL_XPSR					( 0x01000000 )
  94:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portINITIAL_EXC_RETURN				( 0xfffffffd )
  95:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  96:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* The systick is a 24-bit counter. */
  97:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
  98:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
  99:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
 100:../Dave/Generated/FREERTOS/portable/GCC/port.c **** have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
 101:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portSTART_ADDRESS_MASK		( ( StackType_t ) 0xfffffffeUL )
 102:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 103:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
 104:../Dave/Generated/FREERTOS/portable/GCC/port.c **** occurred while the SysTick counter is stopped during tickless idle
 105:../Dave/Generated/FREERTOS/portable/GCC/port.c **** calculations. */
 106:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 107:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 108:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 109:../Dave/Generated/FREERTOS/portable/GCC/port.c **** prvTaskExitError() in case it messes up unwinding of the stack in the
 110:../Dave/Generated/FREERTOS/portable/GCC/port.c **** debugger. */
 111:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #ifdef configTASK_RETURN_ADDRESS
 112:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 113:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #else
 114:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 115:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif
 116:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 117:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 118:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 119:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * file is weak to allow application writers to change the timer used to
 120:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * generate the tick interrupt.
 121:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 122:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortSetupTimerInterrupt( void );
 123:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 124:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 125:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Exception handlers.
 126:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 127:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void xPortPendSVHandler( void ) __attribute__ (( naked ));
 128:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void xPortSysTickHandler( void );
 129:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortSVCHandler( void ) __attribute__ (( naked ));
 130:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 131:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 132:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 133:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 134:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 135:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 136:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 137:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Function to enable the VFP.
 138:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 139:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void vPortEnableVFP( void ) __attribute__ (( naked ));
 140:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 141:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 142:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 143:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 144:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void prvTaskExitError( void );
 145:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 146:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 147:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 148:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 149:../Dave/Generated/FREERTOS/portable/GCC/port.c **** variable. */
 150:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 151:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 152:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 153:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * The number of SysTick increments that make up one tick period.
 154:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 155:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 156:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	static uint32_t ulTimerCountsForOneTick = 0;
 157:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 158:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 159:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 160:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 161:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * 24 bit resolution of the SysTick timer.
 162:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 163:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 164:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 165:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 166:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 167:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 168:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 169:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * power functionality only.
 170:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 171:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 172:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	static uint32_t ulStoppedTimerCompensation = 0;
 173:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 174:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 175:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 176:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 177:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 178:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 179:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 180:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configASSERT_DEFINED == 1 )
 181:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	 static uint8_t ucMaxSysCallPriority = 0;
 182:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 183:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 184:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif /* configASSERT_DEFINED */
 185:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 186:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 187:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 188:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 189:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * See header file for description.
 190:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 191:../Dave/Generated/FREERTOS/portable/GCC/port.c **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 192:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
  51              	 .loc 1 192 0
  52              	 .cfi_startproc
  53              	 
  54              	 
  55              	 
  56 0000 80B4     	 push {r7}
  57              	.LCFI0:
  58              	 .cfi_def_cfa_offset 4
  59              	 .cfi_offset 7,-4
  60 0002 85B0     	 sub sp,sp,#20
  61              	.LCFI1:
  62              	 .cfi_def_cfa_offset 24
  63 0004 00AF     	 add r7,sp,#0
  64              	.LCFI2:
  65              	 .cfi_def_cfa_register 7
  66 0006 F860     	 str r0,[r7,#12]
  67 0008 B960     	 str r1,[r7,#8]
  68 000a 7A60     	 str r2,[r7,#4]
 193:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Simulate the stack frame as it would be created by a context switch
 194:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	interrupt. */
 195:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 196:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Offset added to account for the way the MCU uses the stack on entry/exit
 197:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	of interrupts, and to ensure alignment. */
 198:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack--;
  69              	 .loc 1 198 0
  70 000c FB68     	 ldr r3,[r7,#12]
  71 000e 043B     	 subs r3,r3,#4
  72 0010 FB60     	 str r3,[r7,#12]
 199:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 200:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
  73              	 .loc 1 200 0
  74 0012 FB68     	 ldr r3,[r7,#12]
  75 0014 4FF08072 	 mov r2,#16777216
  76 0018 1A60     	 str r2,[r3]
 201:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack--;
  77              	 .loc 1 201 0
  78 001a FB68     	 ldr r3,[r7,#12]
  79 001c 043B     	 subs r3,r3,#4
  80 001e FB60     	 str r3,[r7,#12]
 202:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
  81              	 .loc 1 202 0
  82 0020 BB68     	 ldr r3,[r7,#8]
  83 0022 23F00102 	 bic r2,r3,#1
  84 0026 FB68     	 ldr r3,[r7,#12]
  85 0028 1A60     	 str r2,[r3]
 203:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack--;
  86              	 .loc 1 203 0
  87 002a FB68     	 ldr r3,[r7,#12]
  88 002c 043B     	 subs r3,r3,#4
  89 002e FB60     	 str r3,[r7,#12]
 204:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
  90              	 .loc 1 204 0
  91 0030 0C4A     	 ldr r2,.L3
  92 0032 FB68     	 ldr r3,[r7,#12]
  93 0034 1A60     	 str r2,[r3]
 205:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 206:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Save code space by skipping register initialisation. */
 207:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
  94              	 .loc 1 207 0
  95 0036 FB68     	 ldr r3,[r7,#12]
  96 0038 143B     	 subs r3,r3,#20
  97 003a FB60     	 str r3,[r7,#12]
 208:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
  98              	 .loc 1 208 0
  99 003c 7A68     	 ldr r2,[r7,#4]
 100 003e FB68     	 ldr r3,[r7,#12]
 101 0040 1A60     	 str r2,[r3]
 209:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 210:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* A save method is being used that requires each task to maintain its
 211:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	own exec return value. */
 212:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack--;
 102              	 .loc 1 212 0
 103 0042 FB68     	 ldr r3,[r7,#12]
 104 0044 043B     	 subs r3,r3,#4
 105 0046 FB60     	 str r3,[r7,#12]
 213:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*pxTopOfStack = portINITIAL_EXC_RETURN;
 106              	 .loc 1 213 0
 107 0048 FB68     	 ldr r3,[r7,#12]
 108 004a 6FF00202 	 mvn r2,#2
 109 004e 1A60     	 str r2,[r3]
 214:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 215:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 110              	 .loc 1 215 0
 111 0050 FB68     	 ldr r3,[r7,#12]
 112 0052 203B     	 subs r3,r3,#32
 113 0054 FB60     	 str r3,[r7,#12]
 216:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 217:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	return pxTopOfStack;
 114              	 .loc 1 217 0
 115 0056 FB68     	 ldr r3,[r7,#12]
 218:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 116              	 .loc 1 218 0
 117 0058 1846     	 mov r0,r3
 118 005a 1437     	 adds r7,r7,#20
 119              	.LCFI3:
 120              	 .cfi_def_cfa_offset 4
 121 005c BD46     	 mov sp,r7
 122              	.LCFI4:
 123              	 .cfi_def_cfa_register 13
 124              	 
 125 005e 5DF8047B 	 ldr r7,[sp],#4
 126              	.LCFI5:
 127              	 .cfi_restore 7
 128              	 .cfi_def_cfa_offset 0
 129 0062 7047     	 bx lr
 130              	.L4:
 131              	 .align 2
 132              	.L3:
 133 0064 00000000 	 .word prvTaskExitError
 134              	 .cfi_endproc
 135              	.LFE137:
 137              	 .section .text.prvTaskExitError,"ax",%progbits
 138              	 .align 2
 139              	 .thumb
 140              	 .thumb_func
 142              	prvTaskExitError:
 143              	.LFB138:
 219:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 220:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 221:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void prvTaskExitError( void )
 222:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 144              	 .loc 1 222 0
 145              	 .cfi_startproc
 146              	 
 147              	 
 148              	 
 149 0000 80B4     	 push {r7}
 150              	.LCFI6:
 151              	 .cfi_def_cfa_offset 4
 152              	 .cfi_offset 7,-4
 153 0002 85B0     	 sub sp,sp,#20
 154              	.LCFI7:
 155              	 .cfi_def_cfa_offset 24
 156 0004 00AF     	 add r7,sp,#0
 157              	.LCFI8:
 158              	 .cfi_def_cfa_register 7
 223:../Dave/Generated/FREERTOS/portable/GCC/port.c **** volatile uint32_t ulDummy = 0;
 159              	 .loc 1 223 0
 160 0006 0023     	 movs r3,#0
 161 0008 7B60     	 str r3,[r7,#4]
 224:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 225:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* A function that implements a task must not exit or attempt to return to
 226:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	its caller as there is nothing to return to.  If a task wants to exit it
 227:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	should instead call vTaskDelete( NULL ).
 228:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 229:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	Artificially force an assert() to be triggered if configASSERT() is
 230:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	defined, then stop here so application writers can catch the error. */
 231:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( uxCriticalNesting == ~0UL );
 162              	 .loc 1 231 0
 163 000a 104B     	 ldr r3,.L9
 164 000c 1B68     	 ldr r3,[r3]
 165 000e B3F1FF3F 	 cmp r3,#-1
 166 0012 09D0     	 beq .L6
 167              	.LBB31:
 168              	.LBB32:
 169              	 .file 2 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC/portmacro.h"
   1:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*
   2:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
   5:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * subject to the following conditions:
  11:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  12:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * copies or substantial portions of the Software.
  14:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  15:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  22:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * http://www.FreeRTOS.org
  23:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * http://aws.amazon.com/freertos
  24:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  25:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * 1 tab == 4 spaces!
  26:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  27:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  28:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  29:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef PORTMACRO_H
  30:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define PORTMACRO_H
  31:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  32:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifdef __cplusplus
  33:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** extern "C" {
  34:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
  35:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  36:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------
  37:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * Port specific definitions.
  38:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  39:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * given hardware and compiler.
  41:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *
  42:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  * These settings should not be altered.
  43:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  *-----------------------------------------------------------
  44:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h ****  */
  45:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  46:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Type definitions. */
  47:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portCHAR		char
  48:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portFLOAT		float
  49:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portDOUBLE		double
  50:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portLONG		long
  51:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portSHORT		short
  52:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portBASE_TYPE	long
  54:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  55:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** typedef long BaseType_t;
  57:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** typedef unsigned long UBaseType_t;
  58:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  59:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	typedef uint16_t TickType_t;
  61:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #else
  63:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	typedef uint32_t TickType_t;
  64:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  66:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	not need to be guarded with a critical section. */
  68:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
  70:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  71:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  72:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specifics. */
  73:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  77:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  78:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Scheduler utilities. */
  79:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portYIELD() 															\
  80:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** {																				\
  81:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 																				\
  84:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile( "isb" );													\
  88:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** }
  89:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  90:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
  95:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
  96:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Critical section management. */
  97:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** extern void vPortEnterCritical( void );
  98:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** extern void vPortExitCritical( void );
  99:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 106:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 107:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 108:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** (which build with all the ports) will build. */
 111:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 114:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 115:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Tickless idle/low power functionality. */
 116:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
 120:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 121:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 122:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* Architecture specific optimisations. */
 123:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
 126:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 127:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 129:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Generic helper function. */
 130:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	{
 132:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	uint8_t ucReturn;
 133:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 134:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		return ucReturn;
 136:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	}
 137:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 138:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Check the configuration. */
 139:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#endif
 142:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 143:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 147:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/*-----------------------------------------------------------*/
 148:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 149:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 151:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 153:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 154:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 155:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifdef configASSERT
 156:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
 159:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 160:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /* portNOP() is not required by this port. */
 161:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portNOP()
 162:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 163:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #define portINLINE	__inline
 164:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 165:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #ifndef portFORCE_INLINE
 166:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** #endif
 168:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 169:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** {
 171:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** uint32_t ulCurrentInterrupt;
 172:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** BaseType_t xReturn;
 173:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 174:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 177:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	{
 179:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		xReturn = pdFALSE;
 180:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	}
 181:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	else
 182:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	{
 183:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		xReturn = pdTRUE;
 184:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	}
 185:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 186:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	return xReturn;
 187:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** }
 188:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 189:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 190:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 191:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** {
 193:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** uint32_t ulNewBASEPRI;
 194:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile
 170              	 .loc 2 195 0 discriminator 1
 171              	
 172 0014 4FF0FC03 	 mov r3,#252
 173 0018 83F31188 	 msr basepri,r3
 174 001c BFF36F8F 	 isb 
 175 0020 BFF34F8F 	 dsb 
 176              	
 177              	
 178              	 .thumb
 179 0024 FB60     	 str r3,[r7,#12]
 180              	.L7:
 181              	.LBE32:
 182              	.LBE31:
 183              	 .loc 1 231 0 discriminator 1
 184 0026 FEE7     	 b .L7
 185              	.L6:
 186              	.LBB33:
 187              	.LBB34:
 188              	 .loc 2 195 0
 189              	
 190 0028 4FF0FC03 	 mov r3,#252
 191 002c 83F31188 	 msr basepri,r3
 192 0030 BFF36F8F 	 isb 
 193 0034 BFF34F8F 	 dsb 
 194              	
 195              	
 196              	 .thumb
 197 0038 BB60     	 str r3,[r7,#8]
 198              	.LBE34:
 199              	.LBE33:
 232:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portDISABLE_INTERRUPTS();
 233:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	while( ulDummy == 0 )
 200              	 .loc 1 233 0
 201 003a 00BF     	 nop
 202              	.L8:
 203              	 .loc 1 233 0 is_stmt 0 discriminator 1
 204 003c 7B68     	 ldr r3,[r7,#4]
 205 003e 002B     	 cmp r3,#0
 206 0040 FCD0     	 beq .L8
 234:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 235:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* This file calls prvTaskExitError() after the scheduler has been
 236:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		started to remove a compiler warning about the function being defined
 237:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		but never called.  ulDummy is used purely to quieten other warnings
 238:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		about code appearing after this function is called - making ulDummy
 239:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		volatile makes the compiler think the function could return and
 240:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		therefore not output an 'unreachable code' warning for code that appears
 241:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		after it. */
 242:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 243:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 207              	 .loc 1 243 0 is_stmt 1
 208 0042 1437     	 adds r7,r7,#20
 209              	.LCFI9:
 210              	 .cfi_def_cfa_offset 4
 211 0044 BD46     	 mov sp,r7
 212              	.LCFI10:
 213              	 .cfi_def_cfa_register 13
 214              	 
 215 0046 5DF8047B 	 ldr r7,[sp],#4
 216              	.LCFI11:
 217              	 .cfi_restore 7
 218              	 .cfi_def_cfa_offset 0
 219 004a 7047     	 bx lr
 220              	.L10:
 221              	 .align 2
 222              	.L9:
 223 004c 00000000 	 .word uxCriticalNesting
 224              	 .cfi_endproc
 225              	.LFE138:
 227              	 .section .text.SVC_Handler,"ax",%progbits
 228              	 .align 2
 229              	 .global SVC_Handler
 230              	 .thumb
 231              	 .thumb_func
 233              	SVC_Handler:
 234              	.LFB139:
 244:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 245:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 246:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortSVCHandler( void )
 247:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 235              	 .loc 1 247 0
 236              	 .cfi_startproc
 237              	 
 238              	 
 239              	 
 248:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	__asm volatile (
 240              	 .loc 1 248 0
 241              	
 242 0000 074B     	 ldr r3,pxCurrentTCBConst2
 243 0002 1968     	 ldr r1,[r3]
 244 0004 0868     	 ldr r0,[r1]
 245 0006 B0E8F04F 	 ldmia r0!,{r4-r11,r14}
 246 000a 80F30988 	 msr psp,r0
 247 000e BFF36F8F 	 isb 
 248 0012 4FF00000 	 mov r0,#0
 249 0016 80F31188 	 msr basepri,r0
 250 001a 7047     	 bx r14
 251              	 
 252 001c AFF30080 	 .align 4
 253 0020 00000000 	pxCurrentTCBConst2:.word pxCurrentTCB
 254              	
 255              	
 249:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 250:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 251:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 252:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	ldmia r0!, {r4-r11, r14}		\n" /* Pop the registers that are not automatically saved on excep
 253:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 254:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	isb								\n"
 255:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	mov r0, #0 						\n"
 256:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	msr	basepri, r0					\n"
 257:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	bx r14							\n"
 258:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"									\n"
 259:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"	.align 4						\n"
 260:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 261:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				);
 262:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 256              	 .loc 1 262 0
 257              	 .thumb
 258              	 .cfi_endproc
 259              	.LFE139:
 261 0024 AFF30080 	 .section .text.prvPortStartFirstTask,"ax",%progbits
 261      AFF30080 
 261      AFF30080 
 262              	 .align 2
 263              	 .thumb
 264              	 .thumb_func
 266              	prvPortStartFirstTask:
 267              	.LFB140:
 263:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 264:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 265:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void prvPortStartFirstTask( void )
 266:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 268              	 .loc 1 266 0
 269              	 .cfi_startproc
 270              	 
 271              	 
 272              	 
 267:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Start the first task.  This also clears the bit that indicates the FPU is
 268:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	in use in case the FPU was used before the scheduler was started - which
 269:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	would otherwise result in the unnecessary leaving of space in the SVC stack
 270:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	for lazy saving of FPU registers. */
 271:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	__asm volatile(
 273              	 .loc 1 271 0
 274              	
 275 0000 0848     	 ldr r0,=0xE000ED08
 276 0002 0068     	 ldr r0,[r0]
 277 0004 0068     	 ldr r0,[r0]
 278 0006 80F30888 	 msr msp,r0
 279 000a 4FF00000 	 mov r0,#0
 280 000e 80F31488 	 msr control,r0
 281 0012 62B6     	 cpsie i
 282 0014 61B6     	 cpsie f
 283 0016 BFF34F8F 	 dsb 
 284 001a BFF36F8F 	 isb 
 285 001e 00DF     	 svc 0
 286 0020 00BF     	 nop 
 287              	
 288              	
 272:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 273:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" ldr r0, [r0] 			\n"
 274:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" ldr r0, [r0] 			\n"
 275:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 276:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" mov r0, #0			\n" /* Clear the bit that indicates the FPU is in use, see comment above. */
 277:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" msr control, r0		\n"
 278:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" cpsie i				\n" /* Globally enable interrupts. */
 279:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" cpsie f				\n"
 280:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" dsb					\n"
 281:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" isb					\n"
 282:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" svc 0					\n" /* System call to start first task. */
 283:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					" nop					\n"
 284:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				);
 285:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 289              	 .loc 1 285 0
 290              	 .thumb
 291              	 .cfi_endproc
 292              	.LFE140:
 294 0022 0000     	 .section .text.xPortStartScheduler,"ax",%progbits
 295              	 .align 2
 296              	 .global xPortStartScheduler
 297              	 .thumb
 298              	 .thumb_func
 300              	xPortStartScheduler:
 301              	.LFB141:
 286:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 287:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 288:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 289:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * See header file for description.
 290:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 291:../Dave/Generated/FREERTOS/portable/GCC/port.c **** BaseType_t xPortStartScheduler( void )
 292:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 302              	 .loc 1 292 0
 303              	 .cfi_startproc
 304              	 
 305              	 
 306 0000 80B5     	 push {r7,lr}
 307              	.LCFI12:
 308              	 .cfi_def_cfa_offset 8
 309              	 .cfi_offset 7,-8
 310              	 .cfi_offset 14,-4
 311 0002 86B0     	 sub sp,sp,#24
 312              	.LCFI13:
 313              	 .cfi_def_cfa_offset 32
 314 0004 00AF     	 add r7,sp,#0
 315              	.LCFI14:
 316              	 .cfi_def_cfa_register 7
 293:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 294:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 295:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 296:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 297:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* This port can be used on all revisions of the Cortex-M7 core other than
 298:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	the r0p1 parts.  r0p1 parts should use the port from the
 299:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/source/portable/GCC/ARM_CM7/r0p1 directory. */
 300:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 317              	 .loc 1 300 0
 318 0006 444B     	 ldr r3,.L23
 319 0008 1B68     	 ldr r3,[r3]
 320 000a 444A     	 ldr r2,.L23+4
 321 000c 9342     	 cmp r3,r2
 322 000e 09D1     	 bne .L14
 323              	.LBB35:
 324              	.LBB36:
 325              	 .loc 2 195 0 discriminator 1
 326              	
 327 0010 4FF0FC03 	 mov r3,#252
 328 0014 83F31188 	 msr basepri,r3
 329 0018 BFF36F8F 	 isb 
 330 001c BFF34F8F 	 dsb 
 331              	
 332              	
 333              	 .thumb
 334 0020 3B61     	 str r3,[r7,#16]
 335              	.L15:
 336              	.LBE36:
 337              	.LBE35:
 338              	 .loc 1 300 0 discriminator 2
 339 0022 FEE7     	 b .L15
 340              	.L14:
 301:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 341              	 .loc 1 301 0
 342 0024 3C4B     	 ldr r3,.L23
 343 0026 1B68     	 ldr r3,[r3]
 344 0028 3D4A     	 ldr r2,.L23+8
 345 002a 9342     	 cmp r3,r2
 346 002c 09D1     	 bne .L16
 347              	.LBB37:
 348              	.LBB38:
 349              	 .loc 2 195 0 discriminator 1
 350              	
 351 002e 4FF0FC03 	 mov r3,#252
 352 0032 83F31188 	 msr basepri,r3
 353 0036 BFF36F8F 	 isb 
 354 003a BFF34F8F 	 dsb 
 355              	
 356              	
 357              	 .thumb
 358 003e FB60     	 str r3,[r7,#12]
 359              	.L17:
 360              	.LBE38:
 361              	.LBE37:
 362              	 .loc 1 301 0 discriminator 3
 363 0040 FEE7     	 b .L17
 364              	.L16:
 365              	.LBB39:
 302:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 303:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#if( configASSERT_DEFINED == 1 )
 304:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 305:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		volatile uint32_t ulOriginalPriority;
 306:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 366              	 .loc 1 306 0
 367 0042 384B     	 ldr r3,.L23+12
 368 0044 7B61     	 str r3,[r7,#20]
 307:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		volatile uint8_t ucMaxPriorityValue;
 308:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 309:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 310:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		functions can be called.  ISR safe functions are those that end in
 311:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 312:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ensure interrupt entry is as fast and simple as possible.
 313:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 314:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		Save the interrupt priority value that is about to be clobbered. */
 315:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 369              	 .loc 1 315 0
 370 0046 7B69     	 ldr r3,[r7,#20]
 371 0048 1B78     	 ldrb r3,[r3]
 372 004a DBB2     	 uxtb r3,r3
 373 004c 7B60     	 str r3,[r7,#4]
 316:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 317:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Determine the number of priority bits available.  First write to all
 318:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		possible bits. */
 319:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 374              	 .loc 1 319 0
 375 004e 7B69     	 ldr r3,[r7,#20]
 376 0050 FF22     	 movs r2,#255
 377 0052 1A70     	 strb r2,[r3]
 320:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 321:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Read the value back to see how many bits stuck. */
 322:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 378              	 .loc 1 322 0
 379 0054 7B69     	 ldr r3,[r7,#20]
 380 0056 1B78     	 ldrb r3,[r3]
 381 0058 DBB2     	 uxtb r3,r3
 382 005a FB70     	 strb r3,[r7,#3]
 323:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 324:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Use the same mask on the maximum system call priority. */
 325:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 383              	 .loc 1 325 0
 384 005c FB78     	 ldrb r3,[r7,#3]
 385 005e DBB2     	 uxtb r3,r3
 386 0060 23F00303 	 bic r3,r3,#3
 387 0064 DAB2     	 uxtb r2,r3
 388 0066 304B     	 ldr r3,.L23+16
 389 0068 1A70     	 strb r2,[r3]
 326:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 327:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Calculate the maximum acceptable priority group value for the number
 328:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		of bits read back. */
 329:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 390              	 .loc 1 329 0
 391 006a 304B     	 ldr r3,.L23+20
 392 006c 0722     	 movs r2,#7
 393 006e 1A60     	 str r2,[r3]
 330:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 394              	 .loc 1 330 0
 395 0070 09E0     	 b .L18
 396              	.L19:
 331:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 332:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			ulMaxPRIGROUPValue--;
 397              	 .loc 1 332 0
 398 0072 2E4B     	 ldr r3,.L23+20
 399 0074 1B68     	 ldr r3,[r3]
 400 0076 013B     	 subs r3,r3,#1
 401 0078 2C4A     	 ldr r2,.L23+20
 402 007a 1360     	 str r3,[r2]
 333:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 403              	 .loc 1 333 0
 404 007c FB78     	 ldrb r3,[r7,#3]
 405 007e DBB2     	 uxtb r3,r3
 406 0080 5B00     	 lsls r3,r3,#1
 407 0082 DBB2     	 uxtb r3,r3
 408 0084 FB70     	 strb r3,[r7,#3]
 409              	.L18:
 330:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 410              	 .loc 1 330 0
 411 0086 FB78     	 ldrb r3,[r7,#3]
 412 0088 DBB2     	 uxtb r3,r3
 413 008a DBB2     	 uxtb r3,r3
 414 008c 5BB2     	 sxtb r3,r3
 415 008e 002B     	 cmp r3,#0
 416 0090 EFDB     	 blt .L19
 334:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 335:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 336:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#ifdef __NVIC_PRIO_BITS
 337:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 338:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Check the CMSIS configuration that defines the number of
 339:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			priority bits matches the number of priority bits actually queried
 340:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			from the hardware. */
 341:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 417              	 .loc 1 341 0
 418 0092 264B     	 ldr r3,.L23+20
 419 0094 1B68     	 ldr r3,[r3]
 420 0096 C3F10703 	 rsb r3,r3,#7
 421 009a 062B     	 cmp r3,#6
 422 009c 09D0     	 beq .L20
 423              	.LBB40:
 424              	.LBB41:
 425              	 .loc 2 195 0 discriminator 1
 426              	
 427 009e 4FF0FC03 	 mov r3,#252
 428 00a2 83F31188 	 msr basepri,r3
 429 00a6 BFF36F8F 	 isb 
 430 00aa BFF34F8F 	 dsb 
 431              	
 432              	
 433              	 .thumb
 434 00ae BB60     	 str r3,[r7,#8]
 435              	.L21:
 436              	.LBE41:
 437              	.LBE40:
 438              	 .loc 1 341 0 discriminator 4
 439 00b0 FEE7     	 b .L21
 440              	.L20:
 342:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 343:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#endif
 344:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 345:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#ifdef configPRIO_BITS
 346:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 347:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Check the FreeRTOS configuration that defines the number of
 348:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			priority bits matches the number of priority bits actually queried
 349:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			from the hardware. */
 350:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 351:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 352:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#endif
 353:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 354:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Shift the priority group value back to its position within the AIRCR
 355:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		register. */
 356:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 441              	 .loc 1 356 0
 442 00b2 1E4B     	 ldr r3,.L23+20
 443 00b4 1B68     	 ldr r3,[r3]
 444 00b6 1B02     	 lsls r3,r3,#8
 445 00b8 1C4A     	 ldr r2,.L23+20
 446 00ba 1360     	 str r3,[r2]
 357:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 447              	 .loc 1 357 0
 448 00bc 1B4B     	 ldr r3,.L23+20
 449 00be 1B68     	 ldr r3,[r3]
 450 00c0 03F4E063 	 and r3,r3,#1792
 451 00c4 194A     	 ldr r2,.L23+20
 452 00c6 1360     	 str r3,[r2]
 358:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 359:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Restore the clobbered interrupt priority register to its original
 360:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		value. */
 361:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 453              	 .loc 1 361 0
 454 00c8 7B68     	 ldr r3,[r7,#4]
 455 00ca DAB2     	 uxtb r2,r3
 456 00cc 7B69     	 ldr r3,[r7,#20]
 457 00ce 1A70     	 strb r2,[r3]
 458              	.LBE39:
 362:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 363:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#endif /* conifgASSERT_DEFINED */
 364:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 365:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 366:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 459              	 .loc 1 366 0
 460 00d0 174A     	 ldr r2,.L23+24
 461 00d2 174B     	 ldr r3,.L23+24
 462 00d4 1B68     	 ldr r3,[r3]
 463 00d6 43F47C03 	 orr r3,r3,#16515072
 464 00da 1360     	 str r3,[r2]
 367:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 465              	 .loc 1 367 0
 466 00dc 144A     	 ldr r2,.L23+24
 467 00de 144B     	 ldr r3,.L23+24
 468 00e0 1B68     	 ldr r3,[r3]
 469 00e2 43F07C43 	 orr r3,r3,#-67108864
 470 00e6 1360     	 str r3,[r2]
 368:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 369:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 370:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	here already. */
 371:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	vPortSetupTimerInterrupt();
 471              	 .loc 1 371 0
 472 00e8 FFF7FEFF 	 bl vPortSetupTimerInterrupt
 372:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 373:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Initialise the critical nesting count ready for the first task. */
 374:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uxCriticalNesting = 0;
 473              	 .loc 1 374 0
 474 00ec 114B     	 ldr r3,.L23+28
 475 00ee 0022     	 movs r2,#0
 476 00f0 1A60     	 str r2,[r3]
 375:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 376:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Ensure the VFP is enabled - it should be anyway. */
 377:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	vPortEnableVFP();
 477              	 .loc 1 377 0
 478 00f2 FFF7FEFF 	 bl vPortEnableVFP
 378:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 379:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Lazy save always. */
 380:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 479              	 .loc 1 380 0
 480 00f6 104A     	 ldr r2,.L23+32
 481 00f8 0F4B     	 ldr r3,.L23+32
 482 00fa 1B68     	 ldr r3,[r3]
 483 00fc 43F04043 	 orr r3,r3,#-1073741824
 484 0100 1360     	 str r3,[r2]
 381:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 382:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Start the first task. */
 383:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	prvPortStartFirstTask();
 485              	 .loc 1 383 0
 486 0102 FFF7FEFF 	 bl prvPortStartFirstTask
 384:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 385:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Should never get here as the tasks will now be executing!  Call the task
 386:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	exit error function to prevent compiler warnings about a static function
 387:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	not being called in the case that the application writer overrides this
 388:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	functionality by defining configTASK_RETURN_ADDRESS.  Call
 389:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	vTaskSwitchContext() so link time optimisation does not remove the
 390:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	symbol. */
 391:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	vTaskSwitchContext();
 487              	 .loc 1 391 0
 488 0106 FFF7FEFF 	 bl vTaskSwitchContext
 392:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	prvTaskExitError();
 489              	 .loc 1 392 0
 490 010a FFF7FEFF 	 bl prvTaskExitError
 393:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 394:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Should not get here! */
 395:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	return 0;
 491              	 .loc 1 395 0
 492 010e 0023     	 movs r3,#0
 396:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 493              	 .loc 1 396 0
 494 0110 1846     	 mov r0,r3
 495 0112 1837     	 adds r7,r7,#24
 496              	.LCFI15:
 497              	 .cfi_def_cfa_offset 8
 498 0114 BD46     	 mov sp,r7
 499              	.LCFI16:
 500              	 .cfi_def_cfa_register 13
 501              	 
 502 0116 80BD     	 pop {r7,pc}
 503              	.L24:
 504              	 .align 2
 505              	.L23:
 506 0118 00ED00E0 	 .word -536810240
 507 011c 71C20F41 	 .word 1091551857
 508 0120 70C20F41 	 .word 1091551856
 509 0124 00E400E0 	 .word -536812544
 510 0128 00000000 	 .word ucMaxSysCallPriority
 511 012c 00000000 	 .word ulMaxPRIGROUPValue
 512 0130 20ED00E0 	 .word -536810208
 513 0134 00000000 	 .word uxCriticalNesting
 514 0138 34EF00E0 	 .word -536809676
 515              	 .cfi_endproc
 516              	.LFE141:
 518              	 .section .text.vPortEndScheduler,"ax",%progbits
 519              	 .align 2
 520              	 .global vPortEndScheduler
 521              	 .thumb
 522              	 .thumb_func
 524              	vPortEndScheduler:
 525              	.LFB142:
 397:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 398:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 399:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortEndScheduler( void )
 400:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 526              	 .loc 1 400 0
 527              	 .cfi_startproc
 528              	 
 529              	 
 530              	 
 531 0000 80B4     	 push {r7}
 532              	.LCFI17:
 533              	 .cfi_def_cfa_offset 4
 534              	 .cfi_offset 7,-4
 535 0002 83B0     	 sub sp,sp,#12
 536              	.LCFI18:
 537              	 .cfi_def_cfa_offset 16
 538 0004 00AF     	 add r7,sp,#0
 539              	.LCFI19:
 540              	 .cfi_def_cfa_register 7
 401:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Not implemented in ports where there is nothing to return to.
 402:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	Artificially force an assert. */
 403:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( uxCriticalNesting == 1000UL );
 541              	 .loc 1 403 0
 542 0006 0A4B     	 ldr r3,.L28
 543 0008 1B68     	 ldr r3,[r3]
 544 000a B3F57A7F 	 cmp r3,#1000
 545 000e 09D0     	 beq .L25
 546              	.LBB42:
 547              	.LBB43:
 548              	 .loc 2 195 0 discriminator 1
 549              	
 550 0010 4FF0FC03 	 mov r3,#252
 551 0014 83F31188 	 msr basepri,r3
 552 0018 BFF36F8F 	 isb 
 553 001c BFF34F8F 	 dsb 
 554              	
 555              	
 556              	 .thumb
 557 0020 7B60     	 str r3,[r7,#4]
 558              	.L27:
 559              	.LBE43:
 560              	.LBE42:
 561              	 .loc 1 403 0 discriminator 1
 562 0022 FEE7     	 b .L27
 563              	.L25:
 404:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 564              	 .loc 1 404 0
 565 0024 0C37     	 adds r7,r7,#12
 566              	.LCFI20:
 567              	 .cfi_def_cfa_offset 4
 568 0026 BD46     	 mov sp,r7
 569              	.LCFI21:
 570              	 .cfi_def_cfa_register 13
 571              	 
 572 0028 5DF8047B 	 ldr r7,[sp],#4
 573              	.LCFI22:
 574              	 .cfi_restore 7
 575              	 .cfi_def_cfa_offset 0
 576 002c 7047     	 bx lr
 577              	.L29:
 578 002e 00BF     	 .align 2
 579              	.L28:
 580 0030 00000000 	 .word uxCriticalNesting
 581              	 .cfi_endproc
 582              	.LFE142:
 584              	 .section .text.vPortEnterCritical,"ax",%progbits
 585              	 .align 2
 586              	 .global vPortEnterCritical
 587              	 .thumb
 588              	 .thumb_func
 590              	vPortEnterCritical:
 591              	.LFB143:
 405:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 406:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 407:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortEnterCritical( void )
 408:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 592              	 .loc 1 408 0
 593              	 .cfi_startproc
 594              	 
 595              	 
 596              	 
 597 0000 80B4     	 push {r7}
 598              	.LCFI23:
 599              	 .cfi_def_cfa_offset 4
 600              	 .cfi_offset 7,-4
 601 0002 83B0     	 sub sp,sp,#12
 602              	.LCFI24:
 603              	 .cfi_def_cfa_offset 16
 604 0004 00AF     	 add r7,sp,#0
 605              	.LCFI25:
 606              	 .cfi_def_cfa_register 7
 607              	.LBB44:
 608              	.LBB45:
 609              	 .loc 2 195 0
 610              	
 611 0006 4FF0FC03 	 mov r3,#252
 612 000a 83F31188 	 msr basepri,r3
 613 000e BFF36F8F 	 isb 
 614 0012 BFF34F8F 	 dsb 
 615              	
 616              	
 617              	 .thumb
 618 0016 7B60     	 str r3,[r7,#4]
 619              	.LBE45:
 620              	.LBE44:
 409:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portDISABLE_INTERRUPTS();
 410:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uxCriticalNesting++;
 621              	 .loc 1 410 0
 622 0018 0E4B     	 ldr r3,.L33
 623 001a 1B68     	 ldr r3,[r3]
 624 001c 0133     	 adds r3,r3,#1
 625 001e 0D4A     	 ldr r2,.L33
 626 0020 1360     	 str r3,[r2]
 411:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 412:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* This is not the interrupt safe version of the enter critical function so
 413:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	assert() if it is being called from an interrupt context.  Only API
 414:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
 415:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	the critical nesting count is 1 to protect against recursive calls if the
 416:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	assert function also uses a critical section. */
 417:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	if( uxCriticalNesting == 1 )
 627              	 .loc 1 417 0
 628 0022 0C4B     	 ldr r3,.L33
 629 0024 1B68     	 ldr r3,[r3]
 630 0026 012B     	 cmp r3,#1
 631 0028 0ED1     	 bne .L30
 418:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 419:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 632              	 .loc 1 419 0
 633 002a 0B4B     	 ldr r3,.L33+4
 634 002c 1B68     	 ldr r3,[r3]
 635 002e DBB2     	 uxtb r3,r3
 636 0030 002B     	 cmp r3,#0
 637 0032 09D0     	 beq .L30
 638              	.LBB46:
 639              	.LBB47:
 640              	 .loc 2 195 0 discriminator 1
 641              	
 642 0034 4FF0FC03 	 mov r3,#252
 643 0038 83F31188 	 msr basepri,r3
 644 003c BFF36F8F 	 isb 
 645 0040 BFF34F8F 	 dsb 
 646              	
 647              	
 648              	 .thumb
 649 0044 3B60     	 str r3,[r7]
 650              	.L32:
 651              	.LBE47:
 652              	.LBE46:
 653              	 .loc 1 419 0 discriminator 1
 654 0046 FEE7     	 b .L32
 655              	.L30:
 420:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 421:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 656              	 .loc 1 421 0
 657 0048 0C37     	 adds r7,r7,#12
 658              	.LCFI26:
 659              	 .cfi_def_cfa_offset 4
 660 004a BD46     	 mov sp,r7
 661              	.LCFI27:
 662              	 .cfi_def_cfa_register 13
 663              	 
 664 004c 5DF8047B 	 ldr r7,[sp],#4
 665              	.LCFI28:
 666              	 .cfi_restore 7
 667              	 .cfi_def_cfa_offset 0
 668 0050 7047     	 bx lr
 669              	.L34:
 670 0052 00BF     	 .align 2
 671              	.L33:
 672 0054 00000000 	 .word uxCriticalNesting
 673 0058 04ED00E0 	 .word -536810236
 674              	 .cfi_endproc
 675              	.LFE143:
 677              	 .section .text.vPortExitCritical,"ax",%progbits
 678              	 .align 2
 679              	 .global vPortExitCritical
 680              	 .thumb
 681              	 .thumb_func
 683              	vPortExitCritical:
 684              	.LFB144:
 422:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 423:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 424:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void vPortExitCritical( void )
 425:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 685              	 .loc 1 425 0
 686              	 .cfi_startproc
 687              	 
 688              	 
 689              	 
 690 0000 80B4     	 push {r7}
 691              	.LCFI29:
 692              	 .cfi_def_cfa_offset 4
 693              	 .cfi_offset 7,-4
 694 0002 83B0     	 sub sp,sp,#12
 695              	.LCFI30:
 696              	 .cfi_def_cfa_offset 16
 697 0004 00AF     	 add r7,sp,#0
 698              	.LCFI31:
 699              	 .cfi_def_cfa_register 7
 426:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	configASSERT( uxCriticalNesting );
 700              	 .loc 1 426 0
 701 0006 104B     	 ldr r3,.L39
 702 0008 1B68     	 ldr r3,[r3]
 703 000a 002B     	 cmp r3,#0
 704 000c 09D1     	 bne .L36
 705              	.LBB48:
 706              	.LBB49:
 707              	 .loc 2 195 0 discriminator 1
 708              	
 709 000e 4FF0FC03 	 mov r3,#252
 710 0012 83F31188 	 msr basepri,r3
 711 0016 BFF36F8F 	 isb 
 712 001a BFF34F8F 	 dsb 
 713              	
 714              	
 715              	 .thumb
 716 001e 7B60     	 str r3,[r7,#4]
 717              	.L37:
 718              	.LBE49:
 719              	.LBE48:
 720              	 .loc 1 426 0 discriminator 1
 721 0020 FEE7     	 b .L37
 722              	.L36:
 427:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uxCriticalNesting--;
 723              	 .loc 1 427 0
 724 0022 094B     	 ldr r3,.L39
 725 0024 1B68     	 ldr r3,[r3]
 726 0026 013B     	 subs r3,r3,#1
 727 0028 074A     	 ldr r2,.L39
 728 002a 1360     	 str r3,[r2]
 428:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	if( uxCriticalNesting == 0 )
 729              	 .loc 1 428 0
 730 002c 064B     	 ldr r3,.L39
 731 002e 1B68     	 ldr r3,[r3]
 732 0030 002B     	 cmp r3,#0
 733 0032 04D1     	 bne .L35
 734 0034 0023     	 movs r3,#0
 735 0036 3B60     	 str r3,[r7]
 736              	.LBB50:
 737              	.LBB51:
 196:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	(
 197:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	mov %0, %1												\n"	\
 198:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	msr basepri, %0											\n" \
 199:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	isb														\n" \
 200:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	dsb														\n" \
 201:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	);
 203:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** }
 204:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 205:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 206:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 207:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** {
 209:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 211:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile
 212:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	(
 213:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	mov %1, %2												\n"	\
 215:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	msr basepri, %1											\n" \
 216:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	isb														\n" \
 217:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		"	dsb														\n" \
 218:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	);
 220:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 221:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	warnings. */
 223:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	return ulOriginalBASEPRI;
 224:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** }
 225:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** /*-----------------------------------------------------------*/
 226:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 
 227:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** {
 229:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	__asm volatile
 738              	 .loc 2 229 0
 739 0038 3B68     	 ldr r3,[r7]
 740              	
 741 003a 83F31188 	 msr basepri,r3
 742              	
 743              	 .thumb
 744              	.L35:
 745              	.LBE51:
 746              	.LBE50:
 429:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 430:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		portENABLE_INTERRUPTS();
 431:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 432:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 747              	 .loc 1 432 0
 748 003e 0C37     	 adds r7,r7,#12
 749              	.LCFI32:
 750              	 .cfi_def_cfa_offset 4
 751 0040 BD46     	 mov sp,r7
 752              	.LCFI33:
 753              	 .cfi_def_cfa_register 13
 754              	 
 755 0042 5DF8047B 	 ldr r7,[sp],#4
 756              	.LCFI34:
 757              	 .cfi_restore 7
 758              	 .cfi_def_cfa_offset 0
 759 0046 7047     	 bx lr
 760              	.L40:
 761              	 .align 2
 762              	.L39:
 763 0048 00000000 	 .word uxCriticalNesting
 764              	 .cfi_endproc
 765              	.LFE144:
 767              	 .section .text.PendSV_Handler,"ax",%progbits
 768              	 .align 2
 769              	 .global PendSV_Handler
 770              	 .thumb
 771              	 .thumb_func
 773              	PendSV_Handler:
 774              	.LFB145:
 433:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 434:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 435:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void xPortPendSVHandler( void )
 436:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 775              	 .loc 1 436 0
 776              	 .cfi_startproc
 777              	 
 778              	 
 779              	 
 437:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* This is a naked function. */
 438:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 439:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	__asm volatile
 780              	 .loc 1 439 0
 781              	
 782 0000 EFF30980 	 mrs r0,psp
 783 0004 BFF36F8F 	 isb 
 784              	 
 785 0008 154B     	 ldr r3,pxCurrentTCBConst
 786 000a 1A68     	 ldr r2,[r3]
 787              	 
 788 000c 1EF0100F 	 tst r14,#0x10
 789 0010 08BF     	 it eq
 790 0012 20ED108A 	 vstmdbeq r0!,{s16-s31}
 791              	 
 792 0016 20E9F04F 	 stmdb r0!,{r4-r11,r14}
 793 001a 1060     	 str r0,[r2]
 794              	 
 795 001c 2DE90900 	 stmdb sp!,{r0,r3}
 796 0020 4FF0FC00 	 mov r0,#252
 797 0024 80F31188 	 msr basepri,r0
 798 0028 BFF34F8F 	 dsb 
 799 002c BFF36F8F 	 isb 
 800 0030 FFF7FEFF 	 bl vTaskSwitchContext
 801 0034 4FF00000 	 mov r0,#0
 802 0038 80F31188 	 msr basepri,r0
 803 003c 09BC     	 ldmia sp!,{r0,r3}
 804              	 
 805 003e 1968     	 ldr r1,[r3]
 806 0040 0868     	 ldr r0,[r1]
 807              	 
 808 0042 B0E8F04F 	 ldmia r0!,{r4-r11,r14}
 809              	 
 810 0046 1EF0100F 	 tst r14,#0x10
 811 004a 08BF     	 it eq
 812 004c B0EC108A 	 vldmiaeq r0!,{s16-s31}
 813              	 
 814 0050 80F30988 	 msr psp,r0
 815 0054 BFF36F8F 	 isb 
 816              	 
 817              	 
 818 0058 7047     	 bx r14
 819              	 
 820 005a 00BFAFF3 	 .align 4
 820      0080
 821 0060 00000000 	pxCurrentTCBConst:.word pxCurrentTCB
 822              	
 823              	
 440:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	(
 441:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	mrs r0, psp							\n"
 442:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	isb									\n"
 443:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 444:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 445:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldr	r2, [r3]						\n"
 446:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 447:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, push high vfp registers. *
 448:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	it eq								\n"
 449:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	vstmdbeq r0!, {s16-s31}				\n"
 450:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 451:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	stmdb r0!, {r4-r11, r14}			\n" /* Save the core registers. */
 452:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 453:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 454:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	stmdb sp!, {r0, r3}					\n"
 455:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	mov r0, %0 							\n"
 456:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	msr basepri, r0						\n"
 457:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	dsb									\n"
 458:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	isb									\n"
 459:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	bl vTaskSwitchContext				\n"
 460:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	mov r0, #0							\n"
 461:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	msr basepri, r0						\n"
 462:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldmia sp!, {r0, r3}					\n"
 463:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 464:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldr r1, [r3]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 465:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldr r0, [r1]						\n"
 466:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 467:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	ldmia r0!, {r4-r11, r14}			\n" /* Pop the core registers. */
 468:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 469:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, pop the high vfp registers
 470:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	it eq								\n"
 471:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	vldmiaeq r0!, {s16-s31}				\n"
 472:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 473:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	msr psp, r0							\n"
 474:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	isb									\n"
 475:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 476:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 477:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#if WORKAROUND_PMU_CM001 == 1
 478:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"			push { r14 }				\n"
 479:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"			pop { pc }					\n"
 480:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		#endif
 481:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#endif
 482:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 483:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	bx r14								\n"
 484:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"										\n"
 485:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"	.align 4							\n"
 486:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 487:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 488:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	);
 489:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 824              	 .loc 1 489 0
 825              	 .thumb
 826              	 .cfi_endproc
 827              	.LFE145:
 829 0064 AFF30080 	 .section .text.SysTick_Handler,"ax",%progbits
 829      AFF30080 
 829      AFF30080 
 830              	 .align 2
 831              	 .global SysTick_Handler
 832              	 .thumb
 833              	 .thumb_func
 835              	SysTick_Handler:
 836              	.LFB146:
 490:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 491:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 492:../Dave/Generated/FREERTOS/portable/GCC/port.c **** void xPortSysTickHandler( void )
 493:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 837              	 .loc 1 493 0
 838              	 .cfi_startproc
 839              	 
 840              	 
 841 0000 80B5     	 push {r7,lr}
 842              	.LCFI35:
 843              	 .cfi_def_cfa_offset 8
 844              	 .cfi_offset 7,-8
 845              	 .cfi_offset 14,-4
 846 0002 82B0     	 sub sp,sp,#8
 847              	.LCFI36:
 848              	 .cfi_def_cfa_offset 16
 849 0004 00AF     	 add r7,sp,#0
 850              	.LCFI37:
 851              	 .cfi_def_cfa_register 7
 852              	.LBB52:
 853              	.LBB53:
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	(
 854              	 .loc 2 195 0
 855              	
 856 0006 4FF0FC03 	 mov r3,#252
 857 000a 83F31188 	 msr basepri,r3
 858 000e BFF36F8F 	 isb 
 859 0012 BFF34F8F 	 dsb 
 860              	
 861              	
 862              	 .thumb
 863 0016 7B60     	 str r3,[r7,#4]
 864              	.LBE53:
 865              	.LBE52:
 494:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 495:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	executes all interrupts must be unmasked.  There is therefore no need to
 496:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	save and then restore the interrupt mask value as its value is already
 497:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	known. */
 498:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portDISABLE_INTERRUPTS();
 499:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 500:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Increment the RTOS tick. */
 501:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		if( xTaskIncrementTick() != pdFALSE )
 866              	 .loc 1 501 0
 867 0018 FFF7FEFF 	 bl xTaskIncrementTick
 868 001c 0346     	 mov r3,r0
 869 001e 002B     	 cmp r3,#0
 870 0020 03D0     	 beq .L43
 502:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 503:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* A context switch is required.  Context switching is performed in
 504:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 505:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 871              	 .loc 1 505 0
 872 0022 064B     	 ldr r3,.L44
 873 0024 4FF08052 	 mov r2,#268435456
 874 0028 1A60     	 str r2,[r3]
 875              	.L43:
 876 002a 0023     	 movs r3,#0
 877 002c 3B60     	 str r3,[r7]
 878              	.LBB54:
 879              	.LBB55:
 880              	 .loc 2 229 0
 881 002e 3B68     	 ldr r3,[r7]
 882              	
 883 0030 83F31188 	 msr basepri,r3
 884              	
 885              	 .thumb
 886              	.LBE55:
 887              	.LBE54:
 506:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 507:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 508:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portENABLE_INTERRUPTS();
 509:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 888              	 .loc 1 509 0
 889 0034 0837     	 adds r7,r7,#8
 890              	.LCFI38:
 891              	 .cfi_def_cfa_offset 8
 892 0036 BD46     	 mov sp,r7
 893              	.LCFI39:
 894              	 .cfi_def_cfa_register 13
 895              	 
 896 0038 80BD     	 pop {r7,pc}
 897              	.L45:
 898 003a 00BF     	 .align 2
 899              	.L44:
 900 003c 04ED00E0 	 .word -536810236
 901              	 .cfi_endproc
 902              	.LFE146:
 904              	 .section .text.vPortSetupTimerInterrupt,"ax",%progbits
 905              	 .align 2
 906              	 .weak vPortSetupTimerInterrupt
 907              	 .thumb
 908              	 .thumb_func
 910              	vPortSetupTimerInterrupt:
 911              	.LFB147:
 510:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 511:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 512:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configUSE_TICKLESS_IDLE == 1 )
 513:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 514:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 515:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 516:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements;
 517:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	TickType_t xModifiableIdleTime;
 518:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 519:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 520:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 521:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 522:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 523:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 524:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 525:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 526:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		is accounted for as best it can be, but using the tickless mode will
 527:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		inevitably result in some tiny drift of the time maintained by the
 528:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		kernel with respect to calendar time. */
 529:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 530:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 531:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 532:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		tick periods.  -1 is used because this code will execute part way
 533:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		through one of the tick periods. */
 534:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 535:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 536:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 537:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			ulReloadValue -= ulStoppedTimerCompensation;
 538:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 539:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 540:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 541:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		method as that will mask interrupts that should exit sleep mode. */
 542:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		__asm volatile( "cpsid i" ::: "memory" );
 543:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		__asm volatile( "dsb" );
 544:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		__asm volatile( "isb" );
 545:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 546:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* If a context switch is pending or a task is waiting for the scheduler
 547:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		to be unsuspended then abandon the low power entry. */
 548:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 549:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 550:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Restart from whatever is left in the count register to complete
 551:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			this tick period. */
 552:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 553:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 554:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Restart SysTick. */
 555:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 556:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 557:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Reset the reload register to the value required for normal tick
 558:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			periods. */
 559:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 560:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 561:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 562:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			above. */
 563:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 564:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 565:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		else
 566:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 567:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Set the new reload value. */
 568:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 569:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 570:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Clear the SysTick count flag and set the count value back to
 571:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			zero. */
 572:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 573:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 574:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Restart SysTick. */
 575:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 576:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 577:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 578:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			set its parameter to 0 to indicate that its implementation contains
 579:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			its own wait for interrupt or wait for event instruction, and so wfi
 580:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			should not be executed again.  However, the original expected idle
 581:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			time variable must remain unmodified, so a copy is taken. */
 582:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			xModifiableIdleTime = xExpectedIdleTime;
 583:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 584:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			if( xModifiableIdleTime > 0 )
 585:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			{
 586:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				__asm volatile( "dsb" ::: "memory" );
 587:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				__asm volatile( "wfi" );
 588:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				__asm volatile( "isb" );
 589:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			}
 590:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 591:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 592:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Re-enable interrupts to allow the interrupt that brought the MCU
 593:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			out of sleep mode to execute immediately.  see comments above
 594:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__disable_interrupt() call above. */
 595:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 596:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "dsb" );
 597:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "isb" );
 598:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 599:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Disable interrupts again because the clock is about to be stopped
 600:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			and interrupts that execute while the clock is stopped will increase
 601:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			any slippage between the time maintained by the RTOS and calendar
 602:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			time. */
 603:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "cpsid i" ::: "memory" );
 604:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "dsb" );
 605:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "isb" );
 606:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 607:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Disable the SysTick clock without reading the
 608:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CTRL_REG register to ensure the
 609:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 610:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			the time the SysTick is stopped for is accounted for as best it can
 611:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			be, but using the tickless mode will inevitably result in some tiny
 612:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			drift of the time maintained by the kernel with respect to calendar
 613:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			time*/
 614:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT );
 615:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 616:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Determine if the SysTick clock has already counted to zero and
 617:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			been set back to the current reload value (the reload back being
 618:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			correct for the entire expected idle time) or if the SysTick is yet
 619:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			to count to zero (in which case an interrupt other than the SysTick
 620:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			must have brought the system out of sleep mode). */
 621:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 622:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			{
 623:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				uint32_t ulCalculatedLoadValue;
 624:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 625:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* The tick interrupt is already pending, and the SysTick count
 626:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				reloaded with ulReloadValue.  Reset the
 627:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 628:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				period. */
 629:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 630:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 631:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* Don't allow a tiny value, or values that have somehow
 632:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				underflowed because the post sleep hook did something
 633:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				that took too long. */
 634:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 635:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				{
 636:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 637:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				}
 638:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 639:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 640:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 641:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* As the pending tick will be processed as soon as this
 642:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				function exits, the tick value maintained by the tick is stepped
 643:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				forward by one less than the time spent waiting. */
 644:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 645:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			}
 646:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			else
 647:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			{
 648:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* Something other than the tick interrupt ended the sleep.
 649:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				Work out how long the sleep lasted rounded to complete tick
 650:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				periods (not the ulReload value which accounted for part
 651:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				ticks). */
 652:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 653:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 654:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* How many complete tick periods passed while the processor
 655:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				was waiting? */
 656:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 657:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 658:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				/* The reload value is set to whatever fraction of a single tick
 659:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				period remains. */
 660:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulC
 661:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			}
 662:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 663:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 664:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 665:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			value. */
 666:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 667:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 668:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			vTaskStepTick( ulCompleteTickPeriods );
 669:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 670:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 671:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Exit with interrpts enabled. */
 672:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			__asm volatile( "cpsie i" ::: "memory" );
 673:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 674:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 675:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 676:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 677:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 678:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 679:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*
 680:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 681:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  * frequency.
 682:../Dave/Generated/FREERTOS/portable/GCC/port.c ****  */
 683:../Dave/Generated/FREERTOS/portable/GCC/port.c **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 684:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 912              	 .loc 1 684 0
 913              	 .cfi_startproc
 914              	 
 915              	 
 916              	 
 917 0000 80B4     	 push {r7}
 918              	.LCFI40:
 919              	 .cfi_def_cfa_offset 4
 920              	 .cfi_offset 7,-4
 921 0002 00AF     	 add r7,sp,#0
 922              	.LCFI41:
 923              	 .cfi_def_cfa_register 7
 685:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Calculate the constants required to configure the tick interrupt. */
 686:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
 687:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 688:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 689:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 690:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 691:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 692:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	#endif /* configUSE_TICKLESS_IDLE */
 693:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 694:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Stop and clear the SysTick. */
 695:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSTICK_CTRL_REG = 0UL;
 924              	 .loc 1 695 0
 925 0004 0A4B     	 ldr r3,.L47
 926 0006 0022     	 movs r2,#0
 927 0008 1A60     	 str r2,[r3]
 696:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 928              	 .loc 1 696 0
 929 000a 0A4B     	 ldr r3,.L47+4
 930 000c 0022     	 movs r2,#0
 931 000e 1A60     	 str r2,[r3]
 697:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 698:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	/* Configure SysTick to interrupt at the requested rate. */
 699:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 932              	 .loc 1 699 0
 933 0010 094A     	 ldr r2,.L47+8
 934 0012 0A4B     	 ldr r3,.L47+12
 935 0014 1B68     	 ldr r3,[r3]
 936 0016 0A49     	 ldr r1,.L47+16
 937 0018 A1FB0313 	 umull r1,r3,r1,r3
 938 001c 9B09     	 lsrs r3,r3,#6
 939 001e 013B     	 subs r3,r3,#1
 940 0020 1360     	 str r3,[r2]
 700:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 941              	 .loc 1 700 0
 942 0022 034B     	 ldr r3,.L47
 943 0024 0722     	 movs r2,#7
 944 0026 1A60     	 str r2,[r3]
 701:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 945              	 .loc 1 701 0
 946 0028 BD46     	 mov sp,r7
 947              	.LCFI42:
 948              	 .cfi_def_cfa_register 13
 949              	 
 950 002a 5DF8047B 	 ldr r7,[sp],#4
 951              	.LCFI43:
 952              	 .cfi_restore 7
 953              	 .cfi_def_cfa_offset 0
 954 002e 7047     	 bx lr
 955              	.L48:
 956              	 .align 2
 957              	.L47:
 958 0030 10E000E0 	 .word -536813552
 959 0034 18E000E0 	 .word -536813544
 960 0038 14E000E0 	 .word -536813548
 961 003c 00000000 	 .word SystemCoreClock
 962 0040 D34D6210 	 .word 274877907
 963              	 .cfi_endproc
 964              	.LFE147:
 966              	 .section .text.vPortEnableVFP,"ax",%progbits
 967              	 .align 2
 968              	 .thumb
 969              	 .thumb_func
 971              	vPortEnableVFP:
 972              	.LFB148:
 702:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 703:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 704:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /* This is a naked function. */
 705:../Dave/Generated/FREERTOS/portable/GCC/port.c **** static void vPortEnableVFP( void )
 706:../Dave/Generated/FREERTOS/portable/GCC/port.c **** {
 973              	 .loc 1 706 0
 974              	 .cfi_startproc
 975              	 
 976              	 
 977              	 
 707:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	__asm volatile
 978              	 .loc 1 707 0
 979              	
 980 0000 DFF80C00 	 ldr.w r0,=0xE000ED88
 981 0004 0168     	 ldr r1,[r0]
 982              	 
 983 0006 41F47001 	 orr r1,r1,#(0xf<<20)
 984 000a 0160     	 str r1,[r0]
 985 000c 7047     	 bx r14
 986              	
 708:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	(
 709:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"	ldr.w r0, =0xE000ED88		\n" /* The FPU enable bits are in the CPACR. */
 710:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"	ldr r1, [r0]				\n"
 711:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"								\n"
 712:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
 713:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"	str r1, [r0]				\n"
 714:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		"	bx r14						"
 715:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	);
 716:../Dave/Generated/FREERTOS/portable/GCC/port.c **** }
 987              	 .loc 1 716 0
 988              	 .thumb
 989              	 .cfi_endproc
 990              	.LFE148:
 992 000e 0000     	 .section .text.vPortValidateInterruptPriority,"ax",%progbits
 993              	 .align 2
 994              	 .global vPortValidateInterruptPriority
 995              	 .thumb
 996              	 .thumb_func
 998              	vPortValidateInterruptPriority:
 999              	.LFB149:
 717:../Dave/Generated/FREERTOS/portable/GCC/port.c **** /*-----------------------------------------------------------*/
 718:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 719:../Dave/Generated/FREERTOS/portable/GCC/port.c **** #if( configASSERT_DEFINED == 1 )
 720:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 721:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	void vPortValidateInterruptPriority( void )
 722:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	{
 1000              	 .loc 1 722 0
 1001              	 .cfi_startproc
 1002              	 
 1003              	 
 1004              	 
 1005 0000 80B4     	 push {r7}
 1006              	.LCFI44:
 1007              	 .cfi_def_cfa_offset 4
 1008              	 .cfi_offset 7,-4
 1009 0002 85B0     	 sub sp,sp,#20
 1010              	.LCFI45:
 1011              	 .cfi_def_cfa_offset 24
 1012 0004 00AF     	 add r7,sp,#0
 1013              	.LCFI46:
 1014              	 .cfi_def_cfa_register 7
 723:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uint32_t ulCurrentInterrupt;
 724:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	uint8_t ucCurrentPriority;
 725:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 726:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Obtain the number of the currently executing interrupt. */
 727:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 1015              	 .loc 1 727 0
 1016              	
 1017 0006 EFF30583 	 mrs r3,ipsr
 1018              	
 1019              	 .thumb
 1020 000a FB60     	 str r3,[r7,#12]
 728:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 729:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Is the interrupt number a user defined interrupt? */
 730:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 1021              	 .loc 1 730 0
 1022 000c FB68     	 ldr r3,[r7,#12]
 1023 000e 0F2B     	 cmp r3,#15
 1024 0010 13D9     	 bls .L51
 731:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		{
 732:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* Look up the interrupt's priority. */
 733:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 1025              	 .loc 1 733 0
 1026 0012 154A     	 ldr r2,.L55
 1027 0014 FB68     	 ldr r3,[r7,#12]
 1028 0016 1344     	 add r3,r3,r2
 1029 0018 1B78     	 ldrb r3,[r3]
 1030 001a FB72     	 strb r3,[r7,#11]
 734:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 735:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			/* The following assertion will fail if a service routine (ISR) for
 736:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			an interrupt that has been assigned a priority above
 737:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 738:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 739:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			from interrupts that have been assigned a priority at or below
 740:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 741:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 742:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			Numerically low interrupt priority numbers represent logically high
 743:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			interrupt priorities, therefore the priority of the interrupt must
 744:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			be set to a value equal to or numerically *higher* than
 745:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 746:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 747:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			Interrupts that	use the FreeRTOS API must not be left at their
 748:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			default priority of	zero as that is the highest possible priority,
 749:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 750:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			and	therefore also guaranteed to be invalid.
 751:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 752:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 753:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			interrupt entry is as fast and simple as possible.
 754:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 755:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			The following links provide detailed information:
 756:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 757:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			http://www.freertos.org/FAQHelp.html */
 758:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 1031              	 .loc 1 758 0
 1032 001c 134B     	 ldr r3,.L55+4
 1033 001e 1B78     	 ldrb r3,[r3]
 1034 0020 FA7A     	 ldrb r2,[r7,#11]
 1035 0022 9A42     	 cmp r2,r3
 1036 0024 09D2     	 bcs .L51
 1037              	.LBB56:
 1038              	.LBB57:
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	(
 1039              	 .loc 2 195 0 discriminator 1
 1040              	
 1041 0026 4FF0FC03 	 mov r3,#252
 1042 002a 83F31188 	 msr basepri,r3
 1043 002e BFF36F8F 	 isb 
 1044 0032 BFF34F8F 	 dsb 
 1045              	
 1046              	
 1047              	 .thumb
 1048 0036 7B60     	 str r3,[r7,#4]
 1049              	.L52:
 1050              	.LBE57:
 1051              	.LBE56:
 1052              	 .loc 1 758 0 discriminator 1
 1053 0038 FEE7     	 b .L52
 1054              	.L51:
 759:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		}
 760:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 761:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 762:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		that define each interrupt's priority to be split between bits that
 763:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		define the interrupt's pre-emption priority bits and bits that define
 764:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 765:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		to be pre-emption priority bits.  The following assertion will fail if
 766:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		this is not the case (if some bits represent a sub-priority).
 767:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 
 768:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		If the application only uses CMSIS libraries for interrupt
 769:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		configuration then the correct setting can be achieved on all Cortex-M
 770:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 771:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		scheduler.  Note however that some vendor specific peripheral libraries
 772:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		assume a non-zero priority group setting, in which cases using a value
 773:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		of zero will result in unpredictable behaviour. */
 774:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1055              	 .loc 1 774 0
 1056 003a 0D4B     	 ldr r3,.L55+8
 1057 003c 1B68     	 ldr r3,[r3]
 1058 003e 03F4E062 	 and r2,r3,#1792
 1059 0042 0C4B     	 ldr r3,.L55+12
 1060 0044 1B68     	 ldr r3,[r3]
 1061 0046 9A42     	 cmp r2,r3
 1062 0048 09D9     	 bls .L50
 1063              	.LBB58:
 1064              	.LBB59:
 195:C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/portable/GCC\portmacro.h **** 	(
 1065              	 .loc 2 195 0 discriminator 1
 1066              	
 1067 004a 4FF0FC03 	 mov r3,#252
 1068 004e 83F31188 	 msr basepri,r3
 1069 0052 BFF36F8F 	 isb 
 1070 0056 BFF34F8F 	 dsb 
 1071              	
 1072              	
 1073              	 .thumb
 1074 005a 3B60     	 str r3,[r7]
 1075              	.L54:
 1076              	.LBE59:
 1077              	.LBE58:
 1078              	 .loc 1 774 0 discriminator 2
 1079 005c FEE7     	 b .L54
 1080              	.L50:
 775:../Dave/Generated/FREERTOS/portable/GCC/port.c **** 	}
 1081              	 .loc 1 775 0
 1082 005e 1437     	 adds r7,r7,#20
 1083              	.LCFI47:
 1084              	 .cfi_def_cfa_offset 4
 1085 0060 BD46     	 mov sp,r7
 1086              	.LCFI48:
 1087              	 .cfi_def_cfa_register 13
 1088              	 
 1089 0062 5DF8047B 	 ldr r7,[sp],#4
 1090              	.LCFI49:
 1091              	 .cfi_restore 7
 1092              	 .cfi_def_cfa_offset 0
 1093 0066 7047     	 bx lr
 1094              	.L56:
 1095              	 .align 2
 1096              	.L55:
 1097 0068 F0E300E0 	 .word -536812560
 1098 006c 00000000 	 .word ucMaxSysCallPriority
 1099 0070 0CED00E0 	 .word -536810228
 1100 0074 00000000 	 .word ulMaxPRIGROUPValue
 1101              	 .cfi_endproc
 1102              	.LFE149:
 1104              	 .text
 1105              	.Letext0:
 1106              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1107              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1108              	 .file 5 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Dave/Generated/FREERTOS/projdefs.h"
 1109              	 .file 6 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Libraries/CMSIS/Include/cmsis_gcc.h"
 1110              	 .file 7 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Libraries/CMSIS/Include/core_cm4.h"
 1111              	 .file 8 "C:/Users/Yoshi/Documents/GitHub/Software/01_jrg/03_VCUJR20/2021_06_17_VCU_jr20_Source/2021_06_17_VCU_jr20_Source/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 port.c
    {standard input}:20     .data.uxCriticalNesting:00000000 $d
    {standard input}:23     .data.uxCriticalNesting:00000000 uxCriticalNesting
    {standard input}:28     .bss.ucMaxSysCallPriority:00000000 ucMaxSysCallPriority
    {standard input}:29     .bss.ucMaxSysCallPriority:00000000 $d
    {standard input}:31     .bss.ulMaxPRIGROUPValue:00000000 $d
    {standard input}:34     .bss.ulMaxPRIGROUPValue:00000000 ulMaxPRIGROUPValue
    {standard input}:37     .rodata.pcInterruptPriorityRegisters:00000000 $d
    {standard input}:40     .rodata.pcInterruptPriorityRegisters:00000000 pcInterruptPriorityRegisters
    {standard input}:43     .text.pxPortInitialiseStack:00000000 $t
    {standard input}:48     .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
    {standard input}:133    .text.pxPortInitialiseStack:00000064 $d
    {standard input}:142    .text.prvTaskExitError:00000000 prvTaskExitError
    {standard input}:138    .text.prvTaskExitError:00000000 $t
    {standard input}:223    .text.prvTaskExitError:0000004c $d
    {standard input}:228    .text.SVC_Handler:00000000 $t
    {standard input}:233    .text.SVC_Handler:00000000 SVC_Handler
    {standard input}:253    .text.SVC_Handler:00000020 pxCurrentTCBConst2
    {standard input}:253    .text.SVC_Handler:00000020 $d
    {standard input}:262    .text.prvPortStartFirstTask:00000000 $t
    {standard input}:266    .text.prvPortStartFirstTask:00000000 prvPortStartFirstTask
    {standard input}:295    .text.xPortStartScheduler:00000000 $t
    {standard input}:300    .text.xPortStartScheduler:00000000 xPortStartScheduler
    {standard input}:910    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
    {standard input}:971    .text.vPortEnableVFP:00000000 vPortEnableVFP
    {standard input}:506    .text.xPortStartScheduler:00000118 $d
    {standard input}:519    .text.vPortEndScheduler:00000000 $t
    {standard input}:524    .text.vPortEndScheduler:00000000 vPortEndScheduler
    {standard input}:580    .text.vPortEndScheduler:00000030 $d
    {standard input}:585    .text.vPortEnterCritical:00000000 $t
    {standard input}:590    .text.vPortEnterCritical:00000000 vPortEnterCritical
    {standard input}:672    .text.vPortEnterCritical:00000054 $d
    {standard input}:678    .text.vPortExitCritical:00000000 $t
    {standard input}:683    .text.vPortExitCritical:00000000 vPortExitCritical
    {standard input}:763    .text.vPortExitCritical:00000048 $d
    {standard input}:768    .text.PendSV_Handler:00000000 $t
    {standard input}:773    .text.PendSV_Handler:00000000 PendSV_Handler
    {standard input}:821    .text.PendSV_Handler:00000060 pxCurrentTCBConst
    {standard input}:821    .text.PendSV_Handler:00000060 $d
    {standard input}:830    .text.SysTick_Handler:00000000 $t
    {standard input}:835    .text.SysTick_Handler:00000000 SysTick_Handler
    {standard input}:900    .text.SysTick_Handler:0000003c $d
    {standard input}:905    .text.vPortSetupTimerInterrupt:00000000 $t
    {standard input}:958    .text.vPortSetupTimerInterrupt:00000030 $d
    {standard input}:967    .text.vPortEnableVFP:00000000 $t
    {standard input}:993    .text.vPortValidateInterruptPriority:00000000 $t
    {standard input}:998    .text.vPortValidateInterruptPriority:00000000 vPortValidateInterruptPriority
    {standard input}:1097   .text.vPortValidateInterruptPriority:00000068 $d
    {standard input}:992    .text.vPortEnableVFP:0000000e $d
    {standard input}:294    .text.prvPortStartFirstTask:00000022 $d
                     .debug_frame:00000010 $d
    {standard input}:261    .text.SVC_Handler:00000024 $t
    {standard input}:829    .text.PendSV_Handler:00000064 $t

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
