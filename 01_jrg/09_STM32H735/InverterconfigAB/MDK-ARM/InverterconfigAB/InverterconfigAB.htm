<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [InverterconfigAB\InverterconfigAB.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image InverterconfigAB\InverterconfigAB.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Feb 01 15:57:10 2023
<BR><P>
<H3>Maximum Stack Usage =        416 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; MX_FDCAN1_Init &rArr; HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ad]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[76]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[76]">ADC3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1e]">ADC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[78]">BDMA_Channel0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[79]">BDMA_Channel1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7a]">BDMA_Channel2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7b]">BDMA_Channel3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7c]">BDMA_Channel4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7d]">BDMA_Channel5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7e]">BDMA_Channel6_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7f]">BDMA_Channel7_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from stm32h7xx_it.o(i.BusFault_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[64]">CEC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[80]">COMP1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8f]">CORDIC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[86]">CRS_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[56]">CRYP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[55]">DCMI_PSSI_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[69]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6a]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6b]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6c]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[61]">DMA2D_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream6_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream7_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[68]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[77]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[89]">DTS_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from stm32h7xx_it.o(i.DebugMon_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[87]">ECC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[48]">ETH_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[21]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[20]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[22]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[94]">FDCAN3_IT0_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[95]">FDCAN3_IT1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4a]">FDCAN_CAL_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8e]">FMAC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3b]">FMC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[58]">FPU_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[57]">HASH_RNG_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[75]">HSEM1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from stm32h7xx_it.o(i.HardFault_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[50]">I2C3_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4f]">I2C3_EV_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[66]">I2C4_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[65]">I2C4_EV_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[93]">I2C5_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[92]">I2C5_EV_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[63]">LPTIM1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[81]">LPTIM2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[82]">LPTIM3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[83]">LPTIM4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[84]">LPTIM5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[85]">LPUART1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[60]">LTDC_ER_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5f]">LTDC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[72]">MDIOS_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[71]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[73]">MDMA_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from stm32h7xx_it.o(i.MemManage_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from stm32h7xx_it.o(i.NMI_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[62]">OCTOSPI1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8b]">OCTOSPI2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8c]">OTFDEC1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8d]">OTFDEC2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[52]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[51]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[53]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[d]">PVD_AVD_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from stm32h7xx_it.o(i.PendSV_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5e]">SAI1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[88]">SAI4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3c]">SDMMC1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[74]">SDMMC2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[67]">SPDIF_RX_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5b]">SPI4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5c]">SPI5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5d]">SPI6_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32h7xx_it.o(i.SVC_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6d]">SWPMI1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from stm32h7xx_it.o(i.SysTick_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[98]">SystemInit</a> from system_stm32h7xx.o(i.SystemInit) referenced from startup_stm32h735xx.o(.text)
 <LI><a href="#[e]">TAMP_STAMP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6e]">TIM15_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[6f]">TIM16_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[70]">TIM17_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[25]">TIM1_UP_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[96]">TIM23_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[97]">TIM24_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[59]">UART7_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[5a]">UART8_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[90]">UART9_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[91]">USART10_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[4e]">USART6_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from stm32h7xx_it.o(i.UsageFault_Handler) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[8a]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32h735xx.o(.text) referenced from startup_stm32h735xx.o(RESET)
 <LI><a href="#[9a]">__main</a> from __main.o(!!!main) referenced from startup_stm32h735xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[9a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[9b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[9d]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[fe]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[ff]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[100]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[a4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[101]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[102]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[103]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[104]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[105]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[106]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[107]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[108]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[109]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[10c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[110]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[111]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[112]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[113]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[114]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[115]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[116]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[117]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[118]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[119]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[11a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[11b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[9c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[11c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a1]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[11d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a5]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_FDCAN1_Init &rArr; HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[11e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[ae]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[11f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[aa]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DCMI_PSSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>DTS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>FDCAN3_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>FDCAN3_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>FMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>I2C5_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>I2C5_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>OCTOSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>OTFDEC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>OTFDEC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>TIM23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>TIM24_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>UART9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>USART10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h735xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h735xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC3_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[126]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[a7]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[129]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[12a]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[12b]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>ADC_ConfigureBoostMode</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32h7xx_hal_adc.o(i.ADC_ConfigureBoostMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
</UL>

<P><STRONG><a name="[b2]"></a>HAL_ADCEx_MultiModeConfigChannel</STRONG> (Thumb, 274 bytes, Stack size 144 bytes, stm32h7xx_hal_adc_ex.o(i.HAL_ADCEx_MultiModeConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_ADCEx_MultiModeConfigChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[b4]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 1394 bytes, Stack size 40 bytes, stm32h7xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffsetState
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSamplingTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetOffsetChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC3_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[ba]"></a>HAL_ADC_Init</STRONG> (Thumb, 622 bytes, Stack size 32 bytes, stm32h7xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = HAL_ADC_Init &rArr; ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC3_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[bb]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, stm32h7xx_hal_msp.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetCurrentMode
</UL>

<P><STRONG><a name="[c0]"></a>HAL_FDCAN_Init</STRONG> (Thumb, 572 bytes, Stack size 104 bytes, stm32h7xx_hal_fdcan.o(i.HAL_FDCAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CalcultateRamBlockAddresses
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FDCAN1_Init
</UL>

<P><STRONG><a name="[c2]"></a>HAL_FDCAN_MspInit</STRONG> (Thumb, 118 bytes, Stack size 216 bytes, stm32h7xx_hal_msp.o(i.HAL_FDCAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>

<P><STRONG><a name="[bd]"></a>HAL_GPIO_Init</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[f0]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[c6]"></a>HAL_HCD_Init</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, stm32h7xx_hal_hcd.o(i.HAL_HCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HAL_HCD_Init &rArr; HAL_HCD_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetCurrentMode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableGlobalInt
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>HAL_HCD_MspInit</STRONG> (Thumb, 118 bytes, Stack size 216 bytes, stm32h7xx_hal_msp.o(i.HAL_HCD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = HAL_HCD_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBVoltageDetector
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
</UL>

<P><STRONG><a name="[f9]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cd]"></a>HAL_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32h7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d1]"></a>HAL_MspInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32h7xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d3]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[ce]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[cc]"></a>HAL_PWREx_EnableUSBVoltageDetector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableUSBVoltageDetector))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
</UL>

<P><STRONG><a name="[d6]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetD3PCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[d7]"></a>HAL_RCCEx_GetPLL1ClockFreq</STRONG> (Thumb, 298 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCCEx_GetPLL1ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[d8]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 296 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[d9]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 296 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[b1]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 550 bytes, Stack size 72 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL1ClockFreq
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
</UL>

<P><STRONG><a name="[c4]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2150 bytes, Stack size 48 bytes, stm32h7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_MspInit
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
</UL>

<P><STRONG><a name="[dc]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[b0]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigureBoostMode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
</UL>

<P><STRONG><a name="[cf]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[dd]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1234 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[de]"></a>HAL_SPI_Init</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, stm32h7xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI5_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI4_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
</UL>

<P><STRONG><a name="[df]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 484 bytes, Stack size 232 bytes, stm32h7xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[d2]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[f7]"></a>HAL_TIMEx_ConfigBreakDeadTime</STRONG> (Thumb, 188 bytes, Stack size 36 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_ConfigBreakDeadTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIMEx_ConfigBreakDeadTime
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[f6]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 146 bytes, Stack size 20 bytes, stm32h7xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[e0]"></a>HAL_TIM_MspPostInit</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, stm32h7xx_hal_msp.o(i.HAL_TIM_MspPostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[e1]"></a>HAL_TIM_OC_ConfigChannel</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_OC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_OC_ConfigChannel &rArr; TIM_OC1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[e8]"></a>HAL_TIM_OC_Init</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32h7xx_hal_tim.o(i.HAL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_OC_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[e9]"></a>HAL_TIM_OC_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_msp.o(i.HAL_TIM_OC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_OC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[f8]"></a>PeriphCommonClock_Config</STRONG> (Thumb, 64 bytes, Stack size 192 bytes, main.o(i.PeriphCommonClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = PeriphCommonClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[fa]"></a>SystemClock_Config</STRONG> (Thumb, 156 bytes, Stack size 128 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>SystemInit</STRONG> (Thumb, 158 bytes, Stack size 20 bytes, system_stm32h7xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
</UL>

<P><STRONG><a name="[e3]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[c9]"></a>USB_CoreInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32h7xx_ll_usb.o(i.USB_CoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_CoreInit &rArr; USB_CoreReset
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
</UL>

<P><STRONG><a name="[c8]"></a>USB_DisableGlobalInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_usb.o(i.USB_DisableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
</UL>

<P><STRONG><a name="[fd]"></a>USB_FlushRxFifo</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_ll_usb.o(i.USB_FlushRxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
</UL>

<P><STRONG><a name="[fc]"></a>USB_FlushTxFifo</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32h7xx_ll_usb.o(i.USB_FlushTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_FlushTxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
</UL>

<P><STRONG><a name="[cb]"></a>USB_HostInit</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, stm32h7xx_ll_usb.o(i.USB_HostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_HostInit &rArr; USB_FlushTxFifo
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushTxFifo
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
</UL>

<P><STRONG><a name="[ca]"></a>USB_SetCurrentMode</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32h7xx_ll_usb.o(i.USB_SetCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_SetCurrentMode &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
</UL>

<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h735xx.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>main</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = main &rArr; MX_FDCAN1_Init &rArr; HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HCD_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI5_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI4_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FDCAN1_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC3_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a0]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[12e]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[12f]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[eb]"></a>MX_ADC1_Init</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, main.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_MultiModeConfigChannel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>MX_ADC2_Init</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, main.o(i.MX_ADC2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = MX_ADC2_Init &rArr; HAL_ADC_Init &rArr; ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>MX_ADC3_Init</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, main.o(i.MX_ADC3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = MX_ADC3_Init &rArr; HAL_ADC_Init &rArr; ADC_ConfigureBoostMode &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>MX_FDCAN1_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(i.MX_FDCAN1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = MX_FDCAN1_Init &rArr; HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ef]"></a>MX_GPIO_Init</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>MX_SPI2_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.MX_SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_SPI2_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>MX_SPI3_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.MX_SPI3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_SPI3_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>MX_SPI4_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.MX_SPI4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_SPI4_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f4]"></a>MX_SPI5_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.MX_SPI5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MX_SPI5_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>MX_TIM1_Init</STRONG> (Thumb, 194 bytes, Stack size 104 bytes, main.o(i.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_TIM1_Init &rArr; HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_ConfigBreakDeadTime
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>LL_ADC_GetOffsetChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_adc.o(i.LL_ADC_GetOffsetChannel))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[b6]"></a>LL_ADC_INJ_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_adc.o(i.LL_ADC_INJ_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[b5]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_adc.o(i.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[b7]"></a>LL_ADC_SetChannelSamplingTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_adc.o(i.LL_ADC_SetChannelSamplingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[b9]"></a>LL_ADC_SetOffsetState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_adc.o(i.LL_ADC_SetOffsetState))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[b3]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_adc_ex.o(i.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_MultiModeConfigChannel
</UL>

<P><STRONG><a name="[da]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[db]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(i.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[d4]"></a>__NVIC_SetPriority</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[c3]"></a>FDCAN_CalcultateRamBlockAddresses</STRONG> (Thumb, 446 bytes, Stack size 20 bytes, stm32h7xx_hal_fdcan.o(i.FDCAN_CalcultateRamBlockAddresses))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FDCAN_CalcultateRamBlockAddresses
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>

<P><STRONG><a name="[e2]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 142 bytes, Stack size 36 bytes, stm32h7xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[e4]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[e5]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[e6]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(i.TIM_OC5_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC5_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[e7]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(i.TIM_OC6_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC6_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[fb]"></a>USB_CoreReset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32h7xx_ll_usb.o(i.USB_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_CoreInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
