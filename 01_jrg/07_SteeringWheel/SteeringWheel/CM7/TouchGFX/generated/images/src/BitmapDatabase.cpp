// 4.20.0 0xb8ef0f56
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_autocross[]; // BITMAP_AUTOCROSS_ID = 0, Size: 150x150 pixels
extern const unsigned char image_hv_bat_crit[]; // BITMAP_HV_BAT_CRIT_ID = 1, Size: 150x150 pixels
extern const unsigned char image_hv_bat_warn[]; // BITMAP_HV_BAT_WARN_ID = 2, Size: 150x150 pixels
extern const unsigned char image_icons8_tropfen_blut_100[]; // BITMAP_ICONS8_TROPFEN_BLUT_100_ID = 3, Size: 100x100 pixels
extern const unsigned char image_lv_bat_crit[]; // BITMAP_LV_BAT_CRIT_ID = 4, Size: 150x150 pixels
extern const unsigned char image_lv_bat_warn[]; // BITMAP_LV_BAT_WARN_ID = 5, Size: 150x150 pixels
extern const unsigned char image_new_logos_jr22[]; // BITMAP_NEW_LOGOS_JR22_ID = 6, Size: 550x184 pixels
extern const unsigned char image_path3439_5_9_0_8_3_3_3_3_34_2_5[]; // BITMAP_PATH3439_5_9_0_8_3_3_3_3_34_2_5_ID = 7, Size: 250x119 pixels
extern const unsigned char image_water[]; // BITMAP_WATER_ID = 8, Size: 96x96 pixels
extern const unsigned char image_watercrit[]; // BITMAP_WATERCRIT_ID = 9, Size: 100x100 pixels
extern const unsigned char image_waterwarn[]; // BITMAP_WATERWARN_ID = 10, Size: 100x100 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_autocross, 0, 150, 150, 75, 57, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 27, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hv_bat_crit, 0, 150, 150, 0, 0, 150, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 150, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_hv_bat_warn, 0, 150, 150, 0, 0, 150, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 150, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_icons8_tropfen_blut_100, 0, 100, 100, 42, 94, 16, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_lv_bat_crit, 0, 150, 150, 16, 0, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 150, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_lv_bat_warn, 0, 150, 150, 16, 0, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 150, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_new_logos_jr22, 0, 550, 184, 11, 110, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 63, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_path3439_5_9_0_8_3_3_3_3_34_2_5, 0, 250, 119, 0, 0, 135, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 119, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_water, 0, 96, 96, 0, 0, 96, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 96, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_watercrit, 0, 100, 100, 0, 0, 100, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 100, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_waterwarn, 0, 100, 100, 0, 0, 100, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 100, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
